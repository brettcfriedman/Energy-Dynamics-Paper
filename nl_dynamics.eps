%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: nl_dynamics.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Troy Carter
%%CreationDate: 6/4/12
%%BoundingBox: 0 0 375 186
%%HiResBoundingBox: 0 0 374.5840 185.6494
%%CropBox: 0 0 374.5840 185.6494
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 9634 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD45FFA8FFFFFFA8A8FF7DA8FD3EFFFD047D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%52527D52527DFD07FF7D7DA8527D7D52FFA8FFFF7D527D527D527D7D7D52%7D527D527D527D527D7D7D527D527D527D527D527D7D7D527D527D527D52%7D527D7D7D527D52A8FD0CFF7DA8FD0BFFA8FD0BFFA8FD10FFA87DA87DFF%527DFD07FFA87DFFFD04A8FD04FF52FD05FFA8FD05FFA8FD05FFA8FD05FF%A8FD05FFA8FD05FFA8FD05FFA8A87DFFA87D7DFD0CFF52A8FD28FF7DA87D%52A85252FD11FFA87DFD29FF7D7D7D52A8277DFD0CFF7DA2FD29FF7D7D52%A8527DFD12FF7DFD29FF52FF527D7D527DFFFFA8FD06FFA87DFF5278FD29%FFA8A8FFA8A87DFD11FFA87DFD29FFA87D7D7DA852A8FFFF7DFFA8A8A852%FF7D7DFF7D71FD2DFFA87DFD12FF7DFD2EFFA87DFFFF52A8527D7D52A8FF%FFFF5271CBFD2CFFA852FD11FFA87DA8FD0FFFA2A3FD0AFFA8A2CBFD0FFF%A87DFD0CFF7D78FD2DFFA87DFD12FF7DFD0FFFA9C5A2FD0BFFA2CBFD0FFF%A87DFD0CFF5278A9FD2DFF52FD12FF7DA8FD0DFFA9C57E4EA8FD09FF784F%A8A3FD0EFFA87DFD0CFF7D77CBFD2CFFA87DFD12FF7DFD0EFFC57F4F24CB%FD09FF79037FA3CBFD0DFFA87DFD0CFF527EA2FD20FFCBA9FD0BFF52FD11%FFA87DA8FD0CFF784E7FA979A8FD09FF78A3A9794EA3FD0CFF7D7DFD0CFF%7D24CBFD20FFA2C5FD04FFA2CBFD04FFCF7DFD12FF7DFD0BFF7E7955FFFF%FF79A9FD09FF79A9FFFFA94EA385FD0AFFA87DFD0CFF52039CFD17FFA8C5%A2CBA2FFFFA3A2C5A2A3A2CBA8A29CA39CA3A2A252FD11FFA87DFD09FFA9%2A2478FFFFFF842978FD09FF4D59AEFFFFFF242478FD09FF7D7DFD0CFF7D%2AA3FD13FFCBA2FFCBA37FCB782A78CB78A3557FA9A9A8CBA97FFD04FFA8%7DFD12FF7DFD05FF7FCB787978A37EFFFFFF84AE59A3FFFFFFCF7CFFFFFF%CB78838584FFFFAF7EA378797FA985FD04FFA87DFD0CFF523554FD13FFA2%7803724F7F557903245455554E0355557F7F4F03547FA37F7852FD11FFCF%53A8CB7FA34E244EA3A9FFFFFFAFAF84AFFFFF54FFA8A7572D58A8FFA95A%FFFFAF84AFFD04FFA9A3234878A37FFF7D7DFD0CFF7D5979FD12FFA97954%252AFD05FFA9FD04FFA9FFFFFD05A9CBA3A94E53FD10FF52FF2771717170%9A6FA1A1CAA8A853A9AFFD04FF787D83A8A068CA838353A3FD04FFAF8459%A8A1A7A19A6F9B7071714576FD0CFF52594FAFFD0EFF2AA9FFA37EFFA9FF%FFFF84FFA8FD04FFA87DFD07FFA8FFFFCF52FD0FFFA87DA82752A87D8358%2D585851582D266FA17C835858537EA1C3A1A19AC37D542D5883837CA04B%272D58527D2D2E7D837DA8277DFD0CFF7D597960FD0DFFA225547978A984%5984AF84AF845984FF84AF845984AF84AF605984AF84AF8459FD12FF7DFD%05FF83FFFFFFCFA857A8A1A0A07C519C77A7CAFFFFFFCAA7777751A19AA1%A8A757FFCFFFFFCFA8FD04FFA87DFD0AFF7DFF52574D59588357A883A783%832D83AEFFFFFF4D79787984FF7E84A8FFFFFFAFAF84FFA9FFFFFFAFFFFF%FF7DFFFFFFCAA152FD11FFA87DA8FD0EFFCA9A6E70A384FD04FFAF849C6F%6EA1FD0FFF7D7DFD09FFA87DA87D2176777C756E4B9A75A0516E4A7CA0A1%754B287E77A8CFCACAFFFFFFA8A8CAFFCACAA1A1A1CAA1A17693759A75A0%4A52FD12FF7DFD11FFA1A9A3FFA8FFFFFF84FF79FFA1FD10FFA87DFD0AFF%7DFF527778A884FFA1CAFFFFCAFFA1CACAA87DA1275377539A75686F759A%75754475759A75754476A0A07C7C268383AEA88352FD11FFA87DFD12FFA9%9DFF84AFFFA8AFA9A3FD12FF7D7DFD0CFF7C7CA3A284AFFD09FFA985A978%A2FFAFFFA7A1A8FFA8FFA87DA8FFFFFFA8A7FD0AFFCB7DFD12FF7DFD13FF%72FFAFAFFFAFFFA978FD12FFA87DFD0CFF52CF79A984AFFD09FFA9293078%CBFD0AFFA9FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FF52FD11FFA87DA8FD%12FF79A8FF8484A8FF78A3A7A87DA87DA87DA87DA87DA87DA87DA87DFFA8%7DFD0CFF7DCFA378FFA8FD09FF847985CBFD0AFF7D7D7DA87DA87DA87DA8%7DA8A8A87DA87D7DA87DFD12FF7DFD13FF78CBFFA82EFFFFA37E83A8CFA8%FFA8A8A8FFA8A8A8FFFD04A87DA87DFD0CFF52FF7F72A8AFFD06FF7DAFFF%7E78A3A2FD0AFFA8FD0AFFFD04A87DFF7DA852FD12FF7DA8FD12FFA37EFF%A8A8FFFF78A87DFFA8FD04FFA9FD08FFA8A8A87DFD0CFF7DA8A972FF8459%84FD04FF595FAF7E9D72CBFD0AFF7DFD0BFF27FFFF7DA8A8A87DFD12FF7D%FD13FFA3A3FD04FFCB79A8A8A9F94E7F7F7F037FFFFF7D7DA8FFFFFF7DA8%7DFD0CFF52CF7F79FFAF8484FD04FF3084847EA2A3A2FD0AFF7DA8FD0AFF%A827FFFFFF7DA852FD11FFA87DA8FD12FFCB78FD04FFCB4EFF7DFF547FA9%A97E55A8FFFFA852A8FFFFA8A87D7DFD0CFF7DA8FF4FFFFFFF84FFFFFFA8%F954FF54FD0DFF7DFFFFCBA9CBA9CBFD05FF7DFFFFFFA8A87DFD12FF7DFD%13FFCB79FD04FFA9A3CFA8FD10FF7DA87DFD0CFF52A8FFA3A9FFFFAF84A8%A8AF2A557F79FD0DFF7DA8FFA8CBA2CBA8FFFFFFA852A8FF7DFF7DA87DFD%11FFA87DFD14FF4EFD04FF7F78FF7DFD0FFFA8A87D7DFD0CFF7DA8FF78CB%FFFFA8AF84846055255578FD0DFF7DFD0BFF7DA87D7DFFA8A87DFD12FF7D%FD14FF79A9FFFFFF79A3AEA8FD10FF7DA87DFD0CFF52A8FFA378FFFFAF60%84A8842A4F4F79CFFD0CFF7DA8FD0BFFA8A8FFFF7DA852FD07FFA8FFFFFF%A8FFFFFFA8A8FF7DA8FD13FF78A3FFFFFF79A9CF7DFF517C83A77C51A8FF%FFA852A8FFFFA8A8A87DFD0CFF7DA8FF7F73A3FFAF8484FFA94F79FFA2FD%0DFF7DFD0CFF7DA8FFFFA8A87DFD07FFA87DFFA8A87D7DA8A87DFF7DFD14%FFA379FFFFFF78FFA8A8FF8383FFCFA858FFFFFF7D52A8FFFFFF7DA87DFF%FF7DFFFFFFA8A8A87D7DFF52FFFFA348A3FFA9A8FFFFA948CBFFA3FD0DFF%A8A8FD0BFFA8FFFFFF7DA852FD05FFA8A87D7DA87D527D7DFD04FF7DA8FD%13FFA279FFFFA979FFFF7DFD0BFFA8FFFFFFA8A87D7DA8A87DA87D7D7D52%A8A8A8FF7D7DFFA3487E7F55FFA9FFA973A2CBA9FD0DFF7DFD10FFA87D7D%FD08FFA8FD09FF7DFD15FF78FFFFA978FFA8A8FD10FF7DA87DA8FF7DFF7D%A87D7DA8FFFFFF52A8FFA3484E03557F7FFFA9729C9CCBFD0DFF7DA8A9A8%FFFFFF7EFD09FF7DA852FD11FFA87DA8FD13FFCB4FA9FF7F79FFFF7DFD0F%FFA8A87D7DFD0CFF7DA8FFA3484E7F7FA355A979799CA3A9FD0DFF7DFF24%257F7F79F94EFFFFA852A8FFFFFFA8A87DFD12FF7DFD15FF4EFFFF7FA2FF%A8A8FFA0A1CACACA9ACFFFFFA8A8FD04FF7DA87DFD0CFF52A8FFA9484FA9%A979252B2B78A29CCBFD0DFF7DA87F78FFA9FF54A9FFFFA87D7DFFFFFF7D%A87DFD11FFA87DFD15FF797FFF54A3FFFF7DFF6FA0A1C3A093A8FFFF7D52%FFFFFFA8A87D7DFD0CFF7DA8FFA97225A9787FF9A94FA3A2A3A2FD0DFF7D%FD10FFA8A87DFD12FF7DFD15FF797FFF79CBFFA8A8FD0AFFA8FD05FF7DA8%7DFD0CFF52A8FFCB484FA2725555A9CB78A3A8CBFD0DFF7DA8FD0FFF7DA8%52FD11FFA87DA8FD14FFA354FF4EFFFFA87DFD0FFFA8A87D7DFD0CFF7DA8%FFCB9D489D787FA9FFFFCBA9FD0FFF7DFD0BFFA8FD04FFA8A87DFD12FF7D%FD15FFA9797F79FFFFA8A8FD10FF7DA87DFD0CFF52A8FFFF7279CB794FFF%FFCBA2FD10FFA8FF7C57AEA7A851A8FFFFA87D7DFFFFFF7DA852FD12FF7D%A8FD15FF4E7F78FFFFA87DFF7DA8A8FFA87DA8FFFF7D7DFFFFFFA8A8A87D%FD0CFF7DA8FFCB9C78FF794FA2FFCBCBFD10FF7DFF8383A7AEA783A8FFFF%A852A8FFFFFFA8A87DFD12FF7DFD16FF794FA3FFFFA8A8FF8484AFA8AF59%FFFFFF7DA8FD04FF7DA87DFD0CFF52A8FFFFA2A2CA7924A3FFCBA2FD10FF%7DA8FD07FFAEFFA8A8FD04FF7DA852FD11FFA87DA8FD15FF782BA2FFFFFF%7DFD0BFFA8FFFFFFA8A87D7DFD0CFF7DA8FFFFFF9CFF7979A2FFA9CBFD10%FF7DFD10FFA8A87DFD12FF7DFD16FF7924CBFFFFA8A8FD10FF7DA87DFD0C%FF52A8FFFFFFA2A9CBA2A29CA3A9FD10FF7DA8FD0FFF7DA87DFD11FFA87D%FD16FF4E24A2FFFFFF7DFD0AFFA87D7D7DA8A8A87D7DFD0CFF7DA8FFFFFF%A2FFA2CB9CCB9CFD11FF7DFF9A9ACACAA19AA1FFFFFF7DFD04FFA8A87DFD%12FF7DFD16FFCB78FFFFFFA8A8FD0AFF7D52FFFF7DFF7DA87DFFFFA8FFA8%A87DA8A87D7DFF52A8FFFFA8CBFFCBA29CA29CA8FD10FF7DA8A099CAA1CA%6FA7FFFF7D52A8FFFFFF7DA852FD0BFFA8FFA8FF7DA8FF7DA8FD15FFA8A2%A8FFFFA87DFD0BFF527DFFFFA8A8A87DFFFFA8A87D7D7D52A8FFFFFF7DA8%FD05FFA2CB9CCBA2FD11FF7DFD10FFA87D7DFD06FFA8A87DFF7DA87D7DA8%A8A8FF52FD16FFCB9CFFFFFFA8A8FFFFA9CBA9CBCBFD05FF7DFFFFFF7DA8%7DA8FF7DFFA8A87DA8A8FFFFFF52FD06FFCBA29CA9FD12FFA8A8FD0FFF7D%A852FD05FFA8A87D7DA8FD047DFD04FF7DA8FD15FFA89CFFFFFFA87DFFA9%CBA2CBA8FD04FFA852FFA87DA8A87D7DFD0CFF7DA8FD05FFA9A39CFD13FF%7DFD0BFFA8FD04FFA8A87DFD12FF7DFD17FFCBFFFFFFA8A8FD0AFFFD057D%FF7DA87DFD0CFF52A8FD05FFCBA2CBA8FD12FF7DA8A87DAFA8AF59A8FFFF%7D7DFD04FF7DA852FD11FFA87DA8FD1BFF7DFD0CFFA8A8FFA8A87D7DFD0C%FF7DA8FD05FFA3A3FD14FF7DFFA884A8AFA884A8FFFFA87DFD04FFA8A87D%FD12FF7DFD1BFFA8A8FD0CFF7DFFFFFF7DA87DFD0CFF52A8FD05FFCBA2FD%14FF7DFD10FF7DA87DFD11FFA87DFD1CFF7DFD10FFA87D7DFD0CFF7DA8FD%05FFA2A3FD14FF7DFD05A87DA8A8A87DA8A8A87DA8A87DA87DFD12FF7DFD%1BFFA87DA8A87DA8A8A87DA8A8A87DFD05A87DA87DFD0CFF52A8FD04FFA8%CB9CFFFFFFA8FD05FFA8FD05FFA8FD05FF7DFD05A87DFD05A87DFD04A8FF%52FD11FFA852A8FFFFFFA8FD0BFFA8FD0BFFFD11A8FFA87DFD0CFFA852FD%2D7D527DFD12FF52FD057D52FD057D52FD057D52FD057D52FD167D527DFD%0CFFA8FFA8FFFD05A8FFFD05A8FFFD05A8FFFD05A8FFA8FFA8A8A8FFFD05%A8FFFD05A8FFA8A8A8FD13FFA8FFA8FFA8FFA8A8A8FFA8FF7DFFA8FFA8FF%A8A8A8FFA8A8A8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FFA8FD%0DFF7D7DFFFFFF7DA87DA8FFFF7D7D52A8FFFF7D7D52A8FFFF527D52FFFF%FF7DA852A8FFFF527D52FFFFFF7D7D52A8FFFF527D52FD12FF7D7DFD04FF%7D7DFD04FF7D7DFD04FF7DA8FFFFFF52FD05FF7DFD05FF7DFD05FF52FD04%FFA852FD0CFF527DFFFFFFA87D7D7DFFFF7D7D527DFFFF7D527D7DFFA852%527DA8FFFF7D527DA8FFA8525252A8FFFFA87D52A8FFA852527DA8FD0FFF%7DA8527DFFFF7DA87D7DFFFF7DA852A8FFFF7DA87DA8FFFFA852A8FD04FF%7DA8FFFFFFA852A8FFFFFFA852A8FFFFFF7D52FD19FFA8FFFFFFA8FD0BFF%A8FD07FFA8FD0BFFA8FD3BFFA8FD29FFA87DA8FD40FFA8A8FD3BFF7D5252%FD40FFA827A8FD3AFFA87DA8A8FD3FFFA87DA8FD16FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-04T11:02:41-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqwLQF886/bXu&#xA;oJ5kWxiXU9Us4LVbGGQJFY6jcWkfxsasSkAJPjiqPk8v/mAHiCebOSsxEp/R9uOK8Sa/a/mAGKqn&#xA;+HfPf/U3f9y63/5qxVTh8v8A5gMhMvmzg3JwANPtz8IYhT9rutDirpPL/wCYAeIJ5s5KzESn9H24&#xA;4rxJr9r+YAYqqf4d89/9Td/3Lrf/AJqxVTh8v/mAyEy+bODcnAA0+3PwhiFP2u60OKuk8v8A5gB4&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5.398153</stDim:w>
            <stDim:h>2.717590</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -185.649 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 185.649 li
374.584 185.649 li
374.584 0 li
cp
clp
[1 0 0 1 0 0 ]ct
37.2559 165.729 mo
176.756 165.729 li
176.756 4.44971 li
37.2559 4.44971 li
37.2559 165.729 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
37.2559 165.729 mo
176.756 165.729 li
176.756 4.42969 li
37.2559 4.42969 li
37.2559 165.729 li
cp
clp
1.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
37.2559 60.8979 mo
38.9995 34.8267 li
40.7432 41.7827 li
42.4873 60.002 li
44.231 83.271 li
45.9746 82.9878 li
47.7183 123.769 li
49.4619 93.2676 li
51.2061 123.032 li
52.9497 103.644 li
54.6934 103.732 li
56.437 99.1299 li
58.1807 130.169 li
59.9248 129.808 li
61.6685 101.547 li
63.4121 116.086 li
65.1558 107.488 li
66.8994 107.771 li
68.6436 114.075 li
70.3872 102.415 li
72.1309 83.3818 li
73.8745 97.001 li
75.6182 86.335 li
77.3623 91.71 li
79.106 93.0645 li
80.8496 75.9209 li
82.5933 63.8027 li
84.3369 71.4917 li
86.0811 67.9097 li
87.8247 70.0967 li
89.5679 53.1626 li
91.312 64.2427 li
93.0557 55.75 li
94.7998 54.0879 li
96.543 56.356 li
98.2866 56.5718 li
100.031 48.4829 li
101.775 47.7119 li
103.519 47.521 li
105.262 48.248 li
107.006 46.979 li
108.75 49.5518 li
110.494 46.918 li
112.237 46.436 li
113.981 44.0376 li
115.725 44.165 li
117.469 44.1328 li
119.212 45.5811 li
120.956 44.374 li
122.7 44.5747 li
124.444 44.373 li
126.187 46.3267 li
127.931 46.207 li
129.675 45.333 li
131.419 45.604 li
133.162 44.0996 li
134.906 45.9956 li
136.65 44.2959 li
138.393 44.8999 li
140.137 42.2959 li
141.881 45.2446 li
143.625 44.6196 li
145.369 45.3467 li
147.112 44.29 li
148.856 45.5977 li
150.6 46.4268 li
152.344 46.5088 li
154.087 46.6006 li
155.831 46.4019 li
157.575 44.7729 li
159.318 45.3848 li
161.062 45.501 li
162.806 46.1987 li
164.55 46.2417 li
166.294 46.335 li
168.037 46.6978 li
169.781 46.9336 li
171.525 46.2939 li
173.269 47.5278 li
175.012 46.6519 li
176.756 47.2666 li
178.5 47.75 li
180.244 47.3286 li
181.987 46.6528 li
183.731 48.2769 li
185.475 47.3169 li
187.219 47.9458 li
188.962 48.25 li
190.706 47.6538 li
192.45 48.4697 li
194.194 49.1689 li
195.937 49.543 li
197.681 49.1587 li
199.425 49.7778 li
201.169 49.582 li
202.912 49.771 li
204.656 50.2617 li
206.399 50.2061 li
208.144 50.147 li
209.887 50.7368 li
.883665 .769161 0 0 cmyk
@
37.2559 50.3389 mo
38.9995 58.5229 li
40.7432 57.583 li
42.4873 58.3286 li
44.231 58.5239 li
45.9746 58.2666 li
47.7183 56.7319 li
49.4619 59.3677 li
51.2061 58.354 li
52.9497 57.0107 li
54.6934 58.7427 li
56.437 58.5391 li
58.1807 59.1509 li
59.9248 58.2588 li
61.6685 58.2397 li
63.4121 59.0146 li
65.1558 58.2266 li
66.8994 58.644 li
68.6436 57.4639 li
70.3872 61.2959 li
72.1309 57.1138 li
73.8745 58.3247 li
75.6182 59.2148 li
77.3623 59.2837 li
79.106 60.5566 li
80.8496 60.7578 li
82.5933 61.4229 li
84.3369 60.5488 li
86.0811 59.7407 li
87.8247 61.7739 li
89.5679 59.5308 li
91.312 61.3149 li
93.0557 61.6377 li
94.7998 61.9517 li
96.543 63.4077 li
98.2866 61.8721 li
100.031 62.0566 li
101.775 61.8618 li
103.519 63.2061 li
105.262 64.791 li
107.006 62.876 li
108.75 63.5718 li
110.494 62.7207 li
112.237 62.6587 li
113.981 64.1729 li
115.725 63.335 li
117.469 63.3848 li
119.212 63.604 li
120.956 63.4336 li
122.7 62.8159 li
124.444 63.7891 li
126.187 63.001 li
127.931 63.293 li
129.675 63.1006 li
131.419 62.458 li
133.162 63.0796 li
134.906 62.8926 li
136.65 62.9326 li
138.393 62.9448 li
140.137 62.96 li
141.881 62.9048 li
143.625 62.6709 li
145.369 62.229 li
147.112 62.2417 li
148.856 62.333 li
150.6 62.4707 li
152.344 62.002 li
154.087 62.1499 li
155.831 61.9927 li
157.575 61.6089 li
159.318 62.0479 li
161.062 61.2188 li
162.806 61.6128 li
164.55 61.793 li
166.294 61.6909 li
168.037 61.2778 li
169.781 61.2456 li
171.525 60.9399 li
173.269 60.9399 li
175.012 60.8638 li
176.756 60.7759 li
178.5 60.3657 li
180.244 60.354 li
181.987 60.3159 li
183.731 60.3208 li
185.475 60.3667 li
187.219 60.2148 li
188.962 60.1128 li
190.706 60.1768 li
192.45 59.8311 li
194.194 60.0747 li
195.937 60.0977 li
197.681 59.6948 li
199.425 60.0146 li
201.169 59.7939 li
202.912 59.8408 li
204.656 59.7559 li
206.399 59.7368 li
208.144 59.6426 li
209.887 59.4756 li
.873045 .242161 1 .129244 cmyk
@
37.2559 65.4219 mo
38.9995 60.188 li
40.7432 59.71 li
42.4873 60.354 li
44.231 60.8477 li
45.9746 60.2388 li
47.7183 60.3228 li
49.4619 60.6069 li
51.2061 59.9658 li
52.9497 59.8066 li
54.6934 60.6978 li
56.437 60.2529 li
58.1807 59.9551 li
59.9248 60.5767 li
61.6685 59.5669 li
63.4121 60.165 li
65.1558 59.998 li
66.8994 60.7847 li
68.6436 60.9106 li
70.3872 60.3838 li
72.1309 60.1689 li
73.8745 60.9766 li
75.6182 60.6519 li
77.3623 60.1807 li
79.106 61.1479 li
80.8496 61.0566 li
82.5933 60.187 li
84.3369 61.4507 li
86.0811 61.0767 li
87.8247 61.9619 li
89.5679 61.5547 li
91.312 61.5337 li
93.0557 61.8867 li
94.7998 61.9058 li
96.543 61.9819 li
98.2866 62.2407 li
100.031 62.3516 li
101.775 62.2979 li
103.519 64.0239 li
105.262 62.9551 li
107.006 62.9517 li
108.75 61.9277 li
110.494 62.6528 li
112.237 62.5039 li
113.981 63.0166 li
115.725 63.2397 li
117.469 62.71 li
119.212 62.7339 li
120.956 63.1777 li
122.7 63.0439 li
124.444 62.52 li
126.187 63.6157 li
127.931 62.7266 li
129.675 63.0557 li
131.419 61.7339 li
133.162 62.7061 li
134.906 62.2588 li
136.65 61.6167 li
138.393 61.3926 li
140.137 61.5557 li
141.881 62.5947 li
143.625 61.7329 li
145.369 61.7837 li
147.112 62.0298 li
148.856 61.8457 li
150.6 61.9277 li
152.344 60.6626 li
154.087 60.729 li
155.831 61.501 li
157.575 60.0117 li
159.318 60.4268 li
161.062 59.6406 li
162.806 59.5557 li
164.55 60.1157 li
166.294 59.6738 li
168.037 59.2368 li
169.781 59.252 li
171.525 59.3906 li
173.269 59.1929 li
175.012 58.6606 li
176.756 59.0928 li
178.5 59.6318 li
180.244 58.2866 li
181.987 59.1099 li
183.731 58.0801 li
185.475 58.7876 li
187.219 58.4517 li
188.962 57.041 li
190.706 57.6836 li
192.45 58.6558 li
194.194 57.9478 li
195.937 57.9019 li
197.681 58.0908 li
199.425 58.5737 li
201.169 57.8247 li
202.912 58.1499 li
204.656 57.748 li
206.399 57.4688 li
208.144 57.0669 li
209.887 57.5547 li
0 .993988 1 0 cmyk
@
37.2559 60.8979 mo
38.9995 42.855 li
40.7432 47.9106 li
42.4873 43.8076 li
44.231 57.1836 li
45.9746 52.9736 li
47.7183 68.3257 li
49.4619 62.7808 li
51.2061 79.8477 li
52.9497 78.0869 li
54.6934 77.9736 li
56.437 76.4946 li
58.1807 92.8252 li
59.9248 98.123 li
61.6685 84.8701 li
63.4121 97.1826 li
65.1558 86.625 li
66.8994 87.1797 li
68.6436 93.5439 li
70.3872 86.1611 li
72.1309 76.4248 li
73.8745 85.5303 li
75.6182 76.3218 li
77.3623 78.7061 li
79.106 84.4346 li
80.8496 74.063 li
82.5933 64.1436 li
84.3369 69.2847 li
86.0811 68.498 li
87.8247 71.083 li
89.5679 62.4956 li
91.312 65.1548 li
93.0557 60.8828 li
94.7998 59.0938 li
96.543 64.8848 li
98.2866 64.8188 li
100.031 56.8486 li
101.775 55.7627 li
103.519 53.5376 li
105.262 54.8188 li
107.006 55.23 li
108.75 54.1328 li
110.494 56.9717 li
112.237 55.3188 li
113.981 54.481 li
115.725 53.9399 li
117.469 52.3936 li
119.212 52.7358 li
120.956 55.4897 li
122.7 54.6279 li
124.444 53.6689 li
126.187 54.2568 li
127.931 56.9067 li
129.675 55.8706 li
131.419 56.0117 li
133.162 53.8208 li
134.906 54.9429 li
136.65 55.377 li
138.393 54.1108 li
140.137 51.0391 li
141.881 52.9888 li
143.625 55.1118 li
145.369 54.2729 li
147.112 54.3477 li
148.856 54.5688 li
150.6 54.1768 li
152.344 54.2891 li
154.087 54.4648 li
155.831 55.1558 li
157.575 51.9639 li
159.318 54.874 li
161.062 53.5229 li
162.806 53.814 li
164.55 53.832 li
166.294 52.625 li
168.037 54.019 li
169.781 53.6548 li
171.525 54.3989 li
173.269 54.2847 li
175.012 53.5947 li
176.756 53.9849 li
178.5 54.3916 li
180.244 53.3208 li
181.987 54.2666 li
183.731 54.4448 li
185.475 53.5049 li
187.219 54.7168 li
188.962 54.104 li
190.706 53.502 li
192.45 54.3237 li
194.194 53.415 li
195.937 54.5801 li
197.681 54.3628 li
199.425 54.127 li
201.169 54.6309 li
202.912 54.4546 li
204.656 55.4917 li
206.399 54.646 li
208.144 54.4639 li
209.887 54.9868 li
.713191 0 .306584 0 cmyk
@
0 lc
[1 1 ] 0 dsh
37.2559 50.5649 mo
38.9995 14.374 li
40.7432 25.4219 li
42.4873 40.3159 li
44.231 77.1797 li
45.9746 72.3999 li
47.7183 127.002 li
49.4619 93.6055 li
51.2061 139.392 li
52.9497 116.892 li
54.6934 118.643 li
56.437 112.337 li
58.1807 160.303 li
59.9248 164.378 li
61.6685 122.795 li
63.4121 150.451 li
65.1558 130.5 li
66.8994 131.795 li
68.6436 143.289 li
70.3872 128.051 li
72.1309 95.0889 li
73.8745 119.064 li
75.6182 100.064 li
77.3623 107.868 li
79.106 116.273 li
80.8496 88.9541 li
82.5933 67.5391 li
84.3369 79.5566 li
86.0811 74.3618 li
87.8247 81.2119 li
89.5679 53.4277 li
91.312 68.9487 li
93.0557 56.5239 li
94.7998 53.3877 li
96.543 62.9067 li
98.2866 61.5347 li
100.031 45.665 li
101.775 43.6099 li
103.519 42.624 li
105.262 46.165 li
107.006 43.3916 li
108.75 45.5127 li
110.494 44.9028 li
112.237 42.6968 li
113.981 41.002 li
115.725 39.7617 li
117.469 38.2061 li
119.212 40.2158 li
120.956 41.6157 li
122.7 40.3311 li
124.444 40.1157 li
126.187 41.9248 li
127.931 44.7017 li
129.675 42.6167 li
131.419 42.3198 li
133.162 39.2949 li
134.906 42.105 li
136.65 40.8467 li
138.393 40.1836 li
140.137 34.5317 li
141.881 39.4277 li
143.625 40.6499 li
145.369 40.0967 li
147.112 39.1406 li
148.856 40.751 li
150.6 41.3296 li
152.344 40.9917 li
154.087 41.4106 li
155.831 41.7847 li
157.575 36.5059 li
159.318 40.4868 li
161.062 38.3838 li
162.806 39.7627 li
164.55 40.0308 li
166.294 38.7939 li
168.037 40.1157 li
169.781 39.957 li
171.525 39.7617 li
173.269 40.8721 li
175.012 39.2026 li
176.756 40.1406 li
178.5 40.6479 li
180.244 39.0767 li
181.987 39.3496 li
183.731 41.105 li
185.475 39.2866 li
187.219 40.959 li
188.962 40.478 li
190.706 39.376 li
192.45 40.7168 li
194.194 40.7148 li
195.937 42.2749 li
197.681 41.2798 li
199.425 42.0068 li
201.169 42.0576 li
202.912 42.1328 li
204.656 43.5557 li
206.399 42.6206 li
208.144 42.2656 li
209.887 43.2368 li
.385412 .90045 0 0 cmyk
@
37.2559 63.7261 mo
40.0845 60.8979 li
37.2559 58.0693 li
34.4272 60.8979 li
37.2559 63.7261 li
.883665 .769161 0 0 cmyk
f
.5 lw
[] 0 dsh
37.2559 63.7261 mo
40.0845 60.8979 li
37.2559 58.0693 li
34.4272 60.8979 li
37.2559 63.7261 li
0 0 0 1 cmyk
@
grestore
54.6934 106.561 mo
57.522 103.732 li
54.6934 100.903 li
51.8647 103.732 li
54.6934 106.561 li
.883665 .769161 0 0 cmyk
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
54.6934 106.561 mo
57.522 103.732 li
54.6934 100.903 li
51.8647 103.732 li
54.6934 106.561 li
0 0 0 1 cmyk
@
72.1309 86.21 mo
74.9595 83.3818 li
72.1309 80.5532 li
69.3022 83.3818 li
72.1309 86.21 li
.883665 .769161 0 0 cmyk
f
72.1309 86.21 mo
74.9595 83.3818 li
72.1309 80.5532 li
69.3022 83.3818 li
72.1309 86.21 li
0 0 0 1 cmyk
@
89.5679 55.9912 mo
92.3965 53.1626 li
89.5679 50.3345 li
86.7393 53.1626 li
89.5679 55.9912 li
.883665 .769161 0 0 cmyk
f
89.5679 55.9912 mo
92.3965 53.1626 li
89.5679 50.3345 li
86.7393 53.1626 li
89.5679 55.9912 li
0 0 0 1 cmyk
@
107.006 49.8071 mo
109.834 46.979 li
107.006 44.1504 li
104.177 46.979 li
107.006 49.8071 li
.883665 .769161 0 0 cmyk
f
107.006 49.8071 mo
109.834 46.979 li
107.006 44.1504 li
104.177 46.979 li
107.006 49.8071 li
0 0 0 1 cmyk
@
124.444 47.2012 mo
127.272 44.373 li
124.444 41.5444 li
121.615 44.373 li
124.444 47.2012 li
.883665 .769161 0 0 cmyk
f
124.444 47.2012 mo
127.272 44.373 li
124.444 41.5444 li
121.615 44.373 li
124.444 47.2012 li
0 0 0 1 cmyk
@
141.881 48.0732 mo
144.709 45.2446 li
141.881 42.4165 li
139.052 45.2446 li
141.881 48.0732 li
.883665 .769161 0 0 cmyk
f
141.881 48.0732 mo
144.709 45.2446 li
141.881 42.4165 li
139.052 45.2446 li
141.881 48.0732 li
0 0 0 1 cmyk
@
gsave
37.2559 165.729 mo
176.756 165.729 li
176.756 4.42969 li
37.2559 4.42969 li
37.2559 165.729 li
cp
clp
159.318 48.2134 mo
162.146 45.3848 li
159.318 42.5566 li
156.489 45.3848 li
159.318 48.2134 li
.883665 .769161 0 0 cmyk
f
159.318 48.2134 mo
162.146 45.3848 li
159.318 42.5566 li
156.489 45.3848 li
159.318 48.2134 li
0 0 0 1 cmyk
@
176.756 50.0952 mo
179.584 47.2666 li
176.756 44.4385 li
173.927 47.2666 li
176.756 50.0952 li
.883665 .769161 0 0 cmyk
f
176.756 50.0952 mo
179.584 47.2666 li
176.756 44.4385 li
173.927 47.2666 li
176.756 50.0952 li
0 0 0 1 cmyk
@
37.2559 48.3389 mo
35.2559 52.3389 li
39.2559 52.3389 li
37.2559 48.3389 li
.873045 .242161 1 .129244 cmyk
f
37.2559 48.3389 mo
35.2559 52.3389 li
39.2559 52.3389 li
37.2559 48.3389 li
0 0 0 1 cmyk
@
grestore
54.6934 56.7427 mo
52.6934 60.7427 li
56.6934 60.7427 li
54.6934 56.7427 li
.873045 .242161 1 .129244 cmyk
f
54.6934 56.7427 mo
52.6934 60.7427 li
56.6934 60.7427 li
54.6934 56.7427 li
0 0 0 1 cmyk
@
72.1309 55.1138 mo
70.1309 59.1138 li
74.1309 59.1138 li
72.1309 55.1138 li
.873045 .242161 1 .129244 cmyk
f
72.1309 55.1138 mo
70.1309 59.1138 li
74.1309 59.1138 li
72.1309 55.1138 li
0 0 0 1 cmyk
@
89.5679 57.5308 mo
87.5679 61.5308 li
91.5679 61.5308 li
89.5679 57.5308 li
.873045 .242161 1 .129244 cmyk
f
89.5679 57.5308 mo
87.5679 61.5308 li
91.5679 61.5308 li
89.5679 57.5308 li
0 0 0 1 cmyk
@
107.006 60.876 mo
105.006 64.876 li
109.006 64.876 li
107.006 60.876 li
.873045 .242161 1 .129244 cmyk
f
107.006 60.876 mo
105.006 64.876 li
109.006 64.876 li
107.006 60.876 li
0 0 0 1 cmyk
@
124.444 61.7891 mo
122.444 65.7891 li
126.444 65.7891 li
124.444 61.7891 li
.873045 .242161 1 .129244 cmyk
f
124.444 61.7891 mo
122.444 65.7891 li
126.444 65.7891 li
124.444 61.7891 li
0 0 0 1 cmyk
@
141.881 60.9048 mo
139.881 64.9048 li
143.881 64.9048 li
141.881 60.9048 li
.873045 .242161 1 .129244 cmyk
f
141.881 60.9048 mo
139.881 64.9048 li
143.881 64.9048 li
141.881 60.9048 li
0 0 0 1 cmyk
@
gsave
37.2559 165.729 mo
176.756 165.729 li
176.756 4.42969 li
37.2559 4.42969 li
37.2559 165.729 li
cp
clp
159.318 60.0479 mo
157.318 64.0479 li
161.318 64.0479 li
159.318 60.0479 li
.873045 .242161 1 .129244 cmyk
f
159.318 60.0479 mo
157.318 64.0479 li
161.318 64.0479 li
159.318 60.0479 li
0 0 0 1 cmyk
@
176.756 58.7759 mo
174.756 62.7759 li
178.756 62.7759 li
176.756 58.7759 li
.873045 .242161 1 .129244 cmyk
f
176.756 58.7759 mo
174.756 62.7759 li
178.756 62.7759 li
176.756 58.7759 li
0 0 0 1 cmyk
@
37.2559 67.4219 mo
37.7861 67.4219 38.2949 67.2109 38.6699 66.8359 cv
39.0449 66.4609 39.2559 65.9521 39.2559 65.4219 cv
39.2559 64.8916 39.0449 64.3828 38.6699 64.0078 cv
38.2949 63.6323 37.7861 63.4219 37.2559 63.4219 cv
36.7256 63.4219 36.2168 63.6323 35.8418 64.0078 cv
35.4668 64.3828 35.2559 64.8916 35.2559 65.4219 cv
35.2559 65.9521 35.4668 66.4609 35.8418 66.8359 cv
36.2168 67.2109 36.7256 67.4219 37.2559 67.4219 cv
37.2559 67.4219 li
cp
0 .993988 1 0 cmyk
f
37.2559 67.4219 mo
37.7861 67.4219 38.2949 67.2109 38.6699 66.8359 cv
39.0449 66.4609 39.2559 65.9521 39.2559 65.4219 cv
39.2559 64.8916 39.0449 64.3828 38.6699 64.0078 cv
38.2949 63.6323 37.7861 63.4219 37.2559 63.4219 cv
36.7256 63.4219 36.2168 63.6323 35.8418 64.0078 cv
35.4668 64.3828 35.2559 64.8916 35.2559 65.4219 cv
35.2559 65.9521 35.4668 66.4609 35.8418 66.8359 cv
36.2168 67.2109 36.7256 67.4219 37.2559 67.4219 cv
37.2559 67.4219 li
cp
0 0 0 1 cmyk
@
grestore
54.6934 62.6978 mo
55.2236 62.6978 55.7324 62.4873 56.1074 62.1118 cv
56.4824 61.7368 56.6934 61.228 56.6934 60.6978 cv
56.6934 60.1675 56.4824 59.6587 56.1074 59.2837 cv
55.7324 58.9087 55.2236 58.6978 54.6934 58.6978 cv
54.1631 58.6978 53.6543 58.9087 53.2793 59.2837 cv
52.9043 59.6587 52.6934 60.1675 52.6934 60.6978 cv
52.6934 61.228 52.9043 61.7368 53.2793 62.1118 cv
53.6543 62.4873 54.1631 62.6978 54.6934 62.6978 cv
54.6934 62.6978 li
cp
0 .993988 1 0 cmyk
f
54.6934 62.6978 mo
55.2236 62.6978 55.7324 62.4873 56.1074 62.1118 cv
56.4824 61.7368 56.6934 61.228 56.6934 60.6978 cv
56.6934 60.1675 56.4824 59.6587 56.1074 59.2837 cv
55.7324 58.9087 55.2236 58.6978 54.6934 58.6978 cv
54.1631 58.6978 53.6543 58.9087 53.2793 59.2837 cv
52.9043 59.6587 52.6934 60.1675 52.6934 60.6978 cv
52.6934 61.228 52.9043 61.7368 53.2793 62.1118 cv
53.6543 62.4873 54.1631 62.6978 54.6934 62.6978 cv
54.6934 62.6978 li
cp
0 0 0 1 cmyk
@
72.1309 62.1689 mo
72.6611 62.1689 73.1699 61.958 73.5449 61.583 cv
73.9199 61.208 74.1309 60.6992 74.1309 60.1689 cv
74.1309 59.6387 73.9199 59.1299 73.5449 58.7544 cv
73.1699 58.3794 72.6611 58.1689 72.1309 58.1689 cv
71.6006 58.1689 71.0918 58.3794 70.7168 58.7544 cv
70.3418 59.1299 70.1309 59.6387 70.1309 60.1689 cv
70.1309 60.6992 70.3418 61.208 70.7168 61.583 cv
71.0918 61.958 71.6006 62.1689 72.1309 62.1689 cv
72.1309 62.1689 li
cp
0 .993988 1 0 cmyk
f
72.1309 62.1689 mo
72.6611 62.1689 73.1699 61.958 73.5449 61.583 cv
73.9199 61.208 74.1309 60.6992 74.1309 60.1689 cv
74.1309 59.6387 73.9199 59.1299 73.5449 58.7544 cv
73.1699 58.3794 72.6611 58.1689 72.1309 58.1689 cv
71.6006 58.1689 71.0918 58.3794 70.7168 58.7544 cv
70.3418 59.1299 70.1309 59.6387 70.1309 60.1689 cv
70.1309 60.6992 70.3418 61.208 70.7168 61.583 cv
71.0918 61.958 71.6006 62.1689 72.1309 62.1689 cv
72.1309 62.1689 li
cp
0 0 0 1 cmyk
@
89.5679 63.5547 mo
90.0981 63.5547 90.6069 63.3442 90.9819 62.9692 cv
91.3569 62.5938 91.5679 62.085 91.5679 61.5547 cv
91.5679 61.0244 91.3569 60.5156 90.9819 60.1406 cv
90.6069 59.7656 90.0981 59.5547 89.5679 59.5547 cv
89.0376 59.5547 88.5288 59.7656 88.1538 60.1406 cv
87.7788 60.5156 87.5679 61.0244 87.5679 61.5547 cv
87.5679 62.085 87.7788 62.5938 88.1538 62.9692 cv
88.5288 63.3442 89.0376 63.5547 89.5679 63.5547 cv
89.5679 63.5547 li
cp
0 .993988 1 0 cmyk
f
89.5679 63.5547 mo
90.0981 63.5547 90.6069 63.3442 90.9819 62.9692 cv
91.3569 62.5938 91.5679 62.085 91.5679 61.5547 cv
91.5679 61.0244 91.3569 60.5156 90.9819 60.1406 cv
90.6069 59.7656 90.0981 59.5547 89.5679 59.5547 cv
89.0376 59.5547 88.5288 59.7656 88.1538 60.1406 cv
87.7788 60.5156 87.5679 61.0244 87.5679 61.5547 cv
87.5679 62.085 87.7788 62.5938 88.1538 62.9692 cv
88.5288 63.3442 89.0376 63.5547 89.5679 63.5547 cv
89.5679 63.5547 li
cp
0 0 0 1 cmyk
@
107.006 64.9517 mo
107.536 64.9517 108.045 64.7412 108.42 64.3662 cv
108.795 63.9912 109.006 63.4824 109.006 62.9517 cv
109.006 62.4214 108.795 61.9126 108.42 61.5376 cv
108.045 61.1626 107.536 60.9517 107.006 60.9517 cv
106.476 60.9517 105.967 61.1626 105.592 61.5376 cv
105.217 61.9126 105.006 62.4214 105.006 62.9517 cv
105.006 63.4824 105.217 63.9912 105.592 64.3662 cv
105.967 64.7412 106.476 64.9517 107.006 64.9517 cv
107.006 64.9517 li
cp
0 .993988 1 0 cmyk
f
107.006 64.9517 mo
107.536 64.9517 108.045 64.7412 108.42 64.3662 cv
108.795 63.9912 109.006 63.4824 109.006 62.9517 cv
109.006 62.4214 108.795 61.9126 108.42 61.5376 cv
108.045 61.1626 107.536 60.9517 107.006 60.9517 cv
106.476 60.9517 105.967 61.1626 105.592 61.5376 cv
105.217 61.9126 105.006 62.4214 105.006 62.9517 cv
105.006 63.4824 105.217 63.9912 105.592 64.3662 cv
105.967 64.7412 106.476 64.9517 107.006 64.9517 cv
107.006 64.9517 li
cp
0 0 0 1 cmyk
@
124.444 64.52 mo
124.974 64.52 125.483 64.3091 125.858 63.9341 cv
126.233 63.5591 126.444 63.0503 126.444 62.52 cv
126.444 61.9893 126.233 61.4805 125.858 61.1055 cv
125.483 60.7305 124.974 60.52 124.444 60.52 cv
123.914 60.52 123.405 60.7305 123.03 61.1055 cv
122.655 61.4805 122.444 61.9893 122.444 62.52 cv
122.444 63.0503 122.655 63.5591 123.03 63.9341 cv
123.405 64.3091 123.914 64.52 124.444 64.52 cv
124.444 64.52 li
cp
0 .993988 1 0 cmyk
f
124.444 64.52 mo
124.974 64.52 125.483 64.3091 125.858 63.9341 cv
126.233 63.5591 126.444 63.0503 126.444 62.52 cv
126.444 61.9893 126.233 61.4805 125.858 61.1055 cv
125.483 60.7305 124.974 60.52 124.444 60.52 cv
123.914 60.52 123.405 60.7305 123.03 61.1055 cv
122.655 61.4805 122.444 61.9893 122.444 62.52 cv
122.444 63.0503 122.655 63.5591 123.03 63.9341 cv
123.405 64.3091 123.914 64.52 124.444 64.52 cv
124.444 64.52 li
cp
0 0 0 1 cmyk
@
141.881 64.5947 mo
142.411 64.5947 142.92 64.3843 143.295 64.0088 cv
143.67 63.6338 143.881 63.125 143.881 62.5947 cv
143.881 62.0645 143.67 61.5557 143.295 61.1807 cv
142.92 60.8057 142.411 60.5947 141.881 60.5947 cv
141.351 60.5947 140.842 60.8057 140.467 61.1807 cv
140.092 61.5557 139.881 62.0645 139.881 62.5947 cv
139.881 63.125 140.092 63.6338 140.467 64.0088 cv
140.842 64.3843 141.351 64.5947 141.881 64.5947 cv
141.881 64.5947 li
cp
0 .993988 1 0 cmyk
f
141.881 64.5947 mo
142.411 64.5947 142.92 64.3843 143.295 64.0088 cv
143.67 63.6338 143.881 63.125 143.881 62.5947 cv
143.881 62.0645 143.67 61.5557 143.295 61.1807 cv
142.92 60.8057 142.411 60.5947 141.881 60.5947 cv
141.351 60.5947 140.842 60.8057 140.467 61.1807 cv
140.092 61.5557 139.881 62.0645 139.881 62.5947 cv
139.881 63.125 140.092 63.6338 140.467 64.0088 cv
140.842 64.3843 141.351 64.5947 141.881 64.5947 cv
141.881 64.5947 li
cp
0 0 0 1 cmyk
@
gsave
37.2559 165.729 mo
176.756 165.729 li
176.756 4.42969 li
37.2559 4.42969 li
37.2559 165.729 li
cp
clp
159.318 62.4268 mo
159.848 62.4268 160.357 62.2163 160.732 61.8408 cv
161.107 61.4658 161.318 60.957 161.318 60.4268 cv
161.318 59.8965 161.107 59.3877 160.732 59.0127 cv
160.357 58.6377 159.848 58.4268 159.318 58.4268 cv
158.788 58.4268 158.279 58.6377 157.904 59.0127 cv
157.528 59.3877 157.318 59.8965 157.318 60.4268 cv
157.318 60.957 157.528 61.4658 157.904 61.8408 cv
158.279 62.2163 158.788 62.4268 159.318 62.4268 cv
159.318 62.4268 li
cp
0 .993988 1 0 cmyk
f
159.318 62.4268 mo
159.848 62.4268 160.357 62.2163 160.732 61.8408 cv
161.107 61.4658 161.318 60.957 161.318 60.4268 cv
161.318 59.8965 161.107 59.3877 160.732 59.0127 cv
160.357 58.6377 159.848 58.4268 159.318 58.4268 cv
158.788 58.4268 158.279 58.6377 157.904 59.0127 cv
157.528 59.3877 157.318 59.8965 157.318 60.4268 cv
157.318 60.957 157.528 61.4658 157.904 61.8408 cv
158.279 62.2163 158.788 62.4268 159.318 62.4268 cv
159.318 62.4268 li
cp
0 0 0 1 cmyk
@
176.756 61.0928 mo
177.286 61.0928 177.795 60.8818 178.17 60.5068 cv
178.545 60.1318 178.756 59.623 178.756 59.0928 cv
178.756 58.5625 178.545 58.0537 178.17 57.6787 cv
177.795 57.3037 177.286 57.0928 176.756 57.0928 cv
176.226 57.0928 175.717 57.3037 175.342 57.6787 cv
174.967 58.0537 174.756 58.5625 174.756 59.0928 cv
174.756 59.623 174.967 60.1318 175.342 60.5068 cv
175.717 60.8818 176.226 61.0928 176.756 61.0928 cv
176.756 61.0928 li
cp
0 .993988 1 0 cmyk
f
176.756 61.0928 mo
177.286 61.0928 177.795 60.8818 178.17 60.5068 cv
178.545 60.1318 178.756 59.623 178.756 59.0928 cv
178.756 58.5625 178.545 58.0537 178.17 57.6787 cv
177.795 57.3037 177.286 57.0928 176.756 57.0928 cv
176.226 57.0928 175.717 57.3037 175.342 57.6787 cv
174.967 58.0537 174.756 58.5625 174.756 59.0928 cv
174.756 59.623 174.967 60.1318 175.342 60.5068 cv
175.717 60.8818 176.226 61.0928 176.756 61.0928 cv
176.756 61.0928 li
cp
0 0 0 1 cmyk
@
37.2559 58.8979 mo
36.8066 60.2798 li
35.3535 60.2798 li
36.5293 61.1338 li
36.0801 62.5156 li
37.2559 61.6616 li
38.4316 62.5156 li
37.9824 61.1338 li
39.1582 60.2798 li
37.7051 60.2798 li
37.2559 58.8979 li
.713191 0 .306584 0 cmyk
f
37.2559 58.8979 mo
36.8066 60.2798 li
35.3535 60.2798 li
36.5293 61.1338 li
36.0801 62.5156 li
37.2559 61.6616 li
38.4316 62.5156 li
37.9824 61.1338 li
39.1582 60.2798 li
37.7051 60.2798 li
37.2559 58.8979 li
0 0 0 1 cmyk
@
grestore
54.6934 75.9736 mo
54.2441 77.356 li
52.791 77.356 li
53.9668 78.21 li
53.5176 79.5918 li
54.6934 78.7378 li
55.8691 79.5918 li
55.4199 78.21 li
56.5957 77.356 li
55.1426 77.356 li
54.6934 75.9736 li
.713191 0 .306584 0 cmyk
f
54.6934 75.9736 mo
54.2441 77.356 li
52.791 77.356 li
53.9668 78.21 li
53.5176 79.5918 li
54.6934 78.7378 li
55.8691 79.5918 li
55.4199 78.21 li
56.5957 77.356 li
55.1426 77.356 li
54.6934 75.9736 li
0 0 0 1 cmyk
@
72.1309 74.4248 mo
71.6816 75.8066 li
70.2285 75.8066 li
71.4043 76.6611 li
70.9551 78.043 li
72.1309 77.189 li
73.3066 78.043 li
72.8574 76.6611 li
74.0332 75.8066 li
72.5801 75.8066 li
72.1309 74.4248 li
.713191 0 .306584 0 cmyk
f
72.1309 74.4248 mo
71.6816 75.8066 li
70.2285 75.8066 li
71.4043 76.6611 li
70.9551 78.043 li
72.1309 77.189 li
73.3066 78.043 li
72.8574 76.6611 li
74.0332 75.8066 li
72.5801 75.8066 li
72.1309 74.4248 li
0 0 0 1 cmyk
@
89.5679 60.4956 mo
89.1187 61.8779 li
87.6655 61.8779 li
88.8413 62.7319 li
88.3921 64.1138 li
89.5679 63.2598 li
90.7432 64.1138 li
90.2944 62.7319 li
91.4697 61.8779 li
90.0171 61.8779 li
89.5679 60.4956 li
.713191 0 .306584 0 cmyk
f
89.5679 60.4956 mo
89.1187 61.8779 li
87.6655 61.8779 li
88.8413 62.7319 li
88.3921 64.1138 li
89.5679 63.2598 li
90.7432 64.1138 li
90.2944 62.7319 li
91.4697 61.8779 li
90.0171 61.8779 li
89.5679 60.4956 li
0 0 0 1 cmyk
@
107.006 53.23 mo
106.557 54.6118 li
105.104 54.6118 li
106.279 55.4658 li
105.83 56.8477 li
107.006 55.9937 li
108.182 56.8477 li
107.732 55.4658 li
108.908 54.6118 li
107.455 54.6118 li
107.006 53.23 li
.713191 0 .306584 0 cmyk
f
107.006 53.23 mo
106.557 54.6118 li
105.104 54.6118 li
106.279 55.4658 li
105.83 56.8477 li
107.006 55.9937 li
108.182 56.8477 li
107.732 55.4658 li
108.908 54.6118 li
107.455 54.6118 li
107.006 53.23 li
0 0 0 1 cmyk
@
124.444 51.6689 mo
123.995 53.0508 li
122.542 53.0508 li
123.717 53.9048 li
123.268 55.2871 li
124.444 54.4326 li
125.62 55.2871 li
125.17 53.9048 li
126.346 53.0508 li
124.893 53.0508 li
124.444 51.6689 li
.713191 0 .306584 0 cmyk
f
124.444 51.6689 mo
123.995 53.0508 li
122.542 53.0508 li
123.717 53.9048 li
123.268 55.2871 li
124.444 54.4326 li
125.62 55.2871 li
125.17 53.9048 li
126.346 53.0508 li
124.893 53.0508 li
124.444 51.6689 li
0 0 0 1 cmyk
@
141.881 50.9888 mo
141.432 52.3706 li
139.979 52.3706 li
141.154 53.2251 li
140.705 54.6069 li
141.881 53.7529 li
143.057 54.6069 li
142.607 53.2251 li
143.783 52.3706 li
142.33 52.3706 li
141.881 50.9888 li
.713191 0 .306584 0 cmyk
f
141.881 50.9888 mo
141.432 52.3706 li
139.979 52.3706 li
141.154 53.2251 li
140.705 54.6069 li
141.881 53.7529 li
143.057 54.6069 li
142.607 53.2251 li
143.783 52.3706 li
142.33 52.3706 li
141.881 50.9888 li
0 0 0 1 cmyk
@
gsave
37.2559 165.729 mo
176.756 165.729 li
176.756 4.42969 li
37.2559 4.42969 li
37.2559 165.729 li
cp
clp
159.318 52.874 mo
158.869 54.2559 li
157.416 54.2559 li
158.591 55.1099 li
158.142 56.4917 li
159.318 55.6377 li
160.493 56.4917 li
160.044 55.1099 li
161.22 54.2559 li
159.767 54.2559 li
159.318 52.874 li
.713191 0 .306584 0 cmyk
f
159.318 52.874 mo
158.869 54.2559 li
157.416 54.2559 li
158.591 55.1099 li
158.142 56.4917 li
159.318 55.6377 li
160.493 56.4917 li
160.044 55.1099 li
161.22 54.2559 li
159.767 54.2559 li
159.318 52.874 li
0 0 0 1 cmyk
@
176.756 51.9849 mo
176.307 53.3667 li
174.854 53.3667 li
176.029 54.2207 li
175.58 55.603 li
176.756 54.7485 li
177.932 55.603 li
177.482 54.2207 li
178.658 53.3667 li
177.205 53.3667 li
176.756 51.9849 li
.713191 0 .306584 0 cmyk
f
176.756 51.9849 mo
176.307 53.3667 li
174.854 53.3667 li
176.029 54.2207 li
175.58 55.603 li
176.756 54.7485 li
177.932 55.603 li
177.482 54.2207 li
178.658 53.3667 li
177.205 53.3667 li
176.756 51.9849 li
0 0 0 1 cmyk
@
[1 1 ] 0 dsh
37.2559 60.8979 mo
176.756 60.8979 li
@
grestore
37.2559 4.44971 mo
37.2559 8.44971 li
37.2559 165.729 mo
37.2559 161.729 li
@
37.8799 175.674 mo
37.2397 175.674 36.7437 175.41 36.3921 174.882 cv
36.04 174.354 35.8638 173.618 35.8638 172.658 cv
35.8638 171.706 36.04 170.962 36.3921 170.434 cv
36.7437 169.906 37.2397 169.634 37.8799 169.634 cv
38.5117 169.634 39.0078 169.906 39.3599 170.434 cv
39.7119 170.962 39.896 171.706 39.896 172.658 cv
39.896 173.618 39.7119 174.354 39.3599 174.882 cv
39.0078 175.41 38.5117 175.674 37.8799 175.674 cv
37.8799 175.674 li
cp
37.8799 175.298 mo
38.2798 175.298 38.5757 175.082 38.7759 174.642 cv
38.9678 174.21 39.0718 173.546 39.0718 172.658 cv
39.0718 171.777 38.9678 171.114 38.7759 170.674 cv
38.5757 170.242 38.2798 170.018 37.8799 170.018 cv
37.48 170.018 37.1758 170.242 36.9839 170.674 cv
36.7837 171.114 36.688 171.777 36.688 172.658 cv
36.688 173.546 36.7837 174.21 36.9839 174.642 cv
37.1758 175.082 37.48 175.298 37.8799 175.298 cv
ef
54.6934 4.44971 mo
54.6934 8.44971 li
54.6934 165.729 mo
54.6934 161.729 li
@
51.5918 175.57 mo
51.5918 175.154 li
52.6079 175.154 li
52.6079 170.306 li
51.4316 171.065 li
51.4316 170.554 li
52.856 169.634 li
53.3921 169.634 li
53.3921 175.154 li
54.4077 175.154 li
54.4077 175.57 li
51.5918 175.57 li
51.5918 175.57 li
cp
ef
58.04 175.674 mo
57.3999 175.674 56.9038 175.41 56.5518 174.882 cv
56.1997 174.354 56.0239 173.618 56.0239 172.658 cv
56.0239 171.706 56.1997 170.962 56.5518 170.434 cv
56.9038 169.906 57.3999 169.634 58.04 169.634 cv
58.6719 169.634 59.168 169.906 59.52 170.434 cv
59.8721 170.962 60.0557 171.706 60.0557 172.658 cv
60.0557 173.618 59.8721 174.354 59.52 174.882 cv
59.168 175.41 58.6719 175.674 58.04 175.674 cv
58.04 175.674 li
cp
58.04 175.298 mo
58.4399 175.298 58.7358 175.082 58.936 174.642 cv
59.1279 174.21 59.2319 173.546 59.2319 172.658 cv
59.2319 171.777 59.1279 171.114 58.936 170.674 cv
58.7358 170.242 58.4399 170.018 58.04 170.018 cv
57.6396 170.018 57.3359 170.242 57.144 170.674 cv
56.9438 171.114 56.8477 171.777 56.8477 172.658 cv
56.8477 173.546 56.9438 174.21 57.144 174.642 cv
57.3359 175.082 57.6396 175.298 58.04 175.298 cv
ef
72.1309 4.44971 mo
72.1309 8.44971 li
72.1309 165.729 mo
72.1309 161.729 li
@
68.52 171.13 mo
68.0801 171.13 li
68.0801 170.09 li
68.3521 169.945 68.6318 169.834 68.9199 169.754 cv
69.1997 169.674 69.48 169.634 69.752 169.634 cv
70.3599 169.634 70.8398 169.786 71.1919 170.074 cv
71.5439 170.37 71.7197 170.77 71.7197 171.273 cv
71.7197 171.85 71.3198 172.53 70.52 173.322 cv
70.4561 173.386 70.416 173.426 70.3838 173.458 cv
68.9121 174.93 li
71.3438 174.93 li
71.3438 174.21 li
71.7998 174.21 li
71.7998 175.57 li
68.04 175.57 li
68.04 175.146 li
69.8076 173.378 li
70.1919 172.994 70.4717 172.634 70.6396 172.306 cv
70.8076 171.978 70.896 171.634 70.896 171.273 cv
70.896 170.882 70.792 170.578 70.584 170.354 cv
70.376 170.13 70.0957 170.018 69.7437 170.018 cv
69.3677 170.018 69.0801 170.114 68.8799 170.298 cv
68.6719 170.481 68.5518 170.762 68.52 171.13 cv
68.52 171.13 li
cp
ef
75.3198 175.674 mo
74.6797 175.674 74.1836 175.41 73.832 174.882 cv
73.48 174.354 73.3037 173.618 73.3037 172.658 cv
73.3037 171.706 73.48 170.962 73.832 170.434 cv
74.1836 169.906 74.6797 169.634 75.3198 169.634 cv
75.9517 169.634 76.4478 169.906 76.7998 170.434 cv
77.1519 170.962 77.3359 171.706 77.3359 172.658 cv
77.3359 173.618 77.1519 174.354 76.7998 174.882 cv
76.4478 175.41 75.9517 175.674 75.3198 175.674 cv
75.3198 175.674 li
cp
75.3198 175.298 mo
75.7197 175.298 76.0156 175.082 76.2158 174.642 cv
76.4077 174.21 76.5117 173.546 76.5117 172.658 cv
76.5117 171.777 76.4077 171.114 76.2158 170.674 cv
76.0156 170.242 75.7197 170.018 75.3198 170.018 cv
74.9199 170.018 74.6157 170.242 74.4238 170.674 cv
74.2236 171.114 74.1279 171.777 74.1279 172.658 cv
74.1279 173.546 74.2236 174.21 74.4238 174.642 cv
74.6157 175.082 74.9199 175.298 75.3198 175.298 cv
ef
89.5679 4.44971 mo
89.5679 8.44971 li
89.5679 165.729 mo
89.5679 161.729 li
@
85.792 169.985 mo
86.0957 169.874 86.3838 169.786 86.6641 169.722 cv
86.9438 169.666 87.208 169.634 87.4561 169.634 cv
88.0239 169.634 88.4717 169.762 88.792 170.002 cv
89.1118 170.25 89.272 170.594 89.272 171.025 cv
89.272 171.378 89.1597 171.674 88.936 171.906 cv
88.7119 172.146 88.3999 172.306 88 172.386 cv
88.48 172.458 88.8477 172.634 89.1118 172.914 cv
89.376 173.193 89.5117 173.554 89.5117 173.994 cv
89.5117 174.538 89.3276 174.954 88.96 175.242 cv
88.5918 175.53 88.0718 175.674 87.3838 175.674 cv
87.0801 175.674 86.7759 175.642 86.4878 175.578 cv
86.1997 175.521 85.9121 175.426 85.624 175.29 cv
85.624 174.154 li
86.064 174.154 li
86.0879 174.538 86.2158 174.817 86.4399 175.01 cv
86.6641 175.202 86.9839 175.298 87.3999 175.298 cv
87.7998 175.298 88.1118 175.186 88.3438 174.954 cv
88.5679 174.722 88.688 174.401 88.688 174.002 cv
88.688 173.546 88.5679 173.202 88.3276 172.962 cv
88.0879 172.729 87.7437 172.609 87.2881 172.609 cv
86.9199 172.609 li
86.9199 172.21 li
87.1118 172.21 li
87.5679 172.21 87.9121 172.122 88.1357 171.93 cv
88.3599 171.738 88.48 171.458 88.48 171.074 cv
88.48 170.738 88.3838 170.474 88.1997 170.29 cv
88.0078 170.114 87.7437 170.018 87.3916 170.018 cv
87.04 170.018 86.7598 170.105 86.5679 170.273 cv
86.376 170.441 86.2637 170.689 86.2319 171.01 cv
85.792 171.01 li
85.792 169.985 li
85.792 169.985 li
cp
ef
92.5996 175.674 mo
91.96 175.674 91.4639 175.41 91.1118 174.882 cv
90.7598 174.354 90.584 173.618 90.584 172.658 cv
90.584 171.706 90.7598 170.962 91.1118 170.434 cv
91.4639 169.906 91.96 169.634 92.5996 169.634 cv
93.2319 169.634 93.728 169.906 94.0801 170.434 cv
94.4316 170.962 94.6157 171.706 94.6157 172.658 cv
94.6157 173.618 94.4316 174.354 94.0801 174.882 cv
93.728 175.41 93.2319 175.674 92.5996 175.674 cv
92.5996 175.674 li
cp
92.5996 175.298 mo
93 175.298 93.2959 175.082 93.4961 174.642 cv
93.688 174.21 93.792 173.546 93.792 172.658 cv
93.792 171.777 93.688 171.114 93.4961 170.674 cv
93.2959 170.242 93 170.018 92.5996 170.018 cv
92.1997 170.018 91.896 170.242 91.7041 170.674 cv
91.5039 171.114 91.4077 171.777 91.4077 172.658 cv
91.4077 173.546 91.5039 174.21 91.7041 174.642 cv
91.896 175.082 92.1997 175.298 92.5996 175.298 cv
ef
107.006 4.44971 mo
107.006 8.44971 li
107.006 165.729 mo
107.006 161.729 li
@
106.808 175.57 mo
104.152 175.57 li
104.152 175.154 li
105.088 175.154 li
105.088 174.01 li
102.544 174.01 li
102.544 173.586 li
105.096 169.634 li
105.872 169.634 li
105.872 173.594 li
106.984 173.594 li
106.984 174.01 li
105.872 174.01 li
105.872 175.154 li
106.808 175.154 li
106.808 175.57 li
106.808 175.57 li
cp
105.088 173.594 mo
105.088 170.49 li
103.096 173.594 li
105.088 173.594 li
ef
109.88 175.674 mo
109.24 175.674 108.744 175.41 108.392 174.882 cv
108.04 174.354 107.864 173.618 107.864 172.658 cv
107.864 171.706 108.04 170.962 108.392 170.434 cv
108.744 169.906 109.24 169.634 109.88 169.634 cv
110.512 169.634 111.008 169.906 111.36 170.434 cv
111.712 170.962 111.896 171.706 111.896 172.658 cv
111.896 173.618 111.712 174.354 111.36 174.882 cv
111.008 175.41 110.512 175.674 109.88 175.674 cv
109.88 175.674 li
cp
109.88 175.298 mo
110.28 175.298 110.576 175.082 110.776 174.642 cv
110.968 174.21 111.072 173.546 111.072 172.658 cv
111.072 171.777 110.968 171.114 110.776 170.674 cv
110.576 170.242 110.28 170.018 109.88 170.018 cv
109.48 170.018 109.176 170.242 108.984 170.674 cv
108.784 171.114 108.688 171.777 108.688 172.658 cv
108.688 173.546 108.784 174.21 108.984 174.642 cv
109.176 175.082 109.48 175.298 109.88 175.298 cv
ef
124.444 4.44971 mo
124.444 8.44971 li
124.444 165.729 mo
124.444 161.729 li
@
124.08 169.738 mo
124.08 170.378 li
121.408 170.378 li
121.408 172.05 li
121.536 171.954 121.696 171.89 121.88 171.842 cv
122.056 171.794 122.264 171.77 122.488 171.77 cv
123.112 171.77 123.608 171.945 123.976 172.298 cv
124.344 172.649 124.528 173.122 124.528 173.722 cv
124.528 174.346 124.344 174.826 123.976 175.162 cv
123.608 175.506 123.088 175.674 122.424 175.674 cv
122.152 175.674 121.88 175.642 121.6 175.578 cv
121.312 175.521 121.024 175.426 120.736 175.29 cv
120.736 174.154 li
121.176 174.154 li
121.2 174.53 121.32 174.817 121.528 175.01 cv
121.736 175.202 122.04 175.298 122.424 175.298 cv
122.832 175.298 123.144 175.162 123.368 174.89 cv
123.592 174.618 123.704 174.233 123.704 173.722 cv
123.704 173.218 123.592 172.834 123.376 172.562 cv
123.152 172.29 122.84 172.154 122.424 172.154 cv
122.184 172.154 121.976 172.202 121.8 172.282 cv
121.624 172.361 121.464 172.49 121.328 172.666 cv
120.992 172.666 li
120.992 169.738 li
124.08 169.738 li
124.08 169.738 li
cp
ef
127.64 175.674 mo
127 175.674 126.504 175.41 126.152 174.882 cv
125.8 174.354 125.624 173.618 125.624 172.658 cv
125.624 171.706 125.8 170.962 126.152 170.434 cv
126.504 169.906 127 169.634 127.64 169.634 cv
128.272 169.634 128.768 169.906 129.12 170.434 cv
129.472 170.962 129.656 171.706 129.656 172.658 cv
129.656 173.618 129.472 174.354 129.12 174.882 cv
128.768 175.41 128.272 175.674 127.64 175.674 cv
127.64 175.674 li
cp
127.64 175.298 mo
128.04 175.298 128.336 175.082 128.536 174.642 cv
128.728 174.21 128.832 173.546 128.832 172.658 cv
128.832 171.777 128.728 171.114 128.536 170.674 cv
128.336 170.242 128.04 170.018 127.64 170.018 cv
127.24 170.018 126.936 170.242 126.744 170.674 cv
126.544 171.114 126.448 171.777 126.448 172.658 cv
126.448 173.546 126.544 174.21 126.744 174.642 cv
126.936 175.082 127.24 175.298 127.64 175.298 cv
ef
141.881 4.44971 mo
141.881 8.44971 li
141.881 165.729 mo
141.881 161.729 li
@
138.68 172.361 mo
138.856 172.17 139.056 172.018 139.28 171.922 cv
139.504 171.826 139.752 171.777 140.04 171.777 cv
140.616 171.777 141.08 171.954 141.416 172.306 cv
141.752 172.658 141.92 173.13 141.92 173.729 cv
141.92 174.322 141.736 174.794 141.376 175.146 cv
141.008 175.498 140.528 175.674 139.92 175.674 cv
139.264 175.674 138.752 175.434 138.4 174.945 cv
138.048 174.458 137.872 173.754 137.872 172.842 cv
137.872 171.826 138.08 171.034 138.496 170.474 cv
138.912 169.914 139.504 169.634 140.272 169.634 cv
140.48 169.634 140.696 169.658 140.92 169.689 cv
141.144 169.729 141.376 169.786 141.616 169.866 cv
141.616 170.826 li
141.176 170.826 li
141.144 170.57 141.04 170.37 140.872 170.226 cv
140.704 170.09 140.48 170.018 140.192 170.018 cv
139.68 170.018 139.304 170.21 139.056 170.594 cv
138.808 170.978 138.68 171.57 138.68 172.361 cv
138.68 172.361 li
cp
139.952 175.298 mo
140.32 175.298 140.6 175.17 140.8 174.897 cv
140.992 174.626 141.096 174.242 141.096 173.729 cv
141.096 173.226 140.992 172.842 140.8 172.57 cv
140.6 172.298 140.32 172.162 139.952 172.162 cv
139.576 172.162 139.288 172.298 139.096 172.554 cv
138.904 172.817 138.808 173.193 138.808 173.682 cv
138.808 174.202 138.904 174.602 139.104 174.882 cv
139.296 175.162 139.584 175.298 139.952 175.298 cv
ef
144.92 175.674 mo
144.28 175.674 143.784 175.41 143.432 174.882 cv
143.08 174.354 142.904 173.618 142.904 172.658 cv
142.904 171.706 143.08 170.962 143.432 170.434 cv
143.784 169.906 144.28 169.634 144.92 169.634 cv
145.552 169.634 146.048 169.906 146.4 170.434 cv
146.752 170.962 146.936 171.706 146.936 172.658 cv
146.936 173.618 146.752 174.354 146.4 174.882 cv
146.048 175.41 145.552 175.674 144.92 175.674 cv
144.92 175.674 li
cp
144.92 175.298 mo
145.32 175.298 145.616 175.082 145.816 174.642 cv
146.008 174.21 146.112 173.546 146.112 172.658 cv
146.112 171.777 146.008 171.114 145.816 170.674 cv
145.616 170.242 145.32 170.018 144.92 170.018 cv
144.52 170.018 144.216 170.242 144.024 170.674 cv
143.824 171.114 143.728 171.777 143.728 172.658 cv
143.728 173.546 143.824 174.21 144.024 174.642 cv
144.216 175.082 144.52 175.298 144.92 175.298 cv
ef
159.318 4.44971 mo
159.318 8.44971 li
159.318 165.729 mo
159.318 161.729 li
@
159.368 170.138 mo
157.088 175.57 li
156.504 175.57 li
158.68 170.378 li
155.984 170.378 li
155.984 171.098 li
155.528 171.098 li
155.528 169.738 li
159.368 169.738 li
159.368 170.138 li
159.368 170.138 li
cp
ef
162.44 175.674 mo
161.8 175.674 161.304 175.41 160.952 174.882 cv
160.6 174.354 160.424 173.618 160.424 172.658 cv
160.424 171.706 160.6 170.962 160.952 170.434 cv
161.304 169.906 161.8 169.634 162.44 169.634 cv
163.072 169.634 163.568 169.906 163.92 170.434 cv
164.272 170.962 164.456 171.706 164.456 172.658 cv
164.456 173.618 164.272 174.354 163.92 174.882 cv
163.568 175.41 163.072 175.674 162.44 175.674 cv
162.44 175.674 li
cp
162.44 175.298 mo
162.84 175.298 163.136 175.082 163.336 174.642 cv
163.528 174.21 163.632 173.546 163.632 172.658 cv
163.632 171.777 163.528 171.114 163.336 170.674 cv
163.136 170.242 162.84 170.018 162.44 170.018 cv
162.04 170.018 161.736 170.242 161.544 170.674 cv
161.344 171.114 161.248 171.777 161.248 172.658 cv
161.248 173.546 161.344 174.21 161.544 174.642 cv
161.736 175.082 162.04 175.298 162.44 175.298 cv
ef
176.756 4.44971 mo
176.756 8.44971 li
176.756 165.729 mo
176.756 161.729 li
@
175.704 171.146 mo
175.704 170.794 175.608 170.514 175.432 170.313 cv
175.248 170.122 175 170.018 174.68 170.018 cv
174.36 170.018 174.104 170.122 173.928 170.313 cv
173.744 170.514 173.656 170.794 173.656 171.146 cv
173.656 171.506 173.744 171.786 173.928 171.978 cv
174.104 172.178 174.36 172.273 174.68 172.273 cv
175 172.273 175.248 172.178 175.432 171.978 cv
175.608 171.786 175.704 171.506 175.704 171.146 cv
175.704 171.146 li
cp
175.28 172.466 mo
175.72 172.53 176.064 172.689 176.312 172.954 cv
176.56 173.226 176.688 173.562 176.688 173.978 cv
176.688 174.521 176.512 174.945 176.168 175.233 cv
175.816 175.53 175.32 175.674 174.68 175.674 cv
174.032 175.674 173.536 175.53 173.192 175.233 cv
172.84 174.945 172.672 174.521 172.672 173.978 cv
172.672 173.562 172.792 173.226 173.04 172.954 cv
173.288 172.689 173.632 172.53 174.08 172.466 cv
173.68 172.401 173.384 172.25 173.176 172.018 cv
172.968 171.794 172.864 171.498 172.864 171.146 cv
172.864 170.682 173.024 170.313 173.344 170.042 cv
173.664 169.77 174.112 169.634 174.68 169.634 cv
175.24 169.634 175.688 169.77 176.008 170.042 cv
176.328 170.313 176.496 170.682 176.496 171.146 cv
176.496 171.498 176.384 171.794 176.176 172.018 cv
175.968 172.25 175.664 172.401 175.28 172.466 cv
175.864 173.978 mo
175.864 173.562 175.76 173.242 175.552 173.01 cv
175.344 172.777 175.048 172.658 174.68 172.658 cv
174.304 172.658 174.016 172.777 173.808 173.01 cv
173.6 173.242 173.496 173.562 173.496 173.978 cv
173.496 174.394 173.6 174.722 173.808 174.954 cv
174.016 175.186 174.304 175.298 174.68 175.298 cv
175.048 175.298 175.344 175.186 175.552 174.954 cv
175.76 174.722 175.864 174.394 175.864 173.978 cv
ef
179.72 175.674 mo
179.08 175.674 178.584 175.41 178.232 174.882 cv
177.88 174.354 177.704 173.618 177.704 172.658 cv
177.704 171.706 177.88 170.962 178.232 170.434 cv
178.584 169.906 179.08 169.634 179.72 169.634 cv
180.352 169.634 180.848 169.906 181.2 170.434 cv
181.552 170.962 181.736 171.706 181.736 172.658 cv
181.736 173.618 181.552 174.354 181.2 174.882 cv
180.848 175.41 180.352 175.674 179.72 175.674 cv
179.72 175.674 li
cp
179.72 175.298 mo
180.12 175.298 180.416 175.082 180.616 174.642 cv
180.808 174.21 180.912 173.546 180.912 172.658 cv
180.912 171.777 180.808 171.114 180.616 170.674 cv
180.416 170.242 180.12 170.018 179.72 170.018 cv
179.32 170.018 179.016 170.242 178.824 170.674 cv
178.624 171.114 178.528 171.777 178.528 172.658 cv
178.528 173.546 178.624 174.21 178.824 174.642 cv
179.016 175.082 179.32 175.298 179.72 175.298 cv
ef
107.678 181.888 mo
107.831 181.546 108.029 181.294 108.272 181.114 cv
108.515 180.942 108.794 180.853 109.118 180.853 cv
109.604 180.853 109.973 181.006 110.216 181.312 cv
110.45 181.618 110.576 182.067 110.576 182.68 cv
110.576 185.182 li
111.305 185.182 li
111.305 185.649 li
109.064 185.649 li
109.064 185.182 li
109.766 185.182 li
109.766 182.77 li
109.766 182.302 109.694 181.96 109.55 181.753 cv
109.406 181.555 109.181 181.447 108.857 181.447 cv
108.497 181.447 108.218 181.591 108.029 181.86 cv
107.84 182.131 107.75 182.526 107.75 183.049 cv
107.75 185.182 li
108.452 185.182 li
108.452 185.649 li
106.238 185.649 li
106.238 185.182 li
106.94 185.182 li
106.94 182.743 li
106.94 182.274 106.868 181.941 106.724 181.744 cv
106.58 181.546 106.355 181.447 106.031 181.447 cv
105.671 181.447 105.392 181.591 105.203 181.86 cv
105.014 182.131 104.924 182.526 104.924 183.049 cv
104.924 185.182 li
105.626 185.182 li
105.626 185.649 li
103.385 185.649 li
103.385 185.182 li
104.114 185.182 li
104.114 181.438 li
103.34 181.438 li
103.34 180.979 li
104.924 180.979 li
104.924 181.807 li
105.068 181.501 105.257 181.258 105.491 181.096 cv
105.725 180.934 105.986 180.853 106.283 180.853 cv
106.643 180.853 106.94 180.942 107.183 181.123 cv
107.426 181.303 107.588 181.563 107.678 181.888 cv
107.678 181.888 li
cp
ef
176.756 141.538 mo
172.756 141.538 li
37.2559 141.538 mo
41.2559 141.538 li
@
.151855 142.29 mo
.104004 142.29 .0717773 142.273 .0400391 142.242 cv
.0078125 142.21 0 142.17 0 142.13 cv
0 142.098 .0078125 142.058 .0400391 142.025 cv
.0717773 141.994 .104004 141.97 .151855 141.97 cv
4.74365 141.97 li
4.78369 141.97 4.81592 141.994 4.84766 142.025 cv
4.87207 142.058 4.8877 142.098 4.8877 142.13 cv
4.8877 142.17 4.87207 142.21 4.84766 142.242 cv
4.81592 142.273 4.78369 142.29 4.74365 142.29 cv
.151855 142.29 li
.151855 142.29 li
cp
ef
6.31982 144.13 mo
6.31982 143.85 li
6.98389 143.85 7.31982 143.77 7.31982 143.594 cv
7.31982 139.394 li
7.04004 139.53 6.68799 139.594 6.27197 139.594 cv
6.27197 139.313 li
6.91992 139.313 7.41602 139.146 7.75195 138.802 cv
7.86377 138.802 li
7.87988 138.802 7.90381 138.81 7.91992 138.826 cv
7.93604 138.842 7.94385 138.857 7.94385 138.874 cv
7.94385 143.594 li
7.94385 143.77 8.27197 143.85 8.94385 143.85 cv
8.94385 144.13 li
6.31982 144.13 li
6.31982 144.13 li
cp
ef
12.0317 143.897 mo
12.0317 143.857 12.04 143.817 12.0718 143.786 cv
13.7358 142.13 li
12.0718 140.466 li
12.04 140.441 12.0317 140.41 12.0317 140.361 cv
12.0317 140.322 12.0479 140.282 12.0801 140.25 cv
12.1118 140.218 12.144 140.202 12.1919 140.202 cv
12.2236 140.202 12.2637 140.218 12.312 140.25 cv
13.9678 141.906 li
15.6157 140.25 li
15.6641 140.218 15.7041 140.202 15.7358 140.202 cv
15.7759 140.202 15.8159 140.218 15.8477 140.25 cv
15.8799 140.282 15.896 140.322 15.896 140.361 cv
15.896 140.41 15.8799 140.441 15.856 140.466 cv
14.1919 142.13 li
15.856 143.786 li
15.8799 143.817 15.896 143.857 15.896 143.897 cv
15.896 143.945 15.8799 143.978 15.8477 144.01 cv
15.8159 144.042 15.7759 144.058 15.7358 144.058 cv
15.6958 144.058 15.6558 144.042 15.6157 144.002 cv
13.9678 142.354 li
12.312 144.002 li
12.272 144.042 12.2319 144.058 12.1919 144.058 cv
12.144 144.058 12.1118 144.042 12.0801 144.01 cv
12.0479 143.978 12.0317 143.945 12.0317 143.897 cv
12.0317 143.897 li
cp
ef
16.8799 144.13 mo
16.8799 143.85 li
17.5439 143.85 17.8799 143.77 17.8799 143.594 cv
17.8799 139.394 li
17.5996 139.53 17.248 139.594 16.832 139.594 cv
16.832 139.313 li
17.48 139.313 17.9761 139.146 18.312 138.802 cv
18.4238 138.802 li
18.4399 138.802 18.4639 138.81 18.48 138.826 cv
18.4961 138.842 18.5039 138.857 18.5039 138.874 cv
18.5039 143.594 li
18.5039 143.77 18.832 143.85 19.5039 143.85 cv
19.5039 144.13 li
16.8799 144.13 li
16.8799 144.13 li
cp
ef
22.2158 144.098 mo
22.5117 144.098 22.7358 143.945 22.8799 143.642 cv
23.0239 143.338 23.1118 143.002 23.144 142.634 cv
23.1758 142.266 23.1997 141.866 23.1997 141.45 cv
23.1997 141.05 23.1758 140.682 23.144 140.346 cv
23.1118 140.01 23.0239 139.698 22.8799 139.426 cv
22.7358 139.154 22.5117 139.01 22.2158 139.01 cv
21.9116 139.01 21.688 139.154 21.5439 139.426 cv
21.3999 139.698 21.3037 140.01 21.272 140.346 cv
21.2397 140.682 21.2236 141.05 21.2236 141.45 cv
21.2236 141.754 21.2236 142.034 21.2397 142.29 cv
21.2559 142.554 21.2959 142.826 21.3599 143.105 cv
21.4238 143.386 21.52 143.618 21.6641 143.81 cv
21.7998 144.002 21.9839 144.098 22.2158 144.098 cv
22.2158 144.098 li
cp
22.2158 144.298 mo
21.5601 144.298 21.1118 144.034 20.8799 143.498 cv
20.6396 142.962 20.5278 142.322 20.5278 141.578 cv
20.5278 141.114 20.5679 140.682 20.6558 140.273 cv
20.7358 139.866 20.9038 139.521 21.1597 139.233 cv
21.4077 138.945 21.7598 138.802 22.2158 138.802 cv
22.5679 138.802 22.856 138.89 23.0801 139.058 cv
23.3037 139.233 23.4717 139.45 23.5918 139.722 cv
23.7041 139.994 23.7837 140.29 23.832 140.602 cv
23.8721 140.914 23.896 141.242 23.896 141.578 cv
23.896 142.042 23.8477 142.466 23.7681 142.866 cv
23.6797 143.266 23.5117 143.609 23.2637 143.882 cv
23.0156 144.154 22.6641 144.298 22.2158 144.298 cv
ef
24.627 139.481 mo
24.5933 139.481 24.5713 139.471 24.5488 139.448 cv
24.5264 139.426 24.5205 139.397 24.5205 139.37 cv
24.5205 139.348 24.5264 139.319 24.5488 139.297 cv
24.5713 139.274 24.5933 139.258 24.627 139.258 cv
27.8413 139.258 li
27.8696 139.258 27.8921 139.274 27.9141 139.297 cv
27.9312 139.319 27.9424 139.348 27.9424 139.37 cv
27.9424 139.397 27.9312 139.426 27.9141 139.448 cv
27.8921 139.471 27.8696 139.481 27.8413 139.481 cv
24.627 139.481 li
24.627 139.481 li
cp
ef
28.8633 140.132 mo
28.8965 140.243 28.9585 140.344 29.0366 140.434 cv
29.1152 140.523 29.2104 140.591 29.3223 140.641 cv
29.4287 140.691 29.5405 140.714 29.6582 140.714 cv
29.9272 140.714 30.1118 140.613 30.2129 140.4 cv
30.3135 140.193 30.3696 139.941 30.3696 139.639 cv
30.3696 139.51 30.3638 139.403 30.3638 139.313 cv
30.3584 139.225 30.3472 139.141 30.3247 139.057 cv
30.291 138.928 30.2295 138.815 30.1396 138.715 cv
30.0503 138.614 29.9492 138.563 29.8262 138.563 cv
29.6973 138.563 29.5908 138.586 29.5015 138.619 cv
29.4116 138.658 29.3335 138.703 29.2773 138.754 cv
29.2217 138.81 29.1709 138.86 29.1265 138.916 cv
29.0815 138.973 29.0591 139.006 29.0479 139.006 cv
28.9863 139.006 li
28.9751 139.006 28.9585 139 28.9473 138.989 cv
28.936 138.978 28.9302 138.967 28.9302 138.955 cv
28.9302 137.085 li
28.9302 137.074 28.936 137.068 28.9473 137.057 cv
28.9585 137.046 28.9692 137.04 28.9863 137.04 cv
29.0029 137.04 li
29.2495 137.163 29.5181 137.22 29.8037 137.22 cv
30.0781 137.22 30.3472 137.163 30.6045 137.04 cv
30.6216 137.04 li
30.6328 137.04 30.644 137.046 30.6553 137.057 cv
30.666 137.068 30.6719 137.074 30.6719 137.085 cv
30.6719 137.136 li
30.6719 137.158 30.666 137.163 30.6606 137.163 cv
30.5317 137.331 30.3696 137.466 30.1792 137.561 cv
29.9888 137.656 29.7871 137.701 29.5854 137.701 cv
29.4341 137.701 29.2832 137.685 29.1265 137.64 cv
29.1265 138.698 li
29.2495 138.597 29.356 138.53 29.4565 138.485 cv
29.5518 138.44 29.6748 138.418 29.832 138.418 cv
30.0337 138.418 30.2183 138.479 30.3809 138.597 cv
30.543 138.721 30.666 138.871 30.7559 139.062 cv
30.8452 139.252 30.8901 139.448 30.8901 139.645 cv
30.8901 139.868 30.8345 140.075 30.7222 140.266 cv
30.6104 140.456 30.4648 140.607 30.2744 140.72 cv
30.084 140.831 29.8823 140.888 29.6582 140.888 cv
29.4736 140.888 29.3057 140.837 29.1484 140.747 cv
28.9917 140.658 28.874 140.529 28.7847 140.366 cv
28.6948 140.21 28.6558 140.036 28.6558 139.857 cv
28.6558 139.773 28.6782 139.706 28.7344 139.649 cv
28.79 139.6 28.8574 139.571 28.9414 139.571 cv
29.02 139.571 29.0928 139.6 29.1484 139.655 cv
29.2046 139.711 29.2324 139.778 29.2324 139.857 cv
29.2324 139.936 29.2046 140.003 29.1484 140.059 cv
29.0928 140.114 29.02 140.143 28.9414 140.143 cv
28.9302 140.143 28.9136 140.143 28.8965 140.143 cv
28.8799 140.143 28.8687 140.137 28.8633 140.132 cv
28.8633 140.132 li
cp
ef
176.756 101.218 mo
172.756 101.218 li
37.2559 101.218 mo
41.2559 101.218 li
@
.151855 101.97 mo
.104004 101.97 .0717773 101.954 .0400391 101.922 cv
.0078125 101.89 0 101.85 0 101.81 cv
0 101.777 .0078125 101.738 .0400391 101.706 cv
.0717773 101.674 .104004 101.649 .151855 101.649 cv
4.74365 101.649 li
4.78369 101.649 4.81592 101.674 4.84766 101.706 cv
4.87207 101.738 4.8877 101.777 4.8877 101.81 cv
4.8877 101.85 4.87207 101.89 4.84766 101.922 cv
4.81592 101.954 4.78369 101.97 4.74365 101.97 cv
.151855 101.97 li
.151855 101.97 li
cp
ef
6.27197 102.897 mo
6.31982 103.058 6.40771 103.202 6.52002 103.33 cv
6.63184 103.458 6.76807 103.554 6.92773 103.626 cv
7.08008 103.698 7.23975 103.729 7.40771 103.729 cv
7.79199 103.729 8.05566 103.586 8.19971 103.282 cv
8.34375 102.985 8.42383 102.626 8.42383 102.193 cv
8.42383 102.01 8.41602 101.857 8.41602 101.729 cv
8.40771 101.602 8.3916 101.481 8.35986 101.361 cv
8.31201 101.178 8.22363 101.018 8.0957 100.874 cv
7.96777 100.729 7.82373 100.658 7.64795 100.658 cv
7.46387 100.658 7.31201 100.689 7.18408 100.738 cv
7.05566 100.794 6.94385 100.857 6.86377 100.93 cv
6.78369 101.01 6.71191 101.082 6.64795 101.162 cv
6.58398 101.242 6.55176 101.29 6.53564 101.29 cv
6.44775 101.29 li
6.43164 101.29 6.40771 101.282 6.39209 101.266 cv
6.37598 101.25 6.36768 101.233 6.36768 101.218 cv
6.36768 98.5459 li
6.36768 98.5303 6.37598 98.5215 6.39209 98.5059 cv
6.40771 98.4902 6.42383 98.4814 6.44775 98.4814 cv
6.47168 98.4814 li
6.82373 98.6582 7.20801 98.7383 7.61572 98.7383 cv
8.00781 98.7383 8.3916 98.6582 8.75977 98.4814 cv
8.78369 98.4814 li
8.7998 98.4814 8.81592 98.4902 8.83203 98.5059 cv
8.84766 98.5215 8.85596 98.5303 8.85596 98.5459 cv
8.85596 98.6182 li
8.85596 98.6494 8.84766 98.6582 8.83984 98.6582 cv
8.65576 98.8975 8.42383 99.0898 8.15186 99.2256 cv
7.87988 99.3613 7.5918 99.4258 7.30371 99.4258 cv
7.08789 99.4258 6.87207 99.4014 6.64795 99.3379 cv
6.64795 100.85 li
6.82373 100.706 6.97607 100.609 7.11963 100.546 cv
7.25586 100.481 7.43164 100.45 7.65576 100.45 cv
7.94385 100.45 8.20801 100.538 8.43994 100.706 cv
8.67188 100.882 8.84766 101.098 8.97607 101.37 cv
9.104 101.642 9.16797 101.922 9.16797 102.202 cv
9.16797 102.521 9.08789 102.817 8.92773 103.09 cv
8.76807 103.361 8.56006 103.578 8.28809 103.738 cv
8.01563 103.897 7.72803 103.978 7.40771 103.978 cv
7.14404 103.978 6.90381 103.906 6.67969 103.777 cv
6.45605 103.649 6.28809 103.466 6.15967 103.233 cv
6.03174 103.01 5.97607 102.762 5.97607 102.506 cv
5.97607 102.386 6.00781 102.29 6.08789 102.21 cv
6.16797 102.138 6.26367 102.098 6.38379 102.098 cv
6.49609 102.098 6.59961 102.138 6.67969 102.218 cv
6.75977 102.298 6.7998 102.394 6.7998 102.506 cv
6.7998 102.618 6.75977 102.714 6.67969 102.794 cv
6.59961 102.874 6.49609 102.914 6.38379 102.914 cv
6.36768 102.914 6.34375 102.914 6.31982 102.914 cv
6.2959 102.914 6.27979 102.906 6.27197 102.897 cv
6.27197 102.897 li
cp
ef
12.0317 103.578 mo
12.0317 103.538 12.04 103.498 12.0718 103.466 cv
13.7358 101.81 li
12.0718 100.146 li
12.04 100.122 12.0317 100.09 12.0317 100.042 cv
12.0317 100.002 12.0479 99.9619 12.0801 99.9297 cv
12.1118 99.8975 12.144 99.8818 12.1919 99.8818 cv
12.2236 99.8818 12.2637 99.8975 12.312 99.9297 cv
13.9678 101.586 li
15.6157 99.9297 li
15.6641 99.8975 15.7041 99.8818 15.7358 99.8818 cv
15.7759 99.8818 15.8159 99.8975 15.8477 99.9297 cv
15.8799 99.9619 15.896 100.002 15.896 100.042 cv
15.896 100.09 15.8799 100.122 15.856 100.146 cv
14.1919 101.81 li
15.856 103.466 li
15.8799 103.498 15.896 103.538 15.896 103.578 cv
15.896 103.626 15.8799 103.658 15.8477 103.689 cv
15.8159 103.722 15.7759 103.738 15.7358 103.738 cv
15.6958 103.738 15.6558 103.722 15.6157 103.682 cv
13.9678 102.034 li
12.312 103.682 li
12.272 103.722 12.2319 103.738 12.1919 103.738 cv
12.144 103.738 12.1118 103.722 12.0801 103.689 cv
12.0479 103.658 12.0317 103.626 12.0317 103.578 cv
12.0317 103.578 li
cp
ef
16.8799 103.81 mo
16.8799 103.53 li
17.5439 103.53 17.8799 103.45 17.8799 103.273 cv
17.8799 99.0742 li
17.5996 99.21 17.248 99.2734 16.832 99.2734 cv
16.832 98.9941 li
17.48 98.9941 17.9761 98.8262 18.312 98.4814 cv
18.4238 98.4814 li
18.4399 98.4814 18.4639 98.4902 18.48 98.5059 cv
18.4961 98.5215 18.5039 98.5381 18.5039 98.5537 cv
18.5039 103.273 li
18.5039 103.45 18.832 103.53 19.5039 103.53 cv
19.5039 103.81 li
16.8799 103.81 li
16.8799 103.81 li
cp
ef
22.2158 103.777 mo
22.5117 103.777 22.7358 103.626 22.8799 103.322 cv
23.0239 103.018 23.1118 102.682 23.144 102.313 cv
23.1758 101.945 23.1997 101.546 23.1997 101.13 cv
23.1997 100.729 23.1758 100.361 23.144 100.025 cv
23.1118 99.6895 23.0239 99.3779 22.8799 99.1055 cv
22.7358 98.834 22.5117 98.6895 22.2158 98.6895 cv
21.9116 98.6895 21.688 98.834 21.5439 99.1055 cv
21.3999 99.3779 21.3037 99.6895 21.272 100.025 cv
21.2397 100.361 21.2236 100.729 21.2236 101.13 cv
21.2236 101.434 21.2236 101.714 21.2397 101.97 cv
21.2559 102.233 21.2959 102.506 21.3599 102.786 cv
21.4238 103.065 21.52 103.298 21.6641 103.49 cv
21.7998 103.682 21.9839 103.777 22.2158 103.777 cv
22.2158 103.777 li
cp
22.2158 103.978 mo
21.5601 103.978 21.1118 103.714 20.8799 103.178 cv
20.6396 102.642 20.5278 102.002 20.5278 101.258 cv
20.5278 100.794 20.5679 100.361 20.6558 99.9541 cv
20.7358 99.5459 20.9038 99.2021 21.1597 98.9141 cv
21.4077 98.626 21.7598 98.4814 22.2158 98.4814 cv
22.5679 98.4814 22.856 98.5703 23.0801 98.7383 cv
23.3037 98.9141 23.4717 99.1299 23.5918 99.4014 cv
23.7041 99.6738 23.7837 99.9697 23.832 100.282 cv
23.8721 100.594 23.896 100.922 23.896 101.258 cv
23.896 101.722 23.8477 102.146 23.7681 102.546 cv
23.6797 102.945 23.5117 103.29 23.2637 103.562 cv
23.0156 103.834 22.6641 103.978 22.2158 103.978 cv
ef
24.627 99.1621 mo
24.5933 99.1621 24.5713 99.1504 24.5488 99.1279 cv
24.5264 99.1055 24.5205 99.0781 24.5205 99.0498 cv
24.5205 99.0273 24.5264 98.999 24.5488 98.9766 cv
24.5713 98.9551 24.5933 98.9375 24.627 98.9375 cv
27.8413 98.9375 li
27.8696 98.9375 27.8921 98.9551 27.9141 98.9766 cv
27.9312 98.999 27.9424 99.0273 27.9424 99.0498 cv
27.9424 99.0781 27.9312 99.1055 27.9141 99.1279 cv
27.8921 99.1504 27.8696 99.1621 27.8413 99.1621 cv
24.627 99.1621 li
24.627 99.1621 li
cp
ef
29.7759 100.394 mo
29.9214 100.394 30.0337 100.366 30.123 100.299 cv
30.207 100.231 30.2686 100.147 30.3135 100.035 cv
30.3525 99.9287 30.3809 99.8223 30.3921 99.7109 cv
30.4028 99.5986 30.4087 99.4639 30.4087 99.3018 cv
30.4087 99.0889 30.3975 98.9102 30.375 98.7588 cv
30.3525 98.6133 30.3022 98.4785 30.2129 98.3662 cv
30.123 98.2549 29.9829 98.1934 29.8037 98.1934 cv
29.647 98.1934 29.5239 98.249 29.4287 98.3496 cv
29.3276 98.4502 29.2607 98.5791 29.2158 98.7363 cv
29.1709 98.8926 29.1484 99.0391 29.1484 99.1846 cv
29.1484 99.2344 29.1484 99.2734 29.1543 99.2959 cv
29.1543 99.3018 29.1543 99.3076 29.1543 99.3076 cv
29.1543 99.3135 29.1484 99.3184 29.1484 99.3242 cv
29.1484 99.4863 29.1655 99.6494 29.1992 99.8115 cv
29.2324 99.9795 29.2944 100.114 29.3896 100.226 cv
29.479 100.338 29.6079 100.394 29.7759 100.394 cv
29.7759 100.394 li
cp
29.7759 100.567 mo
29.5405 100.567 29.3501 100.506 29.1934 100.389 cv
29.0366 100.265 28.9189 100.108 28.835 99.9121 cv
28.751 99.7158 28.6948 99.5088 28.6616 99.2959 cv
28.6279 99.083 28.6108 98.8652 28.6108 98.6406 cv
28.6108 98.3496 28.667 98.0527 28.7847 97.751 cv
28.8965 97.4541 29.0645 97.207 29.2886 97.0117 cv
29.5127 96.8213 29.7759 96.7207 30.084 96.7207 cv
30.207 96.7207 30.3247 96.748 30.4365 96.793 cv
30.5488 96.8438 30.6328 96.916 30.6997 97.0059 cv
30.7612 97.1006 30.7949 97.2129 30.7949 97.3477 cv
30.7949 97.4258 30.7671 97.4873 30.7168 97.5381 cv
30.6606 97.5938 30.5991 97.6162 30.5264 97.6162 cv
30.4478 97.6162 30.3862 97.5938 30.3359 97.5381 cv
30.2798 97.4873 30.2573 97.4258 30.2573 97.3477 cv
30.2573 97.2744 30.2798 97.2129 30.3359 97.1572 cv
30.3862 97.1064 30.4478 97.0781 30.5264 97.0781 cv
30.5542 97.0781 li
30.5039 97.0117 30.4365 96.9668 30.3525 96.9326 cv
30.2632 96.8994 30.1733 96.8828 30.084 96.8828 cv
29.9717 96.8828 29.8652 96.9102 29.77 96.9551 cv
29.6748 97.0059 29.5908 97.0732 29.5127 97.1572 cv
29.4341 97.2412 29.3726 97.3311 29.3223 97.4316 cv
29.2661 97.5322 29.2271 97.6494 29.1992 97.7783 cv
29.1709 97.9131 29.1543 98.0303 29.1484 98.1426 cv
29.1377 98.2549 29.1377 98.4004 29.1377 98.5684 cv
29.2046 98.417 29.2944 98.2939 29.4175 98.1934 cv
29.5352 98.0977 29.6694 98.0479 29.8262 98.0479 cv
29.9888 98.0479 30.1396 98.0811 30.2744 98.1484 cv
30.4087 98.2158 30.5264 98.3105 30.627 98.4277 cv
30.728 98.5518 30.8008 98.6855 30.8564 98.8369 cv
30.9072 98.9941 30.9351 99.1445 30.9351 99.3018 cv
30.9351 99.5254 30.8848 99.7334 30.7896 99.9287 cv
30.6885 100.125 30.5542 100.282 30.375 100.394 cv
30.1958 100.506 30 100.567 29.7759 100.567 cv
ef
176.756 60.8979 mo
172.756 60.8979 li
37.2559 60.8979 mo
41.2559 60.8979 li
@
31.3359 62.7378 mo
31.6318 62.7378 31.856 62.5859 32 62.2817 cv
32.144 61.978 32.2319 61.6416 32.2637 61.2739 cv
32.2959 60.9058 32.3198 60.5059 32.3198 60.0898 cv
32.3198 59.6899 32.2959 59.3218 32.2637 58.9858 cv
32.2319 58.6499 32.144 58.3379 32 58.0659 cv
31.856 57.7939 31.6318 57.6499 31.3359 57.6499 cv
31.0317 57.6499 30.8076 57.7939 30.6641 58.0659 cv
30.52 58.3379 30.4238 58.6499 30.3921 58.9858 cv
30.3599 59.3218 30.3438 59.6899 30.3438 60.0898 cv
30.3438 60.3936 30.3438 60.6738 30.3599 60.9297 cv
30.376 61.1938 30.416 61.4658 30.48 61.7456 cv
30.5439 62.0259 30.6396 62.2578 30.7837 62.4497 cv
30.9199 62.6416 31.104 62.7378 31.3359 62.7378 cv
31.3359 62.7378 li
cp
31.3359 62.938 mo
30.6797 62.938 30.2319 62.6738 30 62.1377 cv
29.7598 61.6016 29.6479 60.9619 29.6479 60.2178 cv
29.6479 59.7539 29.688 59.3218 29.7759 58.9141 cv
29.856 58.5059 30.0239 58.1616 30.2798 57.874 cv
30.5278 57.5859 30.8799 57.4419 31.3359 57.4419 cv
31.688 57.4419 31.9761 57.5298 32.1997 57.6978 cv
32.4238 57.874 32.5918 58.0898 32.7119 58.3618 cv
32.8237 58.6338 32.9038 58.9297 32.9517 59.2417 cv
32.9917 59.5537 33.0156 59.8818 33.0156 60.2178 cv
33.0156 60.6816 32.9678 61.106 32.8877 61.5059 cv
32.7998 61.9058 32.6318 62.25 32.3838 62.522 cv
32.1357 62.7939 31.7837 62.938 31.3359 62.938 cv
ef
176.756 20.5776 mo
172.756 20.5776 li
37.2559 20.5776 mo
41.2559 20.5776 li
@
6.03174 22.2578 mo
6.08008 22.418 6.16797 22.562 6.27979 22.6899 cv
6.39209 22.8179 6.52783 22.9141 6.68799 22.9858 cv
6.83984 23.0576 7 23.0898 7.16797 23.0898 cv
7.55176 23.0898 7.81592 22.9458 7.95996 22.6416 cv
8.104 22.3457 8.18359 21.9858 8.18359 21.5537 cv
8.18359 21.3696 8.17578 21.2178 8.17578 21.0898 cv
8.16797 20.9619 8.15186 20.8418 8.11963 20.7217 cv
8.07178 20.5376 7.98389 20.3779 7.85596 20.2339 cv
7.72803 20.0898 7.58398 20.0176 7.40771 20.0176 cv
7.22363 20.0176 7.07178 20.0498 6.94385 20.0977 cv
6.81592 20.1538 6.7041 20.2178 6.62402 20.29 cv
6.54395 20.3696 6.47168 20.4419 6.40771 20.522 cv
6.34375 20.6016 6.31201 20.6499 6.2959 20.6499 cv
6.20801 20.6499 li
6.19189 20.6499 6.16797 20.6416 6.15186 20.626 cv
6.13574 20.6099 6.12793 20.5938 6.12793 20.5776 cv
6.12793 17.9058 li
6.12793 17.8896 6.13574 17.8818 6.15186 17.8657 cv
6.16797 17.8496 6.18408 17.8418 6.20801 17.8418 cv
6.23193 17.8418 li
6.58398 18.0176 6.96777 18.0977 7.37598 18.0977 cv
7.76807 18.0977 8.15186 18.0176 8.52002 17.8418 cv
8.54395 17.8418 li
8.56006 17.8418 8.57568 17.8496 8.5918 17.8657 cv
8.60791 17.8818 8.61572 17.8896 8.61572 17.9058 cv
8.61572 17.978 li
8.61572 18.0098 8.60791 18.0176 8.59961 18.0176 cv
8.41602 18.2578 8.18359 18.4497 7.91162 18.5859 cv
7.63965 18.7217 7.35205 18.7856 7.06396 18.7856 cv
6.84766 18.7856 6.63184 18.7617 6.40771 18.6978 cv
6.40771 20.21 li
6.58398 20.0659 6.73584 19.9697 6.87988 19.9058 cv
7.01563 19.8418 7.19189 19.8096 7.41602 19.8096 cv
7.70361 19.8096 7.96777 19.8979 8.19971 20.0659 cv
8.43164 20.2417 8.60791 20.458 8.73584 20.73 cv
8.86377 21.002 8.92773 21.2817 8.92773 21.562 cv
8.92773 21.8818 8.84766 22.1777 8.68799 22.4497 cv
8.52783 22.7217 8.31982 22.938 8.04785 23.0977 cv
7.77588 23.2578 7.48779 23.3379 7.16797 23.3379 cv
6.90381 23.3379 6.66406 23.2656 6.43994 23.1377 cv
6.21582 23.0098 6.04785 22.8257 5.91992 22.5938 cv
5.79199 22.3696 5.73584 22.1221 5.73584 21.8657 cv
5.73584 21.7456 5.76807 21.6499 5.84766 21.5698 cv
5.92773 21.498 6.02393 21.458 6.14404 21.458 cv
6.25586 21.458 6.35986 21.498 6.43994 21.5776 cv
6.52002 21.6577 6.56006 21.7539 6.56006 21.8657 cv
6.56006 21.978 6.52002 22.0737 6.43994 22.1538 cv
6.35986 22.2339 6.25586 22.2739 6.14404 22.2739 cv
6.12793 22.2739 6.104 22.2739 6.08008 22.2739 cv
6.05566 22.2739 6.04004 22.2656 6.03174 22.2578 cv
6.03174 22.2578 li
cp
ef
11.792 22.938 mo
11.792 22.8979 11.7998 22.8579 11.832 22.8257 cv
13.4961 21.1699 li
11.832 19.5059 li
11.7998 19.4819 11.792 19.4497 11.792 19.4019 cv
11.792 19.3618 11.8076 19.3218 11.8398 19.29 cv
11.8721 19.2578 11.9038 19.2417 11.9517 19.2417 cv
11.9839 19.2417 12.0239 19.2578 12.0718 19.29 cv
13.728 20.9458 li
15.376 19.29 li
15.4238 19.2578 15.4639 19.2417 15.4961 19.2417 cv
15.5356 19.2417 15.5757 19.2578 15.6079 19.29 cv
15.6396 19.3218 15.6558 19.3618 15.6558 19.4019 cv
15.6558 19.4497 15.6396 19.4819 15.6157 19.5059 cv
13.9517 21.1699 li
15.6157 22.8257 li
15.6396 22.8579 15.6558 22.8979 15.6558 22.938 cv
15.6558 22.9858 15.6396 23.0176 15.6079 23.0498 cv
15.5757 23.082 15.5356 23.0977 15.4961 23.0977 cv
15.4561 23.0977 15.416 23.082 15.376 23.042 cv
13.728 21.3936 li
12.0718 23.042 li
12.0317 23.082 11.9917 23.0977 11.9517 23.0977 cv
11.9038 23.0977 11.8721 23.082 11.8398 23.0498 cv
11.8076 23.0176 11.792 22.9858 11.792 22.938 cv
11.792 22.938 li
cp
ef
16.6396 23.1699 mo
16.6396 22.8896 li
17.3037 22.8896 17.6396 22.8096 17.6396 22.6338 cv
17.6396 18.4336 li
17.3599 18.5698 17.0078 18.6338 16.5918 18.6338 cv
16.5918 18.354 li
17.2397 18.354 17.7358 18.186 18.0718 17.8418 cv
18.1841 17.8418 li
18.1997 17.8418 18.2236 17.8496 18.2397 17.8657 cv
18.2559 17.8818 18.2637 17.8979 18.2637 17.9141 cv
18.2637 22.6338 li
18.2637 22.8096 18.5918 22.8896 19.2637 22.8896 cv
19.2637 23.1699 li
16.6396 23.1699 li
16.6396 23.1699 li
cp
ef
21.9761 23.1377 mo
22.272 23.1377 22.4961 22.9858 22.6396 22.6816 cv
22.7837 22.3779 22.8721 22.042 22.9038 21.6738 cv
22.936 21.3057 22.96 20.9058 22.96 20.4897 cv
22.96 20.0898 22.936 19.7217 22.9038 19.3857 cv
22.8721 19.0498 22.7837 18.7378 22.6396 18.4658 cv
22.4961 18.1938 22.272 18.0498 21.9761 18.0498 cv
21.6719 18.0498 21.4478 18.1938 21.3037 18.4658 cv
21.1597 18.7378 21.064 19.0498 21.0317 19.3857 cv
21 19.7217 20.9839 20.0898 20.9839 20.4897 cv
20.9839 20.7939 20.9839 21.0737 21 21.3296 cv
21.0156 21.5938 21.0557 21.8657 21.1196 22.146 cv
21.1841 22.4258 21.2798 22.6577 21.4238 22.8496 cv
21.5601 23.042 21.7437 23.1377 21.9761 23.1377 cv
21.9761 23.1377 li
cp
21.9761 23.3379 mo
21.3198 23.3379 20.8721 23.0737 20.6396 22.5376 cv
20.3999 22.002 20.2881 21.3618 20.2881 20.6177 cv
20.2881 20.1538 20.3276 19.7217 20.416 19.314 cv
20.4961 18.9058 20.6641 18.562 20.9199 18.2739 cv
21.168 17.9858 21.52 17.8418 21.9761 17.8418 cv
22.3276 17.8418 22.6157 17.9297 22.8398 18.0977 cv
23.064 18.2739 23.2319 18.4897 23.3521 18.7617 cv
23.4639 19.0337 23.5439 19.3296 23.5918 19.6416 cv
23.6318 19.9536 23.6558 20.2817 23.6558 20.6177 cv
23.6558 21.082 23.6079 21.5059 23.5278 21.9058 cv
23.4399 22.3057 23.272 22.6499 23.0239 22.9219 cv
22.7759 23.1938 22.4238 23.3379 21.9761 23.3379 cv
ef
24.3872 18.522 mo
24.3535 18.522 24.3311 18.5107 24.3086 18.4883 cv
24.2861 18.4658 24.2808 18.438 24.2808 18.4097 cv
24.2808 18.3872 24.2861 18.3594 24.3086 18.3369 cv
24.3311 18.3145 24.3535 18.2979 24.3872 18.2979 cv
27.6016 18.2979 li
27.6294 18.2979 27.6519 18.3145 27.6743 18.3369 cv
27.6909 18.3594 27.7021 18.3872 27.7021 18.4097 cv
27.7021 18.438 27.6909 18.4658 27.6743 18.4883 cv
27.6519 18.5107 27.6294 18.522 27.6016 18.522 cv
24.3872 18.522 li
24.3872 18.522 li
cp
ef
29.7759 19.7539 mo
29.9214 19.7539 30.0337 19.7256 30.123 19.6587 cv
30.207 19.5913 30.2686 19.5073 30.3135 19.3955 cv
30.3525 19.2891 30.3809 19.1826 30.3921 19.0708 cv
30.4028 18.9585 30.4087 18.8242 30.4087 18.6616 cv
30.4087 18.4492 30.3975 18.27 30.375 18.1187 cv
30.3525 17.9731 30.3022 17.8389 30.2129 17.7266 cv
30.123 17.6147 29.9829 17.5532 29.8037 17.5532 cv
29.647 17.5532 29.5239 17.6089 29.4287 17.71 cv
29.3276 17.8105 29.2607 17.9395 29.2158 18.0962 cv
29.1709 18.2529 29.1484 18.3984 29.1484 18.5439 cv
29.1484 18.5947 29.1484 18.6338 29.1543 18.6563 cv
29.1543 18.6616 29.1543 18.6675 29.1543 18.6675 cv
29.1543 18.6729 29.1484 18.6787 29.1484 18.6841 cv
29.1484 18.8467 29.1655 19.0088 29.1992 19.1714 cv
29.2324 19.3394 29.2944 19.4736 29.3896 19.5859 cv
29.479 19.6978 29.6079 19.7539 29.7759 19.7539 cv
29.7759 19.7539 li
cp
29.7759 19.9272 mo
29.5405 19.9272 29.3501 19.8657 29.1934 19.748 cv
29.0366 19.625 28.9189 19.4683 28.835 19.2725 cv
28.751 19.0762 28.6948 18.8691 28.6616 18.6563 cv
28.6279 18.4434 28.6108 18.2251 28.6108 18.001 cv
28.6108 17.71 28.667 17.4131 28.7847 17.1104 cv
28.8965 16.814 29.0645 16.5674 29.2886 16.3716 cv
29.5127 16.1812 29.7759 16.0801 30.084 16.0801 cv
30.207 16.0801 30.3247 16.1084 30.4365 16.1528 cv
30.5488 16.2036 30.6328 16.2764 30.6997 16.3657 cv
30.7612 16.4609 30.7949 16.5732 30.7949 16.7075 cv
30.7949 16.7856 30.7671 16.8477 30.7168 16.8979 cv
30.6606 16.9536 30.5991 16.9761 30.5264 16.9761 cv
30.4478 16.9761 30.3862 16.9536 30.3359 16.8979 cv
30.2798 16.8477 30.2573 16.7856 30.2573 16.7075 cv
30.2573 16.6348 30.2798 16.5732 30.3359 16.5171 cv
30.3862 16.4668 30.4478 16.4385 30.5264 16.4385 cv
30.5542 16.4385 li
30.5039 16.3716 30.4365 16.3267 30.3525 16.293 cv
30.2632 16.2593 30.1733 16.2427 30.084 16.2427 cv
29.9717 16.2427 29.8652 16.2705 29.77 16.3154 cv
29.6748 16.3657 29.5908 16.4331 29.5127 16.5171 cv
29.4341 16.6011 29.3726 16.6904 29.3223 16.7915 cv
29.2661 16.8921 29.2271 17.0098 29.1992 17.1387 cv
29.1709 17.2729 29.1543 17.3906 29.1484 17.5024 cv
29.1377 17.6147 29.1377 17.7603 29.1377 17.9282 cv
29.2046 17.7769 29.2944 17.6538 29.4175 17.5532 cv
29.5352 17.458 29.6694 17.4072 29.8262 17.4072 cv
29.9888 17.4072 30.1396 17.4409 30.2744 17.5083 cv
30.4087 17.5752 30.5264 17.6704 30.627 17.7881 cv
30.728 17.9116 30.8008 18.0459 30.8564 18.1973 cv
30.9072 18.354 30.9351 18.5049 30.9351 18.6616 cv
30.9351 18.8857 30.8848 19.0928 30.7896 19.2891 cv
30.6885 19.4849 30.5542 19.6416 30.375 19.7539 cv
30.1958 19.8657 30 19.9272 29.7759 19.9272 cv
ef
1.5 lw
2 lc
37.2559 165.729 mo
37.2559 4.44971 li
37.2559 165.729 mo
176.756 165.729 li
176.756 165.729 mo
176.756 4.44971 li
37.2559 4.44971 mo
176.756 4.44971 li
@
163.244 15.9097 mo
162.284 15.478 161.564 14.8057 161.084 13.8936 cv
160.604 12.9819 160.364 11.8179 160.364 10.4258 cv
160.364 9.03369 160.604 7.88184 161.084 6.95801 cv
161.564 6.03369 162.284 5.36182 163.244 4.92969 cv
163.244 5.50586 li
162.644 5.92578 162.212 6.51367 161.948 7.25781 cv
161.684 8.01367 161.552 9.06982 161.552 10.4258 cv
161.552 11.7939 161.684 12.8496 161.948 13.5938 cv
162.212 14.3379 162.644 14.9141 163.244 15.334 cv
163.244 15.9097 li
163.244 15.9097 li
cp
ef
169.832 10.1616 mo
169.832 13.4258 li
170.792 13.4258 li
170.792 14.0498 li
168.752 14.0498 li
168.752 13.3779 li
168.512 13.666 168.236 13.8818 167.924 14.0137 cv
167.612 14.1338 167.24 14.2061 166.832 14.2061 cv
166.136 14.2061 165.584 14.0259 165.176 13.666 cv
164.768 13.3057 164.576 12.8018 164.576 12.1777 cv
164.576 11.542 164.804 11.0498 165.272 10.6899 cv
165.728 10.3296 166.388 10.1499 167.24 10.1499 cv
168.752 10.1499 li
168.752 9.71777 li
168.752 9.25 168.608 8.88965 168.32 8.62598 cv
168.032 8.36182 167.624 8.22998 167.108 8.22998 cv
166.676 8.22998 166.34 8.33789 166.088 8.52979 cv
165.824 8.72168 165.668 9.00977 165.608 9.39355 cv
165.056 9.39355 li
165.056 8.13379 li
165.428 7.97803 165.788 7.85791 166.148 7.77393 cv
166.496 7.70166 166.844 7.65381 167.18 7.65381 cv
168.044 7.65381 168.692 7.86963 169.148 8.30176 cv
169.604 8.73389 169.832 9.3457 169.832 10.1616 cv
169.832 10.1616 li
cp
168.752 12.0938 mo
168.752 10.7739 li
167.36 10.7739 li
166.82 10.7739 166.424 10.8936 166.16 11.1221 cv
165.896 11.3618 165.776 11.71 165.776 12.1777 cv
165.776 12.6099 165.908 12.958 166.172 13.21 cv
166.436 13.4736 166.796 13.5938 167.252 13.5938 cv
167.696 13.5938 168.056 13.4619 168.332 13.1855 cv
168.608 12.9097 168.752 12.5498 168.752 12.0938 cv
ef
172.028 15.9097 mo
172.028 15.334 li
172.628 14.9141 173.06 14.3379 173.324 13.5938 cv
173.588 12.8496 173.72 11.7939 173.72 10.4258 cv
173.72 9.06982 173.588 8.01367 173.324 7.25781 cv
173.06 6.51367 172.628 5.92578 172.028 5.50586 cv
172.028 4.92969 li
172.976 5.36182 173.696 6.03369 174.176 6.95801 cv
174.656 7.88184 174.908 9.03369 174.908 10.4258 cv
174.908 11.8179 174.656 12.9819 174.176 13.8936 cv
173.696 14.8057 172.976 15.478 172.028 15.9097 cv
172.028 15.9097 li
cp
ef
121.756 160.729 mo
171.756 160.729 li
171.756 71.1987 li
121.756 71.1987 li
121.756 160.729 li
121.756 160.729 li
cp
0 0 0 0 cmyk
f
1 lw
121.756 160.729 mo
171.756 160.729 li
171.756 71.1987 li
121.756 71.1987 li
121.756 160.729 li
121.756 160.729 li
cp
0 0 0 1 cmyk
@
1.5 lw
0 lc
[1 1 ] 0 dsh
128.756 84.6982 mo
142.756 84.6982 li
.385412 .90045 0 0 cmyk
@
154.316 89.2402 mo
154.246 89.2402 154.216 89.2002 154.216 89.1299 cv
154.216 89.0996 154.226 89.0801 154.246 89.0596 cv
159.526 82.9097 li
154.246 75.6797 li
154.226 75.6597 154.216 75.6396 154.216 75.6299 cv
154.216 75.3296 li
154.216 75.2998 154.226 75.2798 154.246 75.27 cv
154.266 75.25 154.296 75.25 154.316 75.25 cv
166.316 75.25 li
167.526 78.0498 li
167.236 78.0498 li
166.926 77.3296 166.406 76.8096 165.686 76.4697 cv
164.956 76.1299 164.196 75.9199 163.406 75.8398 cv
162.616 75.7598 161.696 75.7197 160.656 75.7197 cv
156.036 75.7197 li
160.756 82.1699 li
160.766 82.1899 160.776 82.2197 160.776 82.2397 cv
160.776 82.2598 160.766 82.2798 160.756 82.3096 cv
155.566 88.3496 li
160.756 88.3496 li
161.776 88.3496 162.686 88.3096 163.486 88.2295 cv
164.276 88.1494 165.026 87.9297 165.746 87.5898 cv
166.466 87.25 166.956 86.7197 167.236 86.0195 cv
167.526 86.0195 li
166.316 89.2402 li
154.316 89.2402 li
154.316 89.2402 li
cp
0 0 0 1 cmyk
ef
160.817 91.4082 mo
160.817 91.3096 160.852 91.2188 160.936 91.1416 cv
161.013 91.0645 161.104 91.0225 161.209 91.0225 cv
161.286 91.0225 161.349 91.0508 161.405 91.0996 cv
161.454 91.1484 161.482 91.2119 161.482 91.2822 cv
161.482 91.3867 161.44 91.4775 161.356 91.5547 cv
161.272 91.6387 161.181 91.6738 161.083 91.6738 cv
161.006 91.6738 160.943 91.6523 160.894 91.5967 cv
160.838 91.5479 160.817 91.4844 160.817 91.4082 cv
160.817 91.4082 li
cp
158.612 96.6367 mo
158.612 96.5244 158.654 96.4268 158.724 96.3428 cv
158.801 96.2588 158.899 96.2168 159.011 96.2168 cv
159.081 96.2168 159.144 96.2383 159.2 96.2871 cv
159.249 96.3291 159.277 96.3916 159.277 96.4688 cv
159.277 96.5527 159.249 96.6367 159.193 96.707 cv
159.137 96.7764 159.067 96.8262 158.983 96.8535 cv
159.067 96.8818 159.144 96.8955 159.228 96.8955 cv
159.424 96.8955 159.599 96.8047 159.746 96.623 cv
159.886 96.4404 159.991 96.2305 160.054 96.0068 cv
160.712 93.3818 li
160.74 93.249 160.761 93.1367 160.761 93.0391 cv
160.761 92.8428 160.691 92.7383 160.551 92.7383 cv
160.341 92.7383 160.166 92.8359 160.012 93.0176 cv
159.858 93.207 159.732 93.4238 159.641 93.6621 cv
159.627 93.6895 159.613 93.7041 159.585 93.7041 cv
159.501 93.7041 li
159.459 93.7041 159.445 93.6826 159.445 93.6406 cv
159.445 93.6201 li
159.543 93.3398 159.69 93.0947 159.886 92.8779 cv
160.082 92.668 160.306 92.5557 160.565 92.5557 cv
160.761 92.5557 160.915 92.6191 161.041 92.7383 cv
161.167 92.8643 161.23 93.0176 161.23 93.2002 cv
161.23 93.2695 161.223 93.333 161.209 93.3955 cv
160.544 96.0488 li
160.495 96.2383 160.404 96.4131 160.271 96.5664 cv
160.131 96.7207 159.97 96.8467 159.788 96.9375 cv
159.599 97.0293 159.41 97.0781 159.214 97.0781 cv
159.06 97.0781 158.92 97.0361 158.794 96.9658 cv
158.675 96.8887 158.612 96.7764 158.612 96.6367 cv
ef
128.756 110.121 mo
131.584 107.292 li
128.756 104.464 li
125.927 107.292 li
128.756 110.121 li
.883665 .769161 0 0 cmyk
f
.5 lw
[] 0 dsh
128.756 110.121 mo
131.584 107.292 li
128.756 104.464 li
125.927 107.292 li
128.756 110.121 li
0 0 0 1 cmyk
@
142.756 110.121 mo
145.584 107.292 li
142.756 104.464 li
139.927 107.292 li
142.756 110.121 li
.883665 .769161 0 0 cmyk
f
142.756 110.121 mo
145.584 107.292 li
142.756 104.464 li
139.927 107.292 li
142.756 110.121 li
0 0 0 1 cmyk
@
154.426 110.12 mo
154.426 110.08 154.426 110.05 154.436 110.03 cv
155.186 107.05 li
155.226 106.87 155.256 106.7 155.256 106.56 cv
155.256 106.28 155.156 106.13 154.966 106.13 cv
154.756 106.13 154.596 106.26 154.496 106.51 cv
154.396 106.76 154.296 107.07 154.206 107.45 cv
154.206 107.47 154.196 107.49 154.176 107.5 cv
154.156 107.51 154.136 107.51 154.126 107.51 cv
154.006 107.51 li
153.986 107.51 153.966 107.5 153.946 107.479 cv
153.926 107.46 153.926 107.43 153.926 107.41 cv
153.996 107.12 154.066 106.87 154.136 106.67 cv
154.196 106.47 154.306 106.29 154.446 106.12 cv
154.586 105.96 154.756 105.87 154.976 105.87 cv
155.216 105.87 155.436 105.95 155.636 106.109 cv
155.826 106.27 155.926 106.47 155.926 106.71 cv
156.126 106.45 156.356 106.25 156.626 106.1 cv
156.886 105.95 157.176 105.87 157.476 105.87 cv
157.706 105.87 157.906 105.92 158.086 106 cv
158.256 106.08 158.386 106.21 158.486 106.37 cv
158.586 106.53 158.636 106.729 158.636 106.95 cv
158.636 107.229 158.566 107.56 158.446 107.939 cv
158.326 108.33 158.176 108.76 157.996 109.24 cv
157.896 109.46 157.856 109.66 157.856 109.84 cv
157.856 110.04 157.926 110.14 158.086 110.14 cv
158.346 110.14 158.556 110 158.736 109.72 cv
158.906 109.439 159.026 109.14 159.106 108.82 cv
159.116 108.78 159.146 108.76 159.186 108.76 cv
159.306 108.76 li
159.326 108.76 159.346 108.77 159.366 108.79 cv
159.386 108.81 159.396 108.83 159.396 108.85 cv
159.396 108.859 159.386 108.87 159.386 108.88 cv
159.296 109.26 159.136 109.609 158.916 109.92 cv
158.686 110.24 158.406 110.39 158.066 110.39 cv
157.826 110.39 157.626 110.31 157.466 110.16 cv
157.296 110 157.216 109.81 157.216 109.57 cv
157.216 109.45 157.236 109.32 157.296 109.18 cv
157.376 108.96 157.466 108.7 157.576 108.399 cv
157.686 108.1 157.776 107.82 157.846 107.54 cv
157.916 107.26 157.956 107.02 157.956 106.8 cv
157.956 106.62 157.916 106.46 157.836 106.33 cv
157.756 106.2 157.636 106.13 157.456 106.13 cv
157.206 106.13 156.976 106.189 156.776 106.29 cv
156.576 106.399 156.396 106.54 156.246 106.72 cv
156.086 106.899 155.946 107.109 155.826 107.35 cv
155.146 110.07 li
155.126 110.17 155.076 110.24 154.996 110.3 cv
154.916 110.359 154.826 110.39 154.726 110.39 cv
154.646 110.39 154.576 110.359 154.516 110.32 cv
154.456 110.28 154.426 110.21 154.426 110.12 cv
154.426 110.12 li
cp
ef
128.756 119.964 mo
126.756 123.964 li
130.756 123.964 li
128.756 119.964 li
.873045 .242161 1 .129244 cmyk
f
128.756 119.964 mo
126.756 123.964 li
130.756 123.964 li
128.756 119.964 li
0 0 0 1 cmyk
@
142.756 119.964 mo
140.756 123.964 li
144.756 123.964 li
142.756 119.964 li
.873045 .242161 1 .129244 cmyk
f
142.756 119.964 mo
140.756 123.964 li
144.756 123.964 li
142.756 119.964 li
0 0 0 1 cmyk
@
156.406 125.29 mo
156.656 125.29 156.926 125.22 157.206 125.08 cv
157.486 124.939 157.716 124.77 157.906 124.57 cv
158.146 124.33 158.346 124.02 158.496 123.66 cv
158.636 123.3 158.716 122.939 158.716 122.57 cv
158.716 122.33 158.656 122.1 158.556 121.89 cv
158.446 121.689 158.296 121.52 158.096 121.399 cv
157.896 121.28 157.676 121.22 157.426 121.22 cv
156.406 125.29 li
156.406 125.29 li
cp
156.106 125.29 mo
157.126 121.22 li
156.956 121.22 156.776 121.26 156.596 121.33 cv
156.406 121.399 156.226 121.49 156.066 121.59 cv
155.906 121.689 155.756 121.81 155.626 121.939 cv
155.456 122.1 155.306 122.3 155.186 122.52 cv
155.066 122.74 154.966 122.979 154.906 123.22 cv
154.846 123.46 154.816 123.7 154.816 123.939 cv
154.816 124.2 154.866 124.43 154.976 124.63 cv
155.076 124.83 155.226 124.99 155.426 125.109 cv
155.626 125.229 155.846 125.29 156.106 125.29 cv
155.596 127.35 mo
156.046 125.54 li
155.706 125.54 155.386 125.46 155.096 125.31 cv
154.796 125.16 154.566 124.939 154.386 124.66 cv
154.206 124.38 154.126 124.07 154.126 123.729 cv
154.126 123.37 154.216 123.03 154.396 122.7 cv
154.576 122.37 154.816 122.07 155.126 121.8 cv
155.436 121.54 155.766 121.33 156.126 121.18 cv
156.486 121.04 156.836 120.96 157.196 120.96 cv
157.796 118.53 li
157.806 118.49 157.836 118.47 157.876 118.47 cv
157.996 118.47 li
158.016 118.47 158.036 118.49 158.056 118.51 cv
158.076 118.53 158.086 118.55 158.086 118.57 cv
157.486 120.96 li
157.726 120.96 157.966 121.01 158.206 121.1 cv
158.446 121.2 158.656 121.33 158.836 121.49 cv
159.016 121.649 159.156 121.85 159.256 122.07 cv
159.356 122.29 159.406 122.53 159.406 122.78 cv
159.406 123.14 159.316 123.49 159.136 123.82 cv
158.956 124.149 158.716 124.45 158.416 124.71 cv
158.116 124.97 157.776 125.18 157.406 125.32 cv
157.026 125.46 156.676 125.54 156.336 125.54 cv
155.876 127.39 li
155.856 127.43 155.836 127.45 155.796 127.45 cv
155.676 127.45 li
155.646 127.45 155.626 127.43 155.616 127.41 cv
155.596 127.39 155.596 127.37 155.596 127.35 cv
ef
128.756 139.558 mo
129.286 139.558 129.795 139.348 130.17 138.972 cv
130.545 138.597 130.756 138.088 130.756 137.558 cv
130.756 137.027 130.545 136.519 130.17 136.144 cv
129.795 135.769 129.286 135.558 128.756 135.558 cv
128.226 135.558 127.717 135.769 127.342 136.144 cv
126.967 136.519 126.756 137.027 126.756 137.558 cv
126.756 138.088 126.967 138.597 127.342 138.972 cv
127.717 139.348 128.226 139.558 128.756 139.558 cv
128.756 139.558 li
cp
0 .993988 1 0 cmyk
f
128.756 139.558 mo
129.286 139.558 129.795 139.348 130.17 138.972 cv
130.545 138.597 130.756 138.088 130.756 137.558 cv
130.756 137.027 130.545 136.519 130.17 136.144 cv
129.795 135.769 129.286 135.558 128.756 135.558 cv
128.226 135.558 127.717 135.769 127.342 136.144 cv
126.967 136.519 126.756 137.027 126.756 137.558 cv
126.756 138.088 126.967 138.597 127.342 138.972 cv
127.717 139.348 128.226 139.558 128.756 139.558 cv
128.756 139.558 li
cp
0 0 0 1 cmyk
@
142.756 139.558 mo
143.286 139.558 143.795 139.348 144.17 138.972 cv
144.545 138.597 144.756 138.088 144.756 137.558 cv
144.756 137.027 144.545 136.519 144.17 136.144 cv
143.795 135.769 143.286 135.558 142.756 135.558 cv
142.226 135.558 141.717 135.769 141.342 136.144 cv
140.967 136.519 140.756 137.027 140.756 137.558 cv
140.756 138.088 140.967 138.597 141.342 138.972 cv
141.717 139.348 142.226 139.558 142.756 139.558 cv
142.756 139.558 li
cp
0 .993988 1 0 cmyk
f
142.756 139.558 mo
143.286 139.558 143.795 139.348 144.17 138.972 cv
144.545 138.597 144.756 138.088 144.756 137.558 cv
144.756 137.027 144.545 136.519 144.17 136.144 cv
143.795 135.769 143.286 135.558 142.756 135.558 cv
142.226 135.558 141.717 135.769 141.342 136.144 cv
140.967 136.519 140.756 137.027 140.756 137.558 cv
140.756 138.088 140.967 138.597 141.342 138.972 cv
141.717 139.348 142.226 139.558 142.756 139.558 cv
142.756 139.558 li
cp
0 0 0 1 cmyk
@
154.726 139.399 mo
154.726 139.26 154.736 139.09 154.776 138.91 cv
154.816 138.729 154.846 138.59 154.886 138.47 cv
154.916 138.35 154.996 138.13 155.126 137.79 cv
155.256 137.46 155.326 137.29 155.326 137.27 cv
155.406 137.03 155.456 136.83 155.456 136.67 cv
155.456 136.47 155.376 136.37 155.236 136.37 cv
154.976 136.37 154.756 136.51 154.586 136.78 cv
154.406 137.06 154.286 137.359 154.206 137.689 cv
154.186 137.729 154.166 137.75 154.126 137.75 cv
154.006 137.75 li
153.946 137.75 153.926 137.72 153.926 137.66 cv
153.926 137.63 li
154.026 137.229 154.196 136.88 154.416 136.57 cv
154.636 136.27 154.916 136.109 155.256 136.109 cv
155.496 136.109 155.696 136.189 155.856 136.35 cv
156.016 136.51 156.106 136.7 156.106 136.939 cv
156.106 137.07 156.076 137.2 156.026 137.33 cv
155.886 137.67 155.786 137.95 155.716 138.149 cv
155.636 138.35 155.566 138.58 155.506 138.83 cv
155.446 139.09 155.416 139.32 155.416 139.53 cv
155.416 139.78 155.466 139.979 155.586 140.14 cv
155.696 140.3 155.876 140.38 156.126 140.38 cv
156.586 140.38 156.996 140.03 157.376 139.31 cv
157.496 139.08 157.606 138.81 157.706 138.5 cv
157.806 138.189 157.866 137.93 157.866 137.729 cv
157.866 137.53 157.826 137.38 157.766 137.26 cv
157.696 137.149 157.606 137.03 157.506 136.91 cv
157.406 136.79 157.356 136.7 157.356 136.62 cv
157.356 136.49 157.406 136.37 157.516 136.26 cv
157.616 136.16 157.736 136.1 157.876 136.1 cv
158.036 136.1 158.146 136.18 158.216 136.32 cv
158.286 136.47 158.326 136.64 158.326 136.82 cv
158.326 137.04 158.286 137.31 158.226 137.609 cv
158.166 137.92 158.076 138.24 157.966 138.57 cv
157.846 138.899 157.746 139.16 157.656 139.34 cv
157.216 140.2 156.696 140.63 156.116 140.63 cv
155.696 140.63 155.356 140.53 155.106 140.32 cv
154.846 140.12 154.726 139.81 154.726 139.399 cv
154.726 139.399 li
cp
ef
128.756 150.229 mo
128.307 151.611 li
126.854 151.611 li
128.029 152.466 li
127.58 153.848 li
128.756 152.994 li
129.932 153.848 li
129.482 152.466 li
130.658 151.611 li
129.205 151.611 li
128.756 150.229 li
.713191 0 .306584 0 cmyk
f
128.756 150.229 mo
128.307 151.611 li
126.854 151.611 li
128.029 152.466 li
127.58 153.848 li
128.756 152.994 li
129.932 153.848 li
129.482 152.466 li
130.658 151.611 li
129.205 151.611 li
128.756 150.229 li
0 0 0 1 cmyk
@
142.756 150.229 mo
142.307 151.611 li
140.854 151.611 li
142.029 152.466 li
141.58 153.848 li
142.756 152.994 li
143.932 153.848 li
143.482 152.466 li
144.658 151.611 li
143.205 151.611 li
142.756 150.229 li
.713191 0 .306584 0 cmyk
f
142.756 150.229 mo
142.307 151.611 li
140.854 151.611 li
142.029 152.466 li
141.58 153.848 li
142.756 152.994 li
143.932 153.848 li
143.482 152.466 li
144.658 151.611 li
143.205 151.611 li
142.756 150.229 li
0 0 0 1 cmyk
@
154.276 154.12 mo
154.276 154.02 154.286 153.93 154.306 153.84 cv
155.026 150.97 li
153.976 150.97 li
153.906 150.97 153.876 150.93 153.876 150.84 cv
153.896 150.7 153.946 150.62 154.006 150.62 cv
155.116 150.62 li
155.516 148.99 li
155.536 148.91 155.586 148.83 155.666 148.77 cv
155.746 148.71 155.836 148.67 155.936 148.67 cv
156.016 148.67 156.086 148.7 156.146 148.75 cv
156.206 148.8 156.236 148.87 156.236 148.95 cv
156.236 148.97 156.226 148.99 156.226 149 cv
156.226 149.01 156.226 149.02 156.226 149.03 cv
155.826 150.62 li
156.856 150.62 li
156.916 150.62 156.956 150.67 156.956 150.75 cv
156.956 150.77 156.946 150.79 156.936 150.83 cv
156.926 150.87 156.916 150.91 156.896 150.93 cv
156.876 150.96 156.856 150.97 156.826 150.97 cv
155.736 150.97 li
155.016 153.859 li
154.966 154.05 154.946 154.21 154.946 154.35 cv
154.946 154.64 155.036 154.78 155.236 154.78 cv
155.526 154.78 155.786 154.649 156.016 154.37 cv
156.236 154.09 156.416 153.79 156.536 153.46 cv
156.556 153.42 156.586 153.399 156.616 153.399 cv
156.736 153.399 li
156.756 153.399 156.776 153.41 156.796 153.43 cv
156.816 153.45 156.826 153.47 156.826 153.49 cv
156.826 153.51 156.816 153.52 156.816 153.52 cv
156.666 153.92 156.456 154.28 156.176 154.58 cv
155.896 154.88 155.576 155.03 155.216 155.03 cv
154.946 155.03 154.726 154.939 154.546 154.78 cv
154.366 154.609 154.276 154.39 154.276 154.12 cv
154.276 154.12 li
cp
ef
232.556 165.729 mo
372.056 165.729 li
372.056 4.44971 li
232.556 4.44971 li
232.556 165.729 li
0 0 0 0 cmyk
f
gsave
232.556 165.729 mo
372.056 165.729 li
372.056 4.42969 li
232.556 4.42969 li
232.556 165.729 li
cp
clp
1.5 lw
2 lc
232.556 48.207 mo
249.994 45.6006 li
267.431 39.6318 li
284.869 29.3496 li
302.306 132.401 li
319.744 29.209 li
337.181 39.5327 li
354.619 45.5586 li
372.056 48.1787 li
.883665 .769161 0 0 cmyk
@
232.556 51.0352 mo
235.385 48.207 li
232.556 45.3784 li
229.728 48.207 li
232.556 51.0352 li
f
.5 lw
0 lc
232.556 51.0352 mo
235.385 48.207 li
232.556 45.3784 li
229.728 48.207 li
232.556 51.0352 li
0 0 0 1 cmyk
@
grestore
249.994 48.4292 mo
252.822 45.6006 li
249.994 42.7725 li
247.165 45.6006 li
249.994 48.4292 li
.883665 .769161 0 0 cmyk
f
249.994 48.4292 mo
252.822 45.6006 li
249.994 42.7725 li
247.165 45.6006 li
249.994 48.4292 li
0 0 0 1 cmyk
@
267.431 42.4604 mo
270.26 39.6318 li
267.431 36.8032 li
264.603 39.6318 li
267.431 42.4604 li
.883665 .769161 0 0 cmyk
f
267.431 42.4604 mo
270.26 39.6318 li
267.431 36.8032 li
264.603 39.6318 li
267.431 42.4604 li
0 0 0 1 cmyk
@
284.869 32.1782 mo
287.697 29.3496 li
284.869 26.5215 li
282.04 29.3496 li
284.869 32.1782 li
.883665 .769161 0 0 cmyk
f
284.869 32.1782 mo
287.697 29.3496 li
284.869 26.5215 li
282.04 29.3496 li
284.869 32.1782 li
0 0 0 1 cmyk
@
302.306 135.229 mo
305.135 132.401 li
302.306 129.573 li
299.478 132.401 li
302.306 135.229 li
.883665 .769161 0 0 cmyk
f
302.306 135.229 mo
305.135 132.401 li
302.306 129.573 li
299.478 132.401 li
302.306 135.229 li
0 0 0 1 cmyk
@
319.744 32.0371 mo
322.572 29.209 li
319.744 26.3804 li
316.915 29.209 li
319.744 32.0371 li
.883665 .769161 0 0 cmyk
f
319.744 32.0371 mo
322.572 29.209 li
319.744 26.3804 li
316.915 29.209 li
319.744 32.0371 li
0 0 0 1 cmyk
@
337.181 42.3613 mo
340.01 39.5327 li
337.181 36.7046 li
334.353 39.5327 li
337.181 42.3613 li
.883665 .769161 0 0 cmyk
f
337.181 42.3613 mo
340.01 39.5327 li
337.181 36.7046 li
334.353 39.5327 li
337.181 42.3613 li
0 0 0 1 cmyk
@
gsave
232.556 165.729 mo
372.056 165.729 li
372.056 4.42969 li
232.556 4.42969 li
232.556 165.729 li
cp
clp
354.619 48.3872 mo
357.447 45.5586 li
354.619 42.7305 li
351.79 45.5586 li
354.619 48.3872 li
.883665 .769161 0 0 cmyk
f
354.619 48.3872 mo
357.447 45.5586 li
354.619 42.7305 li
351.79 45.5586 li
354.619 48.3872 li
0 0 0 1 cmyk
@
372.056 51.0073 mo
374.885 48.1787 li
372.056 45.3506 li
369.228 48.1787 li
372.056 51.0073 li
.883665 .769161 0 0 cmyk
f
372.056 51.0073 mo
374.885 48.1787 li
372.056 45.3506 li
369.228 48.1787 li
372.056 51.0073 li
0 0 0 1 cmyk
@
1.5 lw
2 lc
232.556 50.54 mo
249.994 51.0967 li
267.431 52.3438 li
284.869 52.3457 li
302.306 43.958 li
319.744 52.2969 li
337.181 52.2256 li
354.619 50.998 li
372.056 50.4468 li
.873045 .242161 1 .129244 cmyk
@
232.556 48.54 mo
230.556 52.54 li
234.556 52.54 li
232.556 48.54 li
f
.5 lw
0 lc
232.556 48.54 mo
230.556 52.54 li
234.556 52.54 li
232.556 48.54 li
0 0 0 1 cmyk
@
grestore
249.994 49.0967 mo
247.994 53.0967 li
251.994 53.0967 li
249.994 49.0967 li
.873045 .242161 1 .129244 cmyk
f
249.994 49.0967 mo
247.994 53.0967 li
251.994 53.0967 li
249.994 49.0967 li
0 0 0 1 cmyk
@
267.431 50.3438 mo
265.431 54.3438 li
269.431 54.3438 li
267.431 50.3438 li
.873045 .242161 1 .129244 cmyk
f
267.431 50.3438 mo
265.431 54.3438 li
269.431 54.3438 li
267.431 50.3438 li
0 0 0 1 cmyk
@
284.869 50.3457 mo
282.869 54.3457 li
286.869 54.3457 li
284.869 50.3457 li
.873045 .242161 1 .129244 cmyk
f
284.869 50.3457 mo
282.869 54.3457 li
286.869 54.3457 li
284.869 50.3457 li
0 0 0 1 cmyk
@
302.306 41.958 mo
300.306 45.958 li
304.306 45.958 li
302.306 41.958 li
.873045 .242161 1 .129244 cmyk
f
302.306 41.958 mo
300.306 45.958 li
304.306 45.958 li
302.306 41.958 li
0 0 0 1 cmyk
@
319.744 50.2969 mo
317.744 54.2969 li
321.744 54.2969 li
319.744 50.2969 li
.873045 .242161 1 .129244 cmyk
f
319.744 50.2969 mo
317.744 54.2969 li
321.744 54.2969 li
319.744 50.2969 li
0 0 0 1 cmyk
@
337.181 50.2256 mo
335.181 54.2256 li
339.181 54.2256 li
337.181 50.2256 li
.873045 .242161 1 .129244 cmyk
f
337.181 50.2256 mo
335.181 54.2256 li
339.181 54.2256 li
337.181 50.2256 li
0 0 0 1 cmyk
@
gsave
232.556 165.729 mo
372.056 165.729 li
372.056 4.42969 li
232.556 4.42969 li
232.556 165.729 li
cp
clp
354.619 48.998 mo
352.619 52.998 li
356.619 52.998 li
354.619 48.998 li
.873045 .242161 1 .129244 cmyk
f
354.619 48.998 mo
352.619 52.998 li
356.619 52.998 li
354.619 48.998 li
0 0 0 1 cmyk
@
372.056 48.4468 mo
370.056 52.4468 li
374.056 52.4468 li
372.056 48.4468 li
.873045 .242161 1 .129244 cmyk
f
372.056 48.4468 mo
370.056 52.4468 li
374.056 52.4468 li
372.056 48.4468 li
0 0 0 1 cmyk
@
1.5 lw
2 lc
232.556 48.918 mo
249.994 48.3638 li
267.431 49.9536 li
284.869 57.4688 li
302.306 48.814 li
319.744 57.3628 li
337.181 49.8276 li
354.619 48.2559 li
372.056 48.8267 li
0 .993988 1 0 cmyk
@
232.556 50.918 mo
233.086 50.918 233.595 50.707 233.97 50.332 cv
234.345 49.957 234.556 49.4482 234.556 48.918 cv
234.556 48.3872 234.345 47.8789 233.97 47.5034 cv
233.595 47.1284 233.086 46.918 232.556 46.918 cv
232.025 46.918 231.517 47.1284 231.142 47.5034 cv
230.767 47.8789 230.556 48.3872 230.556 48.918 cv
230.556 49.4482 230.767 49.957 231.142 50.332 cv
231.517 50.707 232.025 50.918 232.556 50.918 cv
232.556 50.918 li
cp
f
.5 lw
0 lc
232.556 50.918 mo
233.086 50.918 233.595 50.707 233.97 50.332 cv
234.345 49.957 234.556 49.4482 234.556 48.918 cv
234.556 48.3872 234.345 47.8789 233.97 47.5034 cv
233.595 47.1284 233.086 46.918 232.556 46.918 cv
232.025 46.918 231.517 47.1284 231.142 47.5034 cv
230.767 47.8789 230.556 48.3872 230.556 48.918 cv
230.556 49.4482 230.767 49.957 231.142 50.332 cv
231.517 50.707 232.025 50.918 232.556 50.918 cv
232.556 50.918 li
cp
0 0 0 1 cmyk
@
grestore
249.994 50.3638 mo
250.524 50.3638 251.033 50.1533 251.408 49.7778 cv
251.783 49.4028 251.994 48.894 251.994 48.3638 cv
251.994 47.8335 251.783 47.3247 251.408 46.9497 cv
251.033 46.5747 250.524 46.3638 249.994 46.3638 cv
249.464 46.3638 248.955 46.5747 248.58 46.9497 cv
248.205 47.3247 247.994 47.8335 247.994 48.3638 cv
247.994 48.894 248.205 49.4028 248.58 49.7778 cv
248.955 50.1533 249.464 50.3638 249.994 50.3638 cv
249.994 50.3638 li
cp
0 .993988 1 0 cmyk
f
249.994 50.3638 mo
250.524 50.3638 251.033 50.1533 251.408 49.7778 cv
251.783 49.4028 251.994 48.894 251.994 48.3638 cv
251.994 47.8335 251.783 47.3247 251.408 46.9497 cv
251.033 46.5747 250.524 46.3638 249.994 46.3638 cv
249.464 46.3638 248.955 46.5747 248.58 46.9497 cv
248.205 47.3247 247.994 47.8335 247.994 48.3638 cv
247.994 48.894 248.205 49.4028 248.58 49.7778 cv
248.955 50.1533 249.464 50.3638 249.994 50.3638 cv
249.994 50.3638 li
cp
0 0 0 1 cmyk
@
267.431 51.9536 mo
267.961 51.9536 268.47 51.7432 268.845 51.3682 cv
269.22 50.9932 269.431 50.4844 269.431 49.9536 cv
269.431 49.4233 269.22 48.9146 268.845 48.5396 cv
268.47 48.1646 267.961 47.9536 267.431 47.9536 cv
266.9 47.9536 266.392 48.1646 266.017 48.5396 cv
265.642 48.9146 265.431 49.4233 265.431 49.9536 cv
265.431 50.4844 265.642 50.9932 266.017 51.3682 cv
266.392 51.7432 266.9 51.9536 267.431 51.9536 cv
267.431 51.9536 li
cp
0 .993988 1 0 cmyk
f
267.431 51.9536 mo
267.961 51.9536 268.47 51.7432 268.845 51.3682 cv
269.22 50.9932 269.431 50.4844 269.431 49.9536 cv
269.431 49.4233 269.22 48.9146 268.845 48.5396 cv
268.47 48.1646 267.961 47.9536 267.431 47.9536 cv
266.9 47.9536 266.392 48.1646 266.017 48.5396 cv
265.642 48.9146 265.431 49.4233 265.431 49.9536 cv
265.431 50.4844 265.642 50.9932 266.017 51.3682 cv
266.392 51.7432 266.9 51.9536 267.431 51.9536 cv
267.431 51.9536 li
cp
0 0 0 1 cmyk
@
284.869 59.4688 mo
285.399 59.4688 285.908 59.2583 286.283 58.8828 cv
286.658 58.5078 286.869 57.999 286.869 57.4688 cv
286.869 56.9385 286.658 56.4297 286.283 56.0547 cv
285.908 55.6797 285.399 55.4688 284.869 55.4688 cv
284.339 55.4688 283.83 55.6797 283.455 56.0547 cv
283.08 56.4297 282.869 56.9385 282.869 57.4688 cv
282.869 57.999 283.08 58.5078 283.455 58.8828 cv
283.83 59.2583 284.339 59.4688 284.869 59.4688 cv
284.869 59.4688 li
cp
0 .993988 1 0 cmyk
f
284.869 59.4688 mo
285.399 59.4688 285.908 59.2583 286.283 58.8828 cv
286.658 58.5078 286.869 57.999 286.869 57.4688 cv
286.869 56.9385 286.658 56.4297 286.283 56.0547 cv
285.908 55.6797 285.399 55.4688 284.869 55.4688 cv
284.339 55.4688 283.83 55.6797 283.455 56.0547 cv
283.08 56.4297 282.869 56.9385 282.869 57.4688 cv
282.869 57.999 283.08 58.5078 283.455 58.8828 cv
283.83 59.2583 284.339 59.4688 284.869 59.4688 cv
284.869 59.4688 li
cp
0 0 0 1 cmyk
@
302.306 50.814 mo
302.836 50.814 303.345 50.603 303.72 50.228 cv
304.095 49.853 304.306 49.3442 304.306 48.814 cv
304.306 48.2832 304.095 47.7744 303.72 47.3994 cv
303.345 47.0244 302.836 46.814 302.306 46.814 cv
301.775 46.814 301.267 47.0244 300.892 47.3994 cv
300.517 47.7744 300.306 48.2832 300.306 48.814 cv
300.306 49.3442 300.517 49.853 300.892 50.228 cv
301.267 50.603 301.775 50.814 302.306 50.814 cv
302.306 50.814 li
cp
0 .993988 1 0 cmyk
f
302.306 50.814 mo
302.836 50.814 303.345 50.603 303.72 50.228 cv
304.095 49.853 304.306 49.3442 304.306 48.814 cv
304.306 48.2832 304.095 47.7744 303.72 47.3994 cv
303.345 47.0244 302.836 46.814 302.306 46.814 cv
301.775 46.814 301.267 47.0244 300.892 47.3994 cv
300.517 47.7744 300.306 48.2832 300.306 48.814 cv
300.306 49.3442 300.517 49.853 300.892 50.228 cv
301.267 50.603 301.775 50.814 302.306 50.814 cv
302.306 50.814 li
cp
0 0 0 1 cmyk
@
319.744 59.3628 mo
320.274 59.3628 320.783 59.1523 321.158 58.7769 cv
321.533 58.4019 321.744 57.8931 321.744 57.3628 cv
321.744 56.8325 321.533 56.3237 321.158 55.9487 cv
320.783 55.5737 320.274 55.3628 319.744 55.3628 cv
319.214 55.3628 318.705 55.5737 318.33 55.9487 cv
317.955 56.3237 317.744 56.8325 317.744 57.3628 cv
317.744 57.8931 317.955 58.4019 318.33 58.7769 cv
318.705 59.1523 319.214 59.3628 319.744 59.3628 cv
319.744 59.3628 li
cp
0 .993988 1 0 cmyk
f
319.744 59.3628 mo
320.274 59.3628 320.783 59.1523 321.158 58.7769 cv
321.533 58.4019 321.744 57.8931 321.744 57.3628 cv
321.744 56.8325 321.533 56.3237 321.158 55.9487 cv
320.783 55.5737 320.274 55.3628 319.744 55.3628 cv
319.214 55.3628 318.705 55.5737 318.33 55.9487 cv
317.955 56.3237 317.744 56.8325 317.744 57.3628 cv
317.744 57.8931 317.955 58.4019 318.33 58.7769 cv
318.705 59.1523 319.214 59.3628 319.744 59.3628 cv
319.744 59.3628 li
cp
0 0 0 1 cmyk
@
337.181 51.8276 mo
337.711 51.8276 338.22 51.6172 338.595 51.2422 cv
338.97 50.8672 339.181 50.3584 339.181 49.8276 cv
339.181 49.2974 338.97 48.7886 338.595 48.4136 cv
338.22 48.0386 337.711 47.8276 337.181 47.8276 cv
336.65 47.8276 336.142 48.0386 335.767 48.4136 cv
335.392 48.7886 335.181 49.2974 335.181 49.8276 cv
335.181 50.3584 335.392 50.8672 335.767 51.2422 cv
336.142 51.6172 336.65 51.8276 337.181 51.8276 cv
337.181 51.8276 li
cp
0 .993988 1 0 cmyk
f
337.181 51.8276 mo
337.711 51.8276 338.22 51.6172 338.595 51.2422 cv
338.97 50.8672 339.181 50.3584 339.181 49.8276 cv
339.181 49.2974 338.97 48.7886 338.595 48.4136 cv
338.22 48.0386 337.711 47.8276 337.181 47.8276 cv
336.65 47.8276 336.142 48.0386 335.767 48.4136 cv
335.392 48.7886 335.181 49.2974 335.181 49.8276 cv
335.181 50.3584 335.392 50.8672 335.767 51.2422 cv
336.142 51.6172 336.65 51.8276 337.181 51.8276 cv
337.181 51.8276 li
cp
0 0 0 1 cmyk
@
gsave
232.556 165.729 mo
372.056 165.729 li
372.056 4.42969 li
232.556 4.42969 li
232.556 165.729 li
cp
clp
354.619 50.2559 mo
355.149 50.2559 355.658 50.0449 356.033 49.6699 cv
356.408 49.2949 356.619 48.7861 356.619 48.2559 cv
356.619 47.7256 356.408 47.2168 356.033 46.8418 cv
355.658 46.4668 355.149 46.2559 354.619 46.2559 cv
354.089 46.2559 353.58 46.4668 353.205 46.8418 cv
352.83 47.2168 352.619 47.7256 352.619 48.2559 cv
352.619 48.7861 352.83 49.2949 353.205 49.6699 cv
353.58 50.0449 354.089 50.2559 354.619 50.2559 cv
354.619 50.2559 li
cp
0 .993988 1 0 cmyk
f
354.619 50.2559 mo
355.149 50.2559 355.658 50.0449 356.033 49.6699 cv
356.408 49.2949 356.619 48.7861 356.619 48.2559 cv
356.619 47.7256 356.408 47.2168 356.033 46.8418 cv
355.658 46.4668 355.149 46.2559 354.619 46.2559 cv
354.089 46.2559 353.58 46.4668 353.205 46.8418 cv
352.83 47.2168 352.619 47.7256 352.619 48.2559 cv
352.619 48.7861 352.83 49.2949 353.205 49.6699 cv
353.58 50.0449 354.089 50.2559 354.619 50.2559 cv
354.619 50.2559 li
cp
0 0 0 1 cmyk
@
372.056 50.8267 mo
372.586 50.8267 373.095 50.6162 373.47 50.2412 cv
373.845 49.8662 374.056 49.3574 374.056 48.8267 cv
374.056 48.2964 373.845 47.7876 373.47 47.4126 cv
373.095 47.0376 372.586 46.8267 372.056 46.8267 cv
371.525 46.8267 371.017 47.0376 370.642 47.4126 cv
370.267 47.7876 370.056 48.2964 370.056 48.8267 cv
370.056 49.3574 370.267 49.8662 370.642 50.2412 cv
371.017 50.6162 371.525 50.8267 372.056 50.8267 cv
372.056 50.8267 li
cp
0 .993988 1 0 cmyk
f
372.056 50.8267 mo
372.586 50.8267 373.095 50.6162 373.47 50.2412 cv
373.845 49.8662 374.056 49.3574 374.056 48.8267 cv
374.056 48.2964 373.845 47.7876 373.47 47.4126 cv
373.095 47.0376 372.586 46.8267 372.056 46.8267 cv
371.525 46.8267 371.017 47.0376 370.642 47.4126 cv
370.267 47.7876 370.056 48.2964 370.056 48.8267 cv
370.056 49.3574 370.267 49.8662 370.642 50.2412 cv
371.017 50.6162 371.525 50.8267 372.056 50.8267 cv
372.056 50.8267 li
cp
0 0 0 1 cmyk
@
1.5 lw
2 lc
232.556 50.5356 mo
249.994 50.478 li
267.431 49.7407 li
284.869 40.2427 li
302.306 72.1338 li
319.744 40.2437 li
337.181 49.7388 li
354.619 50.4771 li
372.056 50.5356 li
.713191 0 .306584 0 cmyk
@
232.556 48.5356 mo
232.106 49.918 li
230.653 49.918 li
231.829 50.772 li
231.38 52.1538 li
232.556 51.2998 li
233.731 52.1538 li
233.282 50.772 li
234.458 49.918 li
233.005 49.918 li
232.556 48.5356 li
f
.5 lw
0 lc
232.556 48.5356 mo
232.106 49.918 li
230.653 49.918 li
231.829 50.772 li
231.38 52.1538 li
232.556 51.2998 li
233.731 52.1538 li
233.282 50.772 li
234.458 49.918 li
233.005 49.918 li
232.556 48.5356 li
0 0 0 1 cmyk
@
grestore
249.994 48.478 mo
249.545 49.8599 li
248.092 49.8599 li
249.268 50.7139 li
248.818 52.0957 li
249.994 51.2417 li
251.17 52.0957 li
250.721 50.7139 li
251.896 49.8599 li
250.443 49.8599 li
249.994 48.478 li
.713191 0 .306584 0 cmyk
f
249.994 48.478 mo
249.545 49.8599 li
248.092 49.8599 li
249.268 50.7139 li
248.818 52.0957 li
249.994 51.2417 li
251.17 52.0957 li
250.721 50.7139 li
251.896 49.8599 li
250.443 49.8599 li
249.994 48.478 li
0 0 0 1 cmyk
@
267.431 47.7407 mo
266.981 49.1226 li
265.528 49.1226 li
266.704 49.9771 li
266.255 51.3589 li
267.431 50.5049 li
268.606 51.3589 li
268.157 49.9771 li
269.333 49.1226 li
267.88 49.1226 li
267.431 47.7407 li
.713191 0 .306584 0 cmyk
f
267.431 47.7407 mo
266.981 49.1226 li
265.528 49.1226 li
266.704 49.9771 li
266.255 51.3589 li
267.431 50.5049 li
268.606 51.3589 li
268.157 49.9771 li
269.333 49.1226 li
267.88 49.1226 li
267.431 47.7407 li
0 0 0 1 cmyk
@
284.869 38.2427 mo
284.42 39.625 li
282.967 39.625 li
284.143 40.479 li
283.693 41.8608 li
284.869 41.0068 li
286.045 41.8608 li
285.596 40.479 li
286.771 39.625 li
285.318 39.625 li
284.869 38.2427 li
.713191 0 .306584 0 cmyk
f
284.869 38.2427 mo
284.42 39.625 li
282.967 39.625 li
284.143 40.479 li
283.693 41.8608 li
284.869 41.0068 li
286.045 41.8608 li
285.596 40.479 li
286.771 39.625 li
285.318 39.625 li
284.869 38.2427 li
0 0 0 1 cmyk
@
302.306 70.1338 mo
301.856 71.5156 li
300.403 71.5156 li
301.579 72.3701 li
301.13 73.752 li
302.306 72.8979 li
303.481 73.752 li
303.032 72.3701 li
304.208 71.5156 li
302.755 71.5156 li
302.306 70.1338 li
.713191 0 .306584 0 cmyk
f
302.306 70.1338 mo
301.856 71.5156 li
300.403 71.5156 li
301.579 72.3701 li
301.13 73.752 li
302.306 72.8979 li
303.481 73.752 li
303.032 72.3701 li
304.208 71.5156 li
302.755 71.5156 li
302.306 70.1338 li
0 0 0 1 cmyk
@
319.744 38.2437 mo
319.295 39.626 li
317.842 39.626 li
319.018 40.48 li
318.568 41.8618 li
319.744 41.0078 li
320.92 41.8618 li
320.471 40.48 li
321.646 39.626 li
320.193 39.626 li
319.744 38.2437 li
.713191 0 .306584 0 cmyk
f
319.744 38.2437 mo
319.295 39.626 li
317.842 39.626 li
319.018 40.48 li
318.568 41.8618 li
319.744 41.0078 li
320.92 41.8618 li
320.471 40.48 li
321.646 39.626 li
320.193 39.626 li
319.744 38.2437 li
0 0 0 1 cmyk
@
337.181 47.7388 mo
336.731 49.1206 li
335.278 49.1206 li
336.454 49.9751 li
336.005 51.3569 li
337.181 50.5029 li
338.356 51.3569 li
337.907 49.9751 li
339.083 49.1206 li
337.63 49.1206 li
337.181 47.7388 li
.713191 0 .306584 0 cmyk
f
337.181 47.7388 mo
336.731 49.1206 li
335.278 49.1206 li
336.454 49.9751 li
336.005 51.3569 li
337.181 50.5029 li
338.356 51.3569 li
337.907 49.9751 li
339.083 49.1206 li
337.63 49.1206 li
337.181 47.7388 li
0 0 0 1 cmyk
@
gsave
232.556 165.729 mo
372.056 165.729 li
372.056 4.42969 li
232.556 4.42969 li
232.556 165.729 li
cp
clp
354.619 48.4771 mo
354.17 49.8589 li
352.717 49.8589 li
353.893 50.7129 li
353.443 52.0947 li
354.619 51.2407 li
355.795 52.0947 li
355.346 50.7129 li
356.521 49.8589 li
355.068 49.8589 li
354.619 48.4771 li
.713191 0 .306584 0 cmyk
f
354.619 48.4771 mo
354.17 49.8589 li
352.717 49.8589 li
353.893 50.7129 li
353.443 52.0947 li
354.619 51.2407 li
355.795 52.0947 li
355.346 50.7129 li
356.521 49.8589 li
355.068 49.8589 li
354.619 48.4771 li
0 0 0 1 cmyk
@
372.056 48.5356 mo
371.606 49.918 li
370.153 49.918 li
371.329 50.772 li
370.88 52.1538 li
372.056 51.2998 li
373.231 52.1538 li
372.782 50.772 li
373.958 49.918 li
372.505 49.918 li
372.056 48.5356 li
.713191 0 .306584 0 cmyk
f
372.056 48.5356 mo
371.606 49.918 li
370.153 49.918 li
371.329 50.772 li
370.88 52.1538 li
372.056 51.2998 li
373.231 52.1538 li
372.782 50.772 li
373.958 49.918 li
372.505 49.918 li
372.056 48.5356 li
0 0 0 1 cmyk
@
1.5 lw
[1 1 ] 0 dsh
232.556 48.1426 mo
249.994 46.0078 li
267.431 40.6279 li
284.869 21.2256 li
302.306 147.347 li
319.744 21.0317 li
337.181 40.4028 li
354.619 45.8599 li
372.056 48.0176 li
.385412 .90045 0 0 cmyk
@
.5 lw
232.556 50.5298 mo
372.056 50.5298 li
0 0 0 1 cmyk
@
grestore
232.556 4.44971 mo
232.556 8.44971 li
232.556 165.729 mo
232.556 161.729 li
@
228.184 172.746 mo
233.191 172.746 li
233.191 173.378 li
228.184 173.378 li
228.184 172.746 li
228.184 172.746 li
cp
ef
238.568 175.57 mo
235.912 175.57 li
235.912 175.154 li
236.848 175.154 li
236.848 174.01 li
234.304 174.01 li
234.304 173.586 li
236.855 169.634 li
237.632 169.634 li
237.632 173.594 li
238.744 173.594 li
238.744 174.01 li
237.632 174.01 li
237.632 175.154 li
238.568 175.154 li
238.568 175.57 li
238.568 175.57 li
cp
236.848 173.594 mo
236.848 170.49 li
234.855 173.594 li
236.848 173.594 li
ef
249.994 4.44971 mo
249.994 8.44971 li
249.994 165.729 mo
249.994 161.729 li
@
245.704 172.746 mo
250.712 172.746 li
250.712 173.378 li
245.704 173.378 li
245.704 172.746 li
245.704 172.746 li
cp
ef
252.352 169.985 mo
252.656 169.874 252.943 169.786 253.224 169.722 cv
253.504 169.666 253.768 169.634 254.016 169.634 cv
254.584 169.634 255.032 169.762 255.352 170.002 cv
255.672 170.25 255.832 170.594 255.832 171.025 cv
255.832 171.378 255.72 171.674 255.496 171.906 cv
255.271 172.146 254.96 172.306 254.56 172.386 cv
255.04 172.458 255.408 172.634 255.672 172.914 cv
255.936 173.193 256.072 173.554 256.072 173.994 cv
256.072 174.538 255.888 174.954 255.52 175.242 cv
255.152 175.53 254.632 175.674 253.943 175.674 cv
253.64 175.674 253.336 175.642 253.048 175.578 cv
252.76 175.521 252.472 175.426 252.184 175.29 cv
252.184 174.154 li
252.624 174.154 li
252.647 174.538 252.775 174.817 253 175.01 cv
253.224 175.202 253.544 175.298 253.96 175.298 cv
254.359 175.298 254.672 175.186 254.904 174.954 cv
255.128 174.722 255.248 174.401 255.248 174.002 cv
255.248 173.546 255.128 173.202 254.888 172.962 cv
254.647 172.729 254.304 172.609 253.848 172.609 cv
253.479 172.609 li
253.479 172.21 li
253.672 172.21 li
254.128 172.21 254.472 172.122 254.696 171.93 cv
254.92 171.738 255.04 171.458 255.04 171.074 cv
255.04 170.738 254.944 170.474 254.76 170.29 cv
254.568 170.114 254.304 170.018 253.952 170.018 cv
253.6 170.018 253.32 170.105 253.128 170.273 cv
252.936 170.441 252.824 170.689 252.792 171.01 cv
252.352 171.01 li
252.352 169.985 li
252.352 169.985 li
cp
ef
267.431 4.44971 mo
267.431 8.44971 li
267.431 165.729 mo
267.431 161.729 li
@
263.224 172.746 mo
268.231 172.746 li
268.231 173.378 li
263.224 173.378 li
263.224 172.746 li
263.224 172.746 li
cp
ef
270.12 171.13 mo
269.68 171.13 li
269.68 170.09 li
269.952 169.945 270.231 169.834 270.52 169.754 cv
270.8 169.674 271.08 169.634 271.352 169.634 cv
271.96 169.634 272.439 169.786 272.792 170.074 cv
273.144 170.37 273.32 170.77 273.32 171.273 cv
273.32 171.85 272.92 172.53 272.12 173.322 cv
272.056 173.386 272.016 173.426 271.983 173.458 cv
270.512 174.93 li
272.943 174.93 li
272.943 174.21 li
273.399 174.21 li
273.399 175.57 li
269.64 175.57 li
269.64 175.146 li
271.408 173.378 li
271.792 172.994 272.072 172.634 272.24 172.306 cv
272.408 171.978 272.496 171.634 272.496 171.273 cv
272.496 170.882 272.392 170.578 272.184 170.354 cv
271.976 170.13 271.696 170.018 271.344 170.018 cv
270.968 170.018 270.68 170.114 270.479 170.298 cv
270.271 170.481 270.152 170.762 270.12 171.13 cv
270.12 171.13 li
cp
ef
284.869 4.44971 mo
284.869 8.44971 li
284.869 165.729 mo
284.869 161.729 li
@
280.744 172.746 mo
285.752 172.746 li
285.752 173.378 li
280.744 173.378 li
280.744 172.746 li
280.744 172.746 li
cp
ef
287.752 175.57 mo
287.752 175.154 li
288.768 175.154 li
288.768 170.306 li
287.592 171.065 li
287.592 170.554 li
289.016 169.634 li
289.552 169.634 li
289.552 175.154 li
290.568 175.154 li
290.568 175.57 li
287.752 175.57 li
287.752 175.57 li
cp
ef
302.306 4.44971 mo
302.306 8.44971 li
302.306 165.729 mo
302.306 161.729 li
@
302.84 175.674 mo
302.2 175.674 301.704 175.41 301.352 174.882 cv
301 174.354 300.824 173.618 300.824 172.658 cv
300.824 171.706 301 170.962 301.352 170.434 cv
301.704 169.906 302.2 169.634 302.84 169.634 cv
303.472 169.634 303.968 169.906 304.32 170.434 cv
304.672 170.962 304.855 171.706 304.855 172.658 cv
304.855 173.618 304.672 174.354 304.32 174.882 cv
303.968 175.41 303.472 175.674 302.84 175.674 cv
302.84 175.674 li
cp
302.84 175.298 mo
303.24 175.298 303.536 175.082 303.736 174.642 cv
303.928 174.21 304.032 173.546 304.032 172.658 cv
304.032 171.777 303.928 171.114 303.736 170.674 cv
303.536 170.242 303.24 170.018 302.84 170.018 cv
302.439 170.018 302.136 170.242 301.943 170.674 cv
301.744 171.114 301.647 171.777 301.647 172.658 cv
301.647 173.546 301.744 174.21 301.943 174.642 cv
302.136 175.082 302.439 175.298 302.84 175.298 cv
ef
319.744 4.44971 mo
319.744 8.44971 li
319.744 165.729 mo
319.744 161.729 li
@
319.432 175.57 mo
319.432 175.154 li
320.448 175.154 li
320.448 170.306 li
319.271 171.065 li
319.271 170.554 li
320.696 169.634 li
321.231 169.634 li
321.231 175.154 li
322.248 175.154 li
322.248 175.57 li
319.432 175.57 li
319.432 175.57 li
cp
ef
337.181 4.44971 mo
337.181 8.44971 li
337.181 165.729 mo
337.181 161.729 li
@
336.359 171.13 mo
335.92 171.13 li
335.92 170.09 li
336.191 169.945 336.472 169.834 336.76 169.754 cv
337.04 169.674 337.32 169.634 337.592 169.634 cv
338.2 169.634 338.68 169.786 339.032 170.074 cv
339.384 170.37 339.56 170.77 339.56 171.273 cv
339.56 171.85 339.16 172.53 338.359 173.322 cv
338.296 173.386 338.256 173.426 338.224 173.458 cv
336.752 174.93 li
339.184 174.93 li
339.184 174.21 li
339.64 174.21 li
339.64 175.57 li
335.88 175.57 li
335.88 175.146 li
337.647 173.378 li
338.032 172.994 338.312 172.634 338.479 172.306 cv
338.647 171.978 338.736 171.634 338.736 171.273 cv
338.736 170.882 338.632 170.578 338.424 170.354 cv
338.216 170.13 337.936 170.018 337.584 170.018 cv
337.208 170.018 336.92 170.114 336.72 170.298 cv
336.512 170.481 336.392 170.762 336.359 171.13 cv
336.359 171.13 li
cp
ef
354.619 4.44971 mo
354.619 8.44971 li
354.619 165.729 mo
354.619 161.729 li
@
353.392 169.985 mo
353.696 169.874 353.984 169.786 354.264 169.722 cv
354.544 169.666 354.808 169.634 355.056 169.634 cv
355.624 169.634 356.072 169.762 356.392 170.002 cv
356.712 170.25 356.872 170.594 356.872 171.025 cv
356.872 171.378 356.76 171.674 356.536 171.906 cv
356.312 172.146 356 172.306 355.6 172.386 cv
356.08 172.458 356.448 172.634 356.712 172.914 cv
356.976 173.193 357.112 173.554 357.112 173.994 cv
357.112 174.538 356.928 174.954 356.56 175.242 cv
356.191 175.53 355.672 175.674 354.983 175.674 cv
354.68 175.674 354.376 175.642 354.088 175.578 cv
353.8 175.521 353.512 175.426 353.224 175.29 cv
353.224 174.154 li
353.664 174.154 li
353.688 174.538 353.815 174.817 354.04 175.01 cv
354.264 175.202 354.584 175.298 355 175.298 cv
355.399 175.298 355.712 175.186 355.943 174.954 cv
356.168 174.722 356.288 174.401 356.288 174.002 cv
356.288 173.546 356.168 173.202 355.928 172.962 cv
355.688 172.729 355.344 172.609 354.888 172.609 cv
354.52 172.609 li
354.52 172.21 li
354.712 172.21 li
355.168 172.21 355.512 172.122 355.736 171.93 cv
355.96 171.738 356.08 171.458 356.08 171.074 cv
356.08 170.738 355.983 170.474 355.8 170.29 cv
355.607 170.114 355.344 170.018 354.992 170.018 cv
354.64 170.018 354.359 170.105 354.168 170.273 cv
353.976 170.441 353.864 170.689 353.832 171.01 cv
353.392 171.01 li
353.392 169.985 li
353.392 169.985 li
cp
ef
372.056 4.44971 mo
372.056 8.44971 li
372.056 165.729 mo
372.056 161.729 li
@
374.408 175.57 mo
371.752 175.57 li
371.752 175.154 li
372.688 175.154 li
372.688 174.01 li
370.144 174.01 li
370.144 173.586 li
372.696 169.634 li
373.472 169.634 li
373.472 173.594 li
374.584 173.594 li
374.584 174.01 li
373.472 174.01 li
373.472 175.154 li
374.408 175.154 li
374.408 175.57 li
374.408 175.57 li
cp
372.688 173.594 mo
372.688 170.49 li
370.696 173.594 li
372.688 173.594 li
ef
300.185 185.649 mo
300.185 185.182 li
300.914 185.182 li
300.914 181.447 li
300.14 181.447 li
300.14 180.979 li
301.724 180.979 li
301.724 181.807 li
301.868 181.501 302.065 181.258 302.3 181.096 cv
302.534 180.934 302.813 180.853 303.137 180.853 cv
303.649 180.853 304.028 181.006 304.271 181.294 cv
304.514 181.591 304.64 182.05 304.64 182.68 cv
304.64 185.182 li
305.359 185.182 li
305.359 185.649 li
303.128 185.649 li
303.128 185.182 li
303.83 185.182 li
303.83 182.932 li
303.83 182.365 303.758 181.978 303.614 181.762 cv
303.47 181.546 303.227 181.438 302.876 181.438 cv
302.498 181.438 302.21 181.582 302.012 181.852 cv
301.813 182.131 301.724 182.526 301.724 183.049 cv
301.724 185.182 li
302.426 185.182 li
302.426 185.649 li
300.185 185.649 li
300.185 185.649 li
cp
ef
372.056 142.689 mo
368.056 142.689 li
232.556 142.689 mo
236.556 142.689 li
@
195.272 143.49 mo
195.224 143.49 195.192 143.474 195.16 143.441 cv
195.128 143.41 195.12 143.37 195.12 143.33 cv
195.12 143.298 195.128 143.258 195.16 143.226 cv
195.192 143.193 195.224 143.17 195.272 143.17 cv
199.864 143.17 li
199.904 143.17 199.936 143.193 199.968 143.226 cv
199.992 143.258 200.008 143.298 200.008 143.33 cv
200.008 143.37 199.992 143.41 199.968 143.441 cv
199.936 143.474 199.904 143.49 199.864 143.49 cv
195.272 143.49 li
195.272 143.49 li
cp
ef
201.184 143.729 mo
203.08 143.729 li
203.08 140.897 li
201.184 143.729 li
201.184 143.729 li
cp
200.92 144.01 mo
200.92 143.729 li
203.392 140.042 li
203.408 140.018 203.432 140.002 203.472 140.002 cv
203.592 140.002 li
203.647 140.002 203.68 140.034 203.68 140.09 cv
203.68 143.729 li
204.464 143.729 li
204.464 144.01 li
203.68 144.01 li
203.68 144.794 li
203.68 144.906 203.752 144.978 203.912 145.01 cv
204.072 145.042 204.248 145.05 204.456 145.05 cv
204.456 145.33 li
202.256 145.33 li
202.256 145.05 li
202.456 145.05 202.632 145.042 202.792 145.01 cv
202.952 144.978 203.032 144.906 203.032 144.794 cv
203.032 144.01 li
200.92 144.01 li
ef
207.392 145.098 mo
207.392 145.058 207.399 145.018 207.432 144.985 cv
209.096 143.33 li
207.432 141.666 li
207.399 141.642 207.392 141.609 207.392 141.562 cv
207.392 141.521 207.408 141.481 207.439 141.45 cv
207.472 141.418 207.504 141.401 207.552 141.401 cv
207.584 141.401 207.624 141.418 207.672 141.45 cv
209.328 143.105 li
210.976 141.45 li
211.023 141.418 211.063 141.401 211.096 141.401 cv
211.136 141.401 211.176 141.418 211.208 141.45 cv
211.24 141.481 211.256 141.521 211.256 141.562 cv
211.256 141.609 211.24 141.642 211.216 141.666 cv
209.552 143.33 li
211.216 144.985 li
211.24 145.018 211.256 145.058 211.256 145.098 cv
211.256 145.146 211.24 145.178 211.208 145.21 cv
211.176 145.242 211.136 145.258 211.096 145.258 cv
211.056 145.258 211.016 145.242 210.976 145.202 cv
209.328 143.554 li
207.672 145.202 li
207.632 145.242 207.592 145.258 207.552 145.258 cv
207.504 145.258 207.472 145.242 207.439 145.21 cv
207.408 145.178 207.392 145.146 207.392 145.098 cv
207.392 145.098 li
cp
ef
212.24 145.33 mo
212.24 145.05 li
212.904 145.05 213.24 144.97 213.24 144.794 cv
213.24 140.594 li
212.96 140.729 212.607 140.794 212.191 140.794 cv
212.191 140.514 li
212.84 140.514 213.336 140.346 213.672 140.002 cv
213.784 140.002 li
213.8 140.002 213.824 140.01 213.84 140.025 cv
213.855 140.042 213.864 140.058 213.864 140.074 cv
213.864 144.794 li
213.864 144.97 214.191 145.05 214.864 145.05 cv
214.864 145.33 li
212.24 145.33 li
212.24 145.33 li
cp
ef
217.336 145.298 mo
217.632 145.298 217.855 145.146 218 144.842 cv
218.144 144.538 218.231 144.202 218.264 143.834 cv
218.296 143.466 218.32 143.065 218.32 142.649 cv
218.32 142.25 218.296 141.882 218.264 141.546 cv
218.231 141.21 218.144 140.897 218 140.626 cv
217.855 140.354 217.632 140.21 217.336 140.21 cv
217.032 140.21 216.808 140.354 216.664 140.626 cv
216.52 140.897 216.424 141.21 216.392 141.546 cv
216.359 141.882 216.344 142.25 216.344 142.649 cv
216.344 142.954 216.344 143.233 216.359 143.49 cv
216.376 143.754 216.416 144.025 216.479 144.306 cv
216.544 144.586 216.64 144.817 216.784 145.01 cv
216.92 145.202 217.104 145.298 217.336 145.298 cv
217.336 145.298 li
cp
217.336 145.498 mo
216.68 145.498 216.231 145.233 216 144.698 cv
215.76 144.162 215.647 143.521 215.647 142.777 cv
215.647 142.313 215.688 141.882 215.775 141.474 cv
215.855 141.065 216.023 140.722 216.28 140.434 cv
216.528 140.146 216.88 140.002 217.336 140.002 cv
217.688 140.002 217.976 140.09 218.2 140.258 cv
218.424 140.434 218.592 140.649 218.712 140.922 cv
218.824 141.193 218.904 141.49 218.952 141.802 cv
218.992 142.114 219.016 142.441 219.016 142.777 cv
219.016 143.242 218.968 143.666 218.888 144.065 cv
218.8 144.466 218.632 144.81 218.384 145.082 cv
218.136 145.354 217.784 145.498 217.336 145.498 cv
ef
219.987 140.682 mo
219.953 140.682 219.931 140.671 219.908 140.648 cv
219.887 140.626 219.881 140.598 219.881 140.57 cv
219.881 140.548 219.887 140.52 219.908 140.497 cv
219.931 140.475 219.953 140.458 219.987 140.458 cv
223.201 140.458 li
223.229 140.458 223.252 140.475 223.274 140.497 cv
223.291 140.52 223.303 140.548 223.303 140.57 cv
223.303 140.598 223.291 140.626 223.274 140.648 cv
223.252 140.671 223.229 140.682 223.201 140.682 cv
219.987 140.682 li
219.987 140.682 li
cp
ef
224.077 140.85 mo
225.404 140.85 li
225.404 138.867 li
224.077 140.85 li
224.077 140.85 li
cp
223.893 141.046 mo
223.893 140.85 li
225.623 138.269 li
225.635 138.251 225.651 138.24 225.679 138.24 cv
225.763 138.24 li
225.803 138.24 225.824 138.263 225.824 138.302 cv
225.824 140.85 li
226.373 140.85 li
226.373 141.046 li
225.824 141.046 li
225.824 141.595 li
225.824 141.673 225.875 141.724 225.987 141.746 cv
226.099 141.769 226.223 141.773 226.368 141.773 cv
226.368 141.97 li
224.828 141.97 li
224.828 141.773 li
224.968 141.773 225.091 141.769 225.203 141.746 cv
225.315 141.724 225.371 141.673 225.371 141.595 cv
225.371 141.046 li
223.893 141.046 li
ef
372.056 96.6094 mo
368.056 96.6094 li
232.556 96.6094 mo
236.556 96.6094 li
@
195.272 97.4102 mo
195.224 97.4102 195.192 97.3936 195.16 97.3613 cv
195.128 97.3301 195.12 97.29 195.12 97.25 cv
195.12 97.2178 195.128 97.1777 195.16 97.1455 cv
195.192 97.1143 195.224 97.0898 195.272 97.0898 cv
199.864 97.0898 li
199.904 97.0898 199.936 97.1143 199.968 97.1455 cv
199.992 97.1777 200.008 97.2178 200.008 97.25 cv
200.008 97.29 199.992 97.3301 199.968 97.3613 cv
199.936 97.3936 199.904 97.4102 199.864 97.4102 cv
195.272 97.4102 li
195.272 97.4102 li
cp
ef
201.096 99.25 mo
201.096 99.0342 li
201.096 99.0254 201.096 99.0098 201.112 98.9941 cv
202.352 97.6182 li
202.536 97.418 202.688 97.25 202.808 97.1055 cv
202.92 96.9697 203.04 96.8096 203.152 96.6338 cv
203.264 96.458 203.359 96.2734 203.424 96.082 cv
203.488 95.8975 203.528 95.6982 203.528 95.4902 cv
203.528 95.2734 203.488 95.0654 203.408 94.8662 cv
203.328 94.666 203.208 94.5059 203.048 94.3857 cv
202.888 94.2656 202.688 94.2021 202.464 94.2021 cv
202.231 94.2021 202.023 94.2734 201.84 94.4102 cv
201.647 94.5537 201.52 94.7295 201.448 94.9541 cv
201.464 94.9541 201.496 94.9453 201.536 94.9453 cv
201.647 94.9453 201.752 94.9854 201.84 95.0654 cv
201.92 95.1455 201.968 95.25 201.968 95.3779 cv
201.968 95.5059 201.92 95.6094 201.84 95.6895 cv
201.752 95.7773 201.647 95.8174 201.536 95.8174 cv
201.408 95.8174 201.304 95.7773 201.224 95.6895 cv
201.136 95.6016 201.096 95.498 201.096 95.3779 cv
201.096 95.1855 201.128 94.9941 201.208 94.8174 cv
201.28 94.6416 201.384 94.4902 201.528 94.3457 cv
201.672 94.21 201.832 94.1055 202.008 94.0342 cv
202.184 93.9619 202.376 93.9219 202.584 93.9219 cv
202.888 93.9219 203.168 93.9854 203.432 94.1143 cv
203.696 94.2422 203.904 94.4258 204.056 94.666 cv
204.208 94.9063 204.288 95.1777 204.288 95.4902 cv
204.288 95.7217 204.231 95.9375 204.136 96.1455 cv
204.032 96.3535 203.904 96.5459 203.744 96.7139 cv
203.584 96.8896 203.384 97.082 203.136 97.2979 cv
202.888 97.5137 202.728 97.6582 202.647 97.7295 cv
201.744 98.6016 li
202.512 98.6016 li
202.888 98.6016 203.2 98.6016 203.456 98.5938 cv
203.712 98.5938 203.848 98.5781 203.864 98.5615 cv
203.928 98.498 203.992 98.25 204.056 97.8262 cv
204.288 97.8262 li
204.063 99.25 li
201.096 99.25 li
201.096 99.25 li
cp
ef
207.392 99.0176 mo
207.392 98.9775 207.399 98.9375 207.432 98.9063 cv
209.096 97.25 li
207.432 95.5859 li
207.399 95.5615 207.392 95.5303 207.392 95.4814 cv
207.392 95.4414 207.408 95.4014 207.439 95.3701 cv
207.472 95.3379 207.504 95.3223 207.552 95.3223 cv
207.584 95.3223 207.624 95.3379 207.672 95.3701 cv
209.328 97.0254 li
210.976 95.3701 li
211.023 95.3379 211.063 95.3223 211.096 95.3223 cv
211.136 95.3223 211.176 95.3379 211.208 95.3701 cv
211.24 95.4014 211.256 95.4414 211.256 95.4814 cv
211.256 95.5303 211.24 95.5615 211.216 95.5859 cv
209.552 97.25 li
211.216 98.9063 li
211.24 98.9375 211.256 98.9775 211.256 99.0176 cv
211.256 99.0654 211.24 99.0977 211.208 99.1299 cv
211.176 99.1621 211.136 99.1777 211.096 99.1777 cv
211.056 99.1777 211.016 99.1621 210.976 99.1221 cv
209.328 97.4736 li
207.672 99.1221 li
207.632 99.1621 207.592 99.1777 207.552 99.1777 cv
207.504 99.1777 207.472 99.1621 207.439 99.1299 cv
207.408 99.0977 207.392 99.0654 207.392 99.0176 cv
207.392 99.0176 li
cp
ef
212.24 99.25 mo
212.24 98.9697 li
212.904 98.9697 213.24 98.8896 213.24 98.7139 cv
213.24 94.5137 li
212.96 94.6494 212.607 94.7139 212.191 94.7139 cv
212.191 94.4336 li
212.84 94.4336 213.336 94.2656 213.672 93.9219 cv
213.784 93.9219 li
213.8 93.9219 213.824 93.9297 213.84 93.9453 cv
213.855 93.9619 213.864 93.9775 213.864 93.9941 cv
213.864 98.7139 li
213.864 98.8896 214.191 98.9697 214.864 98.9697 cv
214.864 99.25 li
212.24 99.25 li
212.24 99.25 li
cp
ef
217.336 99.2178 mo
217.632 99.2178 217.855 99.0654 218 98.7617 cv
218.144 98.458 218.231 98.1221 218.264 97.7539 cv
218.296 97.3857 218.32 96.9854 218.32 96.5703 cv
218.32 96.1699 218.296 95.8018 218.264 95.4658 cv
218.231 95.1299 218.144 94.8174 218 94.5459 cv
217.855 94.2734 217.632 94.1299 217.336 94.1299 cv
217.032 94.1299 216.808 94.2734 216.664 94.5459 cv
216.52 94.8174 216.424 95.1299 216.392 95.4658 cv
216.359 95.8018 216.344 96.1699 216.344 96.5703 cv
216.344 96.874 216.344 97.1543 216.359 97.4102 cv
216.376 97.6738 216.416 97.9453 216.479 98.2256 cv
216.544 98.5059 216.64 98.7383 216.784 98.9297 cv
216.92 99.1221 217.104 99.2178 217.336 99.2178 cv
217.336 99.2178 li
cp
217.336 99.418 mo
216.68 99.418 216.231 99.1543 216 98.6182 cv
215.76 98.082 215.647 97.4414 215.647 96.6982 cv
215.647 96.2334 215.688 95.8018 215.775 95.3936 cv
215.855 94.9854 216.023 94.6416 216.28 94.3535 cv
216.528 94.0654 216.88 93.9219 217.336 93.9219 cv
217.688 93.9219 217.976 94.0098 218.2 94.1777 cv
218.424 94.3535 218.592 94.5703 218.712 94.8418 cv
218.824 95.1143 218.904 95.4102 218.952 95.7217 cv
218.992 96.0342 219.016 96.3613 219.016 96.6982 cv
219.016 97.1621 218.968 97.5859 218.888 97.9854 cv
218.8 98.3857 218.632 98.7295 218.384 99.002 cv
218.136 99.2734 217.784 99.418 217.336 99.418 cv
ef
219.987 94.6016 mo
219.953 94.6016 219.931 94.5908 219.908 94.5684 cv
219.887 94.5459 219.881 94.5176 219.881 94.4902 cv
219.881 94.4678 219.887 94.4395 219.908 94.417 cv
219.931 94.3945 219.953 94.3779 219.987 94.3779 cv
223.201 94.3779 li
223.229 94.3779 223.252 94.3945 223.274 94.417 cv
223.291 94.4395 223.303 94.4678 223.303 94.4902 cv
223.303 94.5176 223.291 94.5459 223.274 94.5684 cv
223.252 94.5908 223.229 94.6016 223.201 94.6016 cv
219.987 94.6016 li
219.987 94.6016 li
cp
ef
224.077 94.7695 mo
225.404 94.7695 li
225.404 92.7871 li
224.077 94.7695 li
224.077 94.7695 li
cp
223.893 94.9658 mo
223.893 94.7695 li
225.623 92.1885 li
225.635 92.1719 225.651 92.1602 225.679 92.1602 cv
225.763 92.1602 li
225.803 92.1602 225.824 92.1826 225.824 92.2217 cv
225.824 94.7695 li
226.373 94.7695 li
226.373 94.9658 li
225.824 94.9658 li
225.824 95.5146 li
225.824 95.5928 225.875 95.6436 225.987 95.666 cv
226.099 95.6885 226.223 95.6934 226.368 95.6934 cv
226.368 95.8896 li
224.828 95.8896 li
224.828 95.6934 li
224.968 95.6934 225.091 95.6885 225.203 95.666 cv
225.315 95.6436 225.371 95.5928 225.371 95.5146 cv
225.371 94.9658 li
223.893 94.9658 li
ef
372.056 50.5298 mo
368.056 50.5298 li
232.556 50.5298 mo
236.556 50.5298 li
@
226.456 52.418 mo
226.752 52.418 226.976 52.2656 227.12 51.9619 cv
227.264 51.6577 227.352 51.3218 227.384 50.9536 cv
227.416 50.5859 227.439 50.1855 227.439 49.77 cv
227.439 49.3696 227.416 49.002 227.384 48.666 cv
227.352 48.3296 227.264 48.0176 227.12 47.7456 cv
226.976 47.4736 226.752 47.3296 226.456 47.3296 cv
226.152 47.3296 225.928 47.4736 225.784 47.7456 cv
225.64 48.0176 225.544 48.3296 225.512 48.666 cv
225.479 49.002 225.464 49.3696 225.464 49.77 cv
225.464 50.0737 225.464 50.354 225.479 50.6099 cv
225.496 50.874 225.536 51.146 225.6 51.4258 cv
225.664 51.7061 225.76 51.938 225.904 52.1299 cv
226.04 52.3218 226.224 52.418 226.456 52.418 cv
226.456 52.418 li
cp
226.456 52.6177 mo
225.8 52.6177 225.352 52.354 225.12 51.8179 cv
224.88 51.2817 224.768 50.6416 224.768 49.8979 cv
224.768 49.4336 224.808 49.002 224.896 48.5938 cv
224.976 48.186 225.144 47.8418 225.399 47.5537 cv
225.647 47.2656 226 47.1216 226.456 47.1216 cv
226.808 47.1216 227.096 47.21 227.32 47.3779 cv
227.544 47.5537 227.712 47.77 227.832 48.042 cv
227.943 48.314 228.023 48.6099 228.072 48.9219 cv
228.112 49.2339 228.136 49.562 228.136 49.8979 cv
228.136 50.3618 228.088 50.7856 228.008 51.186 cv
227.92 51.5859 227.752 51.9297 227.504 52.2017 cv
227.256 52.4736 226.904 52.6177 226.456 52.6177 cv
ef
372.056 4.44971 mo
368.056 4.44971 li
232.556 4.44971 mo
236.556 4.44971 li
@
200.855 7.08984 mo
200.855 6.87402 li
200.855 6.86572 200.855 6.84961 200.872 6.83398 cv
202.112 5.45801 li
202.296 5.25781 202.448 5.08984 202.568 4.9458 cv
202.68 4.80957 202.8 4.6499 202.912 4.47363 cv
203.023 4.29785 203.12 4.11377 203.184 3.92188 cv
203.248 3.73779 203.288 3.5376 203.288 3.32959 cv
203.288 3.11377 203.248 2.90576 203.168 2.70605 cv
203.088 2.50586 202.968 2.3457 202.808 2.22559 cv
202.647 2.10596 202.448 2.04199 202.224 2.04199 cv
201.992 2.04199 201.784 2.11377 201.6 2.25 cv
201.408 2.39355 201.28 2.56982 201.208 2.79395 cv
201.224 2.79395 201.256 2.78564 201.296 2.78564 cv
201.408 2.78564 201.512 2.82568 201.6 2.90576 cv
201.68 2.98584 201.728 3.08984 201.728 3.21777 cv
201.728 3.3457 201.68 3.44971 201.6 3.52979 cv
201.512 3.61768 201.408 3.65771 201.296 3.65771 cv
201.168 3.65771 201.063 3.61768 200.983 3.52979 cv
200.896 3.44189 200.855 3.33789 200.855 3.21777 cv
200.855 3.02588 200.888 2.83398 200.968 2.65771 cv
201.04 2.48193 201.144 2.32959 201.288 2.18555 cv
201.432 2.0498 201.592 1.9458 201.768 1.87402 cv
201.943 1.80176 202.136 1.76172 202.344 1.76172 cv
202.647 1.76172 202.928 1.82568 203.191 1.95361 cv
203.456 2.08203 203.664 2.26563 203.815 2.50586 cv
203.968 2.74561 204.048 3.01758 204.048 3.32959 cv
204.048 3.56201 203.992 3.77783 203.896 3.98584 cv
203.792 4.19385 203.664 4.38574 203.504 4.55371 cv
203.344 4.72998 203.144 4.92188 202.896 5.1377 cv
202.647 5.354 202.488 5.49805 202.408 5.56982 cv
201.504 6.44189 li
202.271 6.44189 li
202.647 6.44189 202.96 6.44189 203.216 6.43359 cv
203.472 6.43359 203.607 6.41797 203.624 6.40186 cv
203.688 6.33789 203.752 6.08984 203.815 5.66602 cv
204.048 5.66602 li
203.824 7.08984 li
200.855 7.08984 li
200.855 7.08984 li
cp
ef
207.152 6.85791 mo
207.152 6.81787 207.16 6.77783 207.191 6.74561 cv
208.855 5.08984 li
207.191 3.42578 li
207.16 3.40186 207.152 3.36963 207.152 3.32178 cv
207.152 3.28174 207.168 3.2417 207.2 3.20996 cv
207.231 3.17773 207.264 3.16162 207.312 3.16162 cv
207.344 3.16162 207.384 3.17773 207.432 3.20996 cv
209.088 4.86572 li
210.736 3.20996 li
210.784 3.17773 210.824 3.16162 210.855 3.16162 cv
210.896 3.16162 210.936 3.17773 210.968 3.20996 cv
211 3.2417 211.016 3.28174 211.016 3.32178 cv
211.016 3.36963 211 3.40186 210.976 3.42578 cv
209.312 5.08984 li
210.976 6.74561 li
211 6.77783 211.016 6.81787 211.016 6.85791 cv
211.016 6.90576 211 6.93799 210.968 6.96973 cv
210.936 7.00195 210.896 7.01758 210.855 7.01758 cv
210.815 7.01758 210.775 7.00195 210.736 6.96191 cv
209.088 5.31396 li
207.432 6.96191 li
207.392 7.00195 207.352 7.01758 207.312 7.01758 cv
207.264 7.01758 207.231 7.00195 207.2 6.96973 cv
207.168 6.93799 207.152 6.90576 207.152 6.85791 cv
207.152 6.85791 li
cp
ef
212 7.08984 mo
212 6.80957 li
212.664 6.80957 213 6.72998 213 6.55371 cv
213 2.354 li
212.72 2.48975 212.368 2.55371 211.952 2.55371 cv
211.952 2.27393 li
212.6 2.27393 213.096 2.10596 213.432 1.76172 cv
213.544 1.76172 li
213.56 1.76172 213.584 1.77002 213.6 1.78564 cv
213.616 1.80176 213.624 1.81787 213.624 1.83398 cv
213.624 6.55371 li
213.624 6.72998 213.952 6.80957 214.624 6.80957 cv
214.624 7.08984 li
212 7.08984 li
212 7.08984 li
cp
ef
217.336 7.05762 mo
217.632 7.05762 217.855 6.90576 218 6.60156 cv
218.144 6.29785 218.231 5.96191 218.264 5.59375 cv
218.296 5.22559 218.32 4.82568 218.32 4.40967 cv
218.32 4.00977 218.296 3.6416 218.264 3.30566 cv
218.231 2.96973 218.144 2.65771 218 2.38574 cv
217.855 2.11377 217.632 1.96973 217.336 1.96973 cv
217.032 1.96973 216.808 2.11377 216.664 2.38574 cv
216.52 2.65771 216.424 2.96973 216.392 3.30566 cv
216.359 3.6416 216.344 4.00977 216.344 4.40967 cv
216.344 4.71387 216.344 4.99365 216.359 5.25 cv
216.376 5.51367 216.416 5.78564 216.479 6.06592 cv
216.544 6.3457 216.64 6.57764 216.784 6.77002 cv
216.92 6.96191 217.104 7.05762 217.336 7.05762 cv
217.336 7.05762 li
cp
217.336 7.25781 mo
216.68 7.25781 216.231 6.99365 216 6.45801 cv
215.76 5.92188 215.647 5.28174 215.647 4.5376 cv
215.647 4.07373 215.688 3.6416 215.775 3.23389 cv
215.855 2.82568 216.023 2.48193 216.28 2.19385 cv
216.528 1.90576 216.88 1.76172 217.336 1.76172 cv
217.688 1.76172 217.976 1.84961 218.2 2.01758 cv
218.424 2.19385 218.592 2.40967 218.712 2.68164 cv
218.824 2.95361 218.904 3.25 218.952 3.56201 cv
218.992 3.87402 219.016 4.20166 219.016 4.5376 cv
219.016 5.00195 218.968 5.42578 218.888 5.82568 cv
218.8 6.22559 218.632 6.56982 218.384 6.8418 cv
218.136 7.11377 217.784 7.25781 217.336 7.25781 cv
ef
219.747 2.44189 mo
219.714 2.44189 219.691 2.43066 219.669 2.4082 cv
219.646 2.38574 219.641 2.35791 219.641 2.32959 cv
219.641 2.30762 219.646 2.2793 219.669 2.25684 cv
219.691 2.23438 219.714 2.21777 219.747 2.21777 cv
222.962 2.21777 li
222.989 2.21777 223.012 2.23438 223.034 2.25684 cv
223.051 2.2793 223.063 2.30762 223.063 2.32959 cv
223.063 2.35791 223.051 2.38574 223.034 2.4082 cv
223.012 2.43066 222.989 2.44189 222.962 2.44189 cv
219.747 2.44189 li
219.747 2.44189 li
cp
ef
223.838 2.60986 mo
225.165 2.60986 li
225.165 .627441 li
223.838 2.60986 li
223.838 2.60986 li
cp
223.652 2.80566 mo
223.652 2.60986 li
225.383 .0283203 li
225.395 .0112305 225.411 0 225.439 0 cv
225.523 0 li
225.563 0 225.585 .0224609 225.585 .0620117 cv
225.585 2.60986 li
226.134 2.60986 li
226.134 2.80566 li
225.585 2.80566 li
225.585 3.35449 li
225.585 3.43311 225.635 3.4834 225.747 3.50586 cv
225.859 3.52832 225.982 3.53369 226.128 3.53369 cv
226.128 3.72998 li
224.588 3.72998 li
224.588 3.53369 li
224.728 3.53369 224.852 3.52832 224.963 3.50586 cv
225.075 3.4834 225.131 3.43311 225.131 3.35449 cv
225.131 2.80566 li
223.652 2.80566 li
ef
1.5 lw
2 lc
232.556 165.729 mo
232.556 4.44971 li
232.556 165.729 mo
372.056 165.729 li
372.056 165.729 mo
372.056 4.44971 li
232.556 4.44971 mo
372.056 4.44971 li
@
358.364 17.8296 mo
357.404 17.3979 356.684 16.7256 356.204 15.814 cv
355.724 14.9019 355.484 13.7378 355.484 12.3457 cv
355.484 10.9536 355.724 9.80176 356.204 8.87793 cv
356.684 7.95361 357.404 7.28174 358.364 6.84961 cv
358.364 7.42578 li
357.764 7.8457 357.332 8.43359 357.068 9.17773 cv
356.804 9.93359 356.672 10.9897 356.672 12.3457 cv
356.672 13.7139 356.804 14.77 357.068 15.5137 cv
357.332 16.2578 357.764 16.834 358.364 17.2539 cv
358.364 17.8296 li
358.364 17.8296 li
cp
ef
361.796 13.1616 mo
361.796 13.918 361.939 14.4937 362.228 14.8779 cv
362.516 15.2739 362.924 15.4658 363.476 15.4658 cv
364.028 15.4658 364.436 15.25 364.724 14.8057 cv
365.012 14.374 365.156 13.7139 365.156 12.8496 cv
365.156 11.9858 365.012 11.3379 364.724 10.9058 cv
364.436 10.4736 364.028 10.2456 363.476 10.2456 cv
362.924 10.2456 362.516 10.4497 362.228 10.8457 cv
361.939 11.2417 361.796 11.8057 361.796 12.5498 cv
361.796 13.1616 li
361.796 13.1616 li
cp
360.716 15.3457 mo
360.716 7.47363 li
359.684 7.47363 li
359.684 6.84961 li
361.796 6.84961 li
361.796 10.7139 li
362 10.3296 362.264 10.042 362.6 9.84961 cv
362.924 9.66992 363.332 9.57373 363.812 9.57373 cv
364.58 9.57373 365.204 9.88574 365.684 10.4858 cv
366.164 11.0859 366.416 11.8779 366.416 12.8496 cv
366.416 13.834 366.164 14.626 365.684 15.2256 cv
365.204 15.8257 364.58 16.126 363.812 16.126 cv
363.332 16.126 362.924 16.0298 362.6 15.8618 cv
362.264 15.6816 362 15.3936 361.796 14.998 cv
361.796 15.9697 li
359.684 15.9697 li
359.684 15.3457 li
360.716 15.3457 li
ef
367.868 17.8296 mo
367.868 17.2539 li
368.468 16.834 368.899 16.2578 369.164 15.5137 cv
369.428 14.77 369.56 13.7139 369.56 12.3457 cv
369.56 10.9897 369.428 9.93359 369.164 9.17773 cv
368.899 8.43359 368.468 7.8457 367.868 7.42578 cv
367.868 6.84961 li
368.815 7.28174 369.536 7.95361 370.016 8.87793 cv
370.496 9.80176 370.748 10.9536 370.748 12.3457 cv
370.748 13.7378 370.496 14.9019 370.016 15.814 cv
369.536 16.7256 368.815 17.3979 367.868 17.8296 cv
367.868 17.8296 li
cp
ef
317.056 160.729 mo
367.056 160.729 li
367.056 70.1206 li
317.056 70.1206 li
317.056 160.729 li
317.056 160.729 li
cp
0 0 0 0 cmyk
f
1 lw
317.056 160.729 mo
367.056 160.729 li
367.056 70.1206 li
317.056 70.1206 li
317.056 160.729 li
317.056 160.729 li
cp
0 0 0 1 cmyk
@
1.5 lw
324.056 78.2139 mo
338.056 78.2139 li
.883665 .769161 0 0 cmyk
@
324.056 81.042 mo
326.884 78.2139 li
324.056 75.3853 li
321.228 78.2139 li
324.056 81.042 li
f
.5 lw
0 lc
324.056 81.042 mo
326.884 78.2139 li
324.056 75.3853 li
321.228 78.2139 li
324.056 81.042 li
0 0 0 1 cmyk
@
338.056 81.042 mo
340.885 78.2139 li
338.056 75.3853 li
335.228 78.2139 li
338.056 81.042 li
.883665 .769161 0 0 cmyk
f
338.056 81.042 mo
340.885 78.2139 li
338.056 75.3853 li
335.228 78.2139 li
338.056 81.042 li
0 0 0 1 cmyk
@
349.786 81.0796 mo
349.786 81.04 349.786 81.0098 349.796 80.9897 cv
350.546 78.0098 li
350.586 77.8296 350.616 77.6597 350.616 77.52 cv
350.616 77.2397 350.516 77.0898 350.326 77.0898 cv
350.116 77.0898 349.956 77.2197 349.855 77.4697 cv
349.756 77.7197 349.656 78.0298 349.565 78.4097 cv
349.565 78.4297 349.556 78.4497 349.536 78.46 cv
349.516 78.4697 349.496 78.4697 349.486 78.4697 cv
349.366 78.4697 li
349.346 78.4697 349.326 78.46 349.306 78.4399 cv
349.286 78.4199 349.286 78.3896 349.286 78.3696 cv
349.355 78.0796 349.426 77.8296 349.496 77.6299 cv
349.556 77.4297 349.666 77.25 349.806 77.0796 cv
349.946 76.9199 350.116 76.8296 350.336 76.8296 cv
350.576 76.8296 350.796 76.9097 350.996 77.0698 cv
351.186 77.23 351.286 77.4297 351.286 77.6699 cv
351.486 77.4097 351.716 77.21 351.986 77.0596 cv
352.246 76.9097 352.536 76.8296 352.836 76.8296 cv
353.065 76.8296 353.266 76.8799 353.446 76.96 cv
353.616 77.04 353.746 77.1699 353.846 77.3296 cv
353.946 77.4897 353.996 77.6899 353.996 77.9097 cv
353.996 78.1899 353.926 78.52 353.806 78.8999 cv
353.686 79.29 353.536 79.7197 353.355 80.1997 cv
353.256 80.4199 353.216 80.6196 353.216 80.7998 cv
353.216 81 353.286 81.0996 353.446 81.0996 cv
353.706 81.0996 353.916 80.96 354.096 80.6797 cv
354.266 80.3999 354.386 80.0996 354.466 79.7798 cv
354.476 79.7397 354.506 79.7197 354.546 79.7197 cv
354.666 79.7197 li
354.686 79.7197 354.706 79.73 354.726 79.75 cv
354.746 79.77 354.756 79.79 354.756 79.8096 cv
354.756 79.8198 354.746 79.8296 354.746 79.8398 cv
354.656 80.2197 354.496 80.5698 354.275 80.8799 cv
354.046 81.1997 353.766 81.3496 353.426 81.3496 cv
353.186 81.3496 352.986 81.27 352.826 81.1196 cv
352.656 80.96 352.576 80.77 352.576 80.5298 cv
352.576 80.4097 352.596 80.2798 352.656 80.1396 cv
352.736 79.9199 352.826 79.6597 352.936 79.3599 cv
353.046 79.0596 353.136 78.7798 353.206 78.5 cv
353.275 78.2197 353.315 77.98 353.315 77.7598 cv
353.315 77.5796 353.275 77.4199 353.196 77.29 cv
353.116 77.1597 352.996 77.0898 352.815 77.0898 cv
352.565 77.0898 352.336 77.1499 352.136 77.25 cv
351.936 77.3599 351.756 77.5 351.605 77.6797 cv
351.446 77.8599 351.306 78.0698 351.186 78.3096 cv
350.506 81.0298 li
350.486 81.1299 350.436 81.1997 350.355 81.2598 cv
350.275 81.3198 350.186 81.3496 350.086 81.3496 cv
350.006 81.3496 349.936 81.3198 349.876 81.2798 cv
349.815 81.2397 349.786 81.1699 349.786 81.0796 cv
349.786 81.0796 li
cp
ef
1.5 lw
2 lc
324.056 92.8857 mo
338.056 92.8857 li
.873045 .242161 1 .129244 cmyk
@
324.056 90.8857 mo
322.056 94.8857 li
326.056 94.8857 li
324.056 90.8857 li
f
.5 lw
0 lc
324.056 90.8857 mo
322.056 94.8857 li
326.056 94.8857 li
324.056 90.8857 li
0 0 0 1 cmyk
@
338.056 90.8857 mo
336.056 94.8857 li
340.056 94.8857 li
338.056 90.8857 li
.873045 .242161 1 .129244 cmyk
f
338.056 90.8857 mo
336.056 94.8857 li
340.056 94.8857 li
338.056 90.8857 li
0 0 0 1 cmyk
@
351.766 96.25 mo
352.016 96.25 352.286 96.1797 352.565 96.04 cv
352.846 95.8994 353.076 95.7295 353.266 95.5303 cv
353.506 95.29 353.706 94.9795 353.855 94.6201 cv
353.996 94.2598 354.076 93.8994 354.076 93.5303 cv
354.076 93.29 354.016 93.0596 353.916 92.8496 cv
353.806 92.6494 353.656 92.4795 353.456 92.3594 cv
353.256 92.2402 353.036 92.1797 352.786 92.1797 cv
351.766 96.25 li
351.766 96.25 li
cp
351.466 96.25 mo
352.486 92.1797 li
352.315 92.1797 352.136 92.2197 351.956 92.29 cv
351.766 92.3594 351.586 92.4502 351.426 92.5498 cv
351.266 92.6494 351.116 92.7695 350.986 92.8994 cv
350.815 93.0596 350.666 93.2598 350.546 93.4795 cv
350.426 93.7002 350.326 93.9395 350.266 94.1797 cv
350.206 94.4199 350.176 94.6602 350.176 94.8994 cv
350.176 95.1602 350.226 95.3896 350.336 95.5898 cv
350.436 95.79 350.586 95.9502 350.786 96.0703 cv
350.986 96.1895 351.206 96.25 351.466 96.25 cv
350.956 98.3096 mo
351.406 96.5 li
351.065 96.5 350.746 96.4199 350.456 96.2695 cv
350.156 96.1201 349.926 95.8994 349.746 95.6201 cv
349.565 95.3398 349.486 95.0303 349.486 94.6895 cv
349.486 94.3301 349.576 93.9902 349.756 93.6602 cv
349.936 93.3301 350.176 93.0303 350.486 92.7598 cv
350.796 92.5 351.126 92.29 351.486 92.1396 cv
351.846 92 352.196 91.9199 352.556 91.9199 cv
353.156 89.4902 li
353.166 89.4502 353.196 89.4297 353.236 89.4297 cv
353.355 89.4297 li
353.376 89.4297 353.396 89.4502 353.416 89.4697 cv
353.436 89.4902 353.446 89.5098 353.446 89.5303 cv
352.846 91.9199 li
353.086 91.9199 353.326 91.9697 353.565 92.0596 cv
353.806 92.1602 354.016 92.29 354.196 92.4502 cv
354.376 92.6094 354.516 92.8096 354.616 93.0303 cv
354.716 93.25 354.766 93.4902 354.766 93.7402 cv
354.766 94.0996 354.676 94.4502 354.496 94.7803 cv
354.315 95.1094 354.076 95.4102 353.775 95.6699 cv
353.476 95.9297 353.136 96.1396 352.766 96.2803 cv
352.386 96.4199 352.036 96.5 351.696 96.5 cv
351.236 98.3496 li
351.216 98.3896 351.196 98.4102 351.156 98.4102 cv
351.036 98.4102 li
351.006 98.4102 350.986 98.3896 350.976 98.3701 cv
350.956 98.3496 350.956 98.3301 350.956 98.3096 cv
ef
1.5 lw
2 lc
324.056 108.479 mo
338.056 108.479 li
0 .993988 1 0 cmyk
@
324.056 110.479 mo
324.586 110.479 325.095 110.27 325.47 109.895 cv
325.845 109.519 326.056 109.01 326.056 108.479 cv
326.056 107.949 325.845 107.44 325.47 107.065 cv
325.095 106.69 324.586 106.479 324.056 106.479 cv
323.525 106.479 323.017 106.69 322.642 107.065 cv
322.267 107.44 322.056 107.949 322.056 108.479 cv
322.056 109.01 322.267 109.519 322.642 109.895 cv
323.017 110.27 323.525 110.479 324.056 110.479 cv
324.056 110.479 li
cp
f
.5 lw
0 lc
324.056 110.479 mo
324.586 110.479 325.095 110.27 325.47 109.895 cv
325.845 109.519 326.056 109.01 326.056 108.479 cv
326.056 107.949 325.845 107.44 325.47 107.065 cv
325.095 106.69 324.586 106.479 324.056 106.479 cv
323.525 106.479 323.017 106.69 322.642 107.065 cv
322.267 107.44 322.056 107.949 322.056 108.479 cv
322.056 109.01 322.267 109.519 322.642 109.895 cv
323.017 110.27 323.525 110.479 324.056 110.479 cv
324.056 110.479 li
cp
0 0 0 1 cmyk
@
338.056 110.479 mo
338.586 110.479 339.095 110.27 339.47 109.895 cv
339.845 109.519 340.056 109.01 340.056 108.479 cv
340.056 107.949 339.845 107.44 339.47 107.065 cv
339.095 106.69 338.586 106.479 338.056 106.479 cv
337.525 106.479 337.017 106.69 336.642 107.065 cv
336.267 107.44 336.056 107.949 336.056 108.479 cv
336.056 109.01 336.267 109.519 336.642 109.895 cv
337.017 110.27 337.525 110.479 338.056 110.479 cv
338.056 110.479 li
cp
0 .993988 1 0 cmyk
f
338.056 110.479 mo
338.586 110.479 339.095 110.27 339.47 109.895 cv
339.845 109.519 340.056 109.01 340.056 108.479 cv
340.056 107.949 339.845 107.44 339.47 107.065 cv
339.095 106.69 338.586 106.479 338.056 106.479 cv
337.525 106.479 337.017 106.69 336.642 107.065 cv
336.267 107.44 336.056 107.949 336.056 108.479 cv
336.056 109.01 336.267 109.519 336.642 109.895 cv
337.017 110.27 337.525 110.479 338.056 110.479 cv
338.056 110.479 li
cp
0 0 0 1 cmyk
@
350.086 110.359 mo
350.086 110.22 350.096 110.05 350.136 109.87 cv
350.176 109.689 350.206 109.55 350.246 109.43 cv
350.275 109.31 350.355 109.09 350.486 108.75 cv
350.616 108.42 350.686 108.25 350.686 108.229 cv
350.766 107.99 350.815 107.79 350.815 107.63 cv
350.815 107.43 350.736 107.33 350.596 107.33 cv
350.336 107.33 350.116 107.47 349.946 107.74 cv
349.766 108.02 349.646 108.32 349.565 108.649 cv
349.546 108.689 349.525 108.71 349.486 108.71 cv
349.366 108.71 li
349.306 108.71 349.286 108.68 349.286 108.62 cv
349.286 108.59 li
349.386 108.189 349.556 107.84 349.775 107.53 cv
349.996 107.229 350.275 107.07 350.616 107.07 cv
350.855 107.07 351.056 107.149 351.216 107.31 cv
351.376 107.47 351.466 107.66 351.466 107.899 cv
351.466 108.03 351.436 108.16 351.386 108.29 cv
351.246 108.63 351.146 108.91 351.076 109.109 cv
350.996 109.31 350.926 109.54 350.866 109.79 cv
350.806 110.05 350.775 110.28 350.775 110.49 cv
350.775 110.74 350.826 110.939 350.946 111.1 cv
351.056 111.26 351.236 111.34 351.486 111.34 cv
351.946 111.34 352.355 110.99 352.736 110.27 cv
352.855 110.04 352.966 109.77 353.065 109.46 cv
353.166 109.149 353.226 108.89 353.226 108.689 cv
353.226 108.49 353.186 108.34 353.126 108.22 cv
353.056 108.109 352.966 107.99 352.866 107.87 cv
352.766 107.75 352.716 107.66 352.716 107.58 cv
352.716 107.45 352.766 107.33 352.876 107.22 cv
352.976 107.12 353.096 107.06 353.236 107.06 cv
353.396 107.06 353.506 107.14 353.576 107.28 cv
353.646 107.43 353.686 107.6 353.686 107.78 cv
353.686 108 353.646 108.27 353.586 108.57 cv
353.525 108.88 353.436 109.2 353.326 109.53 cv
353.206 109.859 353.105 110.12 353.016 110.3 cv
352.576 111.16 352.056 111.59 351.476 111.59 cv
351.056 111.59 350.716 111.49 350.466 111.28 cv
350.206 111.08 350.086 110.77 350.086 110.359 cv
350.086 110.359 li
cp
ef
1.5 lw
2 lc
324.056 123.151 mo
338.056 123.151 li
.713191 0 .306584 0 cmyk
@
324.056 121.151 mo
323.606 122.533 li
322.153 122.533 li
323.329 123.388 li
322.88 124.77 li
324.056 123.916 li
325.231 124.77 li
324.782 123.388 li
325.958 122.533 li
324.505 122.533 li
324.056 121.151 li
f
.5 lw
0 lc
324.056 121.151 mo
323.606 122.533 li
322.153 122.533 li
323.329 123.388 li
322.88 124.77 li
324.056 123.916 li
325.231 124.77 li
324.782 123.388 li
325.958 122.533 li
324.505 122.533 li
324.056 121.151 li
0 0 0 1 cmyk
@
338.056 121.151 mo
337.606 122.533 li
336.153 122.533 li
337.329 123.388 li
336.88 124.77 li
338.056 123.916 li
339.231 124.77 li
338.782 123.388 li
339.958 122.533 li
338.505 122.533 li
338.056 121.151 li
.713191 0 .306584 0 cmyk
f
338.056 121.151 mo
337.606 122.533 li
336.153 122.533 li
337.329 123.388 li
336.88 124.77 li
338.056 123.916 li
339.231 124.77 li
338.782 123.388 li
339.958 122.533 li
338.505 122.533 li
338.056 121.151 li
0 0 0 1 cmyk
@
349.636 125.08 mo
349.636 124.979 349.646 124.89 349.666 124.8 cv
350.386 121.93 li
349.336 121.93 li
349.266 121.93 349.236 121.89 349.236 121.8 cv
349.256 121.66 349.306 121.58 349.366 121.58 cv
350.476 121.58 li
350.876 119.95 li
350.896 119.87 350.946 119.79 351.025 119.729 cv
351.105 119.67 351.196 119.63 351.296 119.63 cv
351.376 119.63 351.446 119.66 351.506 119.71 cv
351.565 119.76 351.596 119.83 351.596 119.91 cv
351.596 119.93 351.586 119.95 351.586 119.96 cv
351.586 119.97 351.586 119.979 351.586 119.99 cv
351.186 121.58 li
352.216 121.58 li
352.275 121.58 352.315 121.63 352.315 121.71 cv
352.315 121.729 352.306 121.75 352.296 121.79 cv
352.286 121.83 352.275 121.87 352.256 121.89 cv
352.236 121.92 352.216 121.93 352.186 121.93 cv
351.096 121.93 li
350.376 124.82 li
350.326 125.01 350.306 125.17 350.306 125.31 cv
350.306 125.6 350.396 125.74 350.596 125.74 cv
350.886 125.74 351.146 125.609 351.376 125.33 cv
351.596 125.05 351.775 124.75 351.896 124.42 cv
351.916 124.38 351.946 124.359 351.976 124.359 cv
352.096 124.359 li
352.116 124.359 352.136 124.37 352.156 124.39 cv
352.176 124.41 352.186 124.43 352.186 124.45 cv
352.186 124.47 352.176 124.479 352.176 124.479 cv
352.025 124.88 351.815 125.24 351.536 125.54 cv
351.256 125.84 350.936 125.99 350.576 125.99 cv
350.306 125.99 350.086 125.899 349.906 125.74 cv
349.726 125.57 349.636 125.35 349.636 125.08 cv
349.636 125.08 li
cp
ef
1.5 lw
[1 1 ] 0 dsh
324.056 143.229 mo
338.056 143.229 li
.385412 .90045 0 0 cmyk
@
349.676 147.8 mo
349.605 147.8 349.576 147.76 349.576 147.689 cv
349.576 147.66 349.586 147.64 349.605 147.62 cv
354.886 141.47 li
349.605 134.24 li
349.586 134.22 349.576 134.2 349.576 134.189 cv
349.576 133.89 li
349.576 133.859 349.586 133.84 349.605 133.83 cv
349.626 133.81 349.656 133.81 349.676 133.81 cv
361.676 133.81 li
362.886 136.609 li
362.596 136.609 li
362.286 135.89 361.766 135.37 361.046 135.03 cv
360.315 134.689 359.556 134.479 358.766 134.399 cv
357.976 134.32 357.056 134.28 356.016 134.28 cv
351.396 134.28 li
356.116 140.729 li
356.126 140.75 356.136 140.78 356.136 140.8 cv
356.136 140.82 356.126 140.84 356.116 140.87 cv
350.926 146.91 li
356.116 146.91 li
357.136 146.91 358.046 146.87 358.846 146.79 cv
359.636 146.71 360.386 146.49 361.105 146.149 cv
361.826 145.81 362.315 145.28 362.596 144.58 cv
362.886 144.58 li
361.676 147.8 li
349.676 147.8 li
349.676 147.8 li
cp
0 0 0 1 cmyk
ef
356.177 149.968 mo
356.177 149.87 356.212 149.779 356.296 149.702 cv
356.373 149.625 356.464 149.583 356.568 149.583 cv
356.646 149.583 356.709 149.61 356.765 149.66 cv
356.813 149.709 356.842 149.771 356.842 149.842 cv
356.842 149.947 356.8 150.038 356.716 150.115 cv
356.632 150.199 356.541 150.233 356.443 150.233 cv
356.366 150.233 356.303 150.213 356.254 150.157 cv
356.198 150.107 356.177 150.045 356.177 149.968 cv
356.177 149.968 li
cp
353.972 155.197 mo
353.972 155.085 354.014 154.986 354.084 154.902 cv
354.161 154.818 354.259 154.776 354.371 154.776 cv
354.44 154.776 354.504 154.798 354.56 154.847 cv
354.608 154.889 354.637 154.952 354.637 155.029 cv
354.637 155.113 354.608 155.197 354.553 155.267 cv
354.497 155.337 354.427 155.386 354.343 155.414 cv
354.427 155.441 354.504 155.456 354.588 155.456 cv
354.784 155.456 354.959 155.365 355.105 155.183 cv
355.246 155.001 355.351 154.791 355.414 154.566 cv
356.072 151.941 li
356.1 151.809 356.121 151.697 356.121 151.599 cv
356.121 151.402 356.051 151.298 355.911 151.298 cv
355.701 151.298 355.525 151.396 355.372 151.578 cv
355.218 151.767 355.092 151.983 355.001 152.222 cv
354.987 152.25 354.973 152.264 354.945 152.264 cv
354.861 152.264 li
354.818 152.264 354.805 152.243 354.805 152.201 cv
354.805 152.18 li
354.903 151.899 355.05 151.655 355.246 151.438 cv
355.441 151.228 355.666 151.116 355.925 151.116 cv
356.121 151.116 356.274 151.179 356.4 151.298 cv
356.527 151.424 356.59 151.578 356.59 151.76 cv
356.59 151.83 356.583 151.893 356.568 151.956 cv
355.904 154.608 li
355.854 154.798 355.764 154.973 355.631 155.127 cv
355.491 155.281 355.33 155.407 355.147 155.498 cv
354.959 155.589 354.77 155.638 354.574 155.638 cv
354.42 155.638 354.28 155.596 354.154 155.525 cv
354.035 155.449 353.972 155.337 353.972 155.197 cv
ef
2 lc
[] 0 dsh
128.756 107.292 mo
142.756 107.292 li
.883665 .769161 0 0 cmyk
@
128.854 122.81 mo
142.854 122.81 li
.873045 .242161 1 .129244 cmyk
@
128.756 137.558 mo
142.756 137.558 li
0 .993988 1 0 cmyk
@
128.756 152.61 mo
142.756 152.61 li
.713191 0 .306584 0 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.2%%For: (Troy Carter) ()%%Title: (nl_dynamics.eps)%%CreationDate: 6/4/12 11:02 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6H!;a[cnB^[!8dfV'Le_Y_3r\r*gX.,U9[0P^cf>[SBlYbP"p54l%ri>Zd4'fg<W5ZV__:%orG*gP'":frb9&(>49H(5Kh.p%;bCdracM^\.4*F,mD`kRkK+n0FB(2^>#&$"9npkicB&GHhLHt#]Mrd`r-[%!rSqemV;CO'g<FfM\"##J>AGMqC@CYfQFs@ZS*dtS%`FeN!1Qa<VW/oIuZX.Km^M<_C.-:Y+'W&k0:S[`3q"+/`mk,u!e&5emOVE)gK<h.Pr(`H"=te-mfD739>(>B(K#^$%TKeV.BD$]q%H3#T0Tol1(lTMt5b=Ma2,tK6XeT=^l'&XQlOsKg3$DOCC1Uj:TpI;@DXn<Y#f)<83Qu9P-<U5,-O>piIQJkQ2$@Yp(-u)N+1mMZ9%YCC\`[=4ZC;AAbn$D.Ou[(fg*JJsd0870h&e`;m,$9:u4PDUh:AOF][Z:m&9"L%jUW;jQ$gof78lWm-76FVHqp`CWCW$m6_5O"B\%T4Yc`d;&<IjWqsDKKX"`esh=bf)+!0%ETrYs$Z%6AiQu:hs5^KPBQO&l*?g9=:Hs'qmCq>h4@W8q0:Dg\'E`pUm4T9+;*TY-!d0N%JF<nP8t*P&P"$qLP+nu/<K#-MXT?V_dTA@f%.,bXp//<hhInKFNRT&Z\rBdH!MBdPIZT$>%.8V/rD+@@IIHpr/ZSuhOei/X*'qXd%SC%\h5Cc=0[0@7=16TF)"uN.^r6d(HqR,F\W<#(sfDeDXs6V%<$LgiWnPdp+dkpU$<+;iB7l#PQ;d%,<Z:plkX8"T$9@GR2cq_JS%bb]$@9@Kn@<i0S?*n/%i^e#leD46j81bfeq_b\KV.UfJX$/[;!n4BU4H)akl>-2NX^0Rl#o4jQ)6X*7=9A;gLUegMTp)Fqc5;<uJ%#sU-\p5/I,5/SH#-g&5di@">g;1cN?IDSeXKg!:K/;_f3QAduD:[C%>`Dl1;ek)i4lc38_0DraNeLIH$n\LMi)H/+`.cDb'PP1NT%T!k2uNRj+AB4Jl#d!qDjqhLeG&fj9lC\j!M)#hKZfKV:2PUc<2llU]90C0]"J,H)o`t\Hi>hD:=Un^JkK[Q.:O#8[6^m6eU@:Md]%8#_NZ.,>_GB[:DYZ/r>uZsHok)_[Y4rPLbM43!]@4+*OkRQe^ii@!c^r/LZM1njBt-g&8%-.7aYg"`9cUGYm9Aj":^KlJ'?S8ntu%"ZA$dQr:NEekrHrH7@[Sj_R=ehe:b!(TX*m:>_tqks*mB3\r3DdkRc-Td<[[5K^adCo?_IdVQ?Q1Q0Z&iI/l)N:.ed_m^X-@PcgX%AO^6D*3_kjP5)IQ%G"S2?</^2QbFo+!r7V$WDjS6J!*3l3.L0W6nnQ%r2'E+BiUuYc<pEDfBI5:0E#N#oXA85\ddt4Tg550J*F^W%OoBP'dXR*q\P,ql^[tm06@V(Hks*#`8*)ak*IcFVV8(\:qA8uU.4%EbQJqjY_4[b2"2F)3pajT'814k'?</B@s,"*iC>AioDYaf,%Tai+/`*2[iVR%&Khk\TrlD@A:UpIP$-eMLo`-O!L8_s)I;8BsA$sH9%``c&7O?t5-;QW9tbCXKBn+.@24l?Xp*D=:G;LSpF_l&YT%*dS^i7LEQUU1i(aQ:sn4g(R%jDo4Z"o+_'rW=//eQq!\kV&@NLDeP%ceiQFA2NW2XH,FBrVZjH`F9L:<dCbiuDj,Y/V[.4*ft2E3%.Q0Gj[$Rja82Zj9MkqWY/7D;F#,K5jEiC2![fWO1_Rr4#dbLN&l-2K\jDD6!,/qX5qnA&s.%'XT;SQc69UWVu=-O'fNDqhNnht1q%lQ'bpme"HJ%`emO<0\q,9ooEW8Z!WreUgKK<9?i*(0/F(UV&-egT^@82KZm=p6A0q.Su#%Rna>!1B*"dbBD(1P&Zdq)edni&!_1F%72bl$Wk)@Dp$*:J<)kDPYgoO4VY,pF(i(m+2F^Fp"PG=l=_(9mct7i4TO7JSN-41%Ou+"WZW*%VIn91T"K\X(S-fc@h3)E*,+6$m%?_simKaLP@'U"6[YO%2V^5^VRAO97NHiit67GX%4\q,>=111+3"TK?1FhMP;`^$PD1]^e,2g#ekdOVCnKaP1TVS@YA,pna/Y5o==%f"o'&7H#hG)eq1]#]Om<L+'F2"dEd,n;3r+S^9RY)+d[?`%.Z.a98uPaBA"<6#M9]p+.\e>a)EOpdD(]-ruEg/51ToTZuQ08m5'<%<F%)T<$%EAJ^.(B(MtJj:QcHFoXjCcYmNT`WJ'')!n+qN(+_IZZM-q5O9Y<VLi$!=W_B6Dat/Wq,5Db2egtLbJliRW"X7e+05Ca<%Y&$A<$A)lS$:%`3T#t(Ccs"sF1K5ph"VFB^Mn4G8.]TX+)QT`5-0;u,!H0*AOcdS#[,6UI8PNi>FG=-KM@!9@(F:)5)R`6ADF#2X%J"g[KAP'dGkTtTXs$7[P,8pAi(.p>Y9u5W;#JF(J'T`e;)$?+fn9+uYUc#Y2XU1<CO<e3;_MP.@g5Ura7K:Es<UMqCf*$:=LU0:a%J?^kG%L/s!KT8AbcqCBPQ?9e?c*X&Y$:I*V8RDfKTfI''^<,5U;6N74")+muSAefEq(RuC!BQnt9/rs&Cf8F.-_9lpY8E/!acI+C%3N62\g6/FO[n@^V&X:)H5[$Sm5ZT<DYF$UFm4K4j3h@*WRuVY7M7NoI/Es08;2Q]BYoothHq.'?fPb%qMNS!\&pdK.H5M?tDt,od%i.r%QL/2)2AR2,Y-.5E%5om#V@Y)U_Jh?@dg1%Xg[nqA`ab4m>C+<$mq]sVDnIr[tm"'VA^nENBQ&N+cL/u:iZ/s>U"[=`4I+RRq%lQo+iXt3OkK\R3.c>f5Fjf0UmTVk19Y^Y6;$K[pS[j26Aj9EhVh*<fiUPH1?C*<4p1$\#1QQX%&q(!(N=dLNi=Ci%#+RS1LBSg+2%?ajRg!nL)mY!BP=WLIT[r*P2j%PK-VUa:i+d!Np'"ES_*0gYh$=@21j$"]-*8Jr17"+F<SgR.-Bs,V*I[a>ei>Sh5gc*0m@6BN$q%%q5O<Ha&9)cXl37\fnfP&rnEk)<!$4A&.'U:Pg5XrQ@g+>*E0C+sTG8.Zk3?K=#c1)\^AGh',V?"c7u/9]\:(ZQM14Jsp7VE[X@6%'hP;AW`'OI$#3]J9l6*pN\X0YZYH66K`;>]d?qmNXg57&&L/8aB-J4=>*^_tGLY7bg/q7N5l4:1`R0J$-B[L9]#!*s<%KJTBT>&a%l4m<qm;]LPg-;00+>KpW[%M];h^0O/C(iq%8P%?Jkl6r$;g+rOcV)(:18U4fr?^3AEcVZJ-qglhaC:8$#%T%VM95%\S;/""C430i%qEEp^X):G]5i"[?MYpK1i,j;f.NnIiHAb'Z$1JEI#MNV=<1nQ>21rP)-etFUqCVM4jBurQWEtJ7MO]Qe==P^Q,!%-fK2sD,UaS/]%>(pNZg7r*&,+2%?]/=2Wnd*Vn!/1HCR766"&bgYsoTKTe;#Wo>Sas*Td%=1UcL9-"Z&BRNR;GU;Lt"$BN+*"W!Fgk]9A"<C[EteI%$boiV.C)egVNBXN9WLmb6=lZ\8(<\RbdM`?29-'%F\rOri[-"uM5ICZedVN#\:bq7Vq9-FVY2qf.mb9+N[q'/>NfP]eAa3`mUI)/%Gtm3.J36g\r@CpCFQ>F-R4HdEFefc47Mo<<)k^.TV1<]"QC+47,qDCddaJQ(gIF::$)!BO:s$ai+2\`[r1gZ0c"Klr20G,8F\_tQ%8jh>uV^7d(`@]gK,nX%.k0fAjD(J!?$T/pRlq5R)Z,bEO92/rB9;\.cRhR0UqBS"2W.`"dWer+K/7,-#B:]3#52ga[[>8bB(58b,%D4OoC9\Jr]0q.u;%`V'a\e10<ili\!0ZB9^/XZ`kqTp#AAuTHBJRPoHLgsO/N%<<YbRLp'&J#/Y)a$!F:5j*%n-7#G=]O,,=S2=S%*V&n?c*CdYDB$0`]j%h[4khNG@6c$;FD`idoZdfXB94G`-$3(b;V=BQIZ&BJQ%Igh6%+a8:%&qj=q()k;%D+/]X5'e\'F9'_.4CN%ht@<X"\Jp4E,5jK,HYZ%W2(u+Fr;(9:u>U;XO+&3A-XcD5"^o42=:3F%\==^pHUbS?p5.YFm)4N9hXnU]JF>R(Pp:u/FSU1Qh\^!%2nB!aQO*&K`#:<Y4Y/GZkB53gikl,]!dpK4RRFM'M0bPNhcOcO\,#hnGYQ*'#)Ys1JrXc-@=WiG/?;7WOiIE8\N%1a<haa[g<*[2%*4K.<L"/hj(%P8)5\14b0FU%2j[(7,O.D6=O]G!TTE+u;;65<6>Qp@d?iu$-`oPVLMA@3OM'3ELGP'`H]u:nB,5".k1P+]iD[g6C%W".VjP"dkF/$#!9g6mA2//T9:T%)sTj60O?I"hTI2."=tU1k%j*B^0@>-qer/]6Nf3^^Sa7[:'Xn2^cMPLD-^)m15;:"\G-<FU#a%JA3X">(QNLA^;@fOdaek9'6N,6Wau[o0IXel>YIqlo<E;9<'\fjOU%0j?_2@,l.*:B81GT,$#T/\B,S\r`l],E]dq-O3CGO6O3!N%mW%pg(R\cj_cbjL&)TuCHtSK@ooRQ9$!*(ZZ4Z^-oigNTGEEtSmlO9IT%7+PBV)Q2^?\Kg);JSQg'5h>nX*3sXc-ZuL1tJr<'iI!%XX0+d:nB&_..FF=Yr@2J,tEF2Q3I<]GUHH`[b+A-R4gWJno$L/RJu[=kBr;7h]83-bukP140)i9GImWAB*k%JhC$$Un@g]t43(Us%`0!ggQofdh]#&8L`^c&$67&kb#56lYN2gu2%t?Tc/$n#NQ.!J`ecVB/?n.G@:<AN>j^(N#BPF<srH@t"k>`Q\#e`o<^RuQ_Xi9RC%hNk:YP3pl'Q5+tm%_5,',l5':0'VFg_3qLrX3+!nNK.thdX&mG>P).!rIoUbH>H[7EOXb?^XHihGOjgrhZ)iem:kYUj'`mI2d3_*%/9+4P(lu_^+*b0CD?"^$>&WdrVXW;gXs_Q-[26oM4F7!4J*G9,1KK,!mHgauYNKY[c?s:keRkpf:XY$f1AT&k7_`63^U:[\cKd<p%de^$$Cj3Bum?Cf?2>O<(m6hb=goRnuh'>S$9AXUb"]&ku,H#?*/OlH,DQa-F,Hm1[SdIe>E0"I-<9o#ZMp6S6[:bh#J%?Roe"Y#I%Hbo*'h.3efe,)\-\(aWh=SF&PF=WcT@fHBs*QR5pekq><BWrg6K=@^E\,W)$"`ak"!"]+QV3brAB&gR/l[1Nqr$q2]DV%:K%Du<J%IQb00NS^#>:L)%^XkRd,2!\fSpA4HcYgSUODiN<u0HuWs:2ATk*Sc%64Su("lD2Z'8!W-tZO9_S5m$X5G%iC1pmUg]DN+#`gT:,^%q7Ti+mhY_]>Y\gI62K,\Rf3-ZAH&h,<DP4onn3rc%Wo\4+s`3^!k0U]9O?6liA;.[LRc)#<Cj?beF;L*pot36IRDQ@8Pr#",]E.*%j=;K_SL-ntYDG@VO"6&t*ngjK8Pc#F:-TqZEEm;1@=jTL+$[e`X`rYal1NU,,R3t[+29(]MfpmYD8Qe%4qu%u^d'PEL/CEG'^-da%U0,Y>@jOK.T#?/rXgYP&p/Etqbd63B)#10%K%-`As!>E[8WesBIKpp,TS+RaMW]/bqjMoKXnG=8q;/7*@J29>?;4F22)qe\kKSft%:<6#BU1aEWC(-NV_G9d%fjq4q"B^;"^f1)]W6$a1XDjK+<,;G4lX>;Dc'?%)fKX2eek+UPe#ue1Y*sjSROuUbKHDe5*V;MpkC;$N%5?8!;Wg\Fms0onG/TeT^8hbGs^?Y[N/'rS>#)K$3i3-=n;1!1ioLSGcd"q_^D><![KbYu]b=A?'g1B(.SRl%qciCY:kFXprFHJ[(%jQjRHHSq&N3.q5i%rCSb\Qb$]oToN7ChRFheU)tClE(2"jk;9ami;V1%tasN*l[I#b>5>!rq`gAch/fU*Co1BB)C\rrYeM/<kDB3%mh(A`hIf%'\hFR(8I)!dp=pe,LuNofIs`pK,SpkD=oQU-+=<6+IIFlJrI54VHd0RRs!Q`cFQBP%ds\3Zf\ZX=TA30?]CFVTLhrri%X#X$X5i4c-f:)^WG./AS3"R2)`qr958gbNl:/ajJ5LqF;H65,-m#iAYrnm"h5CU:kDYHHWfWW'_BiK*EGU;t#G5K&'X2,8SG4OP3%?I=<'s4Dl#qk&FC5c4S)O`kba1SMg0mK_@N6Ea,SN<\Os]?*gWhQ(l#W[HPNe[ljof^oAT&<k-cgNiaiI^8OukguCFbspT"+i3l3%5[N3A6e6:@qmG#P:[Pie4Do@^c+pA,G^>'->O&^a/bPjgG_$>[`c1Q;N.Au`R[u?(6,@Ue<'%RMgX$*,h$c<;JY07mRsrD3;g5Rk%NF&McqtHc7rNnQ/3e9WU$9bLMceGA)5Z5F<]@XiaPG]$,c1DPTG'$1>pI,VCGC#2XQ91./NNF@93=%@q4i27t$Jg$15aH$KB>,qD%rol?\Xa78`6Q7[kYMX2HepSBhchu4-FHS:oF;=_;m+1'fVsFkDitq][DQVNoGF/</^\$::jE%G+CV?s_Y=YHt]u;QaiR&@#.%Iad%n")#]"7=34D783TUJC3qAmAKeJVX/]-+Qg>d1r(UBZhhn2>!QMP,s%@NPO+S[jqFMm3s$<ob<Yt=5NGJ/fO5N;r?@g%>:rj:B/4&%7C$t4%k83Q<aknPHDe21o@Zd=alJ%+8g"d@.I%qLmU`NNk^@tl+k^N0jBY,M@MOFZZ![d/L>XXM2hrg@]\VQ'&#+oOrNagd;"8n`%YP%5?D\8!Kr\[Gum^-<ds&9rn?:=\'YFO-Mg9"F'Y>l^G/F'KS;Q;[F4A-W^*cGQqMiBU$UkCJCeg\L"\5MhGghq<Ts3kk&F/FL.%Ql4$+/3Sf(=M>CbWm97Nai:g!?9M2>&7sKE5sfhIQ63,8)Ic6,7tef%.cb,pTpG<[(6a!q&[2DRIG[=+-'36$Uh]:n?>.#2,;YPR%p>c^KQbcVK:ulkB`@8hh=bPk!.L;1*f)^3V#8qm')']<,i7unp72s@^95a`$X0!uG3c2ms[U%C^]fJ\OZ[LAMQ;4<``k6I53GUIQ%'WA5$H*>e834a';-X$6/\!*^X^T])Fi)4Q_^7>+;[9l*`eOdL(9eKb2oNbaM[TPP0dB^rm6g"*8rn@/C8il-bh%/e`IQDW%<gebQ%hG62d@6g_/:]iBg['NM4^eARsEs8%Z;"&hb6mD5[CKaCufY*3=K0qDsc"=7[lTi42NN\sdc)Fb[>V/,8l$$Ng_V6P[[J.;@<j,F(%A*W/_(tchYeF5]264G6U[(EO7f0Q!&jq$3pf4.l\JB!l7ZfF<M`OGpPpMpibakIYp2j*Tp,EKYU;6*u8hD+`pSbK>6*"6Q[[Jffb%UTTLM\CnJ(bco*t1A>h8%;_"]!<-,iotTcdX3-s.#1iWSIm_\9oB$?C"o`C(6`'ab)OdKTnmr"Q`]tR6G/)F;_DfaZF?Sumi>'uI%)1/lA+sKgrKhK(^*b3Yd0/RiUoq"&']'<5H5Fn=foZ:A!c>q$6p#fkb%9*$ZH'^PgF``!iTDV=hn)MSmY1%5XF:ZAf6o1t-eI[<m%Vr-p\cJ&I5%B^`Jg@"Uu_oP3klRcH6q3V-XA'(mherh7+]i-=KG&@Wjf)F)-Sn!i_c/]/M+p.AHf'PoelZ*r%,-lB,n+B09XW:D_%[iO!Y1=3j_]!'q]HY12=X3G!+nqQbf9D90u>bgo<mf!_q,D,K;p5R+nL/[Q;g!/3QZ=c:N2*<No5`iU=g.o`Y@EpOanQ:q^Kk*0p%@h-r&>)u;)(g/jR+bf$)[MHQn$@JuM)XjdV8p38O*.d2_=[FllZoPH<38<?\ZLKFu+b_pAPpt>B!4lL#ci5?8>u6*a&]b$W46**:%OtRJ9V?WWnlOl4XZVKVSRE'+g4KCW%U,"bc82gY*b#;"J"1)uXo@594b:E6uL56Sc7"IALFQiCe<q];O27RDFAlW^2Mbu7j`JN:/%(+`q-KG13=FY.?^2MgL..*-8!%0Q?JZWSXoj'el?+A)Y,hREA(X;4\&kC&GE4nPW55/Ln;Od>IH^LH9/b4/DP0MBH,Jk)(/Z`[Hs%7+Z,6$dg[`>9?OVgBJ#+dsH@SGs,JdGrj3:Iq)CKYE4%g;OMu[Fg1Utpp1e7%dFN>\.EjHB@6P:IJ7L+Z4N,(lcg<?2M/#QCU:<2%"Yf6ISuH!+JW7->5PNmuFPkgM$<08K#:b/PCnc!T<J=aMV)74.lQrp1XnmCh=[hjl(MAW=I/V7>OSgoo9HWcrHFqi,Gn+=IBG:l'%T57I7c1?Y6lGYWT#WZY%<]aQ_[CFLb/d`_X1J5s8mQbp-TO4r?)hC8r!m@!"_g&tQQBHrm!?7JK,b3EaWZQa*D024h[SSlL92lq`%b&QI6HLnZ'IB1-T4W+L;NZ[Z'[i6;##%VL(e]YXp9$Dd#/a^ciQH&f3XGgB>g++YM`3hin1kVq7]5U*&&h^k_XJNC)f?tW,BkauG%<Sq>^72G2c*8?p?LYC84P/!g9F%+qTFo+QtmV%qXJA(,dHm&Y[]Nl+E'0jc1"h"*Xk^`6\qM_Oq1[c(BX7%3p^sTfac/;0H\IcI[%(1FkD\oej^?6),W%@]tc>0uAcBO/kG-erc]\,D957GQ*#!ZCdgGM/?Yc[dVLX;YReOF5H^J7hs;_@V0UAj'%-#j2ZBkhoUQ1<>kY%#a.7n#"t_R1.X7q/<Rtp4pAL1E)t]G1":4a)&GrjY,b?EG2r-R0BBGEMqO)N^5UqpAbBS:[ND$lhoLEbH/lPE/AITWTA.hmCUN`&%E4p-RQ*P2'g.,mahHii,jl]APku;j)F#>h)G[mTd58s%Tkq/7Er[a\<(([RjW?pLg'(Thi),e/:.a=S64fNW*N@TK.)b3]iEm]sX%m7-ua=^??R[e4"5nEN+N[NFh37(V,Y?[FCVFq/^TpWVL*Z+]ua=)HhCQ^.!pNDR?g?Ct<N$>V<S6:#Nm[E(/AFU]`g44ijLWQ!&9%S^`h-A>HLa\MNT;JSCD!io@).RW!R3;tKrs"1pJ;G>24&`G\1YaBa@=A)5q3q<`8POX=B!V=*NhdbO[ufomkOmho?X`q8s,r7l#o%YHuhlerBW7\%C)#m+sUZ4X%#!;5-*nJiD.[o&`Lj"1>eeMM)U4cFA#c9+.4LH/JD=Y&C.KSUhoK.db]k<`#V'h>>6R1JajK0?2Ss%PPVu>&UZ*Wcu+kr.c$\653Hk^.pYm*p80LHO.d?H^7MFNXY6#YGPs#9Y.Q0`!L7EKe!E"KWi&arKiG*Xh[%c,G2ull<;!^Tdumdm%r@/P^D_KjrQ-N"EFbS%3T=uf,YJSjkpY*B[eaEmFFT.5/WjE#NFREqtWq:ORN`8VcYsqa]?KOICV8/8?(&+Z`G43V@a&qU(+=eo8%8j@O)jBlV6HT.)\<9mM`*===G6']0+*t7\^^XC$B_Xt>2F5U#d83>AqVE;b3:o2nc;G4[mY>gq)cE8uW%XfjuWn,Zfg/BRfWd?,4%J4d66ZtcNY!L6tU$J"kG\PjsLKr]B4Ao2_+rc-n$l.1]2);*EkV,Y_Ye&pKZeMV'<jqI"9gu`&VX'HS+lh9?TS#L_S>Nu.4iOr7U%ohrfY;dIZ0DOa=Ma8!C*'SZLh'A^FOSZ*]@s8'_(Xn8Pph[Z_EOl"90G8C/SWn_3?Zi0>7s%<%HL](t1,NW.oq+bG?W>*@k?1$<r%G5`1TBj%q[*_cT+pQqc'?QU(br$hjVF8<&k$gd1jVZ,3SWq8RO[Brd>W3h`d[:s_UUs_ZbgXhq6o7t+RInuX((BZ/#dtIVP;qA-M%i3B9!MoOq#qJaiK^^grWO+ES)lPl8dTLo`JVojIV</Ng#SZ<Rde5cNZa03p/pMaj#Wq9GcpIq$W\PSE&V7!<%Q;]5I(TXOsmZ1Tc%YhI'I8rqOYh[c!Q9rN09lU@9(p@Y.[l)2)MWAOQs47u&m9r+WF[CG64&>qkVn9,0i>oFE2LJ&%i8pr@</!]!P>3SMRZKP6p1-+5j%5NZ:YQ;j#[Q:lRB;-;/I)2G\'Bn!9a/NpLb]tFl?m\W+3VPN5!#H8EXAbdV7l0Ig3>31rK\oG!imtPkUnaDMsJN%$7l+"YrQ24i:%Bt<p'H"nS0oJ;u"?b\Z$D_(E5C"Cg\d*jU$_a,O*.FBatX%*p$HiTINeqEur=X$WH"oQW"Y^a6X"?e=Bqlb>bH(%;$4>.!GWF&-A%gD/]2A`ko6l(`2uqWrR#3]bLPU2Y99SI0W=2CG#5*b9koWkq3i46QWc2'p%cq+9i%o0GsU/R2VXf'$',7)Pq7_WC[C7aTV4iRa#k%?kaQ-IOP-B.]&fIO+j';rBBH0DrL]\B#4)gU"Gngh#Dh-%!_Zp'HSl-jIiE?_P?g<#!@>#6=4a@HYU@f>"1?@Uk=2qcdQ?Cp7WDs%oM"%%RG&+GfLoF2r0/*#DnjSUf>%&lrL^)#Xn.h.r_3sCUu$*+DLRr9<#MoN1>Arlh(,:AgRIO$WE8X^rFTeEg&:=<<11K'$*u+p%T*.<lc`XEuST7M!9+.Y``<R#m]p!_)cPG9K6Roe#f/dWk1ooE^MjCaB(hZ5DG.S]&H8FHN.ojnSoP7o@Q>\7R3Cjg`V./kh<%@&)%ZLHRNa*R,%h8ImcZp(YTBmG_Pj1A[JgpuW*D]QBV5;68^?pe9!&9A)0leAFVZVK[&CX;T+"/dVVlms6jKQVK2RThj[@`H^@JID4W%>#qX!Z&i9d[J_UUY-3F-SZ9Ed4d?)+g!pG[oAW>,V4\YI2%F@ePs0n$]!Z([E;t'(G1rq&gKVtslq1hjV8fraos)9K.c"jNa?,[G%.ojl,&o"8tma%)a$`oS3><o#m9nMJGk?k3/I7pXe^02>(^SJY;M<tjV.9[4b:8Q;R=1._Z8r^`PX5HTI*sj32,)mM_@o-N.#"E`]%H-rX`I'`Tq3BSBU(b=cAX:gf1rHS/#O(geB(.@?CfA%Dkf@6r%J=SlJ>I(cRG$60f*u-DeZHeEd'GiF@7Jl,r)Ac&EYWP;oIQfo+%>?JfmkDEJ.So&!/:mXE$j962t^T46\j9(2/QeN:^.QF`g;b"s88i![JFuLsbe(2Jmr1$Jc+18/TUZ?cLFHH=,/6;1c>LX0nFdQt8%H6mEV/0;/IFf<U3`3Ibni4tM6J3;YGq2]h^%@diVJ0d.-Sa],%=TY&!=BVFA(-P+31$D`CPit=dLe^.8rXkXT[suFIVgeh"#C:'5%SFS"gchN'OI1S8bO$@;(=cK<pOiR,dRE?T3;9'2qIC+b[fcc1ebR?"[St^$38Jo):1],aG-_.L_^7q,;bZVfP3-?6oo&4[\g]ttl%Z"`QmZQf1lh&;Vn@_"p'Y!!nRXqs1&$LHV:nVQllUJ\jFCiMnr9m2Abq,tS"6*p-.YohU>X!&V?abN;HicOje?01M&1Fmaem6<,#%iT&Cp%<6;N7b88e:Zktg>FH&j)Z?TVk@W=-o;`m])K-XG-.5(ujRd2Qp<'#\+"BUjp\?>P6ODYto'd.*#eLPO5G)l]c$FJST#Y63%b5"U?jtR^LTeH*<7Gd#ES!0h"j'1/W0<h[rU,YPacTABf0^kU0mhgKHRrp?S+50X^(Xu4$=?c`.JZa4$BZh[YAN@h:X%N+N7C'u[%;\+8kJDu@7Gj<3gj:1=F>6_Zr=tF8VPDEed[4E9L1?#@"]+*ubd>=J2k):phR!VAgmsuYX1qMW_(G:#Y'SB^ton%_9=(cVjN6^X)%H))pXQ#9ue4he+(@Vo^p4,3IiBG[E#_C?2A9LTP/m5Yj:,dbL`;,Zr(h">TMXj%$KFRCJMLL?r7GVQu9kkR4PW`Vqbkkt>a7]:Dr%N$$3Ig>g._$5;^>l^*&hO`;8M0K5Xm[u6H9",4G5I:#^-@M*qB0V*SqcJ2*P@NL@a/B'0d(A#H9f=sJ'X&Q`X#S]U3mF]gGWO-cV%p3k[)oO/*/5<s/IlHFFM*9.cM?X3[noJne&=h0N-.!riKb4>WYq7`Cjb;1YqqdWJNg?_I#;s,kOgPld"QU%f0`%X@N=tNK:&oj?Q%,m>J3Ju`fkO4)Z;$(U^b+c5iaD7KN2%oN;u?3o9\=b^HYe$>-mPFF7fp!+1aPiL&DpAEbJ.8[(`YJB8LE9T(N]iJkbnI[TDId_O2%%_'CnfdKpcqU9EfJ:#nm^m*TAMuXu`s7]99!>+,&IWj#?J'aOUM&rKBG^3>(gQLI=[2YNS?X,#YY"kX>]ar64/`ZXf")N"^Gdd%S%".:<p*fa?r;r!F9U_NGK%h`[!.IJCGH\1E3'Q["=Y?gl:%kuEU]h@q?o$gVY%nW]QiG1Bjc5UlIEdJK*),6oeJga,SZqD/HH!-XV%dnTD@.rS[a*s?a=&]_^2c^<V,3:75:pNN<sbP'R/nmX*3K+7S'\V=hma">\KqgE^:6,KS<q*5#Z27joZ9e[qjqg07:Wq==%ESmN`%b8V8^P_]$MO(,%C4ZEY:]qKgc[Y/WVe]*:[mKE/s_Eflc7ps]\atW!j$r+7<kD$h#k0(c`gAEpX:,oejkCp[<hIrM,QVULsguCG[%8;D8tRs1)/"TZSQHNSLOJcGeVG^p9nAF1?HJ@Y_d(9-<u\d0:m>*q56"*JZ]oCO$3'FWejOI#^"mP?ff!keqBB-XQTn@dO:ro2Ll%io"*u^Bt@TrN2db-&0/L$4EJRZ",Ub)KB"h4HA-C``%cp)IISH$U_>AG>4TlPFY7J3#uV4EgC1A-4p@U87B%`5d]S.D>Q.S5A3r$%SWCJ$i(+\5b[YjV$ocfkf:l'R282=R^<T>jetE^/"Z/oIJa&oSHR'N*/]U]JVK$/m6Bepj(gE`n\:@aCPQi3Vd@_m0M+2\W%(h)o%Kaf?Ur&#em9?UhkI9_S8R)%K!h#.f*A!,lkOWi\[OT!9OEPt@hC\!$G4^-k4ll+oY!RI(XJ7ZWaKWM";r5^r\MT^30!KKkh[!<G"%S%9^oc9T>$F&df^4+V1n0f?;<91R&YX;lL/(CH'9ZAH)#p+l((#<sqQci(!3::N/%6^9!nk2+T%-t+=C#up9o96"I<?-]ra+D<44%5omQ-*a)7nNCO:^!:psaR]kG]6I+%A#Jds:oqGl3C-RGI'4FlSMsor_,kUuGi*?`!2BEeHTs.Alh@BtrI'?`*M#'8!VW*h$#o'F7%*D?UTTUbQ"LI=BIN4jk"ZmOF&a7"_?/k6=<_f.1!OYGeEddUoeJq_AcghZ:G_r]+(<^a_M^_/Kb[a4==Ls8lD2N0mE[%%F\7gUUX%4qf\boaQk6&N/B15<gT5kh.!//i'n']aA2RekIkNHmBAFh5WH#QZ9B+^XZ9.ik#P?>mG;G$Yg<p&MCh0o^q]1d\PmQoo]QG4?FqM%plbf>[-KDJichPV*:qjqk3[ZglGMqD*bo`+r%N&c>_Hr.GJb+1V1srP:ocNW=9K;XpQ.qbl`&QG<"/4:7#mJ7M4ZA;@0)Sj\`^Ht%eu=AdM9([=Ue/C?@IN9_`l6s?ihsa#*Z%b'oOVZN$qRb\qU*>ao<S'lSppX;<6^iUL[+^3EJ6g--.8!6U!&0[cuBXbA&ZgbS#?N9%kkJ'X`egAsO.^Qg"ilOpj!s_YT]:2*Ntk"u*^Rh:$]Ylf(EPjY&hQ(B$se)\*?Qjm:(1EQ"J%VXE:b!Yn-D(4@cPMUKh'K5-Vkq@%/j+`Gp1:`N3qnBiOK^[u0>LWGU@c%T#d!J39o@ooKgnLJgcfD,/*D!j6.tSG+*f[/D:u&i8n3*lO6;8O9-1acG?]7&Qq!_^M_"Bg%faR:*F.$9A6$T+#nbgu564/Y)LDA0#Dp1b2aLTt%o6RRZ+SoSmQmcfLXN8F1cW*N"3c7*+fV#buABdIFUS#Qu*^\nJqVbXEW+?QN%1Iu)I[5hPl,+T\-?Nj`IS+^sKGLoQ"YhQBd6%&$I%!ETD@m&D;E\<rK'G]sMIk+'_Zin8@C^(d!$pdXK)ke!Z$eG0\eFogP`)Rch%q%un>4\J":*g5/AVR<DDWT\p&%5IO4isQ6'*6N8U5"I-@e*D%<"?=]^N^M<<(Yrtl/L4!.]t7d5d'R1kj.at2`ISp*.!9!T3510?%Td!5uiqQcIQZ!l$!q3K'%S`u/#/POal%hLl>@Dm:O%sQ<El@`UEI:W1i8_lJq<egWA);usj7@LLUR6W!L^5Ua,/>OC]82Go)8'QF%F=/;/#oKPDi73_t-l*DD1E=BpE=-bKId-BcY)Q1%qC*V7-C-9rmIg8b7LV;@4^Pd+LpRF9!66D.fH[_,N0MWVgO@/6cT]tu`a4->%,6#L-SXfi;&OZMVg#7j.'sQO.I#^[9>Hd`k#LOeH:bH./3":%X?tCV%$k&$%o:<&P\K=D'f`$RIhfr+bg]4tjBJ.p\`RCN3]q]K:%.VpVbVVLi6`SU@GqgKgR@]\@2A,mtZF:RE@R-1ijL]FskW=p6`jkW3ZZ9Iu/-ZI'e;`t_.`WMc@:KP;Z8.L^ZhAOVP',!=f?Gup\%nCj-^=Wfa\cIF3;6r;c1%HW]YBbKiiQjc35H"?7t]Ab\_300$=8ojfYfD8g7%#-$ej,n>+lt^f]O,Q3-S=/oRj*1kDdqmYWhBN\I%msj_bm?)t&.@K,M*V%%o@X;S%c;PoqB]FDL0F1DH7&5k$OkG`QO\*KLcO9Hf`!Xdu3Xeo!W:6>(>nVFDZHQdZ,2uF/.Ed'h)^L/p%8R+H9(rS\o?sq<G]Q'Xc#T\nEDV1PeF#I]-Dlg+da5p+hO83k\?HfMZ;;l#pFWj5]?t<MJ[#e##LoZFI58lS&8`XB;gF^\T&WSn<%/l4JS#L-W%<]uP,F5D%=8.0#6DJ*&Cikrk-E,Jm=7Dqn]*cBd)a5Y(U7If#@io0)mHJXIfiQDOgLPro7Fe!\9:/C!ri[,ZV(O74g%7,m/lG!duaErtlNr(TXEdr7YDE-)W'2^3.fnSeM+S.gp<$b+*,Q?BVggCoCE7t?NM9-/FU,SVQEdk,(rM1iaA$-[gjpK<Fi.pk/a%gBi-[$$Cia19`QZp_@+5Nn\f=ClP&/L6OK;N'/W/RY2Y]Ef2bAm<B+'"5%N&I&n@7TSTd)Gc,!3XqXVr]!!d,1qXmq:fukhI%-$T%2'r7QjLK3tb__WqJQn?$^12q^#&E6F^T@r41YUr$:'2j)7%GnC_g3Wj$oncF;=&<Ie*o+($\M7($J]6A3H-6_e7iULd*io,Ifm<?%0PtKU3ZoWS2K]p_J8nfqrgI@clE<cKV#HfV7-`V&"<pa_WMPG>Ud@'TM+GU+`fE[0;C3!<MU?4ea$>"Fo``?R_#t')1c<i2,PR0X%+<UldiF@(J^D<(g>VOsc4*pfkiHQ&pZ_PRsagbr0oNBP)#_d>3V%jF57mc0([O[+?KaU(sBTf'.F@S_eGi[MNE9%GXLN"f$BqIQ_%!X07b?o_X,0C[)s5pH.nGl+X#TCMRq/NiTTC6W2b^'d1n4-6^QI:)qj"<HXYHcU0ui^.$03X2k.=MbA+SJO_?Sj6UYghV"NZ_pBd%PJ5im_<lgahh12BlpYs#LJN?r[HO%-)*PD&nbW_J7Ggn:nH/7$eAC("Qs)&5rk]&]cgV#+o@1X&6,RW]R'W#\g3ZeQr7.]_J^IZu%PA`5J34Z5NUTmpk?0M]>43e3rQ!JBB]t'OhIsJ%UfIc\WF8?ag@Ah?,Ka#(O/-T'H0%CH1<1>4C;8Eif%q3:l.5eV5]N!Xg<$&]5%00&B920C!]M;$)6.9EM3\i@?;3\\EGrE._M[Eo3e!P8gLG'b#fQ+HGE]AF*YYY0K.0;!kHXbB`c,qOi.a7m;0*E[%@DHaXX,4AuC%K\]UMB@\l=3*hkAp#I'M`;=h>Q1&CtmbZD3P]Q,'/JY&!ma'o@Ih4R4fhk.Srtq6:nFg>2"/oYBj6/)(!ugOrm$Dpk][ro>;J6TS%a/Tg:Gk1Tt"Q*^sl$HBNi1@"-d%8<?=p>eXr-WqQh'D0$dZ8%=rM4=oo,G9.?F]%+WH"XU*Dc-@3Vp`-f=nt\X3A4Xa@1I7L:BW(%Y^b'p^-u<c&uU5.B;pk1Jf<gDOgmf?\;;C.HkG6/Q+L.?idIE7(XUhNho)8Rr61'Br@ft#l29lJ?SC2:d<'iBFOB9h$l_q(k7^Ob%-QPqE(JBPTA[9^*I[lUhGVi^!f6X1=FFG0#L,gD&?8Ps;*lZ5he+p,ppohAk'2@X2;]8:F]J;6W1nF[#l_L<?Jn%7s),1q=S?"B>%l*u`IFtB3QWp!R4FFIV^E&e4P&P_H?,]:#96IBn(Z#i/gk):0Pk;Rk`R?/)?VXl=\>2c#[1n@u)SPRJNR*g#N;J`jV\d40f.%8F7%Q>T6N`JCD_Mkpf;Yo4jUc;4'(``A-B:$3mCh"N-h,+?eq[=m1t'9/l1(GHe>]oEq(k;U\;.jH9/e+"[$Q<$?AA]/7CJ%IIt*$[r%%EQ#(]al#^m;5<CR3lIRT'Vpt&UW,+janl!WD]j9P;iXg3_?.YX)h.5e"420oj/@N)Oj_+K>tj7l\d7\46MK$4qqP68Vd769;rl33%*0V"r@dq'MOhpPW=9-YeNk1'j+l:Ro"G<iF:A_9MjeAoNoki-mmLF&4SEV#o8^,&1.:GR,UrAZSJJOA1@t*Rr(=B;:+r]6bjE6%X%gm7'9k\e>+290&DZl^Wl8fmSm]0mX"n^uIK&`6%,7<^HgkpC@qp/or%nPPg-(Z!%@;[U%sDFfiJLtCGXH5+%/h$k7&1jI:$^e*I5%(Yt(Tf`Q2E]8M*eF0>3`(h_7LS'5U&3%iB%A&n0,L%!!bG="b'deW8n*-/5?Nqq=/jQm'<rUoSXM7fK6GS<U&W&/NR?,ZHFGald9%2L6oL%_Q5n[/_tS))RR4'$g`']Ic%kH4RUL@g@12lqW=j.cDH=+a-3bSUWE,Th+PMfK9B1NjB<I7c`S4Q9n+k/qqhgoOF1C%-.T[%m)!d4RXkR;J-d/8.3.BrFAc61fn(qr@.slVriTl<!c*;;,M/+<#CcWSa1Cin8&$"ud1(d]`"HZ%Fp4'"X@5Z?gjQA791tq[%ITn'%Ukdf]hi\ktoiE'a3AOcKb/GWE0YEe.%>G[j5_]m6ragF)rB3.20ftCViKOtdX)jYK`]kc"Q8@63eLp_&b6ciW1u)D;QlnSD$tHC.%K'kKU%3`tDOC88&r!57:q8QKBN]di^U*b)&FjpkEn[.h+Dn+gO++<Uf)`$t2i.ek+DTWnZSg`No]Q'jCkD$UqoD)n7LW$g`/eM?U%2m@J$)t)^WC;+ib4a(3LT$f/b7@\$'5Hn1Yo!KG4ZNoLqer!DDh3&frq,i[iHP%.kaJ.G03Tl9a'?cj[^?:B<1L=H@.>;0kpjoif%6I1A?7'%@T^3sC19s![OGTFdC`\b39#330F_?%m4YN:9&>KAW@15P1PX>C*TR"#rO=HM6XYk-.$Y:m';%Y]>LfIlAFg\kb2'_WDS%<lPDS\g"T[AF.IZDR]`9[4;>5BfV@bfuk53(j`h%d&>;FVI:4WB=csbW<H0IEHW;@VnI*UUjI%&)`G^DPRH>\kD02c3Ue1(@H/>%%2*eF'?2+-LEu&.NA#j,'0Vt9\"#XTFP]ud;rt`tS[3Tc;h8HICKI2DDh%;`geX=,:l9WV&5&1;pHekjST1Pi\+MD(P)Pd2TnRFA?%IECkc=C6p'p>t@`F2f94=V&KQDm%HoDGNrMSP#$.h=n-J8^!u\4P]5OCg]A1pZEtA*/"R)X@hs<46Nop4`!<kle,-E2dqhu^I>X1%iedV\4$3nPFB71FHjQhF2)$j=OmX*B`A=[#ma/>toLD%m*mWDEs.9%lHg6HCS*,Cmm(:\*!j>1HPmUMi3"2`bS";Y=OrjNN9r,%t%+T[?seXdCYl.4kCARM?Uoo/n/Gcn\fGe(%NpZDT.mIi0`;gsuYdPUZ9o7#rZ26(e_<DU>3"#4/oH2WVan)<H1`ClSKSD*W06fmS]%Z:+B'i]@Mp0gt0,i))P+*>+^C!O#,gV]-%A2UKFq2G#K?TCnl3njG)R.&3nEFg"n9D&E\kJBk"_qV>Tr[o%-(@Lb#4nWG!6XVuX0%:L$W'luD4bgrpDcPB:#h]EH4,#oQL9@CB3*7&;I<RTIBqV$685oUOALMk>aZV%pML#Q#=J-Tu@s*U)=Qo-Jk8?,UWh`"7n854E1*%q6CWR.m7aoi8.SFC$fsY-Frqf&uJ&Cr&EDt51o2?r]&1T(W@kJQf2.WiiZKe-F1d8]ehmdJ#kD^EuQh<ONlY0ca>)YlG[jY;X\:,%'O\k1Sag.hA&jKr=Y5oc?!=N2A+!&9io&P9Zh,9pkI;/%<h5b?r%(X_)2K,Ln?o4t:07tl\f((C.j.m6;>A@$6R1pWGu[%fNqZ]p%YCePp+/,UZ6q4Y:jq]*3@g/#U.uCH6iL8L4JRlc]#=$4bZ$MEikJ2)(&SW+&h%kC`5n%V#f9?IZT#69aEoZ=c:@sJ%Nuc@\H0<Gf%p]^'Pq)#[FJNC'(Tc<$p[.o=Y`iIhfM[`V;cl=,oZ,g%=@44%51In+B^m3)?-l*GW2@qM->2^JV$8AW+ke8QafI0#ZX:1*ioJoo]%LaYN4)hMQ"4ng03)$Lj9#1/P2JL42i&]<G'kHcd!6kj$ZW#LNn%)!lC1(#]R=p"CI$l&p_5gOuu^p"ZV5]R9]URo5[*&e3YD@BpG%NI5j,hlDkljW!_Z[NR<c$]IWIkbWY=?A/\kb*Ro;1rd%icQgL0d%u->4$)X9G]>Cu@pZZ0HRU'-(cL[*?HP5)rKX-_b3/(j^dck&%0@_>Z1Mok9fhhUKIf(d0P;jN(s&Qn.,ImmDoc)k+W"JIj$gcRMcA$B-oc%P9;Z(n?_P?NGE&JE@f5LSnU#Okn(G!4?m!J[NlM.nF%HoQDIHi;M_DtQc!A#S`PFb9)T)_R:he9h/,*9"W^cb!+ee9h/2],#^BjUh1_L#;/Sp'i.q]meo\8keGT^Si0QPI]9ur$&41HAF^s%+nthecX*K.Hc(o!^"4nWkWJ^oaS5PA[O;U?l8Q]h<3CTH_RE8d-?QFuF>V#`me$t&eShtppk%u-)t#o(;=F1!Qf>^/0ArYWU$qX^%hG-OUREW?ni<q,7NfAOl?YFZkff)*o.'_]7rOd-RUYb;Q^.s<j5Daac_Db^)7\gN>Y?t*?(q5qfB&!J&(*PdQn`(\U@JBW;TDR[(%lXr#Bn#_$`hT%S9.3='7nVnXb^tn97<]%icT]tiH,*'(c2TEFZi>Z"gpjIK-NcqU5pj!q+]fb?2lXtuXq$'=[&OZ*+Ns>(GMj@k:%\CWD3<klc3`tu-T,OTu-,9NfC=K`CJf8l3VDbCUbHGe[SIZ[_%"\Y3pme$qq[^c43G3/MnqY@F`IB288;/,RM*,`H1XF'o_eJp3I%I]Rnp*,>@>iJqq#hsaLQ!Vc,Dlco"Ul8RRJHuYp#6hXd\h!6n60YA-a3;1%7Y%]k7Wun<P!r)Pr?oJ$hrMU\Ts'EJ0ND;loS\Vpf%iF]\jZ&-F^q;:HRhf%bVR.jq%OmU;bme$sNJb3!X$1/cbL#;1Y3Gj6+Hi:g"oh2)jW.n&,gP>m8^5+ng]meqLqF0UXnH35fDtW-Q%MIYK.2hDMq_S(DL,=rYi@Ro$>h!5bh^ZG7bqLsP(H:P[<;""q[BTNu<%MgZ*m.de*]9WpO]Nm)O]rkX3$PDme)t2TkM^4aDj/7pX%LBW<O>]Q^TCNVMhi^lDP"RH\ug/P+`d1_CXmiZqXQb)#Ge&H"6^UdV\NF->Hh"k!<AANMjmHjXgXd_r?AS4s*#YN?)Ck&7$CVL81%Q1]&O]=N$/SNUn=[Y7?8G@%6G?<S,EHRAuYr7,t#?e@CoQ\>=._ae/8lg7t;C=YV&ZNJkpc?C1n_F<qR9t1o6:#YYOm76rZFI<_Y%(,+g(qraq'iSib\9mAdcqnePE2((L,A59_lDC+3-h6g=q5@Wq6Om`32)O]HP5)Uo,BcghHkE[$igIL"Rk1f%[rQT\(@5`OV4CbHL%Ms99.XkhZkch,_OR6Snh2daupME-%Ur;3M,]"e@J;a60\jm\*8#miafUf3!4q0?/2WP:dbESFQL=Q;a-97&f1-f%QM'sAA?$:sJ(%_<%DH=G0X=Z)s4$"j$6*/Ng.!b]g[S93J0r"$KZHYHk5"gnmn"mM1H@gWQb(F`dE/Rsr_U0lf-_e[PN`afZM:[mIh*R%c<l-UQom%IjEYD$2L@mU.<mW:ES2RI8?7aa5>$^bs<EjpM$GjCheFl:e<8#k:SLK[[`d8)u8"Cr8o?'mA@0:;hl35H\`1j;G.2h277[J[@LLr%Sq`if^($!ul1LHB(?O\;\53f>''W;hQ5?f5O..ZsW@f'YC.10;i7hC)>^V$.LMrO:`2jdGT2Rc@[QJ&Ko`ZM&bEJPH'Jn=Lht7.t%@safupGVc:-1b\0CF(NEQLO(#olFKFM?#*PYIo73RmLH;&IMn4rE`q$f<9O_!e&O4k.3bF4<Qdp&([BhmSRhu[)O/PQCJ1Xn`F;5%4kRk<%m]l80<b[OUAa!N"t\REnlol;,RnM)<5.e&d\;qrYBan2#P;>-!%>J&693NddXCTY%m2fda\R3B+pC2l2](f^*f5c1UOQNS%`(UQ3A_2i.R\2&c5aq*[+HVUkBTJ5FkZM4;^^E@[8?iPEE:V&YErP"`;hfMBJb[]pe+ba-($*)^r:U%%8$OFBb7b;sG-b/nf2cON%hck.<e^]QJRhM2hTPe&+n:iI"?5`J)RnR?V)*%JV.$7)$d_bfcj2<d_Wge)&oCC2m>0=-$TjLkFj54o,>@(#'<&<8j448NJES=m*%l^D:,]Z.;0o?e26BG$'#\)?F<hI?BF.m\R>hjMN)H+k#mesh/<OOhYsW=@a"1AgdFO<Ud"rB)AP/eRl5T3$=(h9T;VI=#qCm2>D7%J)-]]T<C$EkTM6:<ZgLCpS=^>n$LW3cS(:!'tJ#!`_-2<riPgd<KE#3A(ojG2=&eb-@oIV+aU^KrD&o5b[2aYqc>eidMIgEq@A1f%-#R>Q>>8Yc?6ps@!;%`4YQ%hsZj-BtU%U.?$hN[7qW6/T61sIbD=WPmJT=`]*!*R`eo?q;U/\eN<ZL`P^toNK/s0J3D+dL_=7Q/#%E-S(H2-"4Q+S'-Yf@bZZ#J9)ig@5b;=PKdC1T.FQqqYs!m_8/J23-4WAS.pR?e,J`d><Z'<mpCuR7/Y?84K!+3V3PaT^lA!TB<JF%bH#J*bT6W2@A^&6L9(Ela'&^sl3jC;..9j7`8>UtRuAfeR(Bgrilt=_hLKclfk'3@Y>S($Uue_^L&(GHGt39&c3HNE([!u$1X"W;%R1tK7R24eVg!=,Beo!5Kc`*HFOdk"C%*5O5cXLsq<>?;loK%V]4X%G??Z)4%4q"Rb`au'hK\l8^%aG+#=e/[SL.D>XlQUsPoR6p]%+"e2r05eHR3W,;?5IY8`oB"fY[K,D/#ujB7JpHZKZ8=P-IYU*h[t\OpSbm4#jpSZiP2&aE=?_u]6ifMj17P7Z;lSdLe%>BrSt9aa%J9=_hQ9^4n?RRPdjjam@q*oEg[F@7J_rh*<nch8BJnJO"[r_1X!:(VTK,4$o&oEU^5@Xscn$9ZQ\[T"GII*SY*32297j$:%`U2p,%dJN3XiOl89Pi#5^VhElQWVa63n="6[]A9laBs.jYZVhVVTiZ+HO,c0fX(>:Z.\*^?cBNNj[GA^Q:M+?_FebD32:uh6AYRB15LQYd%@)\NHULo,TK,p7a*Z$_9mQM]8\^RHol#!Qq*4rgbSlC/!g@28[d%a$;JuiO;r7\Q$B6*+:qJE98/+U]*J$[Y'c?;-"kH;NXgY:QM%\2@K=OUKuEfkl;ZXnedj2VXX+Q:p?&9'tm)d?!@SAJ%3"4*/@!*eVMKE4-7ni&"P8Lm54S3t`c&K@T/+<QbkE'AT5J<O.URO2C_S%YO5$=m!_9.;]kl1p?@%&<h%94DI05)aBXC%N#t)2(Z'LQ^QJ5bG%*"Kqb__=ic1ZD69jp`9q:f-@Wd+;Ne<"i]Dgt1/Wl(]\ceBN%mb$0>bqCfk';Nnj-:ij?icjQ%'r56<XIo\Z9$MK2B(3VK$I9TSY\.X\XE4(CfPc\I`RN?Vp@$Fj%QO4_^h!0n+1JR,[[7*<=$AQI%ht\Xurq&5Uo9&WQaCK3BN]-BH\kC<ko'c&b/EcCQ=;G<c#"H4p.6HsPS?cFj)noq>#s#pHUG+e''/SSfO5R9?`Jd<c]C2h^/_5]q%E/2KnUNd24n\>HkrZ=s?4Pc"TYmKA:C.aU/Nl,P(2*7_+NA\d@o;_:;-BAV<XeF#^,Zi>(Oc!5J^;ih61?[Nejnn'?Z`pQGS+*[d%/3Y(L+-N7.`V>S(e0"2hFI6FSZ[FOt2YIL4C8q[(>ktI'Og[!nb@7=FYl(_GZensDC0k6&6'b^U9u.A"f5fOPB^os,AVnB=SH2c>%b`[>hmLsYBRpOr9h-@,4)o^,sk+o;2g^lEZ$i*,7kH!"2QCD@2EnMo'"ri3O+drR5fo;9i=\kZ\RM0DM](qdVV,Hi)Y'!gkl#XPj%H;qJ(?Q.Qc&Dgj@HJb2@hj([ZeimN(jmO@7(p);`6qgd2K$b*/*%(i"TIIjuDF]$\*99A"",`((mg5]?KL"$+p&%>0V/<I2-_`hY%_`-Msck?%J>N4E'bGEs!At#im`b"jO.qpucH`MAb)(!KK5S`q\*BV^Y7N\1EDPD?2/'ch0in5PD?7Zh4Jcr#lI99V<#b-O7PJ_-\%,HL5J(>BWlq5<rV$UEk=E:`J0"1i'?HiJK#Z6<NmjltBh8pOp?,$3)Lo]n_p0;AjS->khbeK\tbkYKi9p!i?bfbI`@cccBdIc')m%KZR;A\-iOBZ?srLekmD#UZ9N#OH&]]C9ZY;`hh>=P0k8i)+/@ma?^$8hO+]E$Ok?k^SGm&\,$IHk^.;jAbYe<GSOt$GK1fQB#%"W%ApTHXD2Io;'0?E-JIXK[oGV^iiD,Y08X$E(C`$k!0Y'Z;@ma!DCBm_lkr%J]K$b[V66Z4BC>VA1rf"RWRQnG>dAsa5-\9%nMWhr&%)\FuJTgVL)h,VbI/%CW]^--k*_`]#Qpp5j))O=<[QOcDffACOrr__K,\4^[dDgR^8pS[reDRCsVNk`(j\Ne57r?F4@/1m=WKq"`)%l#4Lj/N/@F(tXMZ*CM-_,)>1Qq#2uiI<l%rfI4q"EGH'UO,[R?GcLem5$2P`g&<]Jqp"\mI85dc+4K<HV-N86f/SB0hq$YE-YTQ"%Z[CeTiN@-KnbW@Zj>^).I&fH.E6$cj<@is:7e^Xeni9<kT$n(ta3Wm7[Eu#RNZm/u2^g%XmA8BOg=@mCg3:hpZe"NrO[qR#.5b#4%o5XFA.TQ#nP-AqkU-)J`SY/>jRlFL<QTk'=HM@p/[#=CS[0oq3\k9C%GkJlOZ5)I[X;:13Hq`p:b^h.Z:1JSKi5!C`/]SfT1@0O#%Is0b\<LuE7n7:/bks%<"g`#&l*-b@1ff/mX#G)A$8GFsa^cQU%B](Jm?5e0G4Oujma>6l&N)],^/0AFja?L4>kM;QIA)(8e2nrZJ%e>Lg/;\_ks.u34"[aN[MndQm6XDXOg5VMKZ/`tglHrsDcYUf!K;X_JFN=Xiu50`>*ZT$;b2h'h>REFel`AXMe"q13oG--_IDU34l%HbYh%H8Q,aka#L]4HqNd*LL8T4,`!:G$<`t'B%U_DRI]1kn[)=PIkh3'IW]@(=K7_-gl!r`YKYakF'd\(bfM/*f05u5q[8QS)`tJ%4n,L&?`3UV^*Xm6F.-sd^Gt9l)lAZR0#dY"/A"qpq`Zt3qh!$aH5@7_1afDncYVAp3CY2YqA.%\rTM_AP"5?\SXGaKGr[q$NV?AC%H\mgi$QKIj]CIa&_6W9d!3b""+=+`.#g_=':Wg.@KEn(SdeekqKH$Kccl/JYrUk(>#qSj6M,7D>FGM's2FYM,!cGTnnWd9:0\qMJ%JD7&dF1<<g5_TiE>J.\0`s8(uN3Rk1%LH$*mhU*W1Ep(Xn,_B<c_u()`(IiLOSHu)ei6+&bL])g+OM1f7?EG&ULlnr!ERGA38JiG%`[DsO<mkana6<d7$DZ$ie8BX:1R4j<(k)E.R]3ec"A#F`LSZ%?`J0r>a4K^P_uoXCTSU5*GS906d4:q.`F=nJnT3<s%=A18Sc[\.%b]1<43>r8]>S.pOn$]9IO1l]Gj*c<[]CG\QioFS3p8f@F;pgg8RiBE(.9=7WQW&F=I;o/EVV(R4braN^CPD'P[OVLPqCr2,>e,.(%e#;Tqn+!4!Fkt4`2NPgge*E'."rV*,LLQmi/2BUP>!IJ3[-i=#f8]3s;TIq)l^t0HB)KpGF>P17]fW-JeD0/@l[$\9kHUfm3T[@A%*CYg@2LGWu*S(FP04C)irp5Wb&^RSnZ]7/:i-PB_,B\AG),7:$$skBE7FOpLY_W+F#14<ZW'Vkl9ruTeh9dXT\[?5'MG(hXlUeJA%OqmY"#9m;Z9&"Mg'@r*h=2"?"i\VIQ3)"<!n#"`D[!n<]W'G7`m+:e^qK>gO+7QV>A@Q$lf1]eE4]l%K+u1YZbH(!GjrtV(M%O[m%!NqB#O7%K=2VFjR/gSp[Da_es^?2QB//OGje\"mfihJKTPsg_Fc_C!=NWc`(ZW72TNAm;4i*uo+3[QSJ<fGu,c4[HEIhjTAmW^rd%ZB-r%/)\t<;ZRVZ&O'Okk7oRLhDfH$E*?t)-9#k^)IDloOj*A>VUn>K^aMG!3UkP!i/7-dNUZ8_I&q"t_,:oK(r>MGJTD<,X=]bG%(UGVfV%8!X;`HG;IaNtripFSbjjj0nWs4J%4-seRHK%HcH%1qqrL+IIpjAO*0q"<=niZkOS%>D8RR#`9"o>?G,B&cB"^meL*V.Gn%`92?0L1!oGcf[`W`:7]$0Lj&%Gm%[p1@uM%^AD&s\EHR<E;9$1@3ML,Wnj"SH/kX1S[Cgu'Bs`bYBX(]rU>QSY4?tl^Wg6rOg>B&%oNUEp2bVH]K^W0XqsQ:3@r[][8?[4.[G<CKV0hBpWuG,4@IHgU[`5]NW4G)iq,n@0BA]0Y7\_h6Np7":CMiVUOTO>:Z%S&hO<WbF%?^2NII>eZ^=eZ.l"!Dn*h4c8MQ'ZC1*^t3gOjOq3`"rqL>uF<U4NHI(NbFrlN`/fUH2f\-e/_tJ]]9)!.j?RKEumnAq?itVop.F;%>hmZ"Mdha%WJc]'CFh.OKG5LdDLOKXE9,Hkc3IkL_g0E<VoM;Dm8)h7%uFt?_BWIl2qp_MdHGNf7#U%qIGVl4CPRKV(THd`A[D/6%H041;XX=On:m-Pa#g*#/:UAn@l8IK<XlNr#-'9kILuLkh[9`1Nlf[qjqW7FocW@g1:G+$dKsT4QNhMd)0C@A;Efoc&dVU%2[(*u9%$2e3R/dEHfb88??k18_ho]]P]r$G[PHfKb@jm=q\$#iN*$t#i8#8TNBnEB*gQcf:YTAdA23OL+P8E^HT4\^nL3B,[Dc0E_U[B9Il%KicS=)/9`KCX7^RcJe3RT%R=,[T@t?WpLbeZI6Fu&^!&_lgsCF@I8aSn\O6Xp<AE'd=qJ_%n8O,r4^$2$l*IRYH(W7WA]J/gVo3g%gs'dH]q4mbMjgRW$q:p7J3Jn?on!&JJj.r"kl^er"FV)p]4$2@T[-AHn:CNEK"`6;3!fBp"F\o$d($pjhK(h)iBNGG]u9]'!-%K_%WkaFJ!(uu/<.PVr!U#,j=K9/mML`%f0pX:CU*;k^6$ZHQr"L)2qRDpUSC-E,gNm-uQ[V3Jf!!0gBqX,Wf'1`UrD>XD:1G]t2nR,"%q7a:CX9c@XIX?[4H?Rj]m?P7Cle!+kXQGq,3c80nq!'Y.cPW,p8%6m`C)U$kZh@fb4a+P5Nh6#8c<>dkauhhWJ\n\'S/&MGI]l[k%a;09p`hbqRUNMG;hOp#V6RH\6jDLp'oKR/>>9IRIfdDj+Z3PVf7">/>>SL@;p;mY@3o`B%V0'am15J_P)?\M%eotpN@5#Z(LPq^d%_"8>e.5ik>FO"d+/[53pB&.dU"'LsN[$7/ac8(t.EL=42HDk&bD!R<9RiHS1#14'uU.=oX36PX(WdthS)=QKt)B%rW"Tl.hPm90_%RB<qdQJ!hX<,2-Gf^l2oV,I8Nm>:*K%ht]gClqG*CdG>>0Y!dcFMP(O8f@5(FtG.Xe#@G/`f>+fR2m]MQp5OjA]3laQKXiZ@S&RZ%IHXG5Ht3,L6MNY"=Bo/[1P2H/I^?EIDSC,?!pj)rI3S4s`9?0OCZ^S`qE]W34(PH9d`&k[L!<s427Al"k(4E@E*feh)/1gD541HI%Z0M6fZG\J'mGoa,8qKdjMUgb<="PUEH%u[XSkj5YO.7g?:4eJecP@bA6CR\/3$Ko5\Z!-kp[`QZ"rhd>A7PGF5N8CiM`[`$\kkGN%Pup7O$<\1bPJo;."i0?B.AHPs5>E056@G@#?5R<ET[KA?DZa4+%PD3NZT&^L6-inIq[c9b`kIUod=t%MU^1uVjQJZ/n>mjc'S(4?%[*8f5Euu94G)+C\.f$ca)mO`RD@ujOR/Ma/,ReDp=l2+?EC;!65`,I+@Up'u)[6YZ&=:Dkomd9@`F15l)u0<$Lo4jT\Ns1C5<:(<%YsE;BAk/XYdAF@\Ml[2$)L%s(F8<8%ht'm_l>P(DQo9r9S"BDFqbmlb4;QMKXc!T8F^.$EQS>'QqD1YRP:"^a2Vi[\]IYhnF9RrZ%b95B;N84q*@r1r)lJf)9V5c4M2n$,B0n@=(cM6dd;^nFMh=\Eo(U1%6Eu1l>,)abXl"Hq$CW#aj2B19QL<)Z_Y_qY#__IFS%8b6k%N4q."N.4u6bCu,m&NNg0]kF7)U^f,b<A?iB^T:T&fq9g,5P7#n$m(deGgLJk$[)@pg%FB;cLStRGMolOC1+cJ6"0H=B/_K;!GiXu%:cC,>/C,)U0Hm"gW3-`5'<UBN/oeh9f;a,N9eZ#0kM-;*8=&ne3c!)+Bs;3=\68gIIeLa0Yf&caNuQ<TXk\-'(6NqH+r*82LC8L`%7HW:sShKXFhN_1>6&ldD-lrNVBn0?H%!a7)hGKe`QuKp/%9!7@HX`OY#e[Z`R15&ZD/*&QHQbnLjN6\Bpp./WA31C*2bktrT`k,W%1Kq70]9XsWIRui63FCdl1>USfZ(:?]`FeOdTlBr#[U7nG8Y,\0dNupYOl.5n[Q,tbDc^"1/CCZ66s?$DfjAe9#h8kD9RZ7+`cs/,%rQI)J2m:9c90!e/roG08f+508Lo\C8]Y'rmXR^/K)AfB#;F1ES/'f(4(R4lGO-\fZOh$<tOV=&8peA33.C=WJb*N;sDlDP\H@-k<%J!5*-^2='Sc4.g2dZa<2q_E)#r^$@$L7Q]f>I@ai)BZH<4A/`kc$>]-_W?aR9Q@WOp[$CVO=*-Pdm!@#SoanPZh$[Xe9gu#re56C%HdVg>nZ)uem(p;cWJXJu:9%*Vf;3N=R'0O@#FC0$Wm42Ss8P*Ys0nM^gA>7CM3UII<rsHoX]Krd0Tf*tb#uFXe%lIXA$Q$iB^OFN%X`kFfP5ZiEJ,$"48Pq7+P,cA0'iXk!',crl.F'=8>D_u^^<l86)__.Z]2e1rRp<t/X+UA/ST8a28b5,4hN_UU=sH-rDKn"!995.\%_T.=k/AV9eJ&B;=1uLM?=:Kf!J)SF#I/+4CIj[Z.H'#\P(Qtus_J*IN<H;hPdW0pdW6)5riV[BK&(/aFZ6IBZMe3u#E3`OYhb`NN%6HC%!XD-&=S?A9S`gVL=\gesNBT@nnJX?CKV98:j.>cE',ur+PW[9)^<Qgf!XH8mhS01EbU^9%Icq3V^R?KHpK6P;)DAXQhdrVOb%!6#*dVhufm;W4T'P9cNq&kN0->h6<YB&j(d<(W7;P>'Y'Rdd$sd3Km5.].d-FB(7R8]EMB.;9VZ;:.oe)=/sb?@X:eKebASc,l\g%,Y]_cB`b82Q?0(/8kDb$Bp)$@$I(J>p^0Ti+d$XD'a-m*P,=>)'UcT^)*i)m8F"P25p7l_`AKpmPD56a"d-/b;K@Ml.@:5eU_/c[%'1GJfl?Z2A'q.e>adSnN%5TBtV"(1I_mUe,'Ytn,ME2.fd*#C=DC2>Ze8h:b"8)gTVl2(>K??n+W%VPJ"e#Yo<D5_H>uF6E6m61M%31-G/1Gi:*R1hFahNW-G3#tXTVhg'6%?[=HVEqaCVs2QGkQ<Y4T_-?o5V^IeA2G`N83('LW)SGTd3P9Y#rr0&7U?:R:e7;d"iF`*%1@QgnQJmm`<Peb$^]fgQ4k=%06l80X-H+JUW\!?P8WlKi0I$h15^eLujOZ+"FA`Z)"fSU<7MLD"2&JSPOu25e&K!c0l"d;NPQm!f%kokgJ(]pXPRS]u>X=0:46m/96S4>@!Ul@V^`P>0_@k.1>K%uNH.F8Tjn.AL@e-psTBnVg!i#Y`NBo8p#ofsB`eaP^R-OJEn#ptlZ%80jBCipZt5R`KlD!qQPa,f:I'74Y*m#n#$OPXp]H3aI<T+rNF4;FsB/`[2*JWD$12CVY4a9WP'2X,+QDa=>h3PDg+#8jnENJojp7%8O*S\U%OmcLnF`Beg44W@1l=7@+#kn^1X`V+?2bUDAZ6)&.W4XiCGLle4G(gSC:;:P@c;?0.PCQ,FOXT.ceRZ8"+9-C9&Hj.$5XQ%-=_6WO;s!MgF_ApJg;cmj(ua]_Wm59m%RD#aTe/])U&iA,-N+%k0fo3NV6*Za:N#=I0D,mU/P"rq1tc&:u!<2l6&PnTTLLRN.MP6%<jnC9R`E!/)i.(;.?Rj`'G\d97&WA6M3=CCB5745!Rb2Z)4X5t6O&!?BeGd3Op)ti6'V^)%5"J.KY\Ba"[QZKL;i#,-=RT[51uZn%9_d*?nYd-#Q>)VG,QftEepFuem4jb!,W`UIL!21`GZN1m(J3:Lc;Xu$Ae5&T%YF<S6"83o/.ktt"Xus^;e!%9']9FQ0KI?8`L?F6%%N*"(-]@Us?sSc]\V,K%WrO1TASYT[#*BC):*^B@Z4ZU,ZI9KjA8Ip?6t\a*=A;(!MeNA-@NZq,"%=pi_)!QV!/tI*mD&lTU!O[/%YV$:jK!;%A#f6SZ0En,k$=Y_\,LId`%$5:V0[;ouHHCdn!10LD%QbdA;dL)Y2[7HA"<@mtYA0d>KFnG<2qT73U/b#Ar3fE=`]9qf%'GMDnP<*66LLG"U%U@<>0P1usaL?_f1kjp)"(J>tP>-m(@a[:uOu=#<1mR>f%#aX]>uqa^N(H3-<d?OA1mk($)In\:8X"BY7ch[R%;DoXb2@U4N#@pG:<H]N@["NOV7q>:,XEQ6a7NG'`.G\i3L,;2n$5%o$BSigQC$.`:^8cu%&'7WML`>"Na[e+JNj]&30UsW;k<Lfr%<[WN.6S^?m8n<tlb()p89N^-UAYd%+EnR)o\P/^t0hd<)ST^3*11lZ)0X<DN$F47W_dj(If5r\aEgWT\!bFp.nD=F]-sFtgmhdH?%MFdQ`7V.*Q9r*<_:`5.rUot6NQpcY?%Eji$ERBMP,QO+M2D/K,Fja*@bE*nZ%((!l;Ck8^`au6s,a6pdAk:>u/D8)Q(!B"6fZ9"?%M/HjY,f:nM,XZ0;;9AaBOVs>s_PK.GA!/D4aG_PPTn/3I85G@)h*u!I;@/[E@)`<VD`0L@&lg]'BZ@32V@/iT<N+GU6Sg!%$>G\5%c'Z["S["k+\^_hoJO))(;TM83Tc#Vb3lPM3c1ml*35L>]A55/q2DjGN1//QA@p'L=ChUg67H'pX%4G4q5r4kGTG\V;,,2oH1KtCs%<nbn/8ICh+4?-g`&\AI@0nD*NNQmidR4`;&,nY"8`b%cIKU%PAOJGaJf]\8cU+Eq'):D4/jM;^n5,s`+i/DSPS]h+I'NM"[\\K*?%V;g51B<6Za2@_cXRUSlAGfK;bWk[<XN+iuM*INSu:uYFj5!tbIRLR5KJ7'%X!(iGdk.1Z6+HZXC4AZIBUP9*\`KG(dnb02@P7A;%%^p)bHL11u/Q%GP/`AimDH#5o'OMd/K2\a.<Pn_?"`G!:iLiKY$A6L:7`DEb>Hb^I1=ES+.TS"Z)b[Q/O&oEMY`M-r(E)6u'99J$r%@VCR*+gqj!W$@^f)i?4Ea$[+AZ9(kkYDT^'%MXgpmH'uXLQ#9m5VXt#6ANs>@Y*L("3(&8gGhZEQ>(%k'#TWd9"&^JfI7[Z,f[Bq%HAl?-<(U^?&u.])j8gMaLdZ3D(m5$>AKDL6D"?^C$=VUah,"NdaUQ3sZVhOc_.(;k"UBr;9u+SSW*bb$=DZXu*#;0O.GDUIaK<W<%$Q4'fWnf[;CpGMO?niq+6tt\t=;.[Z_L\tpBJ(ungb'N`6!YkVFKcUi#h!-&MkQOGO2X'^BF>e6`cequfOX7t_d\3XA3=][7OGD@%Rpe$[%T8pY`B[2INQ%[s\dOENM,"frN-3:N4;`_4/pkst)F#1#EUlrhNK(q;AMk8@@lpY:j+&kAEe=9!N+LDF_JLtr=\Rt;"3(u>%Z44eVMA2DJN%^'Al4+Y`E_U,Y"3(tuc@I_B_'BaV?jrGsh.7t/FWf(:.^_c?,'k7`L?_cR8D@O2dmW=MA\r57b>OW<K3_RfZWSF1%hn`d+GNlJTYS\^s@_/3LOB'XA2\\W[A]84/b@kri*\9da*S%bB/-a*K9b/!A2+/pH*%]+_8[7*f@[ZIm*#>:k_#qYi?;Xq^JR[i0%j=uqIKVe5N9k=m0W+I5#"37'S5lB/'%NklNl_(SV[i/kB.B@?.7V@C.0K(sB]'\p.i#.tZl--t"bSF&s>KRR^J;W?<B+tFL[BXOm%(.B21D0Q6cWs]V'D0Udl<eh.1.!A=B'F^Rq+#N7LB(-51V.mLKS-9JM,-dkYE&Ot.]%]saD@e\7R1)ca;7"+DB;e^+/8LDW1VB^'%r9(=f7$jD.nloTc_!!U[fIS6$;n'&lc-U_c594DAY*;pdF[7gJX%U%UENNC#J&cPg7^q["B'>.`3>cRG#%"$q'-!>O,H,CAG?^iL%<dA4FPS&`LE#dIX0f1gE_\cKN65u=98LNX-6Y>77J5P/o7\@2db<.N^hal7dCa69&QXiB<,cI0i16Z;(^MH9DN"0_lBEl`NSjEgj%Tc)^>Gq&=2$qZc\@RDreTkk@YgX%Jr1b11lL>lc1E'Z:E"[g<t1\=J=>+H,JO@c8QY78e0G!gFuY[O7+S%HL>AKYN91M3NhOc@X_%W1adNf]]D6J]FNAd#[IpNXm(R7cb(j18RDu35bVSOgY`Z6Z8n.R=R/i-r_\Ki!`2?6q5#tB5E._p0qN/K$.'3iKD9pF2/[*5]FO?%B2h8VhGQfY+tF$22B0lTk[63n:+(,?_.H59%2UjjQ5FV')($gba9H7@p1-)6^^TTg7CSP`Z\duJZba!jK<>_&K'Ke-Yo(C?_M39%%"jDL"B<Fu7QuVLmFdpM"ItK*$cj\o:Qec7/$jptY3RE`RdBt;+RUL_(bmhpP[FE5?1ToiLE>dVsF:U"iPdt)0$uD\Bp99P"cm9$p%*%l#C&W[$+GZSmsYR(t?2nXdd0M)E%Kam_XH6*5fY3H4&*gUf"q\D?MA7=6_AeWk7K=&p)[N(7W/5)JQB[ufq3#F5.+D#&iM"8Wm%^=e[Ti[dP\9?JCW1`i>jM(t)$coML;_du$t1@l[An>rC#96M3!BX1gbW!o4o3f;G*AFQZ$j-ZjiF9Vet$>B"oX<HBgfW:OeCDJaZ%@%u)b7V3*s=Z1Q#fn>b;Lb;rP\]bhC/QdaQ@4,3V%!)so/!EJ7?%n]H\Q=uG]tm5r?(e8Q(VbsOU1?@!)((9_l@p7B7J,,Um:Dq&%2,STtL0>>>KutlLic%^3?+H+;PmrHlc>k\/hGidEj^a?AGA]8Ufg]qKb6iDnj"X\6/aipK9f<hu3QoMu)g0uMS.)aJE*:@\1+88;%cS`Lt`Q:"`"5=0)D9@TD^`2Q4[h2b30:s2G&\0I!QQ\+Z0f"7fOB('5E`SFP:/kMLN9d2BWR"^F2OTQjX=;%<d05lE$r'eO,<Lh+%OPQR$(*KZRFY;9'2N+Tt2BW*J8p"4*+Ylf*at5Lq_\\Hh.lJTPp8/"Ja=:V<(F#VZP,ZWo+YqQABLMFDLl>h2-*.QtO<db/_hM^-%=[mNoY>nhh<d7/i$=t],D+o[">>?jkPKCo3Y'"<#;5]=62CLpFbDBu/Z88R?/0g-b*gIbSZ;DK0K!+Go:khZDTegI%MkuZE6((Q>%#X',k;=9>pCDkej&R:t;<EX-GK/2"h=kO4J+Vt`m*%3&n7$m3X9=NK3Cf&+PV.ab!1.ed!de:P`#sDAG\?)Fb?goTtj0FC*=]i[D%0<2'7/'FflLc\8Q#'5*09?S_]9[DFuM3t3NJ/P2t]saFn$K'oEK.L5g78<buD)PmAD;YG^9O@pP61%Sj>InMff.[Q_o!4,kJt`!N%Z3k=nM@"'6>J.(SF<5F+g%Y[tqa]XIU6R]0R*!R"o'0;h*hSU%j46,>DJc_hL;BYfRi8n5r!kE-pt]C[/e]b>ChaN/W2BFP@V&uo%SaBXkcUK%W%Lf(L&u1oMd`&;!>QiXA<\OjQ#gG:I.udNe+<k^>J][GI5l\7RhKQD5g%i]9!Xe3BXpAhBfiW5r$,\C$&^H%JJEm?/%3(rV_;-"GQ([VM1iW]GET7JOo.9Ngf=U@RLpj\]YRpB6E>s%BZp,hVQ@c0<rrDcE`)]'"B?=3mo@&.5Wi5CV_"5H?aIf%V3K;;Uj%Y4(PlaGmGDHYH0=6r=Rc;%tlbE\h8Nq(MR?"%S2V#Hi-XO3o25Q\2T]Ta4!F"CE;MaOB3[jI+qG7jBZLWRsGmA?q@pqEJo5+/jJZ%Yk[nOK&u\c+0Il#Bt:)Cr=a[/QcVidq,<fpB0I`Y-c2t)Dg0bE\(dRe4R[a2N8$@FQ,%,/f,[WcF/\;>4.Mh2qb+^@FnRcPn]AQ8%bl@!'qZAiD:D^O<r8JFJ7qC@[jV*"@p+c*Jn%Zj?0.Q"6CA&YCJDNJ;S)[fR)L$0aT,`Oq#I$31i5`lP7RPqJHM@jTCXo\e4'#VT%_"3aPI<j+g;K-_9AKD4,LH"/e8Y2k_6f;>@$^t>*b2)*NINWQ94XVP9*H:$<$_!?.!3YAbn;b/0jV&2;H(;Y,,M(.]lnn]fUf'sI%qX71>@ntkWTK"rdhS-.P!P)4P7:]Z4RL/&B6cci_gHT'!/f3Z]p!h,hS;_Z4hE#6oD<LinYlS`N;ZX?1L".qYF)tnnI2'WTr@r3/%,8!&/?si;rVL'6:qJ+;rpHVq/(Gdn&*gN.sA0U8cdX8d<l$Tp"$4*Ls22QHA9JAF3ma!fa?./oNqXIqljWrULN28`O@MkLmdt\LP%I^[gerC0F8Q61A,gcL7_&8GjM6>3-A;:&;_`9L1hegcmI4#g<5Z4KI>T(;EQpSL.i<98D5X)fr(f8iYUNR8NH$-0ssiRrY+lau?I%W\`hLLY/`XjH=EZkrR.'IIMcm>Xm9?TR;1:^@fd)-n+lOeR`VZ;4H`Dq!OLChKs\"UDS9]6D+AsaF=d_<kgQd>Cd1<d-1^W,62KK%ZfG>9J'%3/bioD2R!Uh[Mi[Z6=R>@YADOkkr\KgKQRPg4GHYBnNR++9pdg]T8(of[i(u9-dat5%$HL'3;PkBncX'L8eMcL!\f9Zn%D\JC:?dTn0DHh_Br`tJ&B\*u(%"b"u61aN'[iTmEFs;9V+$!%9I\LV_9>&EeI`!da/d^1ea%b[sYDG[egH?V:_Yf!<E(^Xkn.iG<%ISp^7#&r@eff+lkjhK[%M!M]VRS&4ecb5ss[5Qe*UKpV7r19R0m0<&J*t<I>T3@L^O(LORY$3!I2iXf4#4JR%4R0Q1U['[/A7`GF%[.ebdRoe%0JeM!ZYUf!3>Rd]bq*B:Jcpp%/^?JgC\3&'-EhN43i0mo.$n>sg4?@fLo[*k)B`h*("OrgW@`i#hgb20pbj45bo*W`[%fs,CAIh1K'lFRNUOd2Ou*Dl70;[c9lIZ`(*%_\0TT2X=+EqCr7<(>X5a6O%k_eEg\>2+C.g9[pO^%9,,8GmKhJu;@XE;eHCYP4&D%hh;<_"V7>3o5/M42Lm]KbPGq=T6/S]8l*SX(fC%GAe'$0\u4)ddr\H5rCH0ugk.>qLVM2UDn2VM.cHq@3#.Ng"*pD/:7%THN#/Oi%8jW'@1!e&c;kF/0lVRfo5BA,+N]0"[[rra0mIUIM%pm<=P`t(=F=N:#O.LU0oaL[HS>InZ)u]nZ8k'a&gLSO/j.=jVP/jYU,4U9L%f[S"l)d[>Qk20QiMPU&[]m_5[k9s2Z4*3nCi6"?J(6i4%23GpnKaSZ1opnnKH=.95>&"UD$`<e7UQ@Z6iSPBd>TV@t.F3Y#PkKFc%UVTfZ1F-_g9FFI_YsE00riLBN+8pmWr9*Fj:&hJFCH&(*"`sk0@1JCZC)7E2Y1&rs(:5e5d7:He!uG+t%T6'0SMW:5f8kSY*.dJi%W_S_O(1')5pl/2RDlfWpU(r,_Ut,40/a@m0/m$29ii;<:Kq(,@>`Xd#g0fetL`(-\NfWmmB7lr^B8G0&R-'V9A"D1YrEJa'55GZ#%3)pFdkce4,Bj9?=4L]XE@.]te.q#hcJ9LVFEIsK#BGS[!cJ7UEJ$Q-lGNk(pp@u25_GTOM;TZE#/0(\%p04n!j9b[od5UdVGCEeS%>?CY=]45ng;ZY.NhH`_-b-;4dM9>Ob^[6cp=5N-hGr$d^GNK'W7j@thi_t_=g:uoa(R>KrZ/!O*CT,U*]\)WC;^:ja_)d$[_fX&/%);'3D?QsgM/&OHWlH"B1%F.J@-?nE=@<CPBSsB"rq)[Y"Q<Nc2CTRHWI/]mH5432&*S&N##a;N8^D;el-X?cqfO^6HVpff<!H'Bs%bD\feZL$L4\K;k[(XVSe3tFOsq+d.R\NG*Iii"H\Hcfj_NL"3=*bNlAa_gM`pK%SpX-(f502u2m]\4#\A.&WCbR<s\W.WI+;R\u:%'jVIKMjr2@_4.c*R@SA<oJEZ$UY:=;m4mM'7k<G4\4-CMBH,:%D0[mdOH."eCCdL5D&?jjYa_"b,>8Jcj)Npe:i_+(F/)=[$Eo&i%7r\d)n_`U`[ts$pj+EZ,G%>[bPeZ01.,!TBgkt1fFu-UMF";:P%P-`TW9Yq0>BeO&;J2k-ps?hp4XYOro.A:OQ"QG*C!k/t%J_qI%ThP:B;!O,IiiaHZPaXCq3RV;Z3P"9jkgo/sSsWi%P,?$onuE^"c0c9bY0nmaG[d<;"l#GQh!!prW1-lSBTELimSm`\NV:CYfHI`B%?VnljEH-:L?V)5#F)34;a]1dRU#S.\W4Oi^GE.j8j.T[EFBJ%HO%a.5Mk]!8+]X?YFS1':*ji[bq'WijIfUtV<2nVZ[p!j5FZgl6%hhHlT\`CZ=CpL"u/oeuJdOr5)FN\BZ9_@a7+%7c7='1LjDk<3_>^^j>)!Q%gYiN^s$X1Nr@Q"+5hLp$81M9)2mA_RQ=Y=%V,2r.i%):"@7B*=KFR\WQjht$+r+,.Kp\[G"._k^ds2T9@GLMPf@^Rlr$f*'('a^,5PhlO6clMpj$rHtYBBio:RaM34cU@Tmck$`E3rJuI$%^S1;jo:O5rs*odo:_^5@f*Y7i;L"g+-U"#)"G6^$Gms*@0K%j+R\lS&Bl`,D%D9;jLheMkHd@*Bn@\3-i2,RM*tcAa$)o#C^e0I/%[sIHGPkScr5CsHJWL`3#7VXO/(O0^Xr?=aLF`jN3>t"*IE::P*lFCL!]m;"tE*.)Bh6\)^gZ),;fh0q&;+6mm7S@^OLs<$I^%;*j%Dt!,kVqc'`fm:B2f*IK[b4?:\>`1kBloq7eMrq&Kp1;"*J*,_ZLTA^#<WX<O,m7iLYfdB)#(rt.;%[%oiV.'1!AQMiB2_GpDQVWQ%8'b=A]hLua/GB//1R/!]fCMj6V<;A5V83%=D-AN^S)[=%fa?D+;*C=cU1CU]8DVL>p<W'"a1d$#h59>t`)eWEf/f)qE9JGI69@nN%?t2u(n@]+C!don%$KL-L#B[E5IRMn)ImQ,AR,%j\:oD.kPT#"nK'4r=9Tu(SP2KUr8;$%<au,oQZht;$lG#M%oI]]ZQ]&WKMVFM$%#/[H=njLEIc'En4Mj:1KKJlc4[:_SHn7kVe+FlWK*"'79V1dq"RZ_b*.3ZEqe.?TUS0S6JVa"t>e"O1N<!kb9bHi6L6R<l]%2RuR%'5KjNO@.E/'sbAZojl>c/\t[:2Y6pq59U3Z%k\'+B5d-N`qi1WH`BCc3]%Cq2T(T6MN1JWW:-i6OUscmWBi.>]T<[f?;V>2:/"24%UGaB&FPW779fL7=Q7BB">m=)u*n%LMDk!')hr-[<`*,42a.[1Q'sbAZ'kPZ.0q5eLG-h4NLL-UDp?.Ucp8COo)Y/uB^6;9#0VH0)%"`_G_Bc5qcln:[Fq@7p"aOhg&/mR^?n+XK1jbA,[<tT*)`&Y&-0W59OE9d5,g1[`a_#U:.GX!GEd8h:qki%dr90K5?HVU@k!,<*u%?Sj7f4"CVN9JK^!RM7*?(N//m0;C]T<+&Te3qL_3GNga@D\V9r6!R@"VNI`K%.F8aNHn\@cqXfuBbl[d5dI4Z]MDIi;,bkYrID&T%gOM!7%ep7^'#3jSp'l-;Y'ZqRh("!;[p1$hiDb*kU_"o,D1e<>-B%Y:1@bXZm"o@)AjP4/YHE+<B/u%jm1:WZ9>S%F258i-dq/K5%3G=''P2tKV!p>\VH``uW\bs2c#)16GHl,MdUGJ]*Rtq6S.!Vs`SgR%9b;233InZ6]k8_XF/>RK:Cc':K"3h!4:25,ZAdb?XjeW#[%FF2kX^a.A"7O*F8fc5llb=d\W:%b<YcO#Hid7FcO>&+b3bA":FZ<XuKYm\*%oQ*0^>_b3`=02EkWr]ao%RlkhPg'qCPSn,@"D<_H%c2))A`"K\%?X[pYIqa1okX)Znp>N^kgq]r9N<X(X`l8f.bdW]n)?HXg)W[rb(D=o[=-T"7-RP-L-T@iupY;(80^I`ds3<ARk0l@s%]#77E#WCA-BQ9$SM05pI[E"tSZc^ookon#tECS)_XqA;!s6QH28"]bU!pb$X[)+lr=CT1>Rb$,NrKTfp5etX&S38pB)?Z_.E%59R%]@2a@2I]fV0ZcYPkW#Jc`8!]Qd*AlDO63$AYfCtnG-+5:NM<l4Orae#DT,5<D:3*PGgYZu$U1)saO)C'3+;s<lQuVAmrZ\D%<4Q,%%;.f$oL)pJWR,F[R*@a9m(VB*\cdZ]J.mR=0Hbk(.0/Za5Ir3Em&,`B#5VUCf7IMNj)j37g6s!U->8"*634qSgmN$;db;a&!l?7#%1pB`C'duB+<4!oB.-4!&_5.XE]Mo^d/3V$Sq<n5Z+/_D_(ki6SSFWb>.`Ehcp)C/):4:(2&Y!NK;7LdplE]ddga^935\e?]fgh$d%;EE6-C`m/"kN0G`FC+9j7Upl)XX?LgT`'Xm0!/+B/KubdVPjbMnS^,TcrJ+TD"g[6)%/s;J_@H?3o4S\6`Z?rBcM>?MnPR!QR2ii%c`Mqag3]+"*e4d_J7<"(o@E,BhQ]ulN?9#WQ@o5JHu@1q65j/")ied=lO#n@Zgl%n6!k/D't3N>c&bf0I';b)M6!!^7MQ_j0lnHr%8Kfs#GdJ7Kd%%lP)a.GMg/[-_8pk.>"ul$HZ;ZA_Zee)?T?#TqP&hdIH8o.'qToF-/$(bWifQ/lJNM:u_hDt7KlGZI"Y!`p\ap"]%,gLB@JA%V\5r%e$DAi*>.:p8J68L^sS2&9ipma:=m,8KBThmaa8\_c(2^@Fo#,7)PMpW=)=:?3i7E8&?9uuYQb*!FslBDtH*;4"2%:5I*E3t%:GG&<M'"32*aQUL?4UG#DVAI%nIHTHmb(._Wc2s,048d`folJ&rZU5Z_]MR[[+]mj9G9=X4u#;u,u.0kZZ?Ih_Li'S0]%AL6B`fZ]ci1__MVVQ)V;e/<mDj,$Z#-]5Kuh@p[7EYV">dMs8FX#D4NS5KZ8+Vdnb>Z!ncJ[)(eWi[UC9#XP@Skc=6o6<+1)XIVe%8%a`(2(-7$lU3f&hn/(Ed:%O)R-DD1CLp+NQ->8A[m&ri?U"S.=a-(cBCY\^!PYCCa8k,@(W?Z+qrZ'kA/UQ0gQ5[WFDcHp%G4kM%7=>0&MmIHBl-_XK[3`5A<jj%c2gKipW>Y3pRGS"V-NE3Af`^bEIj3b9&*32Y?U-mD=TD5R'tXI;AoBR.]P*8\icds=E\RZ]OOi_8%Rpi.'\2t>_f1H>=]?J:]_KU_P>/JksFNJ8LfWpkC-[i1\Qq,if%*beaYmYEGC;u-_P:OMId*em&Nd*(VK]'`/S`st%*en8S0ek]_%JrA:kS!6>r;k;qn@EiS[#5L5LU>e!;OpMeLH!G\@)!Tg6+ssM+!#K9S`>3\n6qp_:REUHC6!L5G+d-ATUigTKAa!B&CqTnVY_>J.%bdq3qeWNLu3oZ.S<]`$%2'af2Jmb>c(i4Zp_s>!Gr`#>T^W@7h#%W#E4t0^/#4`S=\#n@U=4M-e[?9J27GOUTDN]DjA]a.(jLQ*g%5piFtF\S;ZK.kU'Yff:)f"iqakl\rL^`B(8PDNmXL4ltP$DcpbcBALZ;!aQ[abJ'u\2kb:aUk=uSGD!@.,B4&/'uObb4b$/+ACFi%!2P5K=u`;T;mn4ij9IO^l6*<J9a5L!B0Jgnkg;3dmXkP(*?P/k>IM3h]RbiM/%:D$nX3#9'G::kqDQ_6Yp$3l,f^#Obq?4c0J46&%D1fnNbhGL,iSGP0ph8PT>e>.(m1MlHALK=l3klN`\sS>6>9QEu-Ae71bmiDDg3rD]m\5]fA/6Ib9iTt-e!.T.W"0eL,rf?^R?fhl%/[-MtLV]*N"s6^f!hHVM%99]IT).IG;EWH<-Y!YA\Vi:@?GJi;[Lp;V!'^@q4so?78F1um2VR^VE')sgl$U!Vgdt5h=CE&s0NhkS%gIc=>MKDB\7sp`r&ptSh3qbo)7/0C>7/BOAc.Hed?6G\NZ%h.OG,)mIXfWUM7t8,0ctg:1FhuP+*KGA;qpQk4lU\Z,&$I0)13icK%)nm:>gt(LDT$A,\4hI%jS?Y8j2]1d:q012`EUK%:8FOP9@V_MNi(KcoYh)LB^t2I3d$NJMTid9$VqE!nUE[=n^rPEu;$6j^luW?m%bI,U@SpUr'+l:B-l2'F?,X,L0#9kNNq#&\VYE-Endj<[P-MN[>5[KW0X`?):Jc,18:1k9\4Lb30JPDf`=>2/qE#5Hg3:\[ND[/kh%>k0.kbA#Glk:DM_'^bh8Oh7X`1J4#I]MZ_tVLY#!7)]M58E>r`O&df=2>^r("4,pr6!h?<,V3)Cq*d"ISgtP-TQ+UR7cBRa#:F7/%QR$d>!12Ac?0L#Da$pQ;kcn1]/!O(Qe>"[EB(sc7ND0?O,-?W$+EbgAC(:Cbj!fk:oCSJ3pQsA<`(+.shF,/#f^rjS`Gp)5@ub,E%2b`mrqsesmZefR\Q;=XASjcR<;qf5W+ICBs]B]MLVd&2=*D1+C8J+G5?X-RB[NYkBSOqOlgIJQ>G:OO%(8Ie6@#ecrFtYNf"ktJ7%htf3k3)eP<b<VSukP"FtL>L69/YrVNK5AW/L9h-N'pieTeQLV2(URE%3N2Gu.NUCMR/ILVW9+jk[&^_'>kCsi^8t\""r4n/drr*M%:?-e6[h1hPkDVf)9NU*f96EHKcKLV-bg"E@Iun?#XgNBLGu!/hR:V=co:b22l!rKZRJ-Q2W/'1"Gs^[(&G\5&?6:ufBl+\=7Zb_Y%`*H'B&?^n#muq`;l-t19Q>X43NihCOo=;0'hik>;(uS?:^38>LMr36DfC/QmOlm^*qDV4/Nd2rd#bgk8rHX[*T.6euc79N"-s`Ro%d]!P5GT3c<@"HjjGXNI?KgoJ0n=p@r"=DogRo.'96pt)g[WXIL2O?u0i^uR4`Wh/Q9ZDfXkJkW';n@Sti2VK4Z'>hI_UT;Id\h$U%:eYh5Ip:%KJ2*.%^k9Zn\V;/W>;Wk4C*^CY\D,qt\'bTh/p%n]c6cC"Hu*e].6b4b1&I"/WH)M#-an&*5ZVe#MT&V6!r35tL@YbM%c#YRrc8g:(ChC[CP[OgBO?[?,\?hPOmL;/R"XM%I^$7OACncNE:W-rD%Z.=>FkHA;&4orC_\[m)KP_1ikpg-$ZfuWJ[l<f39+-eV%=&6hT0u,0LII6U@Mr,0-g0RjF.7Tm:*2e:EV!E9nb0K[hA3N0D]s(eYC"m)EiA:_`.J37M66OiK0>UfLF_i+iY'5t]D^L;7/oZr;%E"bgp&ZRPt<8<ZNkda$pZak7j>&0>lPgRS8W[E#>"P@8ZY?_ogq-.#^"YNQ?6C0UX4X#m5T-_T(N/+_#d8a\5YpsWZ3f=T$aL0-b%ersg$eYbX6(Z7FF.Q3WP#%s]pk\P_:Lt>/Kr2E)QDtfU(,ascGf)3Rs=0n@sqiZj-CElct,<R<$a;^^V2-o'6[ug-K\CMsdpo,&_%S>3EF:1G9XOc^Hc=_3JK!c%(4]S^1Yd"s15Ds0T8g7#i2*8tB>;1eUM6lk6X&QG,&7o3pk.bYL+bT#gb>*qo^^g<GA$Kn6!Z+2M3%hg32<nnbR:iWB-Qp[E#)$DR>'pse.)H8[GOBeQ^VQM[*;C%$-`_H9#Q]ihiW)IDm>g\&*!_:=&,q5'c_m5q^#&lkWsEgS3ag-h;c%Y"^?80uKLt:u!5>CP^M0,fl*/.#ar\_14[BjL=D:E!P@HV%VO%nM/T:d8OP=aoD0fO)DPubS"fcpJ-%#n0PI'AX\CY)uO?*o-0-i%PdESb+@Y%2'OXNfA&*Y)]2eo[5nk?J_86KZBMMVD]G%_E]mK!`ie4SU"$A60qZ2m\ct1N4$@;%_7A6W')`GQ&p>D'Xcp,%iK1k-3%$P,8fph`'"RM8I0D<\.]?Pu^8/adW.>H^QN2.SU6bZHXY@3qClQ-H[ei*PUT2e(reSj>!Op3kbGi0TL4\(QXl')"O3&>%`'^_)UX%.,g7EnN,HZSM\HmZh-ANd0OX,@4=cYF("QN7ZJ6VM[F-;]'NEV-_6(<BbC0l(U&nVfo+_"9ULMH3UQB'LfQ=ZQjP[pp9QWP\WWrX%Q9]N1kp[Pel+I??id.&[i-LpFYr+Zl_KA-l1:mIB9)q.6Y/gNcqN6sXE7o,P=)iu.>""m`hMOcK;^5%%]i-HKoAIJ#RpG4+'oO%L%Gs1L!mi<#+cc/\EKYgTM1G`dKakI\qDm"j_1iA'"mAMj3S7-F,7XDO\`-@tTdJ'f`Gm.F"EtV^mF:psBH1u-k8'>VhZ-6Y09<b2.%<6)<#YZ%7?JPdgI4cchTF_1S0(uXS=RmS\G;8kmI06mEG$a5V?YpkAd'lZ?A]OoKWJ#>F6EQ!],]b"obDiUlfUuU1=UK`>?Pi;L]%=TH4Y*/gsr3-?W*dWEp)4m,(`cBC7@>@_/D_7SSePD%VSD^-5K^<BLZJ\`0W+O[)+c+Y;%rCX8_nC?]?JRWP!J5.L^h]_t2*m9!H%CV\s+=!#Fg\m/0!3_[eR3Mc.%N'lPQa:*Dh:6?C@l[6qX^4te)_U)SS(;o[d;<0\K5_UMo+!A0(0:B"bkmPiG-NjpKTr2494PgW;%a3p15Osi\@6gqdo+o;HLDB[.:[X-gRrXg\@O(&R6.ET]qrYl^f_ZQU4a?[bL_YjcXfYP?u71?G,-t%G@+u79o$q#P6^6l5EGcrdi%./+.pS9^WSpQB\uPPL!<Nn<%pKUldor[F8f-X\kH(W2=)*>#k5HE?Tt`'8j"G'sIc+f">iBYLY@*A@l=DA[(0_")G1E3n$OZ4NLQ%]a8Tu.0),pRUqcIi['<<O8U'l3[7t4fM`_4Fj?7"J(ImkOi'4B`5fC.^F7$YOW9;BW<pFcX)L.tM*Oi82\Gc[&8Gg1qRr@QN2JBI%o94AuNh*OOF8Q:ojo4@cDnrG@,mp=L;'M0BraD7pWO##C:]P`4gK315=Akg(Hc[Kqm%gYq"*Q=N6a5LF6MT2+Y/bId,[,:#16FW`%]q8%o@J]t8g6&X-?T2L*%Ik0`VR$u%4)O4SF^l$'dM_\f8eMTSJ2K)LA4.n9X@b?12\S(.GbXs#OOTr^9_%!:H;FP=/oGX+M5Nf/%%e3#Sh?s*r.L_+X82J;n/%I`Y#=+:t%`RomcsO\l%B,"B)T$aiDUL@k$3sm%1;mIOb2JZ:+TOVYk%dk#e5.r60UA\YRKA"!oHi]^%"8U47H3.n^Mi+HK=><6E;*u#4,E@-2GWsR;N%\pbjsq[r455F+k#Q&t1^XQ-mrZ<eg3:Wo[<Q'd-[RhuL.B%_#:,0-E#N#*:Ztt?%M5Ie-f?^@q@bcG2Lcg.S,"UPU(I>^2@<UiCfV.1)_CA+7:jCX1dXKuJ8C&+@RkY?W0W)+H%Pn:hi59u/egH^T3K&p);BaO\G:dtG%WS<+c[-s5tW:C4ed^i(3[?'&7+R]5]&d5I4^CO'"?,Fs!hfK9dd9t#Aenjq.!RB.');h2#l^4AO[<J4rb@C:r_j8D7_,h2S#DuNg%LXHCN!Ta>:d(h8%Qd3:drJK>qc5&Kn2m+;m\LOb.nth@+FUT9Nk^sHN=P*4o[k)YUpEUZm*!DkV+IefLBZ^1XCXQV6`7T=Y=YO5^%&KK0.]c-L3-#(qfB5c8oof9?9h7N:0-2C#8P$_g.$>FQQ%#-aqBpZY;#YGopG9J$$=eZlhi*h.j.),d$>*::0OGi\Q@Rl,#^RD6s%+j.!#1NSKF9:%5n,ekn#9Si74k37ug=,VB0OolV*OqUBL4Ja@G%7lY0,K;dN/oBHGA_</n,;IT;Sb='jFmh8\(]j;3"P9>7-&2Kq%:kRn`ZuoqcRcYn9Ecg(#.QfW./<DhgH5pp1FX+J!L*@sU(bM=Q+!qcj8g"T^.Ds48;ISmk0"g$@GP@lDD&X&2G,*cQ5KuG3?)lJR%@=TT13E$-?cSY!r56+kJC.uq%DWcAk^RaLlKs;(%!W\:k`kK!C."`ktV>QmNe1EL[WN*@YY%@Cf1)Bu]T4ppY_liJT_"m=.e47Rd%'Pi":Kerh_52j1"miYMOWB9o^+e-rgFR-([)JhT[IW5kF(:s\tGDT]Qf<H/^c[k4*jpb7YrC&uZ)8q^'(0fr18^`6Vo]bhq&*tMK%T+7",F>;r-]*3[ZF#$q2OZ_QQ9,\&&"*ah\SS0)_`5Y7q0lFZO/=aD#9r;)j1'b3($Xf&TLp*@m++skh:U&8QD6+!b[4^c@?<4!d%#L7`l$!%q1NJUUBB#cki*Ht])\ElPX-1AiYL[82kU=tVd=HWYs>Cq*''ECV!M\HrmRgZ%R,^L@Llu5R"d_2$Vf*mHl%TnG?\IQ0:%G/(?iG1^2ukSDA*g[FG`!8EINYY,)iofc9u1s"#d#\48]"IP)Q0u!kM!G.#lJ6W'[^An8#Xc`%_7LB9Z:jO2qB^0<Gfoc@WnCU5@%FjdrrknduJ<7I8o%4,1c55L\HA]NjI&\pmj#PFYNMpRt@EqPh(`SC^Xk'EGVar0aA9(ZQTdRIt;!kad;1/@16N*!Wgi9-uW=MF%-%:>'J.nG;LpYOA,g.ls_1Ug^OaIgO!RId5T6">V/f>[8!K,8iaLPjs21poJl;'2Uj&GZ;@aM(&Wj)h?f!.<i2]+#Q.mJgYKge46q1%71@=V!/s,-!'VlYNcO;3/t'k9Vue@1Af5Hgdlq3,TLFg'E>D""7Aralr;kOY:&;r).WL0c10PdSoMQ+%6TdXN4*[8$0nQEdGtDXQ%"uL1Kq%T`hLN)K[hsjN">>S*IkZ8RGV`D$0?E]Em"*1RoZ7brnS-3LT"0h(%!YE6[6ljs+i3Yf]9]!Bm#7N:"V&mfAM*ec;!.u:p%/+_Q68E5?2HN4fk%DCYF;DJ8HnqAo?][XnIin\2c6$NbU8@c=;XA^Ukll$<#HTAJi"*.")>^EoKcog1!ionA]9MUOq<-.8/V6bp4%6@0+@Fg0>,D=n4BiSP42HG\q4$'cZ'WSAH.`U[;YhgOtCFZi\UqG62b.;C#ip;*]N!*.4?jT\N,eV/7g*L>!o`pMc;BRg9tUO;,b%)Q$h3d6-(3hE^BY<I4hU"dqf6qqVYgE06Us+,pLejKu2f[F8N_ImW39HmUs#)N;:)-i@*!R4,0mC6]TVVh44*]"@B4o^XRR8?q1,%j>nrC;d**W[!T^")/oFni`nta^nk1Zk3861UWYA])YDZ**\lpd2(e4+6gk>:(ZANdP"Vi6Pj%,7R%k]#Z>qpW!VN:WIGjAMd1iHR%iW./X!S5IEn)_VHg-thab+X9<g"o:TG*Ya0NcVVX"5"!efi%@?WV^YB3GcC*Jo^2UkL^\?#5HPq4q^h*gh/'\cl#G]l.5=*0aAG#%)l!*KK"jn*i[%?;4f[Qd_KfhR8FrKnX0HJW9YA<&oMJgrIge#+:T8o-V[qSs=ef[<T81uj$gi&)]/XJD)1$(6;p49r=hCh7AZBLZ%mN9kSAaI.[^6uV<1rof==0?HE<P>Q[68#8!dd.Q][ckE'Ie]YAc=,:[6fX0P:LN;%/lI;&NrZ7Mc0WuPkId_RUD.\K=$F3F1e+0p%5PY0@=nMt$aYaAR+>mk#F*(VY=:,c?lcJUB9+o^2e9HeATGPb&$!+IUJ1T/jSmL.b0\%S$,l?QGJeKde<3?,sd'-iK9%RE1ZW`..%TRLS9Bfi`V5MpN5s7U*g<n!(Kda?Uhk<W$Q1("KQVb/c5BDKBm[%$E%1,V5IBEi;%im@8[4''GnYYSTOOpAsA+'pO[]&pr66Nc#r%j6>/Z]Q,D@?H#up>SQ;rOj^Dd:S!(u5F2`J*CroKONoH'E#oUd]V<>;-RSWUj@52TPNG''HgA_UDiha&UE[3$fjTZ,M9P3SEY_)b%H2t2hi;RfG6fZ-=i+k+`nJ*EC1qHAA2M]2JWY/tmHLX,?h57PBT,&f'g2/kl:g(2L^$[iR@bl<uI'9HeLB0XR#&)OuF.O*)5TVMq%U'La0::k8,dbFuh'16:ZQkjcJIH1W6"P/]L,InXFY\4WaenlG9)k2^n[Z3=hQtE80+hGp\r2*o$?t+)NK/munl"H"pqR\P9#B[^c%^4s.!YQNlCN0u\a.e[gkm\@<D=IQrIDjNI&Z58GI@RA]2i&W&Sg[$YSN,q>rq>_"r?Ac2/0=DM)1gstYRhed=J5TBX%*MCi*2[k1%7s-D(HS=ULBA+"&!)+K%6Us8?:cYCbXj!7P\>gXL$8TB:Y:&B9ZRWDO`AX`617)0),d6J#++_EuClEW)>3snX!.=3r%Wg1^D>,E'%\!i5LY/;1`CuFrRZM=3R6E3(-f3PLC;r(H.V+ktf8JuA#K77^I`N7k-WNnU(mNnNqLtE7DaO_)gR,/#87beZrdqUgAT4Nq]cgGB=%2E8a]5ZGM`l%e&pC8R/`&/EBj0pk2X3j!7:KKt.p:!03\Tj"P;)#@7ig<d=^OF.7[2H)9(&&H[fV/[FH[$,Pk(e$U'_`(BG^FTcT%-$aHo!+'Z6^9]X85=K!7Vk"87(&EO-@iiHI(k9&f7Q!MnY\M"630rR'4Bt1"C!2%!p*M2B$9b0O)EYui/LKgK)d]u2=GJaSnmGa2%Hu2F.;`PojiLl[9NJjs_Nmj%'@g.be!TZH<ZT/QBBr7G-:uYbaJaDMZB/!p%Q9UA_&_(KpM+8SQ/R*D._fq3RRd$Q2%#3Laj4G\$%aVT_C.L%"I9Yup^1bTa.G@pHD*[t=A,HP+)[X\iiF+u0$4RN_!V2,@l92N6t3R*J4^_"9`dL8Nb2C(Y6.Rc80`,5K]PD[lR0rn$O%c67@h,$_:/nrt@U##@l8g)otYnae'O-&03&Vg<ck=V""9+/Q`D&14.KLJ47.L'rj!S<pjU\;H^09NI#.pKl(l/VC!6fk'j^TKQFI%G^s0,m]6+3W1D$4YiXb;m=?h[P2U4[G/_Bqr]U56DC.@O#=pJcFd8oG%Q2hr@0+8M_/go(P?j?^Rd@WL'ToAge&;7AHn':Gk')r%%O__sKMtq7,^*UQsRh0R(b#%Po(Q!@o.pPeh03]bF$/<uU`emb0@k"8QS9dQNKm+,4:;+ID'TXE)1+g5)1!M#F0f98@pGBuP\01/O%XRg%W,)IqDG(u;f9fuKt2;':DYK<q?,;,0iK/.)UW6JoKeg/t^r#U^"APZ7bgY5\VIEq9ICbkCNDEF>lPEpTnbh9oXG9u5AlBr.F%JP]H.c',I?Zl3,)gt?4<o7(l.&dM`-1;lQWjD<gP31I#7kEWc<fkR9BRj>,`SP;Fd1hW"K)Vs'l.?3b3&k\pENiZjQGpchkg]2?6%HtC5uB=d?iD=n<2^V\[B]BJRUe%S2TZcS0<Z/KL3l@M$c9_1PhB+nMb.U"7VgB;:u2d[0lP0E%Y7-Sj4dH*j);)<-SA_q:_D6cce%(72MPWYWA%]hMOM-TgoX=k2+dG;`S>*?gqIU.a&51^qU]A7q96a"L*"%U)3m0#aAUXQ&_,=k-hEEF0C2X'aW5AGI0+mV>._I-@A/%"1s4h^th_Na7sjc&oM>pI/n7X]HPB(G;u!3d,,j=jpLe:*DWj4]8MHI?VS,Kbdau[h)7Ga2:]T2mVNTskW.)J]M2Z(9\q*+RI<Sc%/T]4)qgfj`hjDkd&E_o%nbDSSJL9QXRkns0713ga=`t`/"7F,KO;fsfPSgl9'@obH(H5fhKa.s"Z)K3q2e^b2Skt>Hh5hknX*G:@%CgG]*[n5Y"Dj)Te]hMBVk%t`Q\@5%+lJ<ke1%#g_-gD;dOB<.2Am9k3`h%aC.C,ad>9Fq]jt[$o*)9bbG)$apeF'juLQaakZsPe_%bdi/a1`iR5pM2j\q!.2U-[FdLZ2&\fXPZ%./:/Wq3Li&C:*'Dh1?XdHK1nR>a&qIRinY<o,[;_?H34'7.3=RG%X0?_RtuCSZLRdR%8\lipVKIo6J@10JCV-&qPh]",BBJ+ajdH]NY1ieAJiIfsg!hCb>F6OQ@2EC#g(acE2_E&;9s&QZDNUF^hYZj/433`5@[]4tI$V5J%>s97fES@,b7eHl]JQL__I?$;DT`YY_Hl[B@eP<*lZfq1*eO(hbFh.+gEHIA^=2+W`%BJO6.&E9]TYA"DUK!'QGOiSD&L9d+0r1Z#%p1XhdcXF%SS-H0oGF[]hDtUm$e'PcSGc\9`hR&X86Qn.\*AO/[`sYqB)97iPYo''+4(lStQK?Mk"0WeeN1&!SoL/dg-fO\O6CI01%,@\q"4Ec2='.>Q8dqs`XYS?MRqd_rT_>*5<=0/+%><J.$``uSj!-HDhNsmd.VurWlPJH,^qdA#Re,b]OU])4;PoWU--]'FAS_@jO%)k`7&GYNJOJTF"ITjd7a&NB]WQG2KPe8?C4Zm##agSG`+G"$&E6(JU/hW+EE-J.DLDURXlZ07p&"XGaX.aE"CjGl*Q(<iU%?sK2Z%b$sKo<;2cF<NY;]Bh0,7O4`n]&&76,=j)Q]?q5+d)1!Y)QuOK!dXR^4K+73UN;6M)H/4LMgJe9dbntbnThECI+joJae</@i_e"fV%g#l-%FN.:unZtE2T@1SGbM8<lfpOL;^#3&bCAA#-/@&!22UicQk^f%N>'E+h`($?AB6[jq]Qqa+[Rn8qX%p[e^0%jl42K%&H*1Jm%IC`K?nCk#r3=gP[!$#dd7Bf3,]\*(W(0r7(2!XQmpG.5j.]M"ElI(Au<US>5:#W^Dd]^4b_7_Mcd]ZiZGu"[XfQI=pLXr(]`WPGm%gqKJ.EZN'cW_ej#nm$r03Lf@o--/0O0&qjnTNU<aLZfPM'n_65':>[S<Ek@Yi&VXSa)\W]F,*oH00(Vm4ou)CRq;R?lkU"Q!3=V)%]Y=Cfdlgg9-A.GmZp<L;5eXcdd*/qq]*f..?)P0\<d6Z6=FUk8&.2I/h>`jbk$mR?FM`bb]]#YQB%N&\Xi+&G"\'kq\@-fCqe2L,%%6'O-GnU:^L;Xj;@X9bF`ep/r%W9UlEbhR5&%pnZ!->KAl`%):-82AngLbN?0+HiC%LF"i+caqkdK2p6k56Ce!%5JN8>!p.Bjo@*%j*KdK_'W\f;F;'R9d/0)4TPK91X?ftW8N,iB2/=Eo8T2^1ipH8LW7207Nu7&oHqp0#=GS[F/O[mo!W81p3_>?L(:_hU"SgfWZ[RP%8u,&MHCmVd(tq4QZ*-i8LQ8Il=XF+ZN4(Mb1.D2mX8'tOk-QqJ>P-$tU7&+hn;bV;(Ju:>E]\u3NDf0)`#?Z-)pKB03+d0H^\MqD%)_#dBZ8$]RR&e#:83^t%7td!?7\/!p"dRZ%,i]!Z%?Ia<^@`-^/(O_b\C.t##Kr&0J4?9X&P"+<N?6D'r:p^7FM^j1r:'uE?=.I#%d(>'>5LKn;f?F*oL]S;L]ktfnVF;`A0tic1X<ZAH=RV)#`Yi*bk`T:3V?j>P"l$aiBXm3f!Z?"WB1s9&@J=iiD`j+iI>kYqcU&J>%Hn>N*,0VY\0_.s"rg:snHcl>LKik'GdacXVJ1,=&*cCG!Ej%h"$Xst;>24BkV1_[<L'FYh-]bZ*lStd9NLm&HN:`nUj</AikW:nS%AM^rO5!s-&$tsQ7j0ggP:_VcB]E)#81SYL'h7KD]DUh6H:=BfmVANfsN/Dde4Orj&`l&F@SO(L_.iq'JLk`EG)ToT)Ve?lG/8S+^%mdu:CK;c,pTXTMhH-WNRm?rts_%gE4R'`"#ac(q0%4"?*MVcWAVh\l$AfMSKSA3,<R9"i%^A?6dB5l8.iRF#l3+_.@Rl,s3hkaG>%VTq%<D]25,U'GdLP^X&&f/LVE+'Ba>\hWrm69*mR`6Q/[X6J6nor.MXr,Pt^j^`#_S8ESm=Zd6df/Qh9^s7?+#bRi<59u!*5>$Hu%7SCmq1WB`]bn8Or%%"[6brFMcVL.^PXhr#'b15j,,)0k"67cg3M@5>]W*qV.Ec(:-f;=n0Q\a?$D2Y<IRg?)sqEd(Ns(f>N%j^B2%5an#mOQOsn+<jS-CBbgA=&`h=W2^YX`Mu\<Kl&k!!!WPG's1-gMS22S2X_?BlLHl!h/ahQI:nUbVd)N<DASb"*J!Xfkf.XNc$^WI%]?VWD^u_7M@`-.@M(?lni@gB0>C>Vd2#=fCSe'p4m_q0`q4hDN8Bqa.elVRpRpg>u@iV0>R<;DIDkLO0<45llY]Yru+)7ld5@.pA%3sh^KE(MdcBgqiD@cgf4V)S-XEY9;WG4+X.F>im?*VLQ%eU02BK:>)r5`@4Q@pduuZ1-,i]%gaPqd(:17?@ATh<3&?d"u!Z#S"gN%H__pLd(IsD$0DPZLi4%oI5fLTSnBr<J,:I8ALgX;B0s[^s3@k^,WHM;Zr)')7tJAoH2S!r>@:V\[XbT<`LNU7X"fi=RPFN#A$])p%\Eb/0-/Fdnd47\HfM#f-d%+rS%)TGYY&)Cj:f$[Fne[=1`tsS]:0Pn+F4f%M14^;aKGK0LGZXR*6l'%*4%m`i..:@$;Qf/7XD%VH%DUCb2Z+$/iT^nS`V3iKOF/%p7nM1?nC>tT#dI*#b&UgmNKN+B(!l?D6_g`4gpcdHL[8d3ckc.)"HEp\(?e9>_!NtPQ0me`/W9O9]%S6qr8Md?*eG(5f1ElCE'*[tJ,O46=&^IDA!,r49JN1b=I7oEh6c9).b=Wk`GnsNf?jMj3$1+&fYbOd8"+W599$#ASQ?=6]#].]I<%QhGWH`^^V3IFnO8dN\iO_,Q#R^f/VI&h%I9'@V>#>)$]P)G"aF_RP#MJoH$<9\^T5Qe"BjEd[,pG)Ji[\[93*D/pmT&W^2"VJO29%ZLj^)]B<FF;!VA5>W`b6f/H<o]DPgPDbInKj)i!4"jPLSYs`>"_s0\25K.5g;b9,7p5\^[Me,A:.=7,^lHiqj#_[6jJ]r)X$]M]4%,'n"N2]P("6+^<2KB9;"qOMmSS6)'EZ&*GOII1>7A^;de9K#XE6)H5Z?.0On6]6JBrbOHo\fLjEeQe'JM%hh<cGi8tBl=jN>deCE%JkT?/4oTcUk)MI5,n;7Ipma)37OlN+m.<0BDZ?ZYq3_$9oD(BA8p'IJj>H?;QP#F;%ua,-/kPAP0Yq$qloVoT2g+@0\EQ>+o/qkH%G"fp*GD:?.p,L,%?ck22,1)L6'[-3XSagl#b9-#+g3d"7RatdZG-9N\US-7D3<OYtCc:B(/lo[oK%Dru5pBfTVR)bA4Yc52nk&.B%X7Wa!Vd'Sn'Z^b!F!Ysc*[N:/1;BgO!:Y-!bDg5/^idXF.:H>T<KK@u+UEV_Su9QTZ:Va[=K$QWI9V/JVSKPZH-3QoD9(^p\pT&0%Q?:d&j-3oq#C],ppKeQp9_un6YVKMk$?k$ckD72ZJ]/UWn'LO.E%/.1%SSI:=.q-1dSq=h@o.3rF>#s!'8?s.]`_Tcj@MnG0C?6j%T0NrE,<cK/)c1E%D&G$o=Z6Ih<Ak55(NNMV^<8*8Qde(EXf#u>XLD"NIK*kWj`oPFCo4"*6VV=HB<Jo_3A%b+<i`pail!I+"M1<&%7]maIdV*P@lL_;N^5Q<e&Ei]1(SngrB%*I9=AIRIi8!e.9S`"[V*8P1qd<oWNt+E6PD:%DB;iteTt$dmSbT'*>;D[PCC[aQlg-Xl%]'24BJX2_M%.H".4pGSA5`B(:V(22_Ce8E>&"\]/p$oSU?oim@Z3d7UE:217pNU%_d_?9QEDEU&=qn*I;!Mq:hFLKclasrCf@_JG%38aC/?*LU1>iggH=nXgoF#2oM1=kl1";@rHq(,!@btCY24]WAG.6]LmLV;d^"hF55Y0K1V2c3BjQAsNF8ZQB:hIUUiVTF:?Q-?Ba%CquGV;"u;S^a)mDHYC.G=5A$[((p)hg,ES(WGXUl>S0/9_8&<!/^lVKE^+$F)9V(_[Fs\P>*R.Hhn`"hof8OLh[K$6cc((Q9-Ok8%::W"N_lOWlLf@SRmlcMtO*eXcZ>i:FXF@<fpEC3>+)@jYjUIViVbbrNZ,5Kh8\J9RXJi>7cUFSn/jTE!6+KFp9C9&NGJB]YC=#n^%04FMnq+KL0m(%(g6Rh%e!ZhL0.hgWZW1FokOD&[S`0aMe0e_&n/D`ct5:!hBY>X]A9`!/[?f,>GZ]Pn#]]i4pNIce%,AfC[k3h$G%Bt&^5'jGb%Bd"e\grO>![I>@3DWICb>TW`omZ!b!`SuLi[NB&JE,_U.f-8@.EV!o1kOrnkQiUtYE6T,HObCMd$Vj#I7j.1k!DNQa%f5c'AqDeU]Q^qF2dBQq$\UU1jZ*7)\_Z:dpJ=X`&Y;3!"PO=YQNp5/=SOkj*l,XLu+DNNK6s=iA_7p?(R&A6J93%Q\RX$&K5=ON,%mcRYnGQcU_8e-ktQ!E#UEm,GaE<;mUd[_H$+2s<tY=B^7A7+*[O]ZZ[iV5s^*-g\NjhPXn53>!"21-+5"1;cQP-C?"3]8=j1ZFBe%=;dk[s+8L[W,Ll/Mq="X'pr^<MFRB#%-oriSKZj4jkAA\JrGiakjs6]&'rf8fe0IMKOh9q_]m7JWX;6T^Xj<B6seUanr\jUO;^@,%I9_NHA\WNoAV33XN%&t,<*Loj>"jJ)PR.G4fYUA1-'I)gbjUWgOmK^qF,=4cl=>g/7^ko2(7<QuIQ2OA\6P)o&Tp_dpMDD&eCI5(%It1Mm4>GGX?oMNV]&^q0h5@QG8jCYm#Sk9_`F?(!abV6#$P#]D8_/(nAJZ)M_d-kKpQ6^TX#WdRirG4np6'ga3i1!XN,P*mRDkXs%4Lc6Ai.uYdWgJ,,52lDW^63;)SBRH["1qDlntrahe33Q6=f\%'B4RICA8JU.'p>WF*;,/Q3o.F%0NdA[]p^"+5]2Rt]JWKVbZ):W%o%G^[1/F>(S^"J*8+l$*a7[W.s-_VP>34N?C9N<:eagt+1.k3BPC\GVUf>mIBgj+0d^=K4D$b_sj#"5^^*uD/RQGQaC+W[R,aUoN%(uYshACY\1jRf!.=lH)0o[.L;aClg9_J:GCoh<5+2d&L,8p5R+%)uLe+j5j5*58!+`&jCl`Z"!".<Ph%;Y-1lQXVS9.qQqtn>1N%%;fnm1\]gP+-./CSrfj)g]XC0RM3?VtGuTsriU2D7/0B;_Jd-t%*8ZT9>31,U[7A0W^i!$(T"/CUg*/'358fY0g]ONgG-3)kY521F%.IZpuBJkDR8DRbNdD(iSB9n=WV&0WU;Ku;aK/O3@Mi*MDE`uGXdu;=r,jJ-jS/KM%dtRHUAl#",YE(^<]c0]Eq<rdLQ)8r=d_%^u%HgO=8hk-fpr2?e@^O+tPTAM-qE5_Qr59J01([&A1a,/UST/dr*\gJR_U5oWrMt:idXiOmSWC&Lq$D@t[rEfh)A]A=Y:U-?5?3%<V%N0k'Bd3qWW(Fu7-51a8i7>i"Q-eT0RU)#E9@2;:i(g?:12mNOk;]qMmpjV)UDNI4)_5W%^YU$]qHrmHI+Vm#mG`@Q?0detiO80u]%j&$Jo>8[t'f`g=_jg)RDe9&ZN#slh\@[\p$hRaGo1@0HOQ1O\%Q!`E7qs!Y"+,WSDOqZk2+?]:"35dKA#^IQ5R?4K(S(<?!_r]/I%oAC-<@HRIm6sV(5pH0]&h$1Ukde<rjE5K6a`ZL-@e3Fm-4`CdBctV"ZX9Xl91R))/=WSP(mRQ>`r4E2En>5FanP3(4+!c;d6"]SS%ib)k4KrO3eX7;^ih0L]$iHB793HWqIQoB)Q]s.ASFNGHnQ+HB&B_lN<fBLG2N3!jFPM^=siE5AERU_a:R4sHSa>o2pZG0[m0C9ZQ%YL;LD*A:TVk/ZeSNg$,cQ*k>95A=_/!hk]&=*:S'e0>A@fE9!aM$qfH`?(8pdk#$LehN*[#')H#@Q4g3Qc6gQ%q%Lhq]'iDB##kI%XUX55#jkh6)J#p=`O&\k0QK-ARX9'`E7#2<RR]8\:"O$lnLS.<$8I(d?"@:&l$BgVRTHTTmRYf4>Vh.1,L_$g^kH7)ERSs99rqVC%\1Hi35[Oh4)@M5*Q*Xk$W/:gT*cR2;Rjqipkk*kT(S8`N^D]F$c'Yq"iEhPm_>s+@Ra>+WKR5g]&Y)4kb:@=Vc/uV2b!Eq_So.Ol%QQPhfof4=87E6O_C0hMT0k'q_AC:kAj>#`/%\HI'j'?B4*?-1-%hZ:^jZX_0Q:&K;bZ_eg4Z6h$N#1JH:t2h<WM%4sZ67^74)^1`%LT_d+Z$8QZ.%@-a^9E2'8k`T<VZlGEX0]jAMZoW"CaC\')q[l,aAmpB`Kc:YBIb&gN%62?Y%]KVSbW'F<qLR/:@uogUpIJhB.KZr%m0%b7B;mjQ.$tb:4gd(0'*%(6EUQ[-?77rb,fZsAh>cp=Z#6T9?iTY';b<b\q"$`+IJ38^5CWSR5@D\u/tEgXqLPc"VkE"^q-!aq%:],qS*Y##pWtM^QiG7j6^ab,<1b1R.8IMhc!/)meq36NG^Gd4E\?"!`n&1Z8"4K7NH2,m,5aOj_MER4EcfB]c53s16(kAo5JYV"p%/lt*8KRmcL$*XX#WHNl@;Ne=9"&sZpW7#/"*F)D_5iJK.GiR>@S8J=faWZZ`8V5Vj+rd,B#*IfqbA_.T9i&EWMM(&/^`)8;"4Rmn%(&s#s/t3B!Wq_Z.]eXOc+0ga*q1NW$hAM@88*k1F,_#f&'ih=H,T6SF--'H*XTM$\I'4SfnQi;c%(*gDBU9%-r^c"`WGV]kA^(6r%&!sPg*/ZKZdt<,4UDc8'@$38RbgsSr@^-]E6==ae''G<!ITV@Hk\-6b/pH5h%gnpi?_8"u>DR%gGuDI^0_I=Pg`*3d.f0lNQl6cZ%2)M+S(Ng1X:2s_`]ed]Zr<D4*H7MZr[g5GWNa]\0g+_J'mnn-9`G$>H*6t0=q.d"k*a23DnF7:D$G62+k,hK?);^9^9%IH.),P<A%4+5CT,(3*;`(l\c?.W?e%$h\9dOfYqF:9gC.G[`4-D#d86>lkjZF:\4nQt$cI_a=*42]!p`[G4)2Lr[H"S*<ZSIh+>N].!s3m`hB%_p[*fQgI-,P1kL8"?geh,Cj_kPP8ZL'0;>9DP#8mT57'66J'X%%<lKP/i3"h*PX6<"iYFG,A63DXT0f@)t(j!f@(b[kp0+t,_BM[%#aB#"4bNj.&--q>@#KE]ol(<2`op/FM`blk__fYU4=rSNa%!e!*3J:?cFHp8eT4W.5S=(=W<*X5*it's"50e4IDT5(SMd7rZCSXV%]l6cOOqX@-$P,kG>QHEcPt3:bHO`"n/X:jurbt;VOZ5';/f/!AWd*G@_4F%0\Xh/R6M6$WGh3I?N_6\E@WI9#Al(YXH6bs_0/f]1%VDoj=]):nA*cA69G*\hY=5.GZ^_M$N>='-rVDo8DWnhB(ljRK'D5R*X\F@-4H=O<"+Yka\`_8ZT0_l3tZ1&0Z51]DX_J.?O07/0G%"VJf</i\8Ps1(RiB)bdT@^f%oFpLlW9N63K_KCCf^S&(YoQ9$`P)JFQG]M:0\.66?%4;Vkf4F[h!1_XY>n@!#)Kj:p*hFelBT"b(%'eInB%]ei!djm*Lkc.,@\7U!fMRSlpg8IekdR:F"L(r6I!0"]=nqqk6B4pGheO:N"C1o<5ap*e:NuTjF1<iZ!NtA)ChC\hU%B0Ve%OZVXNfR7kgl_DYY"U(D^L`uk;/l7#L^KWSocbF\qn/`=.OZsHAW\(nnKe"ZY8Fc#B$%F=Ie#Yc`[;Wg/r#=kA];X-6MAdcUV8qWm%o@Hska#-?=X<Fm:BeAT"N^ta^<0qo')\pd.Xa&9nU]0nD/mh"!+l)mcE7`%A$``<SW6M_!-E5Ca9i'Y?dihLlI>S^on"4RiJcMXb%PW&,Vif,p3F]Gj\<,=Q!)06rniG$WJptZl<k)NEi],;3gbD:,kp5NeJ(U77',(7/&;1D@Uh.,*d<3U,\q.m7`@E4uiM_F\k>:qM'%pL(a(qU@\Rdap8NBZjlko>NIh&O#CoV\dsYBW6h(O5L#)+Pt"Da*Z]g"ga'%r*R.t4jIoGV_q)lr4>GG:bP/52Hiko6`66"97PL:%Kr8/PS@4us"/rOF^P@.-:/g`I.aQeU$UG4Kn:m7eTOCt&3fV$N'tXp`EJYZSPID0$p3EZV?s-T81cVosrcD=T2"oejMsRaJl<$=<%;n<J`D%,CS447EQl3ft6kHOC9e3]/]00=Lo3FjSNi_HJ`c)/Nq_o4[-q%^ZRg5tn+^K$5NFRf<767u/4>dSH#m-M!a."Y,`3Nf4N%`U`PCNK)h,m(V^%;XEh"'#W*=eB-DUFmGh*&eSn&V$d]LaPe_b9Q4-<H[m^Y&YU9/4S*JZERR"i:c/a6@9R%RJ_VRsh4:?39"p0#%Br8B7pDdO#I8hSU?"Cle#$8J^5W-Q?CR=2%WP'\'CL+i8HZ0gc&*oCQ0'S.8M<:AlYd'0EgVi&E;kqZqdCmF35i"%D>,j&%/9<;s%I($;$l,%,1i(2A\-9(PF7#][MC^CubU\!^b%IITkChDF![-FN^J.t'STttQ4Ss#&ML]1^4fVPS-Bl:3NKb-&"6jY*8#,RE!;'Whf%\e48&N=2*/4A2a/Y_?`QE8c(_"2dd/'Z-)TCAUi^+m$9C%]!bgRNks.2!HR:)s!lu/<mLbB=gZ'iZ`3&(d5q4]\+-0Y97+-7Pq-6%M2n=a=b_u*3df@70omfo$ek&-mU.V@,Or.IOsm"rhr$5F`fn+.!@eS]c`X6<`4fqDY7FnDqAjCpNHS!/M,[,t+stCJ'gUD-Djdo0%o)58^`uDfA@R)beeP3AS3O,oY<k#j/3TFd5;''*7SGlfLCUSgt+9&!oN2)Ul8.ib'Ro#uep6td-fX2+?=:i?dV)b?!<=93/3#Fs3%n4Us?esmjZMf^b8(Mn[tf2=ZdHqHpg?)5q9_*3%eN>fIqAfM98^e0+7h.>Fj>o[3$DoIYm%0JO<3%qcE-q:@T$?/$bH%U;kJ'rV5%dr"AOQT`iU4=qFB]:?i`B6s)1:R\"L"$.l(^/2`<[,d&apbb4gFkYZ^oF7pmWD*:ecS$r(Zd@t+rk*&*k&a.%[?BqPU=?ioUM3V"%BCn;q_g!$peMS[P.<q9$Pa&"dkPF=gZfo4^j,*)\0#e'>d4iBO&?ArUTpA&%f@nrX]P?7tZR9V_">W=FTXjX#kf(7s_XnHJ!N!<W%h,B&"k-OS2nU#sZGtNWQ40;;s=,n3#;-grJ7)D7?Sl\(^7#aH5r2RkYNX<p4?1g;H6(cU`H?62LHg%e&ID=43Hp]m>.7<-RApUGC%fOSkapDtJLNl,m^g?.'UZFJp98f2:P:6s0;'5En'hMfmCBFSHJCFS^'<We-$+=h`l;i=VaJZ5g=;H&[C"WYal04a.='g[/$[sEbf%CD"O!i_V/5DCmqjYoPC8g>rs/'k4QG$HJ:J#^CHHf>t9GG#-^`B#rK>`hIBtQ+dl*NXX*.%ZONX.k1S&dhtjuV\lhMa**^co$0'*%ha+[&Q"YfsN>D0>UB>55l7n`_((a5XA_pUOG@n>WKKdnK/$V8HRoN@JD3'@\B@HdCI_k>#5CEpTZSpp3SRKP'@N->h'hbsWR]Y;.%>,cV?q\erRqV?G)r$H'>BGs?&,f;;l>+,n!f/%8:`2FMNmPkI#0P<%`qXrq8f6]9U(dZVQl`P%js7e#VdiW<EG`&m`@TC#sWuPhP%[g;nGqM%GI(Hm";X(%R0g>NS@2EpVW_9Cd2ehkQqrD8(ha5[iS\2&6$OFfUQLh]`!3?)M"7b/<(hO.)O`fEKr,N<3HcXZ(rLVe'9%!FsS:1<j=<`BWm)HD-f??ELQVaf:im)C=hT:;TLmI=PsWF!'=sgY<&/s4IX)Yrq]qBL2B+WBEkXSahQA+:8Q)7CC.T+NrD"9'V%K%4SteTB-6d=h?SHlqk3EJdIXm4HT]7pf$#O!(_P:ZX,^g7,X/sue*2k]NB*1P%A''/Pl6jZ2\[mX(Oo!JlaI`>,/l=p]9]DIF4YTJ%c21Ftc#Hb/[Q;<dH[R\,>1bO>2NI4VcI$-aTP]7_XuT@-%AKfZS*Q7,,^FKqs%7.oh+"2+2XT)8Lpd0;EK=sWZ5%!Oc@.WL,Se0N%6J8B.(g<9+NYq90\o#dc.X(Ok2eYl!,#20U%YiK#l<O.SDu]+,'FghmUdeZC5=f(ScI7+B'$)L81gHft9Wu(mpLP9Xp'o_[Ho&kV%0\kII]kRaCFkfN'.p&_B1]8)DDqRjO")kg?0W<"rMerJ9DAMtg%h2qlg>d:Ws(IXFTdI>XV1H2M8m\tE/M*u]0>4"6oa`p)%pSJm%L,9nR5j'*TVsgJ5b*,<]F6h(Gf/OF_j=nLN`TOd;J(!i?L-Xpo=V+h"7_1"MiF6NS6!DPgCtdRQKNjO'U[;fOopOT`i$GD\h-.c\%1>9KjO!jptVAW2p)s3CtkoP3*NVIthYSf#":[qn]e]FmnqEk&kVl<0*/ku`i::B1",kjFlnCd&H7V5#`6c[5*h1mHt,E]n2!=!OD%%fPh<;_`9t[tEJ1VArS%O=j/_6PK-`Y*qpoN7d,^j:-0q3^X%QrIlE#-\op6;U;9CA'!E34AEh3eQ5\HL&&(/&GP`Ah5_F6L<Kmt%"p_(l%[1dJ`5Jrr;p^:OV$3c58j<N'Z.2+Q@UV*t3XctIen/9/8fZT!rGo70gC!]O=S$(S]#riNlB-R3`sIOULSpa@l2?a%fo*f3%0;rYr*:mgXp#Ko*-J3;'n@CB,iBUu&T.XqIa60oYaNLA9J[OaGco%=nNqrGfa2qsH!^Tn&bLODWB@R5"PaYlp'96b0:W!!T-[Zp&%K_P.7pg*)1r+>R?iK-)r_BE!PKVOHtKI9BAmqd0/Lj_%Z[!#'M"Q/HX-\*2tTPF8[X)+^t%'SEKondX3jp9D&jSali4mcf]m=9L;%_.-,\0=FC36LH;i>"AF[<XK2*?F:^cEXC,gcdmkX:"/'qh<i9PPA1tE()$W(>HE8FU[[n^I8^WU@(ksXG?NX#CJK+N@-^Z;I;X%%%b)bO+D'tM]9A[BQg2_Od^?*,::QP/;o!so/*Y.EN:BU_GqS<Ro868qK4maUJOfhmfX<7,5L<6a='c)Y5XW4A+YjNDf,U02Z3VG-^%'<9.H@5b2QLVIDD1:gs6QtFjd@"s+ZUi>gIe&+I(2ORLT[&<XQL*Kl-RT?INm4(]b.B.F@rmfLGI,1XG3BaN/GPb\r;4#/KpaJ^S%1L#sBbKCI'a,qrES%4FbYG_2Mjd/4sa3I@O)N,6s&+8pkE1Zrn2WL0aS45P\^;Ub()4@'`--uqghae/&+9[[dcSgFM7kti<R!@CE%LD!A2[[W6Mm>R%K]nUh_p!alAJ$*F$+#mLUpJf\2/,Ejmmiet"#=h@!^>=P,p6NJTlV43:B&>\OdnGf!Eah;u2I_(0*O\32[m0jp%bNg6q&H1q(bEfd,hWXP*lUMgkYO%L6.!uD61Qhp:[p_98FPeWoBr0af0QoSL7_X*(=r6\f^uW(*l_Q[8Kstt.c2q`&k(H/Tr^)Mm%G"(oY7CBOgrntdjh-!A)T)4$"-M>.;hWB/0%m=NG\$GUFMA6THI-shu)!IYY-K'TADmNS\>#/uerI<5>Em9)Wo,G,&rNAHb_iOi`%a8c!GrVW;ekF_eE5Q!BV]IR9eO7CB@!KY(648HC=Q25pl]/:HoK)p.>hLQe)hr_99^lpor3`M@J$OL_oif2#AP4n*k-or`\HT3-[%bd[D\4Ot/*d,/EECK\,eh/T?<O3KLfLL(&eB!K[rc0+2^Q9DNL=8-H\[H/GrBs;q:qH'pFomiWZO.^E3H!.3kjp<,nW#2<F:FG(<%AtD)25-Z1da+h6H^Wks'Z'Lc&IHe_t]9WpkB^6;'NI-Che&TWO\#u\HO1rm%je7uicEl2U0&?2.=3-1[Bnl)(E#`JV<kS"OHMsC^%<ZYJOjTEd?q<DI\c!k-uR?@'20[=VEimsODm*C&[*iJ^=5IEH?qCZops*@:<*-8Rf(t/pI*Uqe@*eDRB5=f:]oSYZKEXsDL&f1Gn%QJP,Xn.$/_B1!7WU-/YF5N8F,4(>X$K=QtEU5%M*`>-pV4MU_76(%ZG3,,0`Y3KP>r+T9&dIHDiM1'dK-:WoJ#fLEJ@<9Dl_'S.Q%m/>\:a<]JB,$qP*TY#Tu6&^8%n)$=I,N^_8kM9(WFD1H*/bKd'qsZ$B;9)RSFnfXb@^Ob[%JKegS(t>o_]\]Bc]p$C9#&*VhS9#N%EL$.\(IaZ5NdT7WL&2m:qs[=G2,23)\B?^AbSH\F'i&Wgf_`.H7Gf-WrJl]6]'fF\\Wljb3Jn[#lQN(8Xu/@'Zg-\s6V?174)U7r%EHIcE6c+o8ho$4PkH/YWot*_]^T7-Tq]PF5+UUo&iegTXi<m!_('o[,?aBhkVWF5nF[fQP9?.Qr"i$51o49Ee"B,E^,jj=DSB^6D%'1pjB+`bII]0"]n\A%:@)0R2l<9.depJc<-(cQM@O89dE]AlL_L$0#h2mV2)0l^WgA;o6m"Z&)3cL;tRph8HF)u%9m.eiu+>4IqT%daPQQRT>kl(DP94TW?n+M/o/H\sC%q#7`Ns`/@:/;(l?pidu>)-KlD_CN-r2in'4r[K`JAm=K;_1KpsL*^G$<,7udalJs:>38r8t%&bV,Vmo\pMpEk3+k7@ff14DEe4(Z#t7%Ne"B-aK=hfu@5E]3=M2D[9h_/cHcHo/"mg>4Om`eQHB6&DEVrk,"B%*57_O/Fs4h9oA`%bDpg#]Jmj7#cHdqQK8H.b\KWXKOqo])UKAA8\(oJbhOpnI8ILgkY+raCWp$YH#HH'/-KhA#Ep.%W9mgq)`"R$&mo:aT(V'a+6Ep1%g'?a,S+a6#/jr:IWMhK?1T1Y`46=(ehYZd79qS_hp[VCnr;@g_q?)Ag$JpEtFMdX2%D*'31X.B#W]tW3GgVS_i,FMQ+^=KRj(K_@%h(K@)Y_g/[WLtD+QE#Sp'`A(G;&3:W&Ule"dCaPP=(q_-RI%K]<"N@V_dpp?'mh6?'3.4%0AeUi]^m6Q$8t=qM4$Y/Yh\KG+-!>5%[W`.nS.qDZ$4XHB74/(d!=@if2['41":6qTO9O1D\WX39o$jclFY&I^A17Y1_JZL>30gPTC2i,,pJb@@Rr0DV4u8MJaR2fH1p6<D%&A[!6#j"rlJh*+.i;TK#&746K\!eJ?[efHWDe-=1A)b?XaV_Fd$YF:FSDcd-n^4ik2suO-O10^EV4_;(JW%D:g_dI<LX4]g[m5Ld%T='V&qVm7ji_nHuY2#p,$63Z]%%'6VqXMAP\Alio&.X9[jX!oNn!uKED'B=Bc--oUT2'Vfn(dU#P&e]erbZYSg]a6pT`%aDBhRP7%C4$RV^1lGKk<TdrCl7Kj1P;W6\^OhK)HV"?Seuf7)b.@!pdIl=;&u^A&,DYu&AAd5C#XnSm!E`9=FL-SQ+='2U$:s1BFfc-^XD8M%=2b28-/m]_)7_q5([26mW5<O$F#i@/LdZN)WS4N$_E"Dsh3ILYWGg$Gl>(bF2QGI9jmAQ2[1=ms^#g62U;"RlTIRJ>Pjb2hn%[I5%I>XVFCs7gGP1Z2_VGTE6#"4A\0+,ftl/cH%[2nB2$iQOq7e_Y/gpt&YJ["KBg@k9D8@#4jY.,[T^@%&D,cWCfFeX7CjjCfIlbg$T%Ei.j-DA6'Y@NEu6>:hd2`s:SD2pFEJQk1PIUWV0&K:P;.0\m$g+0@'(F\ds;3h'o!*mgKsqY$L_7G'.uH#H]&'"NC>cTo2tRT0i)%_tj;b2RK,CXe&=AA\XBg#(rQ6eLl\ER<u)t&a]0rfus.JQn'TR:3j4M7t#c-aqnaR66&F$H;tSF/c#Ncp#4]FQZ5k;`hf>U,J/@A%',Pg`cDb+,k3&Va\\9LW52(3sI_K;!"SNWpN;gTmhttm6<>b>o@GJ^]$0u<dK_H2_Y%Qcq=WZKS*O6gFfq69dMHD9FLRY79c":V<%D%lh3i(iqM#'`$#`d!'&4"(t@@(!P3iUO^f.Dl"\9r:VG6^XoLn]D)8h@;bA`>=M6$h&'to%j5B4A=PL_&.@*_9K$o)rK7/--oWi%%r`f`hr3Me4<#l;U[XFf]l[M!ESpo>=AS:pVckfBfl]?!n6$9@Hc[V,&!m"Ci"rLRFP))d[n^/#]f`r"c^3@+^%61*ZiQ>o7l0"^%-G&?bY9/(/"2b.p)!<4F!IL%)J_;Nk^+[_R7W$'$qO!gB&Ve#5WL+UQ.Gq6P*Mktm]=E,kj]UiIf<[7)hM/L<jX(<'Md+AgcZ'E-%U@?,r.^'h&#hC?VOU@k&.G&%%GMGE]lfgSf%`QNcim,2O>WhT)od^i683i!kQRZkGfZOAC[buF-;i@I(04K%!7p*cWEQ2E+G'8t;%0t8]"7MNHQ/$'m&H'o"LoFR8\2WP\KUC8UDaB''k1Da,m]fVLZ/MOK5GNd_;[j1MlC&EnAi%l`k9\5EFWCU5(m+0,$ik9M[^0.I[%gO(%qZ.l9#6g:#IS.G)Pp%^-L&$)i(=mnb[\+*5:ZQ3sS=C(7805AcF]c>?klOT`ea':F%>JMQ1%f37,PN]t2C/;Sa::<gJ.Auf.%^/Mk4*lVD#7k%MtGQdscHFDfPLOl>BSTa*c;Q/gCb[7g#(g^f6>tTuh4@h^D7d2kg(1E5pAuB]r"XiJKo!j.5B?$!&]hMq5hIq0k%j5Xh!f&_30QXR/i6'#c!lSA$j[riQjH*5=$[E7!2W0mO#>m>JbXij[Phq$o3.+.?$Wh8VJ?OkK[*hN&0c;W4Te?e,?.sVB9h,HF%%a>R:PZt!:+#rjj,<#kX#ibeSgk1NXS.e)Z0iTo<p\QlbBTA9k+2qmB87gbhKh0HM7`?W7d^U+'[+:]JcaX7f([:;FdnEG;p.q@sj%?;*n=j^r"S)>7BBgTi'VhI,h3kUSq2Mg^*M%CA@tKHaYcH;h#$>!2%V)nOX\.Yi!2@.C+VkPG&QnB3$(_gb3-_Pq;k.'`(E&;Rt@%&?R%b`,D;A^=gqrLS!#jKVk@#n.0GhC\>_Zktc;ILZCpq2As5[;LS8p-^#n8>keL1/poq]nW.U,J]-nNK@6I6TF<93#3El(b+KaJ%_J:'S_ZH("YnbV,Jaq\X;#9Y`qE#GZYm-0;Gd3KCkEOI!U_f\<cA!'67MPoN3Od_cR4l-c65lT!X#pIpC_=>Gb@qdQ*5Eq%D[btp%9pulUX]'c!`e^)YW0*r\)"AL0,W6'TP(RBLn2]U4^^Q>a/-:"<HMGsjG*T>b'A0<si4P`P/^>Nn0[P`k3(rOt`YiYIMD>^u2Z6e3%Au;uD)b>]YH]]2Q'g*45VYMq:L*L%F^r&Mk!LKtGkTblXg)CB5R`'Mo)!s=Lg?H&i6>PDV;6L4>X%sht5uf!gTJ!WBBg%N2'`rp<%S,i=bn>R4Uoo0Cm3O<0G?%m3Z.S;f'8OeD>f]anu/Zj8F,38jiKk"n>Z'1FdOle<ZdeRXc,_TjYqp)*&]R8Ee@[utg7]TH`J+L"n%ZbDDh*_c]!*E!aMJrLSUNOa@%5goaa]tH#\g'jd./8.*'?HRA1S+Z*s4L$>&C6moj4_lL%QS&>Yi_b(V^CeP!,HRt6?OqrU.`b3l%U`)PB]=hBT/j0ni=r93B)r81Mc.FZ(F,L'C@ntMuk(KX8<gkqSlu1%blU\u!qWZSd@Ul9-L1?]qNOd_=Mf%Z4S08F`Yi1Q9fK5/i%c(UBT-0Nog<)_k/"OVu2$<$X/*So*jAYV/]I'Ab]P'c,t83LFiHC(qp6@]$1<QOjXZjJhc=G9'p9rlX\rlQ])n"T8N#\K#gim8L*%JG,->++=<g%mQ`%s+j`slCgj=^M#!W*S6sf"PEn%?U*OI%WJ[s]u<CNY]pV(7u,Ns`qs+fT7U'QjjB9IG%i[s,4'7#3IA;gmL*G8%H13B5D!,+?V[nIo@s_+CB.)FA)gfs%db+hb(j$6&$PLFfE)%uKP2:E5P,;0j2"IIAC-<c6bb"Po5^"W`NCTCI%3H@C[mF2^XTKZl%'r$8?lL=J[:M?e4GiZaXODc8EX'b3%Xce%\i'"%d%EBOK3_U0fc$M%[[N(2+^=l2qo-]6rcML*A"KOK"R.Mr+BiaNLqe>@0H;J&:%aiG["^lcb5::_,dM&$MlRH0LM*"1PIAdi8X1%Y['E\4O7nPDT*\K+U%AT8aRn=ba;2K<&qF6QI'Mf2d_?ubBR=CQ?@"O"gaMI;kG%/lWH7X4[SK><W1S`l!`u_?[G4r.P'P.lT"rDiGCjlG^?1Y'pJH2eJCpn^*G+q3q6WJ;WtVIJD02"`YN3"6CHaa8RAN5(h]2oI]]*%*?GuQ[+0@KGPJUYmLE%FZbpWuqea*ka/=\b-"eOQU'8pUMkq'OgG.ePKWG+6P-u[/US8Q\-$'(-:hq!!#*orNIAAFu4E7D!Rog"E%a#-ah=O;sd72[i8A8i;'\NY5N7=0?50j4u0bG"7$]9'pR;7iR?*,L3DR'O99EH3'j9a\t2mA4X=*$MP=Gt(Ntf>u2WOSd*@]1Y,?%ee$aC$\qhK\!<l!poq^Nb5!d*V:'B;8PoK9Q)FA3"-8a?f/gie0;KYtEV,,2*XCLFK:$DCQQXoC?M%O)m-JYlf/lV7=`&lB=LGi:%U4#>S;TrJ-`-OHT`amM+S#qWWMH>uYkG/6%S_.?M>7\D2qWq!0*+=q&'#C8s6jU\AOpE$($VLJ?S&XmU3(#%dE;FN+RLq`V/WP+2%,+h%8`u>A*N"<<SL[:k`)HF^O.+Qr[hZ802R@sLld'q@DMIX-n-K[D^@")46'D"0V=.#'/(@5nIOq#M,CSiUu.$SO51kWB&%6u_h%P\^o**EjlEJ@)F7,o_@]O\`=OMs$[hn0r_.<nIJQ-(0ojh_[st:pL+m<SA4RC]Lie\<=OVd/3rc-(Adk<1H\)ee(h"8]_/nHDoIi%L41_(3,O/@?h58](1pLBj_Q=9`s3=$1l7urr!g"<)L>#^j:a98RQS%/_Gho0l0G4R&i=*W/$s'lDB:M!RLXkV&8CH),OI3P]?W\2%GXI^./EJo[\L*7!4m]bfQl)8LO7[8gX^r77Oh?[M(R&7Vo#Ti9=NbHg-`OOdbn3(6\5BTpj=nQFRe=^;H$rG\5FL2RIZnBP6][WU%k<*HjDsX[OCd)t?0]E0)4UK^h7_Y;FL^S`/fPDcb+I]4PMMn5t>%D)#Sed2DbufY-3+ks2bWP,j>^@6qLD:Vej9El=\:SR5R;M'g%#W$@Q3040>+_JaU@469>0]N6*Oj+1uho;83\0N.sTl%e\"6qf)P('Q'CU_Y"n?V)+(/@0)irWm=fl8q^G2*MBVTBT[>3[CLiN.;e%m'qRf+D#`Ol6^)o"rPeX@E1g?;M=I#<Is,aN[nb_CrZ^r4d=]@0q@#u+DI1EX6)aJF;SjT"HS<YQVcF[>h1]U1JDss%TA'FE-#1k%<4Cmg5<&r1PlW6SG2.DP0LnMPFda1g.mkSMV5'%.DFoRfNh;UG\J[qJ=cht0;9F!,]6.p,E_/tuL0U;;-UVb\lYdV\3B^.i=_>b"%O=q=3DEBQ[W#8#.<<f*7b:U7MLYJr8jDq+;ac[Ul_CW5Xm0do!AUhVFka#I72Y:k.jn'KQc]P/L5(kU[hmS:dQi0.4-+CJ5hCZ;/%d<Jc63Nu,]jO-9Q8=!M@76`m)U$$GR/@cjsp06_kQ\G0TolS^_=;F)Pmc:/@Iq8RB%i]>)i#L*-E3B2-nNMd-ps9PA.pngG/Z\F@%oPr;K''/XK9)JmNZX%mI9PHm::`MId_`,hh^?stoPage*iu;[`(a"2/-0dE:^4DdfT+JJBE+`[*'#rF%cYVf-VYdhWeBB:l?%&o6%k5tWJaF=TB;MKV@G=]K"?pn\r`E)J3HTC0\8)qDd+alo0aU3^OiK+SJ$k1`Fq9^0]cQNBcIRGPN!.6EK!Gtd`mgql.QtuK<h9C!J%P$@Y/V[tqn\9iB.[=Pf0!)OXdRW;U:8qC*k7t`c299[Tp%T-l[(Q^"2ha6k(?1%MW&>8uYfJA"N+%Y*G<`)Us(oq]s-,a<"DS^5u%7so9H[Z>Z__#`j*4S6,SgjC&gN:<DsZA.R_d@9*>1XtjDNE_Bn)4j#?HULii4:Yci4j2hs(-nkDLB[#A"psG*O8!Rd5I=J'QVUtO%g2_=]5S)hao@</S6@W[L`m_k^ZI8-7_(S.)E#^'@O5;t#_[3-"`XH*]?MoPQV-C/b!mmRN4o=dMiY)Q1Ce/,.d7EqL6`lE.'_r=d%>,CM\p7/_dJk*Mb!'9`uW$dB$p0YGi.31.pD*%*^Dc4.#%G9po5HqLsYR<-3m7MtmRh0*'-ImEP2ojqSI<=K#GE<fN%Wds'-LH:/%B_nH.MQQM<hCaOJZ4B1N.Ak2qG;aDmh2(G/+KCqAW>t?0o4QS,LF_4!cjLrsAI9ps]\ajdFXfTP#!0/&59Umc!8t?UTIRCmp?cpP%CV]-T5^ZJCC(,32dmDP()gM>&O:G9p]R6UCAPJsB,lk_=/?6'UfM%Rt.lZSPj.4re^sY9MU!9G.61ST*_=2/\QuJS_^\Bg3iTKDJ%1uQSU:Fku*iO;WGOhmCG1&bQ>=hH>TTaPc?&>1R6I7+R)82M+I.GAAErb+oQrJ3Sri6L3k'Ea$f/m]+i\sampQA*qO#=S;.!1Y*c%*FJr9.b5[2!Mg$BR(irXXu*h)ON*mF!I[=`/a&fF+rA,lPj6*(Mb5_A>lkpYO/@.SKCE:</nj(:)ka3s11tWn,Zi8Yfp5:)OXegi%2MfTs]_]!<k:,SrV2b<JA*Y2MpL=*!erjaZMj_Bd_:Pi>&!UW]:#j;m*,&Z.2p5\0pnY4Z%>6H5DassE]%J`g9`V\$3%H#r7p;`f%*X+/kV6JF[f`RgOlc66\s.2f<aU'K<bg3mJ)eYQW%E1i'1?P>CNp#26)tTOVC"A/eDq"LS3O=!U?&rB6VlGp\(PgYWEZK7AkU.Y3%T'XUMb;P,F$)_"o"L53M`E^T*Z8FIk[#7<5YWY#9qQV3-Pq!$>YTl]&0uN"V'f/CXjj5T5BfW8,Iu<@7Xd$^6M?-i5*'Jl2Gg.":%Ul/mELsCPHk;\^W]`]5QWZ&E.g`hNW@0t@uHZn4(JCKToO5[r&cWG&Ym#>SC^6Q+lA;Wj&m&-kO0^hGdSpi>A6W9p*KRb%W':9:E%-35Y</;n%oqK47u2r_>"7'dnkKp1UPmi/<a4LR%);F>G<IW5?We^1Us;EtpMM!*+SO2.ErVp6;;7Uf%"&[V)]f%JRq!$"g_i((,]%l8ZV\7b[MdL9LkIgXn1j;g`)`5(q%UL0O&pI(6-Z!4<%nB@fZ%=I1'$<HJ$#bPVJV&.EbrRd:#^C+`;!:_?BM:bSi.ktCVuf9j-Q%D*go#4#@g\hK?%U-Ff0!TaCcpY8C-_1$9)$A_d2?!*O0ejA?W&59q+mKnJpf]DJZOQC;]o]%%c(qdgO<"P&#c[pSD/I5@h47jGRT%kgN%i"%sYKT,9E7eYB%9CNU'?4mN3uJW?ThWtXd`=>XWW]:D-+R:=AS7u"WBVkNGI^CH+7S;67R>t>d"\Y:]DmO"fH/-iS2X&_Bt%TtqpK=L-S)ZBN*^LSjm)-Qp?c$JjGb5`B8=bq6,&W-8["e"csS$uqMGmWa79EA7mc@snI/[Ca%eK.Su6>u@eKEp'J]JC^nSNPN"h%qYD2@=^eI3Z$O6#aQHo`DE6,H,!^PiN]FUk#Jg%TV&/[hL>&o,`s>53'qPm%ZotLR&Xm6.&WA33X/W/q-UpZX_b)diGsIR^@kO8\%bNam'?UCo=`]$FuBo>;^;)"SI09A*W-ET"?^tQ_>^tP+tYoo;U*i4aaO,4_D3`2s78.?d4qWu/(mi\a1bq<:2IDRQ2omi@IdRM$E%oAUuTUXBQCLf(LJ?-HkVTJ>Hb)utp4irE88Fna[Pl[0!_=5pQ(lV$i2B,g'CS-5'I]VelBlL-uSgXkK'DkNhoUCRV6!$M$V@Bn?e%2g-6GDF>-Iaah/O7SY^qFPoh]oOr/eQohE;Hp'rGAjfD*^5)VR6!Ob@iHUN2UtY?0f@:oVhAdQa7B@40R6>;"B*,jVIH44Dltstb%Y23ZkGout4kP_N\*3'o!?_8Eh$Z2fCJ,3)Zk8N(J-#9DG%r:@R(Y6m%mn^'VbFZ[IekV"U`/$6g'"J`tFW#.^[<(k,[]j9dg>=^:%Z_8&J`Uei_\Md3^$E>'"cj>A_=!CRX@;:[hakSZ8:bm.\ccj,5$T8r7Y1n,dRm%]FG6<$"-UXf>It(2Tm.,dWRg*BmVD8RTh@b1L%pnR/h^4ZD[ZP'b$#Wp\`]]fD*N*fA:lZrcFlN.(:)Lu*`.s?tbfdXCuk`D><d/%0`I,YQ/FARe/a=0QefV3@Qg3(70L*IfDO//W\%lP[3a!Gtmn&5Ed?h@4J(KC'DbbFRe#07f>%RrVbM0*o=0W`d=-[d1;I;[IFA-UCV28i]U1FXur:D`+:!K48+amW!UVqZtupl/5B[%H#?o-Ih4_mrdR;j6>a0Al:fsqN3p)jXYshNL(&TgPsaiJp5h!>iao_=!)u/@o?P&LZ"/PjqiVohTPD5PGj)Ys!&*1/@&Fs*.nY)s%c!G"9$KB@`n_dN1"!NULLJ8KYhPI"g7V0YC]?;mD=]Am,F(S%S5MNOT;bs/O#3[:SF3;D&>V8J)kYW!2:L`HWPKNT/.IA]ZODZ)E%O@jP9D;[*hgH%-5*&btuYTt$36hI^F8<s]qMjnX4n.BhWVU>e1#';;S-\b;n9%]5XJbk+CAr_L-ljj*chI\L?BEt,=g[Z&d(4_-k%*Ln[%T=+8"/=)r(f!];pnZk5N`T!E@/CS<b1WE,c<VCtYk-tl=%,[/J(at*e$4fJW=bh<C`,ad[$Z8Mi\tEr.3tgut9TBoEeW,+"%R]\a'Cc4AS/%d[aQ^?8,gY`5'\jrVXo_d&+S%lqFa0'ZEZhUYQAX=i?/G&?i6!goalkU"h$ugn'YX7\sj6dHs:>r`WM^'T/iS$1s%gVjOc9*[ad%\'?'GGJNicCJF+cE_,Af-9q]^8cS`r-b&8Z"@9f!@0sS+CqAj!(K./=Z,W#qk8i^Z#jZ2JRh%XU7>-kh_k5KlNGT"%T5;8mH9O1ei27O$1/gS3Lq=rOcq(&]bIs"nRdE@$29C,')fm/LYbN6qX^caMcVkM'Ptk%s6$@"KX%H:8ak;h3o!#o7MGNB-`ss.K%Df@>6=m%6sXeh$Qqd\q5*f>1IVIPhGai\&0+<?s<Tu&9g,[&:YrC'nI_Z!Y$V:!-up\07IeZ?<tVn12XI#o"4a!NeWgRLo6Y>sjU%c`X*mGFt=+Spb:X9<gjJ?&oN&7#R&CS>D2?-q(s52;3h50IG%JZ0lHI^HQ<(j3T%ch$!K_e.57nM?Au@9e6Or6?EHSjhhQ<S9;An%fa^`L8`@!8+`SVFRU?^HO$aRNim8r-5s$np$`Y;;30XnI@ZC%JPQ.PdCY?*@2i_7ls)9p'<25=h/hK<mC^?,2GUF=tql1eY\?.JT%Jdq[l.l&?4XE.-t7[V0eM9Fm7R7q4SaiX9S7@N-n9f.tZZ'^IK!+5lA!AaK";X]Lp(Jo2r=d.CT3E#@cb8p/qFs"=4^n!?NN)6b+%-A$h.JO!A>?h#IF[CSl/&8s>1YJ$Yu0HnS6S'8IRQ3GZE9%mf*S?urCBVFZLL..Sbh(.2)Cc0TeZc=q5d3c3C$gtCD)VuB1&lMS:%a1sO-9kG2[7bRuW(?[2^',;Op#mB'Z[>Qr2S!TbS$*5U2+?lVm56PgIRqe]mYTL2-/YYX@6=CP?"4?(ZMTDn@4(il*HPeIui#ple%AmXaGDZYc44)Zn'U7>Dc=l25r3*A$0+EpW2#sO&4?.=^m?kPeuM/>MCda15r,;D"1]qd4K&-;oNLt.$DQZqQp`hJo9X9c8^/nb=O%E_J.-%s]mjOC+:$S;u:4'9%)Zq;sODB>.QuGJZeKL&K+Gl,mPYYEf3/-[QbU'gsD0:A0:\SZKsnGHtsfQ@YkJQ#IJVXL/N0lBMN@%cNu(Ml!jN13lZ5HrY^hGYgk>VKZFftCS<@7o#-,kQC.N1b,L1`,#9P(j90`0D9CK],#>^n#C!IAn3K\(T*=s(G6/e=Xh_rI#R\R\%lF@gq)AjO.0=c'M)DNrk[Z752q^of:OD=r[htAT`D"(J!mPjP:#lOCC?2a?3efO4b75bG*k`bd8PXT+6>%<gLjs-lRDBp.)!G^X)%=Z:0-GX$$KW@ta'n>V">>p#328Hugl&*1b]kg#eo5"W-O-a7",&S)4CP;t:95NT[>rWLS.dc+%&,ch71:BYM3M4fhm=eChhYd/Sc%!L;tC5[+spQFqh%[Z)/M%AdCS"(W#Zr!@o%lJbTOP8cj\M)g15[ceBG1ub$V\.Sf]I0-6e"M8&HaX`/hDY2&nh!(#&3pDj1Jn.YX%)p!u><\D16@Ui4-rd'Zn-h]qQYd#R";0$@05l?U)fi(%"Ih-n3`PN&[j;&-p3C;jtT\NGFd$Gn%`?jT%pEH+\idI`?XPYTh!hMp,%A@g!OL$'YkH[KjG4D;CnaX9[jL"pj(ECVRMZ%#4oE?gUR?52*RQF-tK?4IthT?3G)Nku#t3Zm3/SBcSU%e4gcI-,X)$]S5W#H#*!%=hioO_`L9m^8n85UoM/&[@GGOR<_rjSm.DeY&&aU!6"?;+`+?s'B@h"6q8i3AfIrLiB74SY%*O7_"P2X)#VSgQ/g+B>1129Z&/d8%$o,r6fN$WGfS3eO8fIV$O`CuuUuhnlnD(1Mgo-u<C1`DRCR?-RbIisMNRnQLK5.T=p/&V4q-53a+`!,O)$]F+(N#jd=_51XRrthj%:CV8K_Q'8NW.s-S`&fE9DZRD-,OB=fNk"V>7hYWL))*kmb.1^C;+^9@Sb]r8K'f_T&lK?hLA?L]7qk!5>uV,`+[9JE'a6c>B-Glb%^>m^>eA^VuHO0,n]3,F4^N"LF._c.ukN"q!p@9upeuMhS;BIdJmEMbYR5aj6H1&u^7Q2pWOHS"DK)KN]D$Ql)R-EiKKcetk83DRA%Q,P\J&Ei'7pl4RU+D(P;T27"4`;%JN]f=6dL[L;sC,Z-8@cf=cA^g6FjsjUkqC'JS0;SL6>VGfL_W:gqma]N`0D:XfBABCo_6C*"%masXE5@?dV3*3R#]<@&q$+@/W,nAGX"YdQ<hK1Bk0'sOlUW`s+D54AFlrKcJ:,BU:0dFFq52,")I7YC?oQ$CQ!S2Q:'Eu*_8p5<J%g]Fb>ETf[W1oGR99)6I?0eDIs((#H1qpi]`QTLr;[UUh3j`Drq]I9\!bg/CTFRkOCKe-9Uj1b&Go,t)bBR_AC"k[B(SpPBN?:-^e%%:j3&!gRB@es=;j!4(j"@X[g+WA=Yh*cL=CJ<Vc<SW:(u5RW._UY0*#"1.I/mC!EDIRm;M+,Yq4Y%`VRd8BTEZ<'UT-"0=6$5l,5%K]ajD7%;LCo=j(&Z8m"Wc`AfudAiHbFK=PV99<>ths?GgSJ5dsUU]F'&;dmEggIEKNH:_DKDiM/>O)@VNP32ZY);.bbU%+14^AaV%i!7Hch<2lp!3L<VT>"-BoZRt-aNRlG)-9&"cY!nN1D#>j^?"%n4rObQ(9t`R`"T/gK+l3%e27D1W`*=9-ACQ?nEK8p;XoTE9bO$+%]dUET'bj!@P%:V>b190t%"3HnqT8k+.kJam2Na#s?-_Lf,Y,>Um.scl5M:$'4RI8jOJ%f($q:bKfH.NgXr*3h`Q3UGMtL\%bpE(\%9U`/si+Xu)ZZDrMD$_?T:_RumW%O@bn.rD-N\PTaVW#bQg6'5dFUaL@RTGF\]:l<Rr(PGY2?=\h]brMsMSV@hc*;#KM:$/ZBCEaf%iq?MQGe!.bf&Mqh)KWpM<@(\am+1P5lb(EY8?#V+:aN;&$o5a&RB3P`?0N4'M4!Ha]K<P7#>MEAdY>iK^jN>@S><+Mfd&oloA4@&%1&gTC1n,Gk5SC9eH2&=%rZ.hW9BFaqSeG,G<aOr]g"[-)P6Xe`-$+6o9A3K9,_n,^gb`M?CX]SOMQtR<S>ZOuC+6CFlDt8S)]cL5%dHs$XK<s[X!M#&41W#:YBBid6M*n)6fR3&Y$K6jT6ND<UVt45u,-*#1.Q!Dl5Eqhh<c8^Y+H@Kpl[I`[/;p+^CtqrlB_@WhN,shM%h^/i0[lF9C;T!#eMkSr^dme-g(fFO\As]g9V4tV@3H8)9h%4WT3bt5Zm*J8inGYaaLe<]1Q]]!lego$DEd?#?`H6"8Dem1LBZ4)@%qgt3#4fW7t^CbVo`?2.S/RF6X2;<jFW>q9Grq*jh0mP[\K_nohDN3ktgX<5i?%G"'c#@r3mLrAO3T@e:P1C3\,qq,W_RN.AC=(^X%7s#hd>?c3CF2uq08SsK*:J+!mam-YuA"Nu!20NW%nHZD32S(oQi1'-*fubM/D1To?SJWihMP&./nTSiXORE":NH>BeHZcU=B"Npd%k.D`&YhF?bA\X.J?Iks?B9SJrhta@+iF\:.h"*H%lBPXoWhNZcW[?8p=Q\V8c2Qa>-NP5F#R9!t3VXJ%Y0D)BUp$'&bf_-&I5P+H%Zjaa0K18p'M:\SD]6i+H8;ofA9c"GS['6.1&.acJ[GKbrBOL8T,SP$hS]IXJr@PKOFCp/d_O[CAkY:%Xjmn7g2He8lM,&ABVs$$T%>H7eF\1N7@m\n6\Xm6H>"hj3B8<^>siDNE&]FAV`rr_tI94B%"a*=AV:!Rld62NX.o!XLI\8'T\.E&P>D=*^<YIE5ohJ67WT^?rF%dSr]`PB39uWJ[=YV$\">1Fd0='?-*2hC;MRpJGi@aa<?2_N8Xk4Z45FV%&9qgb><g$D]6g`Om/G%AKn?X3m3PgoD7N?3(YhB%*Zs%_:u=6>*VNZS"TZWeg_97T7cQUa1"`s+K[R_I2(i<(BT'GXfmRE:Mui1_>341pVsr1!MHRZV.k>.cYNATkJZ&;0orbtd?%30QgAfX%+JRk>D")=\jQ,bDn)[QO%pQ0k-JBqE&q=\f>R_QT3\!YJpkIm8[P*22.TOe78>lKeXp]qtQFU!P,=H9^>@VQ,*8WcC8Xr:GhKaHn%lJfKX4qN(cIB`G=)=mc9PWrJ`UpWM8E0E/75=)rdl/$9_OZ5T]&QRa'[G(0oG)<_-@C9];SCi!S_LL$+DMtS@UrTT]ei+i4R\?"r%gB6G.<Btm?mHs99*K7,tfY;iog&CXF]6=%P)OPn>%c507[uTsu^g/Uqj=cb7=eD-uiFMB7XQr);aGU<[/'ci(Ojj&t`"s(>.(k8X%+7[j[/Qi=kdade$`J^'=hj]hoj,4Z\Y\rE$^#",);207k>Ir[G`0p%6bk*;gN_OjTZE[99:L?Gl\-mX[*/qb\o,#_H`JqWW&VBS>%n<Z9Gq(gcID4^NaIsua#@a*JEGaE\6]5WV"\9:%9O"fab4M9tOE7rkK0Tp3+P.K[[:5]+Q*f_$15_]Mom<7X(P?HP"WV\@W)^Hn7%:?,<<I$HW%^HY.TA*5VQ^/N9bSfRNqg*c1JrR24N.gake2@eC6imECZ/`@!4=dcn:niGdc[7*LW7i>),@;J')L;mUW)8P*<6%e,l%,Fa_B(0aY,-@lup'tV!3@mWY]]4*k*iIlX%@<ijPO-c5JmF8@SZ!si<hZ=[8@/\g&W8Crl]PO&umL?p!iluHcZk6)@epu-$jR\*h%[a\pu@E3I22A-dd&HG</:2@eNmI5CiVBUW<Orp(E;J!rbgs*eM[KNY3.C=c[aRrM0[g9ZQ()d7W>1hS`N)e-<(jBKOF<M\Z4j*(b%>h>uUkH8FI*:Jd\GA<`]n!4LsVIE&$5R4j*H4sF/J++Yn*,hQUI,5^+c3)T8\dgMs*uRmt_LK\C98jMVnK_Vml&d4(Ol$r&rTRbg%5&K!A37HKlU;^03.lZ\rHfB6qF3FlqH@^iK!Hd'@pGeb%%eW2?/(HN'4&]-$KMZWO62Gr*/_+icZ+37CCkkgS*=9gnCcVg,1;`?Y%(0a"\K.:ltDcLL"]Q7$k:RDl\'fAb-5%,Xt3XHZ=8qqPd"o2_LlL8f'X#GcDH4Oi,PK.6\*6+$U88K9]i-XD:D>dTSQ.Uk#h0/dk%l7dee4Z'-*N.B6VV)18imrKr/XsYXKkQJ3`F't][,G3?S;;/Gs7%If3LjI+Q'!9XJoD\!/Ks'dc9C-Fsf@Db/]0>:!=fWa<1c$U:%ekV$lZgu05cB5fbJSD6HS74XBo!VO_C)+0Ce3*)QVbqnm1%OK+2'_3pDX"j)b&H0L=@N/hqH/jT=S^6iqAF,HoGRMO:RH@:?0Vr=%,#"quKE%M4OSPf=H&qMYZ`Du%rntg+oCp"Lp[_O:nRogLV*/F=fOB*eN$DtaUFUBAOu7(Q//5KTYCl*;1>TcSWk[Dk)J(%;;&]0a%<jG_[SaUnRj"WWB)u_9MH:;)6_g1[!qRjROQQ4h1gZ)[,r%>.sb'3`;IA)2M'okjqJgjcUQq.(mh;(T>/ooj2>$7.AaHO>P+LPF%%,0g@rXR@?5Emh@?EiZVD]M?E1=2""ai<d(J->0L0'ai#Ga`9#i0lL0l\UQ@i]cf9OJRkPA%'*!cPfgnRmRXdM7X7uG\!:'rbiQLS%?i-3,4,"t!;O"%J*GSWTY#I`(-+kHOg0?#[Cgpk]6A4ZAGb[-@7>\np4]>Bgbu;MX-qYE7PGR77!XEdk/[s[J@H+Ef&ur%UQafr<%ccTniG>]H.@N?&&(<\OLe?$$V*f+!<aI1\I;e&g42LnW:ps]EV4Y_X:`@_/<gfX`_;`c6TW\rY`I;BiDkWP;[UoFZHcFVLH@u,T/%e?s?l-qn6c6DF%qgM(Rj%-CJf>$</4IJ8t,c^b<U99S-dik*!p;Orsa5'"O1`d?!.a6=h15'n$t+c-jG9m-!D5N7(u7Rf*=Bmu/]%%cX^:(rF+XX&iJ0M+u;o9$KD6lTHGn=Zt3)._0Mfo#kjC'8n:9N.0^;+E@igq5',C>WMK+)gTG=05`Jt3>(t2YBrd8c\r$9^\Pak%WO!nA`dV+i);h\>ao+nf1o4'?.2g8%^,?&js!^\tIeL\:Yi.O=UiJuj&[1[Pi'WKI'W*W4aEl&Y4H.o1h^&g!@Y8R(F)X]$7:YK.%7>0^fXl!#r*aUl&4?:!m^@SBmFc:<'<]D/$iV&`GjDJ)NC`\aoH<RG3/_id#V<LD4OSlCZM2S.chmS%T3Fk,FpmXH%XjB)?Ng!D<%<6i992,V#!Z[2ZDq_'jK:R4bOpfc#4KV_Tca)``bX=IJWV5C&+R[UK\mQi^Q-tBC:kdG!AJ:rMmK`f331<:.@G#@c^\e)(61i5>^%ZdcXh;f`ouZC)#?Xcg+:D!M+re@Eqq&`UBsKmD,n;uU*-*S_9^]OHk@[<9!bnXMqk9BUL0nqtsM1EqgS)Wj`,V`@a\jPt/ffNG^4%NEpr`F"3,/fDeVni;3ng&=WaU&7"4`EU"0sM.?iAh@OmXJjqt4/g'75A,<LS?T;f<oUWnu4I_<_BJ\%cBj'=PfT.9"abgea<)/&*%rXjJSnnst9q3C-('fgAk*kt*lk0\X``MZqAPB-EBjV96I(NH@0h/kHg!K<4V>=8LUU#[A4Y0D1ufepYW[sOf!9i.;!o.aRsCpN<q%XR$IeO_`oH9Y+o*+psOI^(rt8\>L>sSujH^8L"edp4SO5#_dXFSsiGabb5(t_f.b6PK1nX3AnRRc+"2X(=q-.]95%hk(7EgkL@%k%;WTCF+9AVcVQ5alO$`rS(&$QP^U,$nfjZjMJP^jMlkd\)ZM\^)mE:f\9"DR?&kH2eES5/0]p?&-A5K<[Us?gFe-4DkYC\3ieI>cJ%-RjI")/\a'Z<CtMl"[4Mc.)iEKM5[p#ljGAhMat\P)nqiM)p.K&Kc#.Bdbe<PqOg4rW/M$J>;T96%'VNe"iqC2ed!aqW&6bkk\pj%eZ>M\^VQA^0G^tf)kD8A1`El[MH+5q+!/1jWhdPE/#F\;":VA$&b[>SQ"r8.*cqlk!<#^DKCHhICpL)tlO)S&!7/VWaU3W5:q_9f%(=A_Ua3)J\2KVkf7;2n3[jQ<p,<.Rr:[84_Z&U[t:JQOp,=!ZCG)0(pdH$_Ace::&kCR-_Qsk-8)#HQc<Ar/i*`/s*r5_4SR*'(p%VuAYnoYYWJ80(W7$Ji^RNlCpO=Cuh(9Mab+1oqKVI("`a!hi0MiQA8p:=g+oRanRh;frn6Y,TJGZrOX?[7Ja`O6YBl`>7&SHm>LN%VH:^JXh'p8c-7l'h*X?,:8um`H+/'!X)H\#n\q0)_:aQJThMJIDIj\?gk2Y0Y;\V@,mgo9;j*20Ejr)o<h,<oRIVpfC?V^^g-lT5%[&.PY3pGR)o=h8)!FlkMTXq*c$&>sAF&<:6Y&pYL[m6o5:U[)u\4r?uS"6oTc"8$"P++"@+/KkGF78a^B-<`Am`<@:p_rZ',O3Oe%SU\OFKCf$%X5*(PKo,LYg[A<U7[A:ZG08bV6p\qtm>hRh//J<[$622,duGcj>WW/<J870-L*kP\OOaTrR%50Q$6FeW>S*e5P9NUK%$H9Pj;u*eKe@2HlC/\CaiBYSoCofJ%;s[^@E')[#/*ZQ07]SGf@ssF$2B@kG<\DcU.V\33eL#TEofXDOFKUcJ+LpHu31RU6grC)S%2Vc:c&b@*a'2eF@j!jjcg(hD<qZ_?G6n[c@-u&?pe4(Ypp!m/5S(;hMqCnLcfDRV!V*'_bY4:DhZTQB;H'ZkK.*%HCoLsNKc_sS1%E.&SLa)QET*]g&t?I8hBUM1Y3gC4L6\uiVg5(FSK>JrgPSRLR5HA1qk#8]^28d9FC!RlV4gpjd]^*#3_@NRb]o'MqC]m=XCIe!*P%CG@[_fZ<V=a3VaoHb-f$+RW"7n;jmTHb$EuPi[HS6Zs12?Yi1(T54^4iq7NmDA7B_l/`s4bZSbo<Ms^da'hRSRXLTbIG"en>mpD3%)fTaPk<b9dM&a,_!?7jXLl=[jU>n%6-'>GprW0*+U7gT!"tXOl-6p]Yi9h,oCZXKBEIG6!M_(A;OG6V[Ga8UL[n>3OQeb??8\!2&%%cf=!&a^A2Han'mDbARtQmmYb:,In!1[i>V"5K&7\"qA1IA#/k!12j7EaomJE7#]3]WGkOeU6+TUr8Gjkrjts_Oi_i+c#/;m<E>Z%cpHFe#$fk*qq(nm@SkI;IHAneSDV_dLC@PX:@)KoMg!Jl5aNJ^nMDs!Cma4L*.=GW>;Z@2bpeYsSS5\Ul(UA7+r74fHZJbQCb2%u%K<F>?jD[n2;!ak`[0#Yd2IXs2.Z^Wg0/neq3GFIBVa&+h8l$BlS(QTS[U^q<o'i/u`o^Xc(2qbqJ__gZEJKdJ4/_UXdjWBg>c=$!%s%Y5bSu,_LfXokohp+37FmZ3,/5Lucd,H:_"3:7/HBoh7e5t0sqPp#"=O([0>h^nIX8>^3`u,AEEV!u@14i0.*#2[pa16N8&n;*7%+e%9/6V`Rb"?[]fBC";^D4]m")ETek-UG!OSMiosct-N@GY[/iAWp?DLSa\BH*pr'f#s"<YUu6qq.P""g!2!N1EUJ^s8RfohhE65%hX#JQbLQFs9DYf*hiB/gVhLgC)LN#18f-&lSsR7[&4SN)<5kH3FpOE\>"#r*9u+k,gZ@?=0eU-*M%E+]Q!7">O,94'\+8G_RLdKA%l8M6%et,d3g4M@C&+(h=WBI(A[O:o9g4O%5*nl7um2js`S+iU>p&a-!5b?^$_R/XC&iH281;du1^3,ahd2I/,3-tXHq%PN<)IkVg%9Ytd56C8O?!17M9F(HABZG&Lh)n70B0#:+M[n=kbnXj?(0P)8D:RA')I_%[3#hlK20TF&Sqj^I/5<UHE]WKRX-=*NQj`Kg&/aIQX%gan@H7@X3#C^Vmb7bDf]%ZluXX"gX-DEl0^lij2+$)UMKfK6=[&X9"0![m@E!IYgo[PUI__L(-W5KuIRYfNMn@;B'>$)kO!j=ZuJ%L6h-NqXdTfoLZA&'i>luT%)OgLciAh."(og/\/bp1e.NN3H)5!6(s#92s81$ZF-U<FnEd*NK`+kcNJ'#Tcd\kO`C(47IuG,"Te(V%>G$XYU1I(epRk1!>13sk7P8Qc_?FKKeCC<@pPgdpRV*J1f%ki`HOYM/Uk^VJ!rO;3Wil$:T_@lCD>l(r%Zu#^!GnNQH5cY52(W#k%`Wh5ifUtXaE9%)jrN#f70o%K&C6`Ye>,+TinjS`HpRuuPDlmbM_@QdN#$'cK7DM*e>8g_S>OZ<^b_d`cUY9"<)D;3]g6Q(<Rm):N%<7&f(aJ5%79/2+6hO!E]'F6MQmIt!^s8@3>_h16_&(ob[H\.Pn0@l,lhcgl$HIrWoE5ZJbIB:00Q@a__.n,>4!?5#UOS$3M+95F?%@bI(/^s/GfO0Yp@E0a,>"<lj%'6-m8%aFB+H`3!c!.N]HV]8aW;k0cnT92cZMSZ.=ZF^/23-JX6C??Q5n5J>td!3@MmL.[jgGd3<%A7^-f45Z%Z[PlAr@nLN@"P_kHE?oC@0>N7OG58#WP6'Sg=L*jmg7/_67s)/OiuX0tgB+l-Ae*&D"4OcDW9^[+j$=;CIV6^Y''Cl\%!S]?3%J&4$O+Y=_jW)GS`>phKBOo&GC54:2O!S<g\"?oJ]!E*"3M^Yd?<3YE9H%cB;RO98*Drj*;W%EY5(p4@$:O'WLhArSaVnhT%*idC/-4CB3/:l3%qfn]u0-T1'_NgTOhXX\)9QnX)KDJGj['+WTm/4Q'+QG9YQckr^-qDO4lu&PiH+UX<?bLRP,E%p>J?1Gr<nc$\%E&'2:acD!UM#^-`T43k@!'3m<GfOAU=_2WG2k[WI"USqW3=i2rXP&&eY$$XNU8/86RrRX8o?^h<>jN60[;kt3\MppP8aP8dX[Tb@%CZX]ST;8Q.'0HoCGF#@H9.E\XS(++rM#-JqR!(t%a#kqJS]/4_,STomLNRaVolSIm>YIGJ8Q:WmO#ojf[Q@70[s!`B6;r3./E#4k%(?Ip)iX4=Ka5(>13;#"Yb.],eJ6-u]%C3U"=J:l#[#9hJVq`h-$RNVi[aQuq'"]J8'F("Vl`8T<jV#o[nZNBgpusn`BHZ8cNC@^G%'uk<""Uj6DEmt8@pn4unDkA%]GWpr*I02_mE$P_nYmn0Y[sZ7F_Uk$S9kWVPg/+LgC>t)mCJn-tRu0g?n"$&Ip$BS:2/3>7+-oH-%&^pcNVr)^*kIU@q6#;b68"hd^\oIDM#%@BLVZ7aZ1rL!,TV()Tme9L/DC0lbH*L0T)<'+Aak`fIg,@-4?^Sb?5.c"t!qAS;>Lk+O%T!&aN()t7TY4gj2BdCt;gtp8$bBojRQ_!J@B5.W:L(Qi!B&bmD!1^j7U:7&*TJ-?m-iKm'%7mU7eu(][&f[aTWR+H^2`9nh3?GiG%PQcXcVrZGj(W8c)!cYEEfXYC^Dg:+X)ok.q_\UJ0@'Ag)J7sN?c-5f<,lGnA`(jc70i:MQd(,ekki@odF;CP'S!SJnSn;5kdHY;#%:;EjU/NYeHND\dVmVk,]^nVt?n.geb]s;P=\m:3jJ68HC`/HPhU*2eha3))lYt5:qGJ>L7@h@b_UiOVS?4@gp^JVc?;U;hMZ$Cg?%Y2Ih0ol&YWHJsn-jsW[+^4!#Zrb_B&hfGY-/*FRpE$P75bjL:Vn?;)*]X!OtiYE?nWeGnH21Dg>&Q=QK-HekCONh]nrTT)epo!s1%^\Q>#If&61?[qq&Y<MpS_nUTpj4AeXl-"R+I/W<Y+929#J%r^Gq9tsbr6(GAI/T]'05l@<l0FuAo&EMQhu<O\5Q2adlOtTEiJ6=g%mN4[l5FbWpY5~>%AI9_PrivateDataEnd
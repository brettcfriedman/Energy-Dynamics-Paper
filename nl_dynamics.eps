%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: nl_dynamics.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Troy Carter
%%CreationDate: 8/6/12
%%BoundingBox: 0 0 433 203
%%HiResBoundingBox: 0 0 433 202.5997
%%CropBox: 0 0 433 202.5997
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 60 8%%BeginData: 7384 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFD98FFA8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DFD06A8FD07FF7DA8A8A8FD047D%A8FF7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DFD07A87DFD1CFFA852FD077DA8FD0F7DA8FD077DA87D7D7D52%527D7D5252FD06FF7D7DA87D7D7DFFFFFF7D52FD057DA8FD0B7DA8FD0F7D%A87D7D52A87D527DFD1BFFA87DFD23FF7DA852A8527DFD06FFA8FFFFFFA8%FD04FF7DA8FD23FF7D7D52FF527DFD1BFFA87DFD23FFA87D527D7D7DFD0F%FF7DA8FD22FFA87D7D527D7D7DFD18FFFD04A84CFD23FFA8A8FFFF7D7DFD%0FFF7DA8FD23FF7D7D52A8527DFD12FFA87DA87DA852A87DA8A871CBFD26%FFA852FD0FFF7DA8FD0EFFCBFD09FFCBFD0EFFA87DFD12FFA8A8A87D7D7D%A8FFFFA84CFD27FFA87DFD0FFF7D7DFD0DFFCAC4FD08FFCBC5CBFD0DFF7D%7DFD1BFFA877CBFD27FF7DFD0FFF7DA8FD0CFFCBFF7EFD09FF78FFCAFD0C%FFA87DFD1BFFA877C5FD26FFA87DFD0FFF7D7DFD0BFFC4C53008A8FD07FF%A80854A2CAFD0BFF7D7DFD1BFFA87DCBFD27FF7DFD0FFF7DA8FD0BFFA355%8572FD08FFCB72A955A3FD0BFFA87DFD1BFFA822FD17FFA9FD05FF9CCBFF%FFFFA2A8FFCBFFA87DFD0FFF7D7DFD09FF78795BFFFFA3A2FD07FFA2A3FF%FF5B7878FD09FF7D7DFD1BFFA82A79FD15FFCBC5FFFFFFCBC4CBFFFFA2FF%C4FFA2C5FFC477FD0FFF7DA8FD07FFA92A4EA9FFFFAF2FFD08FFA90DAFFF%FFA94E2AA9FD07FFA87DFD1BFFA80655CBFD0FFFCBBEA2CB7885782A4EA3%78792A5B7EA3CB8554FFFFFFA87DFD0FFF7DA8FFFFFF7E7F7F9D78A9A8FF%A860605AA2FFFFAE34AEFFFF7E5A608BA8FFA8A99C795B7F7EFFFFFFA87D%FD1BFFA82F1AFD11FF782A247FA98554557F7F7F552A7F7F7F2A2A7F7F7F%5452FD0DFFA8FF7D77A2A2727146CBCAFFFFFF8B8BAFFFCBA3AE89584B5E%83A8A3FFFFAF8B8BFFFFFFCBA2469578A2C49B7DFD1BFFA82854A8FD0BFF%A8A9FFFF54A95A7FFD08FF84FFFFFFCBFFFFFFA9FF7E53FD0DFF7D7D7D20%705276205152512E2E057CA8FF7D7D0D58769A8D9A765F2F7D84FFA17C05%2E2D525227207D5270207DFD1BFFA8587385FD0BFFA9037FA39D8A84A8AF%608B3584FF8B8B3559AF84AF3C60848B8B8452FD0DFFA8FF7D83FFAFAE84%83AE838A58519A9A75580A7E59C3CAFFCAC3597D0A58759AA02D588A84AE%5984AFFFAF837DFD1AFFA8A82D5913837D83A8A8A8832DAEFFFFAF787279%5A8B596084FFAFAF60678AAFFFAFAFAF8B847DFFA8FF7D76FD0FFF7DA8FD%0BFFCBCA949295848BFFFFFF8B7E94939ACAFD0CFFA87DFD19FFA87D8427%4B59524A449A6F756E6826A0C37646537859A8CAA1A8CAFFA1A8CACAFD05%A1C3936F999A6F4A52FD0FFF7DA8FD0EFFA1A3A38BFFFFAF8BA3A3A1FD0E%FFA87DFD1AFFA8A84BA27860A2C4CAFFA8CBA1FFA27EA128345A53996893%6F997568689A9AA06E6F76A17C762DA883AE7D7DFD0FFF7D7DFD0FFF7FA9%848BFF84847F7FFD0FFF7D7DFD1BFFA8A0A3A33CFD09FF36855ACBAFFD07%FF83AEFD0EFF7DFD0FFF7DA8FD0FFFCBA3FF60AF60FF7FFD10FFA87DFD1B%FFA87DA9A98B84FD07FFA8540EA2CBFD17FFA87DFD0FFF7DA8FD0FFFCB9C%FFAF13AFFF9CCBFD0FFFA87DFD1BFFA8A7A3CBAFAFFD07FFA972C5C4FD19%FF7DFD0FFF7DA8FD10FF79FFFF84FFFF78FD10FFA87DFD1BFFA87DA972AF%3559A8FFFFAF2E84607E95CBFD18FFA87DFD0FFF7D7DFD10FF7FA9FFFFFF%A97FFD10FF7D7DFD1BFFA8A7A973FF8A59AFFFFFA9363C60A2CBCBFD19FF%7DFD0FFF7DA8FD10FFA2CBFFFFFFA9A2FD10FFA87DFD1BFFA87DFF30FFFF%AF84FFFF7E038554A3FD1AFFA87DFD0FFF7D7DFD10FFA37EFFFFFF78A3FD%10FF7D7DFD1BFFA87DFF7FA9FFAF8B608B6031557FA9FD0CFFAF7EFFFFFF%7EFD09FF7DFD0FFF7DA8FD10FFA97FFFFFFF7FA9FD10FFA87DFD1BFFA87D%FF9CA9FFFF603C3C3C092B2AFD0DFF3008CAFF5A03A8FF7D52A8FFFFFFA8%7DFD0FFF7DA8FD10FFCB78FFFFFF54FD11FFA87DFD1BFFA8A8FFA978FFFF%603CAF852B5BA3CBFD0DFFA9FFFFFFA8FFFFFFA8FD05FF7DFD07FFA8FFFD%04A87DFF7DA8FD10FFCB9DFFFFAF9DFD11FFA87DFD16FFA8FFFFA8A8A87D%FF7F72CAFF848AAECB72FFCACBFD1AFFA87DFD04FFA8A8527D7D7D527DA8%A8FF7D7DFD11FF54FFFFA978FD11FF7D7DFD11FFA8A852A87D7D52A87DFF%A87DFFA34EA954A9A9FF7F9DC4FD0EFFAE83FFFFFF7DFFFFFF7DA8FFFFFF%A852FD06FFA8A8FFA8A8A8FFFFFF7DA8FD11FF7FA9FF85A9FD11FFA87DFD%12FFFD04A87DA8A8FFFFA87DFFA2722A037E7FFF7F78C5A2FD0DFF7D58FF%FF8358FFFF7D52A8FFFFFFA87DFD0FFF7D7DFD11FF787FFF7F78FD11FF7D%7DFD1BFFA87DFFA9485555A9557F559DCBC5CBFD15FFA8FD05FF7DFD0FFF%7DA8FD11FFA379FF79A3FD11FFA87DFD1BFFA87DFF7F2B55A9552B2B2B9C%C5A2FD1BFFA87DFD0FFF7D7DFD11FFA97FFF7FA9FD11FF7D7DFD1BFFA87D%FFCB48559C7F2BA985C5A2C5FD0DFFA193FFFFC369FFFFA852FD05FF7DFD%0FFF7DA8FD12FF79FF55FD12FFA87DFD1BFFA87DFFA27254A34E7FFFFFA2%CBA8FD0DFFA8CAFFFFA8A8AFFFA8A8FD04FFA87DFD0FFF7D7DFD11FFCA72%8572CAFD11FF7D7DFD1BFFA8A8FFAF4E9DA255A9FFC5C5FD1EFF7DFD0FFF%7DA8FD12FF797F78FD12FFA87DFD1BFFA87DFFA99DA2CB24A2FFCBA8FD0F%FFA884FFFFA884FFFF7D7DFD04FFA87DFD0FFF7DA8FD12FFA92BA9FD12FF%A87DFD1BFFA87DFFFFCBFFAF2BA9FD12FFA87DFFFFFF7DFFFFA87DFD05FF%7DFD0FFF7DA8FD12FF9C2BA3FD12FFA87DFD1BFFA87DFFFFCBA2CB54A39C%C5A8FD17FFA8FFA8FFFFFFA87DFD0FFF7D7DFD12FFA202A3FD12FF7D7DFD%1BFFA87DFFFFCBC5CBC596CBA2FD18FFA852A87DA8FFFF7DFD0FFF7DA8FD%12FFA95BA9FD12FFA87DFD12FFA8FFFFFFA8FFA87DA8A87DFFFFFFA8FFA2%C5FFC5FD18FFA852A8FFA8FFA87DFD0CFFA8A8FF7DA8FD13FFA2FD13FFA8%7DFD11FFA8A87DFF7D7D52A8A8FFA87DFD06FFCBC5A2FD11FFCBCBFFFFCB%FFFFFFA87DFFFFFFA87DFD06FFA8A8A87DA87DA87DFF7DA8FD12FFCB96CB%FD12FFA87DFD12FFFD04A87DA8A8FFFFA87DFD04FFCB9C9CA2FD12FFC5A2%FFA8CBFFFFA87DA8A87DFFA87DFD04FFA8A8FD067DFFFFFF7D7DFD13FFA2%FD13FF7D7DFD1BFFA8A8FD04FFCBC59CFD1BFF7DA87DA8FFFF7DFD0FFF7D%A8FD27FFA87DFD1BFFA87DFD05FFCBCBFD1CFF7DFFFFFFA87DFD0FFF7DA8%FD27FFA87DFD1BFFA87DFD04FFCBCBFD1DFFA8FD04FF7DFD0FFF7DA8FD27%FFA87DFD1BFFA87DFD05FF6BCBFD20FFA87DFD0FFF7D7DFD27FF7D7DFD1B%FFA8A8FD05FFC5CBFD21FF7DFD0FFF7DFD29FF7DFD1BFFA8527D527D52FD%057D527D527D7D7D527D527D527D527D7D7D527D527D527D7D7D527D527D%527D527DFD0FFF7D527D527D527D7D7D527D527D527D52FD057D527D527D%527D527D527D527D527D7D7D527D527D527DFD1CFFA8A8FFFD05A8FFA8A8%A8FFFD05A8FFFD09A8FFFD06A87DA8A8FFA8A8A8FD11FFA8FFA8FFA8A8A8%FFA8A87DA8A8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8%FFA8FFA8FD1BFFA852FFFFFF7D7D52FFFF7D7D7DA8FF7D5252FFFF7D527D%A8FFA852527DFFA827527DFFFF7D527DFFFF525252FD0DFFA8A87D7DFFFF%7DA852FFFFA87D7DFFFF7DA87DFFFFFF52A8FFFFFF7DA8FFFFFF7D7DFFFF%FFA852FFFFFF7D52FD1BFFA87DFFFFFFA87DA8FFFF7DA87DFFFFA87D7DFF%FFA87D7DFFFFFF7D7DA8FFA87D7DA8FFFFA8A87DFFFF7D7DA8FD0EFFA8A8%7DFFFFA8A8A8FFFFA8A87DFFFFFFA8A8FFFFFF7DA8FFFFFFA8A8FFFFFFA8%A8FFFFFFA87DFFFFFFA852FD20FFA8FD8EFFA87D7DFD37FFA87DA8FD43FF%A8527DA8FD36FFA852A8FD1FFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-08-06T12:02:38-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>120</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAeAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpXk5t7S&#xA;ecDkYY2kC9K8VJpirDND178ztY0TT9Wh0vRYodRtobuOOS+u+arPGJArUtCKgNviqLS8/NVmkU6Z&#xA;oi8G4gm9u6N8Iao/0TpvTFXG8/NUSrH+jNEIZWbn9du+I4kCh/0TqeW3yxV015+ascTyDTNEcopY&#xA;It7dlmoK0H+idTiq/wCs/mp/1btD/wCk68/7JMVWRXn5qupY6ZoiUZlo17d1+Fitf95OhpUYq4Xn&#xA;5qmVo/0ZogCqrc/rt3xPIkUH+idRx3+eKulvPzVRQw0zRHqyrRb27r8TBa/7ydBWpxVf9Z/NT/q3&#xA;aH/0nXn/AGSYqxe1/M7zhLNZwXFjpFlcahd3NjYRz3N/SWa0nNtKvOOzdI/3ylFEjKWpsMVZB+Wv&#xA;nnUfNdtqbX9lDY3GnXCW7xwSvKOTQpKysXSOjRu5RgKio2JxVmWKsStb78wFW6MunrIDqkkUAcwJ&#xA;INN4pxnThMyE8+fFHIbjTlQijKoXT7f8zNVs76LULpdBlktoltJViguGWd0YSmkcp2T4P2h8XLie&#xA;PHFUXrHmLzZ/i19A0GwsJ1gsIb+e4vrmaD+/mmiCIsUM9aehUkkdcVae8/NVWjUaZojc24ki9u6L&#xA;8Jap/wBE6bUxVf8AWfzU/wCrdof/AEnXn/ZJiqyG8/NWSJJDpmiIXUMUa9uwy1FaH/ROoxVyXn5q&#xA;s0inTNEXg3EE3t3RvhDVH+idN6Yq43n5qiVY/wBGaIQys3P67d8RxIFD/onU8tvlirprz81Y4nkG&#xA;maI5RSwRb27LNQVoP9E6nFV/1n81P+rdof8A0nXn/ZJiqyK8/NV1LHTNESjMtGvbuvwsVr/vJ0NK&#xA;jFUo8x+dfzA8vwtLf6bpBURSzqsN1eSMyQRPNMQBadESPcnuVHUjFUMv5n+Yo7vRTJb6Nd6frFxB&#xA;DHcaffXE5KS3MVtIUJtliLwtOpZC4P3Gir03FXYq7FXYqlPmbXJdF09LuK0N4zzxQ+irFTSRqFhR&#xA;ZKkD7K0+I0XviqQa7+ZD6a91HHo88klt6yoJm9ETNDPDFyhKpLzi4TtIzj7IQjiTXiqmUtz5om+v&#xA;G9tLa20htOZ4+EjyTi5JaquWWMBfTptw2P7R7Kpd+TNze3H5Y+X3u6lxaqsTsVJaFSRF9npRKL9G&#xA;W5gBLbuH3Bv1AAlt/Nj8+EWzTKmh2KuxV2KuxV2KuxV2KsVf8s/KUl8t9LbytcxXUl7bOs8sQikl&#xA;ufrrALE0auv1qs1JQ3xE9tsVS/8ALfTLfS9Y82afbpIkVve2ij1mVpGY6fbs0jspKlnYljTx6DFW&#xA;dYq7FXYqxW2/8mpqP/bDsf8AqMu8VZVirsVdiqFs9Ts7u5vLaBiZrCQQ3KsrLRmRZBTkBUcXG4yc&#xA;sZiAT1bJ4pRAJ5S5IrINaG1PUbXTbCa+uiRBAvJ+Klm8AFUbkk7AZPHAzkAOZZ4sZnIRHMonIMHY&#xA;qxzzh5NTzGIv9Ka0YW17YzOqB2NtqEPpyhOWyuGRGDEHpSm+yrCfMX5ew6KdBvRfyXfpa5p8khmS&#xA;NXkuJ7mzt/UPpCNFVILRVCqm5JYmuKvWcVdirsVdirsVdiqF1b/jlXv/ABgl/wCIHFWF/kfJbTfl&#xA;9pt1ZziSyuYLdoIatWForaK2nQhugNxBI2229cytVCUTESHq4R8b9Q/2JDfnyCQj3xFH5n7ht8Gf&#xA;ZitDsVdirsVcSFBJNANyT0AxV2Koa61G1tbm0t5iVkvnaK3NCVLrG0vEt0BKIxFfDJxgSCR0Zxxm&#xA;QJH8PP7lS6u7a0tpLq6lSC3hUvLNIQqqo6kk9MjGJkaHNEIGRoCyVUEEAg1B6HAxYr5V/wCUv86/&#xA;8x1n/wB022xVlWKuxV2KsVtv/Jqaj/2w7H/qMu8VZVirTuiIzuwVFBLMTQADckk4qwrzH5xXUfT0&#xA;rylM2q6i0iNdCwZSqQULfHeGsMAfYcvialeKls2ul0NDjzeiH9Lv8o85fYO8htjMYzco8RIuPd7z&#xA;5fegfy+h83WnnjzTa+ZNSW7lnS0vbWCFQIY0lDoVQlVekfp+mP5qciKnLO0TglhxnFGgOIEnmd+v&#xA;TzYRxy4OIyv1VXdsD9u/yeiZpmLB/wA5V1SbyRJZaXdmz1DULu0tLeRR9p5plULyALLvvyXcZtex&#xA;uAagSnHihESJHuDOMJSB4ZcJAJv8d/JC6druu+Vb2QedJ5DYywxp+l40eezkuIwqeqeHx2jSr9qJ&#xA;k9Pluj7kZbk0uPPC9P8AUP4TtID/AH4HeDxVzHVMZmYjj4fXdAjrfQ+d/qZ1Y6hYX8H1iwuYru35&#xA;FPWgdZE5KaMOSEioPXNPOEompCi1kVsiMirFfzF/452j/wDbc0j/AKjosVZVirsVdirsVdirsVQu&#xA;rf8AHKvf+MEv/EDirx3/AJxkjht9EuoUmDGS10+YW/eP1Imkbv0Zpa5ue1MssmPESP4avvrb9FOJ&#xA;pNVllxY5xqMJz4ZfzrP6Nv8ATPbM0zluxVSu7y0s7d7m8njtraMVknmZURQTT4mYgDc5KMTI0BZV&#xA;IPPGv3OmWENtpzSHWtQdo9PgggW5lf01MkhVHkhT4UG7M1B4HMzQ6YZJEyoQiNyTQ8uhbMUoxNyi&#xA;ZR8v1sN8sebvzT84S3UEnl+30SxgEtverq0ErJIX3VFj5xyMeBAb9nr1qANpqNFo9MATkOQmiOAj&#xA;470evxPkwGYcI4BKMweZ6d1V876LrLTPz10zWba3tn0qXy/HGoW19aQrGA5Zo2nmjkuT8PwKwUgD&#xA;j8PXIzn2dOBJ8QTvnQ327gQOe/P4svHlKUpTiDY6berv/XsgtU0v867C9srm3k0m7abUubWFxczT&#xA;IFavF4zcBDGkfN9oqyAEfbAAFscvZ0okfvB6OdAb923O+87e5ry6vKeEeiPTbbi9/enlzY+fbW01&#xA;OP8AQNrql1fCQiOTUHfSw0h58jbXK+ovxfaUGh7FQdsUHSyMSMkogf0PX84mvxu2S1eWhsBKPIjY&#xA;/Nry/wD40ghs9U1fyckvmBYFikmtL6JUUcOIVYZHVIgQAHVKivSuOaGmkTGGasd/xQPf3jn+OTEa&#xA;rMYcB5fDmu/KiZpdY87M2mXGkN+loq2V24lmB+owEuzh5AfUJ57MRv1zW6uIjOhIT2G45fo+5ZZZ&#xA;T3lz/Hc9EzGQ7FULquo22maXealc8vq1jBJcz8BybhEhduI7mi4q8m1v83vLegfmTHd3UF1PDrHl&#xA;6yktEgWMy1F5dfAyPIgrvTYnfLceMS5y4fhI/wC5BP2N+HCJgkzhCv584w/3RAS/zX/zkRqVvPZ2&#xA;2jaXDazzzIp/SMhdmVtuPpQbrU/tBm9lPbLhj00frOSXlGBH+6bI6fEYGXj4Nv8AbIy+2JNI+78z&#xA;eUtfiu7TzX50e5smjY3OjWFpc6dGFCVfmaPcyLTeheh8Dk8evhileHHwyH8U/UftAiD7g4uY4vDG&#xA;8T5xnGXyETy+bI/y91Xy7daBbaV5ClgXTYE5SXc8iyT8iaSM1urBy/I7l+Kjoo40GY+fOcszPIeK&#xA;R6Bw8ufPlPpHCP50h/uY/ddDutK4de8q+V/Pk9/FrJ1WLWrN/wBJSJKt5KlxaMhi5LDX00McxCji&#xA;APYYZZhLAR1jKxHyIo0PgL+FsYCGCzOZlKRiADzP1Xy/za7kJrH5130PmrSre0OmQaPN6wvBc3iM&#xA;4PH93608CzQW7VGy826/HxFDmnlqJcVV+P0O0xdnazLiOaMAIDoT6pf1R/aredfN/lrzRb6Joeo3&#xA;DaRY392ZdQuJ5UiiENtG7j0rtHMDh5E4qyOdxvTpm10WUCE5H0nhrfzI5d+3OujrZyjlBxkmExRr&#xA;rz39/XkzDUdWh0TTlbUb+21DQrmMhZLmaKOdoWUVo7ssVwvE+IO/7WQEo3f0n7P2NYGfEdv3sf8A&#xA;Z/ql9h97zbRNU/KjRrKSXyh5svdBnuJ5eaSRzXsUzF6LW2kR0ai8QjIQ3H7RLZsM3as8leNGOQCq&#xA;oUfnHfz7nYabNjkZGXM8+KXAQev1EC/eCsi/PvXbPzjLpF0llq1isIML28c1jNJXifVKTNOyn4iC&#xA;lO1eXbKpflJiojLCXmOMe7YA/Gm/FgxSxmRz4bH9OIH+mMuH4bovzF+dHl3XL3y9oMVndW+pXGu6&#xA;XVJvRKqEvIyalJHbt045izxRF1K/82Q++ITLTxEOMZMUvKOSMj9hL2vKHGdirsVdirsVdirHfMmq&#xA;arDfRafBZNJp91a3LXV5xcrGUhdl+NRwX4lVaN9rl8P2Tir55/LLV/NWl22m6tb6WIWi0m0uIIy8&#xA;KRXFvSS3TkBLsZTEaM1CDuV6ZmynmlpxARBiDLhPxEuHn58+ThavTywwx5JZYwhCe4MZX649auxQ&#xA;HnZ5PVtH86/nXcnUI7ryVEstpccIiZ0tw8ZFaJzkdJP+MivTenHrmoE8v80O6GkxiNnNH/Syv7z9&#xA;pH60rrzd+eceuafw8nK9gfV+s2iXFsDIOIC1uDLIkZRl5CpHINTjUVwcea+QYDSR4DLxoWCKjwz3&#xA;Hma2I8uLmlH5yebJdX8jX2m33lbUIZrd7WS6YzWrLaStIpUyejM1VdSyqSKGo+jc9kavLg1EZiMh&#xA;9W/wN0yGkwkjiyY5xjvOIMuIDn1Aux3FIfKusy21xpcuuJrUVtZQFyqoZI7O1ukjWqO1JoolSOND&#xA;QsKciDV8zu0NfjGImMaEjua32v6gOu539w6OEYy1ZGLAQBPcgSiJcMAN4+r+PiB/ndwvlI/Ln5je&#xA;R5UaCfV9c1LSZriRPWvVZ4jIfi4tIjGRkMfErEB0O69hoPz+MeR9zPJ7NZonhnPiiQDwnJD7fUJV&#xA;X+b3utPPH5cJ50lXSL7VbbUPq4iF4sJnt5LcNySCKA85fhZ/gJi233x/lDGee/wKI+zOaMRLHPgF&#xA;/wA+BAHduaruLWv+dvy+VrL9O6f5im9G4T9F39xGyFJ1NQ8JMkbsT14lST0C7UxOvA5D7E4/ZniJ&#xA;ByxMoxuzliaHUgi9/tTDXvNtpJoeoE+XfN5jS3d3EsckSEKpNGaWSQKNt24GmJ1xHKJ/0rCfYOIi&#xA;suah3ccp2B/V4o/6YxtAeV/MGt3vlyxurTyZrF1NxKpPcatIJmUNQsJSI46lh9mijbpkRrch5R2/&#xA;Hkp7K7PB/vcsj3iMv+qgFe75J9+Tc2qz6h50l1XTZtJvW1WISWNxObqRQtjAqkzFn58gOQINPDbL&#xA;BIy3Iosjjxw9OMyMe+X1ffL7y9Lwodiq2SOOWNo5FDxuCrowBVlIoQQeoOKsQsLGyg/NS79G3ji+&#xA;r+XrGCDgir6cX1y6/dpQfCnwL8I22GKKZDfeXtA1D0xf6ZaXfpOJYvXgjk4yDo681NG98jwjuYnH&#xA;E8wELqHkryhqNvNb3mjWcsc6GOT9xGG4sKbOoDKfAg1HbInDA9AxOCB/hHySe4/J/wDLuWwhs4tG&#xA;htRb/wBxPCB6qmtasz8/V+UoYZXLS4yOTsMOsnCPBIDJj/mzHFH7eR8wQfN59J+UU2h+YEvL26ia&#xA;w1TU0tbZbNRbsqTxTcHlVFRFKzCOiR/Cd+goBn9m6eQGUXtw8Vd/CRz+F+X2J1H5I4iMWLw8kh9V&#xA;k8Mr24LO1c997HN6xoUmmWnl5o2t4bGGwV4r+2jRViRox+8PECnFx8Q8QcqOERPDEbHk62PaM8sT&#xA;lzSPiR+sk8iPxY8qeV+Zvy5n8xatJpmnRx6ZPPpx1A27ilrH6t4ghhZFVvTPpxSMWRalq9qjMnNp&#xA;q0h4DQMxGuhoWdveQ5nZ+oxZYmesj4s8hBN3xxiBURxeXcepkWb+X/yg8nafHFNf2FvqWoLEscss&#xA;sEQhqFoeECqsf+yYF/Fic1cNJAbkWXIOt4AY4IRwxP8ANHqI/pT+o+668k20b8uvI2jQtDp2iWsa&#xA;NIZSXjEzc2ABIeXmw2XoDTLBhgOgdZ4EO4JjD5b8uwXn16HS7OK94en9aSCJZeFa8eYXlSo6VyYi&#xA;B0ZDHEdAkX5k29vLY6HJLEjvDr2kvCzKCUY3kallJ6HixG3bJMqZdil2KuxV2KuxV2KoXVv+OVe/&#xA;8YJf+IHFXkXlnT9CEWgaPNEIzqXk+wFkqVUGW3Mlyw27sWL7+BzbYbGkBj/DkN/GMQ167Sy1Onyc&#xA;RuIo+d9D+h6f5c8x6Pq0Ho2V5FcXVpHD9dijYMY2kSoVqd9j8s1uSBBaNHqYZICjZ4QT8V2reatD&#xA;0jULSx1G4NvNfLK9szI5jIhAL1cAqtA3c/rFYxgZcmefVY8X1mnlOoNcar+YmoIZ51t7nVLK2Sxi&#xA;UmOdbdgkkjOsi09OKGV91O/EjN/ACGnG2/CTfd5cuprrysFnp+zMepHjiXCIylxj+ccf0De9rr/Z&#xA;B7Fp+m2lhaW9rAnwW0KW0btQv6cShVBam/TNDOZkST1Nt2Q8UzMj1FEqqqoVQFVRQAbAAZBCiun2&#xA;C3rXy20S3rp6b3QRRKU2PEvTkR8I2rgpFC7V8KXYq7FWK+Vf+Uv86/8AMdZ/9022xVlWKuxV2KsV&#xA;tv8Ayamo/wDbDsf+oy7xVlWKuxV2Ksa/MZpIfKV1fxqrSaXJb6ivLoBZ3Ec7k/7BGzP7MjxZxC64&#xA;7j/pgQyhkjCzIWKP3c/hzb1jQtVufMVlLamIaNPvrkTk85DbjlbcANjVtnr+yBmLHJQrr0dbn0XH&#xA;kEr9JriHfw8v2+Sn5fE1x5281XrFWigNjpsJH2h6Nubp1+Vb7MvUjh0+KPfxS+cuH/eOy44GNAeo&#xA;E2flXy/SyjNexdirsVYr+Yv/ABztH/7bmkf9R0WKsqxV2KuxV2KuxV2KoXVv+OVe/wDGCX/iBxV5&#xA;1o+mRLa/lTrXqN6kdpDYNFtwKXGkyuG6V5B4lHWlCc2ekzf4PmxkdIyHvEoj7iWUBPfh5V6vdYP3&#xA;gMg1SXTPKuo/WbO0gtori3QSLGgjVuFzFGzNxAqVSfqcxYROQUe/9DodVljpJiUQBHhry2nEfdJ5&#xA;X+aPnsjzr5V1K5kuINJt42kudICq3qOZI349PiMkbxdjTtvXOl7F7M8bBliAOPapd3P9Rcc6mGrm&#xA;OKNcNHfzN/aKek/lXpVq/l176Vo75ZtRu7iwuGo7LEkjQRMrGv2lj5/Dt8WaXtS4ZeAbVCIPvqz9&#xA;peh0g8LBDHHlGJB/peom/jbOs1bN2Kse86efPL3k6ztbvWpJUivJ1toRDG0rcm6sQOyr8R7+AJ2z&#xA;M0Wgy6mRjjG8YmR3rYMJzEea/wA6ed9C8naVHqmstKtrLPHbJ6MbSNzkqdwOgVVLH5bVNBg0Wiya&#xA;mfBj+qiedclnMRFlEa75q0LQtMj1PVZ2t7KUhVlEM0hqUaT4kjR3UcEJJYbd8xCGabAhgCDUHcEd&#xA;CMVYr5V/5S/zr/zHWf8A3TbbFWVYq7FXYqxW2/8AJqaj/wBsOx/6jLvFWVYq7FXYqgPMOnLqeg6l&#xA;pzOsYvLWaD1W3VPUjK8j/q1rluCfBOMu4hsw5DCYkOhBQvkrUH1Hyfol9Iay3FjbyTePqGJeYPya&#xA;oy7X4hj1E4jkJGvdezUL6ij3Jd+XSmXTNT1P1TKuq6tf3Mde0aTm2iFa947dT9NMu7THDOMP5kID&#xA;48IJ+0tk8hkIgiqH6Sb+NsqzXMHYq7FWK/mL/wAc7R/+25pH/UdFirKsVdirsVdirHvNPmTVdItn&#xA;ls9Fub7hJEvOMI6ursOfppG7y8wCeIZFBbau4xVLtc88a5Zz3ENl5eupxBIYhK8U/pv+8RfWRo4p&#xA;B6SozE8qMSp4grxYqphJN5luI7m4u4YLXSZdLLfVeTPcpdtyLBm4qvEJQf62KvM/O95LD+R3lGf0&#xA;mQrBZR0bjuJNLlj5fCW2PP55vOwQDmkD/M/30XM0OOUsorpufMDekzvPzD8o+bdQ1Ozl9aG28vG2&#xA;gnu1TkHm1CU2cqKG40WGdojzPWhoKAE2/wAj5sUYEc8nEQPKA4gfiBLb3PO67TQ1O0jXB/vtvvo/&#xA;Bb58sdHh/MHR5Z7Z5odEs0v/AE4gnJ5EMnAyFgaqsNm5P+rTJ6DLkjpZ8JrxJGP2D9Mvtd1oez8c&#xA;7iABIcG/+x/UHpHlnTNL03TpLbS2jNl9ZuGRIVVY42MzB4lVPhAjYFKe2aLUZZzlxT+qhz67c/iy&#xA;zSJIsVUYj4VsmuUNLsVSTzZrWl6RZ2lxqNo13FJe28USrF63pyM/ITkUanpBS9RvttvgOQw337mE&#xA;5iI3d5w13TdE0gXmoWr3sBuIIxBHF6zcjIGEnGh/uuPqf7HbemCWTg3XJMRFlCfmFr+i6J5de61W&#xA;zjv0lc29rayrG0bzyxuoVzMVjVWTkGLHoSNyaGTNkFlJFJZwSRRNDE8aNHCy+myKVBClP2SBtTti&#xA;rGPKDs/mzzozRtGfr9p8DcSf+Obb/wApYfjirJ7yK5lhKW0/1aWoIl4B9vDi22KsWj8tecUjuuOt&#xA;+m82rPe8ayTK9gURPqgMtWg5cS1YzRGPw7bYqoaV5A1GSwvLTzJq91fpd2kVrxiurkBSI2SZ93Ct&#xA;y5KPiQ/Z5NVmbFURbxP/AMrVvSJXATQrHkvwnn/pd2PiqK/dTFWXYq7FXYq7FWD+SNQtNH8i6okb&#xA;mSDy3c6pDVzVvStp5ZYw2y7+iy1zca3EcuohX+Vjj+ZAif8AZAss0p8UjMeom/n6h9hTX8uNNi03&#xA;yJoVrE5kX6nFM0h/aeces5Gw25yGmYvaWXj1OSX9I/qDLKZcVTFSFA/AV+hkeYLW7FXYqxL8x0Y2&#xA;WiuJGVV1zSaxjjxat9F1qCdvY4qy3FXYq7FXYq7FXYqhdW/45V7/AMYJf+IHFXkPnu0N1+QnliPn&#xA;wpBpB5Ur/uhR+Nc3ns/l4NQTV3CQ/HucjS4+LIKNEb++t6+PJgaw3X+D4NL0q2MWr6ppdnNwjQcr&#xA;q5Goi8Tp1KrIgDE1/Z7UzrYTj+ZlOZ/dwnLfuHh8H6P0uBnwkYoy/ine3uI/TbPtF8geYdE13T73&#xA;UtTkuZLmWwtLVp5nlmX0lW7mLFjUAzJcx0B+zIR0JGc9ru0sWeBjCIiI8ZNChueEf7Hg+TsuzRwY&#xA;8gO/p/QR98r+D0/ylbzweXrNbiE2906tLdQGvwzzO0koWtTx9Rzxr2pnPamQOQ0bH6OjHVyByGjY&#xA;6e4bD7E3yhxnYqk3mnWtX0mztptL0eTWpp7qO3lt4pBGY43DcpiSriikAb0G+5AyE5Echbk6bDDI&#xA;SJzEAIk772e74u82a1q2j6Yl3pejy63ctNHE1nC4jYI9eUlSr/Z+XzIFTjORA2FrpcMMkqnMQFHc&#xA;7/D4rfN2q3GmaZHPBpMmsSNPGqWse1HFZInY8XoBKiitNiQcm4yd4qxXyr/yl/nX/mOs/wDum22K&#xA;sqxV2KuxVitt/wCTU1H/ALYdj/1GXeKsqxV2KuxV2KvIPMWp2GmWX5laXEHjge5sZLiJRVuWsJHb&#xA;zlNyW5hGenvnUaTGZnTZD/CJ/wDSu5j7wGyWPJKcRe8+GvnwC/dwvWrO0gs7SC0t14QW8axRLUmi&#xA;IoVRU+wzmZSMiSeZYzmZEk8yq5Fi7FXYqxX8xf8AjnaP/wBtzSP+o6LFWVYq7FXYq7FXYq7FULq3&#xA;/HKvf+MEv/EDirDLHQI9c/KXyxZykCKO00a6l5Ej93behNIBQHcxowG39cy9FqThnxDmYyj/AKaJ&#xA;H6WzEI8Qv4e/+H4XV+TCr/y5Fp3mDyA2i3rz6fHbs9zfvH+7is0ukuYHkNGCF/VdByO7ADbpnQ4N&#xA;TxYNRx0JkihfM0RKu9y9ROc8oEoekGXL+dwAD7Rb1bTJ9C1jVV1nT71LtltViCJQ8UaV+L7/ABAl&#xA;o3X6DnN5BOEeCQrf9DXljkxw4JCvV+gfrCeZjuI7FXYql+tNrggg/Q6wNMbiIXP1ktxFtyrMU49X&#xA;47LXavXCK6sJ8X8Lettri2anRUge8EsfJbksEMXIepQrvy4/Z98RXVcnFXp5ofzE3mADTV0ZQed/&#xA;bjUnpGxSyBLTFRI6D4uIQkcmAJ4ivQM03xVivlX/AJS/zr/zHWf/AHTbbFWVYq7FXYqxW2/8mpqP&#xA;/bDsf+oy7xVlWKuxV2KuxV4x+Y99ZQ/nF5c0mSyRoNY+rHUa8aThJXjg5gjcozb13IFM6nsz/EMs&#xA;r3hfD5cVX9gbo4pkwkJfz/hwDi+23s+cs0uxV2KuxViv5i/8c7R/+25pH/UdFirKsVdirsVdiqWa&#xA;1ql7ZRK9vZyzf6RbRu6oZR6cs6RysEiLSfAjs1StBTfbFWPa3518xWtzNDY6BcyiKR4lkaC4kWQL&#xA;Ii+uhiQr6aozNxJDuVIUceLsqmIfzPPbXVzqCQQafLppZbRCxmjuCGZg9VpshAPxde2Ktfl3++/L&#xA;3y4skRRTpVmhV+J5L9WQV+EtscQUg0kvmTQfKOnaPb6Ze3klsLCxjYOzfFLbafKkzLsAvN2A6Cvg&#xA;M2WDNllIyAu5fbIU7bTZ805mcRfFL5GQr5J55TjaSW7v2shZJLFZwWUaCkYtI7ZZY0UD4f3ctxKn&#xA;wgDYbZj6k1UbvnfvuvuAcXVmgI3xbyJ/rXX2gAsizFcJ2KuxVRvLpLS2e4eOSVYwCUhRpZDU0+FE&#xA;BY/Rkox4jTKEOI19+yjDqkUtrb3IguFW4k9NY3gkWRSSRykQjki/D9ptskcZBIsbebM4iCRY28wk&#xA;v5j6RY6n5RvIru7axaApcWl2qmThcxsDDWEA+uHeiGKh9QHjSpGVtSzyxommWz6ZqlzYwaL5lu7E&#xA;i7021lKxEsImnVYgVV/ScLR+NVr1+I1VU/KDs/mzzozRtGfr9p8DcSf+Obb/AMpYfjirJ7y8itIT&#xA;NKsjICBSGKSd9/8AIiV2/DFWNP8AmHYr9ZrYXX7jUhpW6ceLtEkizzB+LRQ/vPtkGgoT1piqE0nz&#xA;3r2vWF5NomjQvNBaR3EInuiqSSTxs0cakRcSeSV3ZfhZGqOWyqIt5HH5q3o9Jjz0Kx5EFaJ/pd31&#xA;qQfurirLsVdirsVdirFdesoZPPPlud9GhvDxux+lXjZpLThGHUBx8I9Q7Ly96Zm4chGGYEiOXpva&#xA;X9jkY8OOWOUyfXGq875sqzCcd2KuxV2KsS/Md2FloqCNmVtc0msg48VpfRdakHf2GKstxV2KuxV2&#xA;KuxV2KoXVv8AjlXv/GCX/iBxVKfy8/5QDyz/ANsqx/6hkxVQ8123le+1fS9J1mFmn1BLgWrrUBli&#xA;9P1IGK7gOJa9vs9emZmnlkjGUoco1+ndz9JLLCEpwO0av43v8KZPmG4DsVdirsVdirsVQeq6NpGr&#xA;2v1XVbC31G1DCQW91Ek0fNPssFkDLyHY4qk/k/ynpWlW0d+dF0/TtbmjdLiaztLe3kETyGRYGaHl&#xA;so4hgHYchWp64qo+Vf8AlL/Ov/MdZ/8AdNtsVZVirsVdirFbb/yamo/9sOx/6jLvFWVYq7FXYq7F&#xA;XYq7FXYq7FXYqxX8xf8AjnaP/wBtzSP+o6LFWVYq7FXYq7FXYq7FUJrEtrDpF9LdzC3tY7eV7i4Y&#xA;VEcaoS7kD+Vd8VYP5O07z8vljTrbSvM2kS2FjCLCJ7jQr1J62RNs6yq2qRkOrxFW+EbjFUBBeeY9&#xA;W1eziPmbRptRW4maxWXy/qKNFLCZ7aRATqi8eRsZyFb7XAt2GTjklEEA7FshllEEA7S5q2t+ZfOG&#xA;jX0ian5p0q2e2iLMD5d1IxOjcGZ1K6mQ/pruSvQcv5WpBrRvmG7/ADA0i0ibUfM+j28N7NHZRzx6&#xA;DfHhLcMI46suqnhV2ABPfFXadq3njUNDOu2/mrQhpiLI8k8uhX0XBYSQ5dZNVVlpxruOm/TFUJ5Y&#xA;8wecddLQ6X5r0eeT0Yrwiby/qEZ9O6jS4QAyaooPFJ05KN0qAd8VQ/8Ai/zSmuS6a/m3R1vhPHYt&#xA;AdAvyqymT01Pw6qeIaSVU5nbdcVRHmTzD5v0S8tNO1PzdolveXivPbQx6FfNI6237xwAuqsTy48e&#xA;PVugxVFXGq+fofLf+Ix5j0ebS/QW65xeX79pPRcA8jF+leY4g1ao+HevTFWvL2oefNXhmj07zTo8&#xA;zWLehcetoN/HIHQlDy9TVEJPONlJH7QPhiqj+W3mTR7nVdUkfXoNY1TXbpJS1pYXFjboYLX0UiUT&#xA;TXXxNHZyPvJX4WFAVIxV6PirsVdirz7zNcPa+bRrOkeaNMsrm8S00GWwurOTUW+sfWZmiA+r3lo0&#xA;bFpmDcgfs4qiNQb8wbWaOO482aDHcqGlitF0a69aYBWHFYhq3OT2CjqMVWWWo+ebvRodaj82eX49&#xA;MnUNHcy6NdRpQnj9p9XA67e/bFVmjXf5gX809jaeZ9HmlsY4Wkkk0G+Akjl5COVJG1ULIr+k3xL1&#xA;69CKqrYNS87SX0Ftbeb9Bu5dReQQGHRbyaJWgiVnQyJqzJH8PxBWNTvTviqpqN15+0/VdPtLvzVo&#xA;sV1qHqR2kI0K+KPRowzMV1UqtGdFBYjdqd8VRGrw/mVZaVeXl15k0eO2t4JJZ5IdCvnkVEUlmRU1&#xA;VmLADagxVEQ2f5oTQxzR+YtDMcih0P6DvBswqP8ApbYqgtGf8x79btLbzHpJayuZLe5W40C/jdZC&#xA;FmoA+qrVeEqlSNqYqteb8w4vMMekP5m0cahdWpuYYjoV76Rihfi7K36V48gZV5b/AMvtiqG802fm&#xA;iGLS5fNHmXS102LVbCVYbLR7qK4mmiuUkjiR21G5pyKfEfTPFasdgTir0XFXYq7FXYq7FXYqsngh&#xA;uIJIJ0WWGVSksbgMrKwoysD1BGKqOnabY6bZx2VjCsFtFyKRrXq7F2Yk1JZmYsxO5JqcVQln5X0G&#xA;zu0u7e0C3MbSOkrM7sHmZ3dviZty00hr25tT7TVVWah5R8u6jcz3N9ZrcTXKLHMXZyrIn2V48uI6&#xA;kGg3BIPU4qi9T0fTdTSFL+ETxwSLNHGxYLzQhl5KCAwBANGqMVQc+naPonli7trawQ6bawTymwG6&#xA;uKNK6/Fy+2ScVYx+Vt55buXvk0vQo9FuLeOGORUlE3KON5bZFLDoVFr9KGM9KUVZRL5R8ty6j+kp&#xA;rCOW+EiTLcSFnYNE5kj48iaKsjFwo+Hl8VK74qq6t5b0LV5YpdSso7qSFZEiaQGoWVSrDb2O3h2x&#xA;VXGkaYNLXSRbRjTUiW3W0A/diFFCrHx/l4ilPDFXWGkabp73MllbrA93K09yVr8cjsWZt/FmLbdy&#xA;T1JxVA6d5O8sabdpd2OnRQXMYokq1qAE9JBuT9iP4E/kSqrRTTFU5xV2KuxVLNS8s+X9TCC+sIZz&#xA;HMlyjFAGE0bB0eooahhXFUXd6fZXastxAknJDGWI+IKwIIDD4h17HFVlrpOm2tithDboLRCzCJhz&#xA;BZmLszF+RZmdixJ3J3xVZp2h6Vp1zeXNlbiCa/ZHuyrMQ7RrwU8SSq0Xb4QNqeGKtnRdL+s21yts&#xA;qTWbO9uY6oFaRPTYlVIVqqafEDiqQ+Z9V0y282eX7W701bueb1TbXoejWxMsMdClPiDu6MN/2C3V&#xA;RirJru1gu7Wa0uF529xG0UyVI5I4KsKggioPbFV0EMcEEcEQpHEoRASSQqig3NSfpxVDaXo+m6Wl&#xA;wlhD6CXU8l1OAzNymmNZH+ImnI77Yq3JpOnyapHqjxcr6GMwwylmIRGJJ4pXgCa/apWm1aYqs1nQ&#xA;tI1uzFnqtql3bCRJVjeu0kZqrAgggjFUdirsVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>433.000000</stDim:w>
            <stDim:h>202.599609</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -202.6 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 202.6 li
433 202.6 li
433 0 li
cp
clp
.5 202.1 mo
432.5 202.1 li
432.5 .5 li
.5 .5 li
.5 202.1 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
.5 202.1 mo
432.5 202.1 li
432.5 .5 li
.5 .5 li
.5 202.1 li
@
54.5 181.939 mo
194 181.939 li
194 20.6597 li
54.5 20.6597 li
54.5 181.939 li
f
gsave
54.5 181.939 mo
194 181.939 li
194 20.6396 li
54.5 20.6396 li
54.5 181.939 li
cp
clp
1.5 lw
54.5 77.1079 mo
56.2437 51.0366 li
57.9873 57.9927 li
59.7314 76.2119 li
61.4751 99.481 li
63.2188 99.1978 li
64.9624 139.979 li
66.7061 109.478 li
68.4502 139.242 li
70.1938 119.854 li
71.9375 119.942 li
73.6812 115.34 li
75.4248 146.379 li
77.1689 146.018 li
78.9126 117.757 li
80.6563 132.296 li
82.3999 123.698 li
84.1436 123.981 li
85.8877 130.285 li
87.6313 118.625 li
89.375 99.5918 li
91.1187 113.211 li
92.8623 102.545 li
94.6064 107.92 li
96.3501 109.274 li
98.0938 92.1309 li
99.8374 80.0127 li
101.581 87.7017 li
103.325 84.1196 li
105.069 86.3066 li
106.812 69.3726 li
108.556 80.4526 li
110.3 71.96 li
112.044 70.2979 li
113.787 72.5659 li
115.531 72.7817 li
117.275 64.6929 li
119.019 63.9219 li
120.763 63.731 li
122.506 64.458 li
124.25 63.189 li
125.994 65.7617 li
127.738 63.1279 li
129.481 62.646 li
131.225 60.2476 li
132.969 60.375 li
134.713 60.3428 li
136.456 61.791 li
138.2 60.584 li
139.944 60.7847 li
141.688 60.583 li
143.431 62.5366 li
145.175 62.417 li
146.919 61.543 li
148.663 61.814 li
150.406 60.3096 li
152.15 62.2056 li
153.894 60.5059 li
155.637 61.1099 li
157.381 58.5059 li
159.125 61.4546 li
160.869 60.8296 li
162.613 61.5566 li
164.356 60.5 li
166.1 61.8076 li
167.844 62.6367 li
169.588 62.7188 li
171.331 62.8105 li
173.075 62.6118 li
174.819 60.9829 li
176.562 61.5947 li
178.306 61.7109 li
180.05 62.4087 li
181.794 62.4517 li
183.538 62.5449 li
185.281 62.9077 li
187.025 63.1436 li
188.769 62.5039 li
190.513 63.7378 li
192.256 62.8618 li
194 63.4766 li
195.744 63.96 li
197.488 63.5386 li
199.231 62.8628 li
200.975 64.4868 li
202.719 63.5269 li
204.463 64.1558 li
206.206 64.46 li
207.95 63.8638 li
209.694 64.6797 li
211.438 65.3789 li
213.181 65.7529 li
214.925 65.3687 li
216.669 65.9878 li
218.413 65.792 li
220.156 65.981 li
221.9 66.4717 li
223.644 66.416 li
225.388 66.3569 li
227.131 66.9468 li
.883665 .769161 0 0 cmyk
@
54.5 66.5488 mo
56.2437 74.7329 li
57.9873 73.793 li
59.7314 74.5386 li
61.4751 74.7339 li
63.2188 74.4766 li
64.9624 72.9419 li
66.7061 75.5776 li
68.4502 74.564 li
70.1938 73.2207 li
71.9375 74.9526 li
73.6812 74.749 li
75.4248 75.3608 li
77.1689 74.4688 li
78.9126 74.4497 li
80.6563 75.2246 li
82.3999 74.4365 li
84.1436 74.854 li
85.8877 73.6738 li
87.6313 77.5059 li
89.375 73.3237 li
91.1187 74.5347 li
92.8623 75.4248 li
94.6064 75.4937 li
96.3501 76.7666 li
98.0938 76.9678 li
99.8374 77.6328 li
101.581 76.7588 li
103.325 75.9507 li
105.069 77.9839 li
106.812 75.7407 li
108.556 77.5249 li
110.3 77.8477 li
112.044 78.1616 li
113.787 79.6177 li
115.531 78.082 li
117.275 78.2666 li
119.019 78.0718 li
120.763 79.416 li
122.506 81.001 li
124.25 79.0859 li
125.994 79.7817 li
127.738 78.9307 li
129.481 78.8687 li
131.225 80.3828 li
132.969 79.5449 li
134.713 79.5947 li
136.456 79.814 li
138.2 79.6436 li
139.944 79.0259 li
141.688 79.999 li
143.431 79.2109 li
145.175 79.5029 li
146.919 79.3105 li
148.663 78.668 li
150.406 79.2896 li
152.15 79.1025 li
153.894 79.1426 li
155.637 79.1548 li
157.381 79.1699 li
159.125 79.1147 li
160.869 78.8809 li
162.613 78.439 li
164.356 78.4517 li
166.1 78.543 li
167.844 78.6807 li
169.588 78.2119 li
171.331 78.3599 li
173.075 78.2026 li
174.819 77.8188 li
176.562 78.2578 li
178.306 77.4287 li
180.05 77.8228 li
181.794 78.0029 li
183.538 77.9009 li
185.281 77.4878 li
187.025 77.4556 li
188.769 77.1499 li
190.513 77.1499 li
192.256 77.0737 li
194 76.9858 li
195.744 76.5757 li
197.488 76.564 li
199.231 76.5259 li
200.975 76.5308 li
202.719 76.5767 li
204.463 76.4248 li
206.206 76.3228 li
207.95 76.3867 li
209.694 76.041 li
211.438 76.2847 li
213.181 76.3076 li
214.925 75.9048 li
216.669 76.2246 li
218.413 76.0039 li
220.156 76.0508 li
221.9 75.9658 li
223.644 75.9468 li
225.388 75.8525 li
227.131 75.6855 li
.873045 .242161 1 .129244 cmyk
@
54.5 81.6318 mo
56.2437 76.3979 li
57.9873 75.9199 li
59.7314 76.564 li
61.4751 77.0576 li
63.2188 76.4487 li
64.9624 76.5327 li
66.7061 76.8169 li
68.4502 76.1758 li
70.1938 76.0166 li
71.9375 76.9077 li
73.6812 76.4629 li
75.4248 76.165 li
77.1689 76.7866 li
78.9126 75.7769 li
80.6563 76.375 li
82.3999 76.208 li
84.1436 76.9946 li
85.8877 77.1206 li
87.6313 76.5938 li
89.375 76.3789 li
91.1187 77.1865 li
92.8623 76.8618 li
94.6064 76.3906 li
96.3501 77.3579 li
98.0938 77.2666 li
99.8374 76.397 li
101.581 77.6606 li
103.325 77.2866 li
105.069 78.1719 li
106.812 77.7646 li
108.556 77.7437 li
110.3 78.0967 li
112.044 78.1157 li
113.787 78.1919 li
115.531 78.4507 li
117.275 78.5615 li
119.019 78.5078 li
120.763 80.2339 li
122.506 79.165 li
124.25 79.1616 li
125.994 78.1377 li
127.738 78.8628 li
129.481 78.7139 li
131.225 79.2266 li
132.969 79.4497 li
134.713 78.9199 li
136.456 78.9438 li
138.2 79.3877 li
139.944 79.2539 li
141.688 78.73 li
143.431 79.8257 li
145.175 78.9365 li
146.919 79.2656 li
148.663 77.9438 li
150.406 78.916 li
152.15 78.4688 li
153.894 77.8267 li
155.637 77.6025 li
157.381 77.7656 li
159.125 78.8047 li
160.869 77.9429 li
162.613 77.9937 li
164.356 78.2397 li
166.1 78.0557 li
167.844 78.1377 li
169.588 76.8726 li
171.331 76.939 li
173.075 77.7109 li
174.819 76.2217 li
176.562 76.6367 li
178.306 75.8506 li
180.05 75.7656 li
181.794 76.3257 li
183.538 75.8838 li
185.281 75.4468 li
187.025 75.4619 li
188.769 75.6006 li
190.513 75.4028 li
192.256 74.8706 li
194 75.3027 li
195.744 75.8418 li
197.488 74.4966 li
199.231 75.3198 li
200.975 74.29 li
202.719 74.9976 li
204.463 74.6616 li
206.206 73.251 li
207.95 73.8936 li
209.694 74.8657 li
211.438 74.1577 li
213.181 74.1118 li
214.925 74.3008 li
216.669 74.7837 li
218.413 74.0347 li
220.156 74.3599 li
221.9 73.958 li
223.644 73.6787 li
225.388 73.2769 li
227.131 73.7646 li
0 .993988 1 0 cmyk
@
54.5 77.1079 mo
56.2437 59.0649 li
57.9873 64.1206 li
59.7314 60.0176 li
61.4751 73.3936 li
63.2188 69.1836 li
64.9624 84.5356 li
66.7061 78.9907 li
68.4502 96.0576 li
70.1938 94.2969 li
71.9375 94.1836 li
73.6812 92.7046 li
75.4248 109.035 li
77.1689 114.333 li
78.9126 101.08 li
80.6563 113.393 li
82.3999 102.835 li
84.1436 103.39 li
85.8877 109.754 li
87.6313 102.371 li
89.375 92.6348 li
91.1187 101.74 li
92.8623 92.5317 li
94.6064 94.916 li
96.3501 100.645 li
98.0938 90.2729 li
99.8374 80.3535 li
101.581 85.4946 li
103.325 84.708 li
105.069 87.293 li
106.812 78.7056 li
108.556 81.3647 li
110.3 77.0928 li
112.044 75.3037 li
113.787 81.0947 li
115.531 81.0288 li
117.275 73.0586 li
119.019 71.9727 li
120.763 69.7476 li
122.506 71.0288 li
124.25 71.4399 li
125.994 70.3428 li
127.738 73.1816 li
129.481 71.5288 li
131.225 70.6909 li
132.969 70.1499 li
134.713 68.6035 li
136.456 68.9458 li
138.2 71.6997 li
139.944 70.8379 li
141.688 69.8789 li
143.431 70.4668 li
145.175 73.1167 li
146.919 72.0806 li
148.663 72.2217 li
150.406 70.0308 li
152.15 71.1528 li
153.894 71.5869 li
155.637 70.3208 li
157.381 67.249 li
159.125 69.1987 li
160.869 71.3218 li
162.613 70.4829 li
164.356 70.5576 li
166.1 70.7788 li
167.844 70.3867 li
169.588 70.499 li
171.331 70.6748 li
173.075 71.3657 li
174.819 68.1738 li
176.562 71.084 li
178.306 69.7329 li
180.05 70.0239 li
181.794 70.042 li
183.538 68.835 li
185.281 70.229 li
187.025 69.8647 li
188.769 70.6089 li
190.513 70.4946 li
192.256 69.8047 li
194 70.1948 li
195.744 70.6016 li
197.488 69.5308 li
199.231 70.4766 li
200.975 70.6548 li
202.719 69.7148 li
204.463 70.9268 li
206.206 70.314 li
207.95 69.7119 li
209.694 70.5337 li
211.438 69.625 li
213.181 70.79 li
214.925 70.5728 li
216.669 70.3369 li
218.413 70.8408 li
220.156 70.6646 li
221.9 71.7017 li
223.644 70.856 li
225.388 70.6738 li
227.131 71.1968 li
.713191 0 .306584 0 cmyk
@
54.5 79.936 mo
57.3286 77.1079 li
54.5 74.2793 li
51.6714 77.1079 li
54.5 79.936 li
.883665 .769161 0 0 cmyk
f
.5 lw
0 lc
54.5 79.936 mo
57.3286 77.1079 li
54.5 74.2793 li
51.6714 77.1079 li
54.5 79.936 li
0 0 0 1 cmyk
@
grestore
71.9375 122.771 mo
74.7661 119.942 li
71.9375 117.113 li
69.1089 119.942 li
71.9375 122.771 li
.883665 .769161 0 0 cmyk
f
.5 lw
0 lc
71.9375 122.771 mo
74.7661 119.942 li
71.9375 117.113 li
69.1089 119.942 li
71.9375 122.771 li
0 0 0 1 cmyk
@
89.375 102.42 mo
92.2036 99.5918 li
89.375 96.7632 li
86.5464 99.5918 li
89.375 102.42 li
.883665 .769161 0 0 cmyk
f
89.375 102.42 mo
92.2036 99.5918 li
89.375 96.7632 li
86.5464 99.5918 li
89.375 102.42 li
0 0 0 1 cmyk
@
106.812 72.2012 mo
109.641 69.3726 li
106.812 66.5444 li
103.983 69.3726 li
106.812 72.2012 li
.883665 .769161 0 0 cmyk
f
106.812 72.2012 mo
109.641 69.3726 li
106.812 66.5444 li
103.983 69.3726 li
106.812 72.2012 li
0 0 0 1 cmyk
@
124.25 66.0171 mo
127.079 63.189 li
124.25 60.3604 li
121.421 63.189 li
124.25 66.0171 li
.883665 .769161 0 0 cmyk
f
124.25 66.0171 mo
127.079 63.189 li
124.25 60.3604 li
121.421 63.189 li
124.25 66.0171 li
0 0 0 1 cmyk
@
141.688 63.4111 mo
144.517 60.583 li
141.688 57.7544 li
138.859 60.583 li
141.688 63.4111 li
.883665 .769161 0 0 cmyk
f
141.688 63.4111 mo
144.517 60.583 li
141.688 57.7544 li
138.859 60.583 li
141.688 63.4111 li
0 0 0 1 cmyk
@
159.125 64.2832 mo
161.954 61.4546 li
159.125 58.6265 li
156.296 61.4546 li
159.125 64.2832 li
.883665 .769161 0 0 cmyk
f
159.125 64.2832 mo
161.954 61.4546 li
159.125 58.6265 li
156.296 61.4546 li
159.125 64.2832 li
0 0 0 1 cmyk
@
gsave
54.5 181.939 mo
194 181.939 li
194 20.6396 li
54.5 20.6396 li
54.5 181.939 li
cp
clp
176.562 64.4233 mo
179.391 61.5947 li
176.562 58.7666 li
173.733 61.5947 li
176.562 64.4233 li
.883665 .769161 0 0 cmyk
f
176.562 64.4233 mo
179.391 61.5947 li
176.562 58.7666 li
173.733 61.5947 li
176.562 64.4233 li
0 0 0 1 cmyk
@
194 66.3052 mo
196.829 63.4766 li
194 60.6484 li
191.171 63.4766 li
194 66.3052 li
.883665 .769161 0 0 cmyk
f
194 66.3052 mo
196.829 63.4766 li
194 60.6484 li
191.171 63.4766 li
194 66.3052 li
0 0 0 1 cmyk
@
54.5 64.5488 mo
52.5 68.5488 li
56.5 68.5488 li
54.5 64.5488 li
.873045 .242161 1 .129244 cmyk
f
54.5 64.5488 mo
52.5 68.5488 li
56.5 68.5488 li
54.5 64.5488 li
0 0 0 1 cmyk
@
grestore
71.9375 72.9526 mo
69.9375 76.9526 li
73.9375 76.9526 li
71.9375 72.9526 li
.873045 .242161 1 .129244 cmyk
f
71.9375 72.9526 mo
69.9375 76.9526 li
73.9375 76.9526 li
71.9375 72.9526 li
0 0 0 1 cmyk
@
89.375 71.3237 mo
87.375 75.3237 li
91.375 75.3237 li
89.375 71.3237 li
.873045 .242161 1 .129244 cmyk
f
89.375 71.3237 mo
87.375 75.3237 li
91.375 75.3237 li
89.375 71.3237 li
0 0 0 1 cmyk
@
106.812 73.7407 mo
104.812 77.7407 li
108.812 77.7407 li
106.812 73.7407 li
.873045 .242161 1 .129244 cmyk
f
106.812 73.7407 mo
104.812 77.7407 li
108.812 77.7407 li
106.812 73.7407 li
0 0 0 1 cmyk
@
124.25 77.0859 mo
122.25 81.0859 li
126.25 81.0859 li
124.25 77.0859 li
.873045 .242161 1 .129244 cmyk
f
124.25 77.0859 mo
122.25 81.0859 li
126.25 81.0859 li
124.25 77.0859 li
0 0 0 1 cmyk
@
141.688 77.999 mo
139.688 81.999 li
143.688 81.999 li
141.688 77.999 li
.873045 .242161 1 .129244 cmyk
f
141.688 77.999 mo
139.688 81.999 li
143.688 81.999 li
141.688 77.999 li
0 0 0 1 cmyk
@
159.125 77.1147 mo
157.125 81.1147 li
161.125 81.1147 li
159.125 77.1147 li
.873045 .242161 1 .129244 cmyk
f
159.125 77.1147 mo
157.125 81.1147 li
161.125 81.1147 li
159.125 77.1147 li
0 0 0 1 cmyk
@
gsave
54.5 181.939 mo
194 181.939 li
194 20.6396 li
54.5 20.6396 li
54.5 181.939 li
cp
clp
176.562 76.2578 mo
174.562 80.2578 li
178.562 80.2578 li
176.562 76.2578 li
.873045 .242161 1 .129244 cmyk
f
176.562 76.2578 mo
174.562 80.2578 li
178.562 80.2578 li
176.562 76.2578 li
0 0 0 1 cmyk
@
194 74.9858 mo
192 78.9858 li
196 78.9858 li
194 74.9858 li
.873045 .242161 1 .129244 cmyk
f
194 74.9858 mo
192 78.9858 li
196 78.9858 li
194 74.9858 li
0 0 0 1 cmyk
@
54.5 83.6318 mo
55.0303 83.6318 55.5391 83.4209 55.9141 83.0459 cv
56.2891 82.6709 56.5 82.1621 56.5 81.6318 cv
56.5 81.1016 56.2891 80.5928 55.9141 80.2178 cv
55.5391 79.8423 55.0303 79.6318 54.5 79.6318 cv
53.9697 79.6318 53.4609 79.8423 53.0859 80.2178 cv
52.7109 80.5928 52.5 81.1016 52.5 81.6318 cv
52.5 82.1621 52.7109 82.6709 53.0859 83.0459 cv
53.4609 83.4209 53.9697 83.6318 54.5 83.6318 cv
54.5 83.6318 li
cp
0 .993988 1 0 cmyk
f
54.5 83.6318 mo
55.0303 83.6318 55.5391 83.4209 55.9141 83.0459 cv
56.2891 82.6709 56.5 82.1621 56.5 81.6318 cv
56.5 81.1016 56.2891 80.5928 55.9141 80.2178 cv
55.5391 79.8423 55.0303 79.6318 54.5 79.6318 cv
53.9697 79.6318 53.4609 79.8423 53.0859 80.2178 cv
52.7109 80.5928 52.5 81.1016 52.5 81.6318 cv
52.5 82.1621 52.7109 82.6709 53.0859 83.0459 cv
53.4609 83.4209 53.9697 83.6318 54.5 83.6318 cv
54.5 83.6318 li
cp
0 0 0 1 cmyk
@
grestore
71.9375 78.9077 mo
72.4678 78.9077 72.9766 78.6973 73.3516 78.3218 cv
73.7266 77.9468 73.9375 77.438 73.9375 76.9077 cv
73.9375 76.3774 73.7266 75.8687 73.3516 75.4937 cv
72.9766 75.1187 72.4678 74.9077 71.9375 74.9077 cv
71.4072 74.9077 70.8984 75.1187 70.5234 75.4937 cv
70.1484 75.8687 69.9375 76.3774 69.9375 76.9077 cv
69.9375 77.438 70.1484 77.9468 70.5234 78.3218 cv
70.8984 78.6973 71.4072 78.9077 71.9375 78.9077 cv
71.9375 78.9077 li
cp
0 .993988 1 0 cmyk
f
71.9375 78.9077 mo
72.4678 78.9077 72.9766 78.6973 73.3516 78.3218 cv
73.7266 77.9468 73.9375 77.438 73.9375 76.9077 cv
73.9375 76.3774 73.7266 75.8687 73.3516 75.4937 cv
72.9766 75.1187 72.4678 74.9077 71.9375 74.9077 cv
71.4072 74.9077 70.8984 75.1187 70.5234 75.4937 cv
70.1484 75.8687 69.9375 76.3774 69.9375 76.9077 cv
69.9375 77.438 70.1484 77.9468 70.5234 78.3218 cv
70.8984 78.6973 71.4072 78.9077 71.9375 78.9077 cv
71.9375 78.9077 li
cp
0 0 0 1 cmyk
@
89.375 78.3789 mo
89.9053 78.3789 90.4141 78.168 90.7891 77.793 cv
91.1641 77.418 91.375 76.9092 91.375 76.3789 cv
91.375 75.8486 91.1641 75.3398 90.7891 74.9644 cv
90.4141 74.5894 89.9053 74.3789 89.375 74.3789 cv
88.8447 74.3789 88.3359 74.5894 87.9609 74.9644 cv
87.5859 75.3398 87.375 75.8486 87.375 76.3789 cv
87.375 76.9092 87.5859 77.418 87.9609 77.793 cv
88.3359 78.168 88.8447 78.3789 89.375 78.3789 cv
89.375 78.3789 li
cp
0 .993988 1 0 cmyk
f
89.375 78.3789 mo
89.9053 78.3789 90.4141 78.168 90.7891 77.793 cv
91.1641 77.418 91.375 76.9092 91.375 76.3789 cv
91.375 75.8486 91.1641 75.3398 90.7891 74.9644 cv
90.4141 74.5894 89.9053 74.3789 89.375 74.3789 cv
88.8447 74.3789 88.3359 74.5894 87.9609 74.9644 cv
87.5859 75.3398 87.375 75.8486 87.375 76.3789 cv
87.375 76.9092 87.5859 77.418 87.9609 77.793 cv
88.3359 78.168 88.8447 78.3789 89.375 78.3789 cv
89.375 78.3789 li
cp
0 0 0 1 cmyk
@
106.812 79.7646 mo
107.342 79.7646 107.851 79.5542 108.226 79.1792 cv
108.601 78.8037 108.812 78.2949 108.812 77.7646 cv
108.812 77.2344 108.601 76.7256 108.226 76.3506 cv
107.851 75.9756 107.342 75.7646 106.812 75.7646 cv
106.282 75.7646 105.773 75.9756 105.398 76.3506 cv
105.023 76.7256 104.812 77.2344 104.812 77.7646 cv
104.812 78.2949 105.023 78.8037 105.398 79.1792 cv
105.773 79.5542 106.282 79.7646 106.812 79.7646 cv
106.812 79.7646 li
cp
0 .993988 1 0 cmyk
f
106.812 79.7646 mo
107.342 79.7646 107.851 79.5542 108.226 79.1792 cv
108.601 78.8037 108.812 78.2949 108.812 77.7646 cv
108.812 77.2344 108.601 76.7256 108.226 76.3506 cv
107.851 75.9756 107.342 75.7646 106.812 75.7646 cv
106.282 75.7646 105.773 75.9756 105.398 76.3506 cv
105.023 76.7256 104.812 77.2344 104.812 77.7646 cv
104.812 78.2949 105.023 78.8037 105.398 79.1792 cv
105.773 79.5542 106.282 79.7646 106.812 79.7646 cv
106.812 79.7646 li
cp
0 0 0 1 cmyk
@
124.25 81.1616 mo
124.78 81.1616 125.289 80.9512 125.664 80.5762 cv
126.039 80.2012 126.25 79.6924 126.25 79.1616 cv
126.25 78.6313 126.039 78.1226 125.664 77.7476 cv
125.289 77.3726 124.78 77.1616 124.25 77.1616 cv
123.72 77.1616 123.211 77.3726 122.836 77.7476 cv
122.461 78.1226 122.25 78.6313 122.25 79.1616 cv
122.25 79.6924 122.461 80.2012 122.836 80.5762 cv
123.211 80.9512 123.72 81.1616 124.25 81.1616 cv
124.25 81.1616 li
cp
0 .993988 1 0 cmyk
f
124.25 81.1616 mo
124.78 81.1616 125.289 80.9512 125.664 80.5762 cv
126.039 80.2012 126.25 79.6924 126.25 79.1616 cv
126.25 78.6313 126.039 78.1226 125.664 77.7476 cv
125.289 77.3726 124.78 77.1616 124.25 77.1616 cv
123.72 77.1616 123.211 77.3726 122.836 77.7476 cv
122.461 78.1226 122.25 78.6313 122.25 79.1616 cv
122.25 79.6924 122.461 80.2012 122.836 80.5762 cv
123.211 80.9512 123.72 81.1616 124.25 81.1616 cv
124.25 81.1616 li
cp
0 0 0 1 cmyk
@
141.688 80.73 mo
142.218 80.73 142.727 80.519 143.102 80.144 cv
143.477 79.769 143.688 79.2603 143.688 78.73 cv
143.688 78.1992 143.477 77.6904 143.102 77.3154 cv
142.727 76.9404 142.218 76.73 141.688 76.73 cv
141.158 76.73 140.649 76.9404 140.274 77.3154 cv
139.899 77.6904 139.688 78.1992 139.688 78.73 cv
139.688 79.2603 139.899 79.769 140.274 80.144 cv
140.649 80.519 141.158 80.73 141.688 80.73 cv
141.688 80.73 li
cp
0 .993988 1 0 cmyk
f
141.688 80.73 mo
142.218 80.73 142.727 80.519 143.102 80.144 cv
143.477 79.769 143.688 79.2603 143.688 78.73 cv
143.688 78.1992 143.477 77.6904 143.102 77.3154 cv
142.727 76.9404 142.218 76.73 141.688 76.73 cv
141.158 76.73 140.649 76.9404 140.274 77.3154 cv
139.899 77.6904 139.688 78.1992 139.688 78.73 cv
139.688 79.2603 139.899 79.769 140.274 80.144 cv
140.649 80.519 141.158 80.73 141.688 80.73 cv
141.688 80.73 li
cp
0 0 0 1 cmyk
@
159.125 80.8047 mo
159.655 80.8047 160.164 80.5942 160.539 80.2188 cv
160.914 79.8438 161.125 79.335 161.125 78.8047 cv
161.125 78.2744 160.914 77.7656 160.539 77.3906 cv
160.164 77.0156 159.655 76.8047 159.125 76.8047 cv
158.595 76.8047 158.086 77.0156 157.711 77.3906 cv
157.336 77.7656 157.125 78.2744 157.125 78.8047 cv
157.125 79.335 157.336 79.8438 157.711 80.2188 cv
158.086 80.5942 158.595 80.8047 159.125 80.8047 cv
159.125 80.8047 li
cp
0 .993988 1 0 cmyk
f
159.125 80.8047 mo
159.655 80.8047 160.164 80.5942 160.539 80.2188 cv
160.914 79.8438 161.125 79.335 161.125 78.8047 cv
161.125 78.2744 160.914 77.7656 160.539 77.3906 cv
160.164 77.0156 159.655 76.8047 159.125 76.8047 cv
158.595 76.8047 158.086 77.0156 157.711 77.3906 cv
157.336 77.7656 157.125 78.2744 157.125 78.8047 cv
157.125 79.335 157.336 79.8438 157.711 80.2188 cv
158.086 80.5942 158.595 80.8047 159.125 80.8047 cv
159.125 80.8047 li
cp
0 0 0 1 cmyk
@
gsave
54.5 181.939 mo
194 181.939 li
194 20.6396 li
54.5 20.6396 li
54.5 181.939 li
cp
clp
176.562 78.6367 mo
177.092 78.6367 177.601 78.4263 177.976 78.0508 cv
178.351 77.6758 178.562 77.167 178.562 76.6367 cv
178.562 76.1064 178.351 75.5977 177.976 75.2227 cv
177.601 74.8477 177.092 74.6367 176.562 74.6367 cv
176.032 74.6367 175.523 74.8477 175.148 75.2227 cv
174.772 75.5977 174.562 76.1064 174.562 76.6367 cv
174.562 77.167 174.772 77.6758 175.148 78.0508 cv
175.523 78.4263 176.032 78.6367 176.562 78.6367 cv
176.562 78.6367 li
cp
0 .993988 1 0 cmyk
f
176.562 78.6367 mo
177.092 78.6367 177.601 78.4263 177.976 78.0508 cv
178.351 77.6758 178.562 77.167 178.562 76.6367 cv
178.562 76.1064 178.351 75.5977 177.976 75.2227 cv
177.601 74.8477 177.092 74.6367 176.562 74.6367 cv
176.032 74.6367 175.523 74.8477 175.148 75.2227 cv
174.772 75.5977 174.562 76.1064 174.562 76.6367 cv
174.562 77.167 174.772 77.6758 175.148 78.0508 cv
175.523 78.4263 176.032 78.6367 176.562 78.6367 cv
176.562 78.6367 li
cp
0 0 0 1 cmyk
@
194 77.3027 mo
194.53 77.3027 195.039 77.0918 195.414 76.7168 cv
195.789 76.3418 196 75.833 196 75.3027 cv
196 74.7725 195.789 74.2637 195.414 73.8887 cv
195.039 73.5137 194.53 73.3027 194 73.3027 cv
193.47 73.3027 192.961 73.5137 192.586 73.8887 cv
192.211 74.2637 192 74.7725 192 75.3027 cv
192 75.833 192.211 76.3418 192.586 76.7168 cv
192.961 77.0918 193.47 77.3027 194 77.3027 cv
194 77.3027 li
cp
0 .993988 1 0 cmyk
f
194 77.3027 mo
194.53 77.3027 195.039 77.0918 195.414 76.7168 cv
195.789 76.3418 196 75.833 196 75.3027 cv
196 74.7725 195.789 74.2637 195.414 73.8887 cv
195.039 73.5137 194.53 73.3027 194 73.3027 cv
193.47 73.3027 192.961 73.5137 192.586 73.8887 cv
192.211 74.2637 192 74.7725 192 75.3027 cv
192 75.833 192.211 76.3418 192.586 76.7168 cv
192.961 77.0918 193.47 77.3027 194 77.3027 cv
194 77.3027 li
cp
0 0 0 1 cmyk
@
54.5 75.1079 mo
54.0508 76.4897 li
52.5977 76.4897 li
53.7734 77.3438 li
53.3242 78.7256 li
54.5 77.8716 li
55.6758 78.7256 li
55.2266 77.3438 li
56.4023 76.4897 li
54.9492 76.4897 li
54.5 75.1079 li
.713191 0 .306584 0 cmyk
f
54.5 75.1079 mo
54.0508 76.4897 li
52.5977 76.4897 li
53.7734 77.3438 li
53.3242 78.7256 li
54.5 77.8716 li
55.6758 78.7256 li
55.2266 77.3438 li
56.4023 76.4897 li
54.9492 76.4897 li
54.5 75.1079 li
0 0 0 1 cmyk
@
grestore
71.9375 92.1836 mo
71.4883 93.5659 li
70.0352 93.5659 li
71.2109 94.4199 li
70.7617 95.8018 li
71.9375 94.9478 li
73.1133 95.8018 li
72.6641 94.4199 li
73.8398 93.5659 li
72.3867 93.5659 li
71.9375 92.1836 li
.713191 0 .306584 0 cmyk
f
71.9375 92.1836 mo
71.4883 93.5659 li
70.0352 93.5659 li
71.2109 94.4199 li
70.7617 95.8018 li
71.9375 94.9478 li
73.1133 95.8018 li
72.6641 94.4199 li
73.8398 93.5659 li
72.3867 93.5659 li
71.9375 92.1836 li
0 0 0 1 cmyk
@
89.375 90.6348 mo
88.9258 92.0166 li
87.4727 92.0166 li
88.6484 92.8711 li
88.1992 94.2529 li
89.375 93.3989 li
90.5508 94.2529 li
90.1016 92.8711 li
91.2773 92.0166 li
89.8242 92.0166 li
89.375 90.6348 li
.713191 0 .306584 0 cmyk
f
89.375 90.6348 mo
88.9258 92.0166 li
87.4727 92.0166 li
88.6484 92.8711 li
88.1992 94.2529 li
89.375 93.3989 li
90.5508 94.2529 li
90.1016 92.8711 li
91.2773 92.0166 li
89.8242 92.0166 li
89.375 90.6348 li
0 0 0 1 cmyk
@
106.812 76.7056 mo
106.363 78.0879 li
104.91 78.0879 li
106.085 78.9419 li
105.636 80.3237 li
106.812 79.4697 li
107.987 80.3237 li
107.539 78.9419 li
108.714 78.0879 li
107.261 78.0879 li
106.812 76.7056 li
.713191 0 .306584 0 cmyk
f
106.812 76.7056 mo
106.363 78.0879 li
104.91 78.0879 li
106.085 78.9419 li
105.636 80.3237 li
106.812 79.4697 li
107.987 80.3237 li
107.539 78.9419 li
108.714 78.0879 li
107.261 78.0879 li
106.812 76.7056 li
0 0 0 1 cmyk
@
124.25 69.4399 mo
123.801 70.8218 li
122.348 70.8218 li
123.523 71.6758 li
123.074 73.0576 li
124.25 72.2036 li
125.426 73.0576 li
124.977 71.6758 li
126.152 70.8218 li
124.699 70.8218 li
124.25 69.4399 li
.713191 0 .306584 0 cmyk
f
124.25 69.4399 mo
123.801 70.8218 li
122.348 70.8218 li
123.523 71.6758 li
123.074 73.0576 li
124.25 72.2036 li
125.426 73.0576 li
124.977 71.6758 li
126.152 70.8218 li
124.699 70.8218 li
124.25 69.4399 li
0 0 0 1 cmyk
@
141.688 67.8789 mo
141.239 69.2607 li
139.786 69.2607 li
140.961 70.1147 li
140.512 71.4971 li
141.688 70.6426 li
142.864 71.4971 li
142.415 70.1147 li
143.59 69.2607 li
142.137 69.2607 li
141.688 67.8789 li
.713191 0 .306584 0 cmyk
f
141.688 67.8789 mo
141.239 69.2607 li
139.786 69.2607 li
140.961 70.1147 li
140.512 71.4971 li
141.688 70.6426 li
142.864 71.4971 li
142.415 70.1147 li
143.59 69.2607 li
142.137 69.2607 li
141.688 67.8789 li
0 0 0 1 cmyk
@
159.125 67.1987 mo
158.676 68.5806 li
157.223 68.5806 li
158.398 69.4351 li
157.949 70.8169 li
159.125 69.9629 li
160.301 70.8169 li
159.852 69.4351 li
161.027 68.5806 li
159.574 68.5806 li
159.125 67.1987 li
.713191 0 .306584 0 cmyk
f
159.125 67.1987 mo
158.676 68.5806 li
157.223 68.5806 li
158.398 69.4351 li
157.949 70.8169 li
159.125 69.9629 li
160.301 70.8169 li
159.852 69.4351 li
161.027 68.5806 li
159.574 68.5806 li
159.125 67.1987 li
0 0 0 1 cmyk
@
gsave
54.5 181.939 mo
194 181.939 li
194 20.6396 li
54.5 20.6396 li
54.5 181.939 li
cp
clp
176.562 69.084 mo
176.113 70.4658 li
174.66 70.4658 li
175.835 71.3198 li
175.386 72.7017 li
176.562 71.8477 li
177.737 72.7017 li
177.289 71.3198 li
178.464 70.4658 li
177.011 70.4658 li
176.562 69.084 li
.713191 0 .306584 0 cmyk
f
176.562 69.084 mo
176.113 70.4658 li
174.66 70.4658 li
175.835 71.3198 li
175.386 72.7017 li
176.562 71.8477 li
177.737 72.7017 li
177.289 71.3198 li
178.464 70.4658 li
177.011 70.4658 li
176.562 69.084 li
0 0 0 1 cmyk
@
194 68.1948 mo
193.551 69.5767 li
192.098 69.5767 li
193.273 70.4307 li
192.824 71.813 li
194 70.9585 li
195.176 71.813 li
194.727 70.4307 li
195.902 69.5767 li
194.449 69.5767 li
194 68.1948 li
.713191 0 .306584 0 cmyk
f
194 68.1948 mo
193.551 69.5767 li
192.098 69.5767 li
193.273 70.4307 li
192.824 71.813 li
194 70.9585 li
195.176 71.813 li
194.727 70.4307 li
195.902 69.5767 li
194.449 69.5767 li
194 68.1948 li
0 0 0 1 cmyk
@
1.5 lw
[6 6 ] 0 dsh
54.5 66.7749 mo
56.2437 30.584 li
57.9873 41.6318 li
59.7314 56.5259 li
61.4751 93.3896 li
63.2188 88.6099 li
64.9624 143.212 li
66.7061 109.815 li
68.4502 155.602 li
70.1938 133.102 li
71.9375 134.853 li
73.6812 128.547 li
75.4248 176.513 li
77.1689 180.588 li
78.9126 139.005 li
80.6563 166.661 li
82.3999 146.71 li
84.1436 148.005 li
85.8877 159.499 li
87.6313 144.261 li
89.375 111.299 li
91.1187 135.274 li
92.8623 116.274 li
94.6064 124.078 li
96.3501 132.483 li
98.0938 105.164 li
99.8374 83.749 li
101.581 95.7666 li
103.325 90.5718 li
105.069 97.4219 li
106.812 69.6377 li
108.556 85.1587 li
110.3 72.7339 li
112.044 69.5977 li
113.787 79.1167 li
115.531 77.7446 li
117.275 61.875 li
119.019 59.8198 li
120.763 58.834 li
122.506 62.375 li
124.25 59.6016 li
125.994 61.7227 li
127.738 61.1128 li
129.481 58.9067 li
131.225 57.2119 li
132.969 55.9717 li
134.713 54.416 li
136.456 56.4258 li
138.2 57.8257 li
139.944 56.541 li
141.688 56.3257 li
143.431 58.1348 li
145.175 60.9116 li
146.919 58.8267 li
148.663 58.5298 li
150.406 55.5049 li
152.15 58.3149 li
153.894 57.0566 li
155.637 56.3936 li
157.381 50.7417 li
159.125 55.6377 li
160.869 56.8599 li
162.613 56.3066 li
164.356 55.3506 li
166.1 56.9609 li
167.844 57.5396 li
169.588 57.2017 li
171.331 57.6206 li
173.075 57.9946 li
174.819 52.7158 li
176.562 56.6968 li
178.306 54.5938 li
180.05 55.9727 li
181.794 56.2407 li
183.538 55.0039 li
185.281 56.3257 li
187.025 56.167 li
188.769 55.9717 li
190.513 57.082 li
192.256 55.4126 li
194 56.3506 li
195.744 56.8579 li
197.488 55.2866 li
199.231 55.5596 li
200.975 57.3149 li
202.719 55.4966 li
204.463 57.1689 li
206.206 56.688 li
207.95 55.5859 li
209.694 56.9268 li
211.438 56.9248 li
213.181 58.4849 li
214.925 57.4897 li
216.669 58.2168 li
218.413 58.2676 li
220.156 58.3428 li
221.9 59.7656 li
223.644 58.8306 li
225.388 58.4756 li
227.131 59.4468 li
.385412 .90045 0 0 cmyk
@
1 lw
54.5 77.1079 mo
194 77.1079 li
0 0 0 1 cmyk
@
grestore
54.5 20.6597 mo
54.5 24.6597 li
54.5 181.939 mo
54.5 177.939 li
@
55.124 191.884 mo
54.4839 191.884 53.9878 191.62 53.6362 191.092 cv
53.2842 190.563 53.1079 189.828 53.1079 188.868 cv
53.1079 187.916 53.2842 187.172 53.6362 186.644 cv
53.9878 186.116 54.4839 185.844 55.124 185.844 cv
55.7559 185.844 56.252 186.116 56.604 186.644 cv
56.9561 187.172 57.1401 187.916 57.1401 188.868 cv
57.1401 189.828 56.9561 190.563 56.604 191.092 cv
56.252 191.62 55.7559 191.884 55.124 191.884 cv
55.124 191.884 li
cp
55.124 191.508 mo
55.5239 191.508 55.8198 191.292 56.02 190.852 cv
56.2119 190.42 56.3159 189.756 56.3159 188.868 cv
56.3159 187.987 56.2119 187.324 56.02 186.884 cv
55.8198 186.452 55.5239 186.228 55.124 186.228 cv
54.7241 186.228 54.4199 186.452 54.228 186.884 cv
54.0278 187.324 53.9321 187.987 53.9321 188.868 cv
53.9321 189.756 54.0278 190.42 54.228 190.852 cv
54.4199 191.292 54.7241 191.508 55.124 191.508 cv
ef
71.9375 20.6597 mo
71.9375 24.6597 li
71.9375 181.939 mo
71.9375 177.939 li
@
68.8359 191.78 mo
68.8359 191.364 li
69.8521 191.364 li
69.8521 186.516 li
68.6758 187.275 li
68.6758 186.764 li
70.1001 185.844 li
70.6362 185.844 li
70.6362 191.364 li
71.6519 191.364 li
71.6519 191.78 li
68.8359 191.78 li
68.8359 191.78 li
cp
ef
75.2842 191.884 mo
74.644 191.884 74.1479 191.62 73.7959 191.092 cv
73.4438 190.563 73.2681 189.828 73.2681 188.868 cv
73.2681 187.916 73.4438 187.172 73.7959 186.644 cv
74.1479 186.116 74.644 185.844 75.2842 185.844 cv
75.916 185.844 76.4121 186.116 76.7642 186.644 cv
77.1162 187.172 77.2998 187.916 77.2998 188.868 cv
77.2998 189.828 77.1162 190.563 76.7642 191.092 cv
76.4121 191.62 75.916 191.884 75.2842 191.884 cv
75.2842 191.884 li
cp
75.2842 191.508 mo
75.6841 191.508 75.98 191.292 76.1802 190.852 cv
76.3721 190.42 76.4761 189.756 76.4761 188.868 cv
76.4761 187.987 76.3721 187.324 76.1802 186.884 cv
75.98 186.452 75.6841 186.228 75.2842 186.228 cv
74.8838 186.228 74.5801 186.452 74.3882 186.884 cv
74.188 187.324 74.0918 187.987 74.0918 188.868 cv
74.0918 189.756 74.188 190.42 74.3882 190.852 cv
74.5801 191.292 74.8838 191.508 75.2842 191.508 cv
ef
89.375 20.6597 mo
89.375 24.6597 li
89.375 181.939 mo
89.375 177.939 li
@
85.7642 187.34 mo
85.3242 187.34 li
85.3242 186.3 li
85.5962 186.155 85.876 186.044 86.1641 185.964 cv
86.4438 185.884 86.7241 185.844 86.9961 185.844 cv
87.604 185.844 88.084 185.996 88.436 186.284 cv
88.7881 186.58 88.9639 186.979 88.9639 187.483 cv
88.9639 188.06 88.564 188.74 87.7642 189.532 cv
87.7002 189.596 87.6602 189.636 87.6279 189.668 cv
86.1563 191.14 li
88.5879 191.14 li
88.5879 190.42 li
89.0439 190.42 li
89.0439 191.78 li
85.2842 191.78 li
85.2842 191.355 li
87.0518 189.588 li
87.436 189.204 87.7158 188.844 87.8838 188.516 cv
88.0518 188.188 88.1401 187.844 88.1401 187.483 cv
88.1401 187.092 88.0361 186.788 87.8281 186.563 cv
87.6201 186.34 87.3398 186.228 86.9878 186.228 cv
86.6118 186.228 86.3242 186.324 86.124 186.508 cv
85.916 186.691 85.7959 186.972 85.7642 187.34 cv
85.7642 187.34 li
cp
ef
92.564 191.884 mo
91.9238 191.884 91.4277 191.62 91.0762 191.092 cv
90.7241 190.563 90.5479 189.828 90.5479 188.868 cv
90.5479 187.916 90.7241 187.172 91.0762 186.644 cv
91.4277 186.116 91.9238 185.844 92.564 185.844 cv
93.1958 185.844 93.6919 186.116 94.0439 186.644 cv
94.396 187.172 94.5801 187.916 94.5801 188.868 cv
94.5801 189.828 94.396 190.563 94.0439 191.092 cv
93.6919 191.62 93.1958 191.884 92.564 191.884 cv
92.564 191.884 li
cp
92.564 191.508 mo
92.9639 191.508 93.2598 191.292 93.46 190.852 cv
93.6519 190.42 93.7559 189.756 93.7559 188.868 cv
93.7559 187.987 93.6519 187.324 93.46 186.884 cv
93.2598 186.452 92.9639 186.228 92.564 186.228 cv
92.1641 186.228 91.8599 186.452 91.668 186.884 cv
91.4678 187.324 91.3721 187.987 91.3721 188.868 cv
91.3721 189.756 91.4678 190.42 91.668 190.852 cv
91.8599 191.292 92.1641 191.508 92.564 191.508 cv
ef
106.812 20.6597 mo
106.812 24.6597 li
106.812 181.939 mo
106.812 177.939 li
@
103.036 186.195 mo
103.34 186.084 103.628 185.996 103.908 185.932 cv
104.188 185.876 104.452 185.844 104.7 185.844 cv
105.268 185.844 105.716 185.972 106.036 186.212 cv
106.356 186.46 106.516 186.804 106.516 187.235 cv
106.516 187.588 106.404 187.884 106.18 188.116 cv
105.956 188.355 105.644 188.516 105.244 188.596 cv
105.724 188.668 106.092 188.844 106.356 189.124 cv
106.62 189.403 106.756 189.764 106.756 190.204 cv
106.756 190.748 106.572 191.164 106.204 191.452 cv
105.836 191.74 105.316 191.884 104.628 191.884 cv
104.324 191.884 104.02 191.852 103.732 191.788 cv
103.444 191.731 103.156 191.636 102.868 191.5 cv
102.868 190.364 li
103.308 190.364 li
103.332 190.748 103.46 191.027 103.684 191.22 cv
103.908 191.412 104.228 191.508 104.644 191.508 cv
105.044 191.508 105.356 191.396 105.588 191.164 cv
105.812 190.932 105.932 190.611 105.932 190.212 cv
105.932 189.756 105.812 189.412 105.572 189.172 cv
105.332 188.939 104.988 188.819 104.532 188.819 cv
104.164 188.819 li
104.164 188.42 li
104.356 188.42 li
104.812 188.42 105.156 188.332 105.38 188.14 cv
105.604 187.948 105.724 187.668 105.724 187.284 cv
105.724 186.948 105.628 186.684 105.444 186.5 cv
105.252 186.324 104.988 186.228 104.636 186.228 cv
104.284 186.228 104.004 186.315 103.812 186.483 cv
103.62 186.651 103.508 186.899 103.476 187.22 cv
103.036 187.22 li
103.036 186.195 li
103.036 186.195 li
cp
ef
109.844 191.884 mo
109.204 191.884 108.708 191.62 108.356 191.092 cv
108.004 190.563 107.828 189.828 107.828 188.868 cv
107.828 187.916 108.004 187.172 108.356 186.644 cv
108.708 186.116 109.204 185.844 109.844 185.844 cv
110.476 185.844 110.972 186.116 111.324 186.644 cv
111.676 187.172 111.86 187.916 111.86 188.868 cv
111.86 189.828 111.676 190.563 111.324 191.092 cv
110.972 191.62 110.476 191.884 109.844 191.884 cv
109.844 191.884 li
cp
109.844 191.508 mo
110.244 191.508 110.54 191.292 110.74 190.852 cv
110.932 190.42 111.036 189.756 111.036 188.868 cv
111.036 187.987 110.932 187.324 110.74 186.884 cv
110.54 186.452 110.244 186.228 109.844 186.228 cv
109.444 186.228 109.14 186.452 108.948 186.884 cv
108.748 187.324 108.652 187.987 108.652 188.868 cv
108.652 189.756 108.748 190.42 108.948 190.852 cv
109.14 191.292 109.444 191.508 109.844 191.508 cv
ef
124.25 20.6597 mo
124.25 24.6597 li
124.25 181.939 mo
124.25 177.939 li
@
124.052 191.78 mo
121.396 191.78 li
121.396 191.364 li
122.332 191.364 li
122.332 190.22 li
119.788 190.22 li
119.788 189.796 li
122.34 185.844 li
123.116 185.844 li
123.116 189.804 li
124.228 189.804 li
124.228 190.22 li
123.116 190.22 li
123.116 191.364 li
124.052 191.364 li
124.052 191.78 li
124.052 191.78 li
cp
122.332 189.804 mo
122.332 186.7 li
120.34 189.804 li
122.332 189.804 li
ef
127.124 191.884 mo
126.484 191.884 125.988 191.62 125.636 191.092 cv
125.284 190.563 125.108 189.828 125.108 188.868 cv
125.108 187.916 125.284 187.172 125.636 186.644 cv
125.988 186.116 126.484 185.844 127.124 185.844 cv
127.756 185.844 128.252 186.116 128.604 186.644 cv
128.956 187.172 129.14 187.916 129.14 188.868 cv
129.14 189.828 128.956 190.563 128.604 191.092 cv
128.252 191.62 127.756 191.884 127.124 191.884 cv
127.124 191.884 li
cp
127.124 191.508 mo
127.524 191.508 127.82 191.292 128.02 190.852 cv
128.212 190.42 128.316 189.756 128.316 188.868 cv
128.316 187.987 128.212 187.324 128.02 186.884 cv
127.82 186.452 127.524 186.228 127.124 186.228 cv
126.724 186.228 126.42 186.452 126.228 186.884 cv
126.028 187.324 125.932 187.987 125.932 188.868 cv
125.932 189.756 126.028 190.42 126.228 190.852 cv
126.42 191.292 126.724 191.508 127.124 191.508 cv
ef
141.688 20.6597 mo
141.688 24.6597 li
141.688 181.939 mo
141.688 177.939 li
@
141.324 185.948 mo
141.324 186.588 li
138.652 186.588 li
138.652 188.26 li
138.78 188.164 138.94 188.1 139.124 188.052 cv
139.3 188.004 139.508 187.979 139.732 187.979 cv
140.356 187.979 140.852 188.155 141.22 188.508 cv
141.588 188.859 141.772 189.332 141.772 189.932 cv
141.772 190.556 141.588 191.036 141.22 191.372 cv
140.852 191.716 140.332 191.884 139.668 191.884 cv
139.396 191.884 139.124 191.852 138.844 191.788 cv
138.556 191.731 138.268 191.636 137.98 191.5 cv
137.98 190.364 li
138.42 190.364 li
138.444 190.74 138.564 191.027 138.772 191.22 cv
138.98 191.412 139.284 191.508 139.668 191.508 cv
140.076 191.508 140.388 191.372 140.612 191.1 cv
140.836 190.828 140.948 190.443 140.948 189.932 cv
140.948 189.428 140.836 189.044 140.62 188.771 cv
140.396 188.5 140.084 188.364 139.668 188.364 cv
139.428 188.364 139.22 188.412 139.044 188.492 cv
138.868 188.571 138.708 188.7 138.572 188.876 cv
138.236 188.876 li
138.236 185.948 li
141.324 185.948 li
141.324 185.948 li
cp
ef
144.884 191.884 mo
144.244 191.884 143.748 191.62 143.396 191.092 cv
143.044 190.563 142.868 189.828 142.868 188.868 cv
142.868 187.916 143.044 187.172 143.396 186.644 cv
143.748 186.116 144.244 185.844 144.884 185.844 cv
145.516 185.844 146.012 186.116 146.364 186.644 cv
146.716 187.172 146.9 187.916 146.9 188.868 cv
146.9 189.828 146.716 190.563 146.364 191.092 cv
146.012 191.62 145.516 191.884 144.884 191.884 cv
144.884 191.884 li
cp
144.884 191.508 mo
145.284 191.508 145.58 191.292 145.78 190.852 cv
145.972 190.42 146.076 189.756 146.076 188.868 cv
146.076 187.987 145.972 187.324 145.78 186.884 cv
145.58 186.452 145.284 186.228 144.884 186.228 cv
144.484 186.228 144.18 186.452 143.988 186.884 cv
143.788 187.324 143.692 187.987 143.692 188.868 cv
143.692 189.756 143.788 190.42 143.988 190.852 cv
144.18 191.292 144.484 191.508 144.884 191.508 cv
ef
159.125 20.6597 mo
159.125 24.6597 li
159.125 181.939 mo
159.125 177.939 li
@
155.924 188.571 mo
156.1 188.38 156.3 188.228 156.524 188.132 cv
156.748 188.036 156.996 187.987 157.284 187.987 cv
157.86 187.987 158.324 188.164 158.66 188.516 cv
158.996 188.868 159.164 189.34 159.164 189.939 cv
159.164 190.532 158.98 191.004 158.62 191.355 cv
158.252 191.708 157.772 191.884 157.164 191.884 cv
156.508 191.884 155.996 191.644 155.644 191.155 cv
155.292 190.668 155.116 189.964 155.116 189.052 cv
155.116 188.036 155.324 187.244 155.74 186.684 cv
156.156 186.124 156.748 185.844 157.516 185.844 cv
157.724 185.844 157.94 185.868 158.164 185.899 cv
158.388 185.939 158.62 185.996 158.86 186.076 cv
158.86 187.036 li
158.42 187.036 li
158.388 186.78 158.284 186.58 158.116 186.436 cv
157.948 186.3 157.724 186.228 157.436 186.228 cv
156.924 186.228 156.548 186.42 156.3 186.804 cv
156.052 187.188 155.924 187.78 155.924 188.571 cv
155.924 188.571 li
cp
157.196 191.508 mo
157.564 191.508 157.844 191.38 158.044 191.107 cv
158.236 190.836 158.34 190.452 158.34 189.939 cv
158.34 189.436 158.236 189.052 158.044 188.78 cv
157.844 188.508 157.564 188.372 157.196 188.372 cv
156.82 188.372 156.532 188.508 156.34 188.764 cv
156.148 189.027 156.052 189.403 156.052 189.892 cv
156.052 190.412 156.148 190.812 156.348 191.092 cv
156.54 191.372 156.828 191.508 157.196 191.508 cv
ef
162.164 191.884 mo
161.524 191.884 161.028 191.62 160.676 191.092 cv
160.324 190.563 160.148 189.828 160.148 188.868 cv
160.148 187.916 160.324 187.172 160.676 186.644 cv
161.028 186.116 161.524 185.844 162.164 185.844 cv
162.796 185.844 163.292 186.116 163.644 186.644 cv
163.996 187.172 164.18 187.916 164.18 188.868 cv
164.18 189.828 163.996 190.563 163.644 191.092 cv
163.292 191.62 162.796 191.884 162.164 191.884 cv
162.164 191.884 li
cp
162.164 191.508 mo
162.564 191.508 162.86 191.292 163.06 190.852 cv
163.252 190.42 163.356 189.756 163.356 188.868 cv
163.356 187.987 163.252 187.324 163.06 186.884 cv
162.86 186.452 162.564 186.228 162.164 186.228 cv
161.764 186.228 161.46 186.452 161.268 186.884 cv
161.068 187.324 160.972 187.987 160.972 188.868 cv
160.972 189.756 161.068 190.42 161.268 190.852 cv
161.46 191.292 161.764 191.508 162.164 191.508 cv
ef
176.562 20.6597 mo
176.562 24.6597 li
176.562 181.939 mo
176.562 177.939 li
@
176.612 186.348 mo
174.332 191.78 li
173.748 191.78 li
175.924 186.588 li
173.228 186.588 li
173.228 187.308 li
172.772 187.308 li
172.772 185.948 li
176.612 185.948 li
176.612 186.348 li
176.612 186.348 li
cp
ef
179.684 191.884 mo
179.044 191.884 178.548 191.62 178.196 191.092 cv
177.844 190.563 177.668 189.828 177.668 188.868 cv
177.668 187.916 177.844 187.172 178.196 186.644 cv
178.548 186.116 179.044 185.844 179.684 185.844 cv
180.316 185.844 180.812 186.116 181.164 186.644 cv
181.516 187.172 181.7 187.916 181.7 188.868 cv
181.7 189.828 181.516 190.563 181.164 191.092 cv
180.812 191.62 180.316 191.884 179.684 191.884 cv
179.684 191.884 li
cp
179.684 191.508 mo
180.084 191.508 180.38 191.292 180.58 190.852 cv
180.772 190.42 180.876 189.756 180.876 188.868 cv
180.876 187.987 180.772 187.324 180.58 186.884 cv
180.38 186.452 180.084 186.228 179.684 186.228 cv
179.284 186.228 178.98 186.452 178.788 186.884 cv
178.588 187.324 178.492 187.987 178.492 188.868 cv
178.492 189.756 178.588 190.42 178.788 190.852 cv
178.98 191.292 179.284 191.508 179.684 191.508 cv
ef
194 20.6597 mo
194 24.6597 li
194 181.939 mo
194 177.939 li
@
192.948 187.355 mo
192.948 187.004 192.852 186.724 192.676 186.523 cv
192.492 186.332 192.244 186.228 191.924 186.228 cv
191.604 186.228 191.348 186.332 191.172 186.523 cv
190.988 186.724 190.9 187.004 190.9 187.355 cv
190.9 187.716 190.988 187.996 191.172 188.188 cv
191.348 188.388 191.604 188.483 191.924 188.483 cv
192.244 188.483 192.492 188.388 192.676 188.188 cv
192.852 187.996 192.948 187.716 192.948 187.355 cv
192.948 187.355 li
cp
192.524 188.676 mo
192.964 188.74 193.308 188.899 193.556 189.164 cv
193.804 189.436 193.932 189.771 193.932 190.188 cv
193.932 190.731 193.756 191.155 193.412 191.443 cv
193.06 191.74 192.564 191.884 191.924 191.884 cv
191.276 191.884 190.78 191.74 190.436 191.443 cv
190.084 191.155 189.916 190.731 189.916 190.188 cv
189.916 189.771 190.036 189.436 190.284 189.164 cv
190.532 188.899 190.876 188.74 191.324 188.676 cv
190.924 188.611 190.628 188.46 190.42 188.228 cv
190.212 188.004 190.108 187.708 190.108 187.355 cv
190.108 186.892 190.268 186.523 190.588 186.252 cv
190.908 185.979 191.356 185.844 191.924 185.844 cv
192.484 185.844 192.932 185.979 193.252 186.252 cv
193.572 186.523 193.74 186.892 193.74 187.355 cv
193.74 187.708 193.628 188.004 193.42 188.228 cv
193.212 188.46 192.908 188.611 192.524 188.676 cv
193.108 190.188 mo
193.108 189.771 193.004 189.452 192.796 189.22 cv
192.588 188.987 192.292 188.868 191.924 188.868 cv
191.548 188.868 191.26 188.987 191.052 189.22 cv
190.844 189.452 190.74 189.771 190.74 190.188 cv
190.74 190.604 190.844 190.932 191.052 191.164 cv
191.26 191.396 191.548 191.508 191.924 191.508 cv
192.292 191.508 192.588 191.396 192.796 191.164 cv
193.004 190.932 193.108 190.604 193.108 190.188 cv
ef
196.964 191.884 mo
196.324 191.884 195.828 191.62 195.476 191.092 cv
195.124 190.563 194.948 189.828 194.948 188.868 cv
194.948 187.916 195.124 187.172 195.476 186.644 cv
195.828 186.116 196.324 185.844 196.964 185.844 cv
197.596 185.844 198.092 186.116 198.444 186.644 cv
198.796 187.172 198.98 187.916 198.98 188.868 cv
198.98 189.828 198.796 190.563 198.444 191.092 cv
198.092 191.62 197.596 191.884 196.964 191.884 cv
196.964 191.884 li
cp
196.964 191.508 mo
197.364 191.508 197.66 191.292 197.86 190.852 cv
198.052 190.42 198.156 189.756 198.156 188.868 cv
198.156 187.987 198.052 187.324 197.86 186.884 cv
197.66 186.452 197.364 186.228 196.964 186.228 cv
196.564 186.228 196.26 186.452 196.068 186.884 cv
195.868 187.324 195.772 187.987 195.772 188.868 cv
195.772 189.756 195.868 190.42 196.068 190.852 cv
196.26 191.292 196.564 191.508 196.964 191.508 cv
ef
124.922 198.098 mo
125.075 197.756 125.273 197.504 125.516 197.324 cv
125.759 197.152 126.038 197.063 126.362 197.063 cv
126.848 197.063 127.217 197.216 127.46 197.521 cv
127.694 197.828 127.82 198.277 127.82 198.89 cv
127.82 201.392 li
128.549 201.392 li
128.549 201.859 li
126.308 201.859 li
126.308 201.392 li
127.01 201.392 li
127.01 198.979 li
127.01 198.512 126.938 198.17 126.794 197.963 cv
126.65 197.765 126.425 197.657 126.101 197.657 cv
125.741 197.657 125.462 197.801 125.273 198.07 cv
125.084 198.341 124.994 198.736 124.994 199.259 cv
124.994 201.392 li
125.696 201.392 li
125.696 201.859 li
123.482 201.859 li
123.482 201.392 li
124.184 201.392 li
124.184 198.953 li
124.184 198.484 124.112 198.151 123.968 197.954 cv
123.824 197.756 123.599 197.657 123.275 197.657 cv
122.915 197.657 122.636 197.801 122.447 198.07 cv
122.258 198.341 122.168 198.736 122.168 199.259 cv
122.168 201.392 li
122.87 201.392 li
122.87 201.859 li
120.629 201.859 li
120.629 201.392 li
121.358 201.392 li
121.358 197.647 li
120.584 197.647 li
120.584 197.188 li
122.168 197.188 li
122.168 198.017 li
122.312 197.711 122.501 197.468 122.735 197.306 cv
122.969 197.144 123.23 197.063 123.527 197.063 cv
123.887 197.063 124.184 197.152 124.427 197.333 cv
124.67 197.513 124.832 197.773 124.922 198.098 cv
124.922 198.098 li
cp
ef
194 157.748 mo
190 157.748 li
54.5 157.748 mo
58.5 157.748 li
@
17.396 158.5 mo
17.3481 158.5 17.3159 158.483 17.2842 158.452 cv
17.252 158.42 17.2441 158.38 17.2441 158.34 cv
17.2441 158.308 17.252 158.268 17.2842 158.235 cv
17.3159 158.204 17.3481 158.18 17.396 158.18 cv
21.9878 158.18 li
22.0278 158.18 22.0601 158.204 22.0918 158.235 cv
22.1162 158.268 22.1318 158.308 22.1318 158.34 cv
22.1318 158.38 22.1162 158.42 22.0918 158.452 cv
22.0601 158.483 22.0278 158.5 21.9878 158.5 cv
17.396 158.5 li
17.396 158.5 li
cp
ef
23.564 160.34 mo
23.564 160.06 li
24.228 160.06 24.564 159.979 24.564 159.804 cv
24.564 155.604 li
24.2842 155.74 23.9321 155.804 23.5161 155.804 cv
23.5161 155.523 li
24.1641 155.523 24.6602 155.355 24.9961 155.012 cv
25.1079 155.012 li
25.124 155.012 25.1479 155.02 25.1641 155.036 cv
25.1802 155.052 25.188 155.067 25.188 155.084 cv
25.188 159.804 li
25.188 159.979 25.5161 160.06 26.188 160.06 cv
26.188 160.34 li
23.564 160.34 li
23.564 160.34 li
cp
ef
29.2759 160.107 mo
29.2759 160.067 29.2842 160.027 29.3159 159.996 cv
30.98 158.34 li
29.3159 156.676 li
29.2842 156.651 29.2759 156.62 29.2759 156.571 cv
29.2759 156.532 29.292 156.492 29.3242 156.46 cv
29.356 156.428 29.3882 156.412 29.436 156.412 cv
29.4678 156.412 29.5078 156.428 29.5562 156.46 cv
31.2119 158.116 li
32.8599 156.46 li
32.9082 156.428 32.9482 156.412 32.98 156.412 cv
33.02 156.412 33.0601 156.428 33.0918 156.46 cv
33.124 156.492 33.1401 156.532 33.1401 156.571 cv
33.1401 156.62 33.124 156.651 33.1001 156.676 cv
31.436 158.34 li
33.1001 159.996 li
33.124 160.027 33.1401 160.067 33.1401 160.107 cv
33.1401 160.155 33.124 160.188 33.0918 160.22 cv
33.0601 160.252 33.02 160.268 32.98 160.268 cv
32.9399 160.268 32.8999 160.252 32.8599 160.212 cv
31.2119 158.563 li
29.5562 160.212 li
29.5161 160.252 29.4761 160.268 29.436 160.268 cv
29.3882 160.268 29.356 160.252 29.3242 160.22 cv
29.292 160.188 29.2759 160.155 29.2759 160.107 cv
29.2759 160.107 li
cp
ef
34.124 160.34 mo
34.124 160.06 li
34.7881 160.06 35.124 159.979 35.124 159.804 cv
35.124 155.604 li
34.8438 155.74 34.4922 155.804 34.0762 155.804 cv
34.0762 155.523 li
34.7241 155.523 35.2202 155.355 35.5562 155.012 cv
35.668 155.012 li
35.6841 155.012 35.708 155.02 35.7241 155.036 cv
35.7402 155.052 35.748 155.067 35.748 155.084 cv
35.748 159.804 li
35.748 159.979 36.0762 160.06 36.748 160.06 cv
36.748 160.34 li
34.124 160.34 li
34.124 160.34 li
cp
ef
39.46 160.308 mo
39.7559 160.308 39.98 160.155 40.124 159.852 cv
40.2681 159.548 40.356 159.212 40.3882 158.844 cv
40.4199 158.476 40.4438 158.076 40.4438 157.66 cv
40.4438 157.26 40.4199 156.892 40.3882 156.556 cv
40.356 156.22 40.2681 155.908 40.124 155.636 cv
39.98 155.364 39.7559 155.22 39.46 155.22 cv
39.1558 155.22 38.9321 155.364 38.7881 155.636 cv
38.644 155.908 38.5479 156.22 38.5161 156.556 cv
38.4839 156.892 38.4678 157.26 38.4678 157.66 cv
38.4678 157.964 38.4678 158.244 38.4839 158.5 cv
38.5 158.764 38.54 159.036 38.604 159.315 cv
38.668 159.596 38.7642 159.828 38.9082 160.02 cv
39.0439 160.212 39.228 160.308 39.46 160.308 cv
39.46 160.308 li
cp
39.46 160.508 mo
38.8042 160.508 38.356 160.244 38.124 159.708 cv
37.8838 159.172 37.772 158.532 37.772 157.788 cv
37.772 157.324 37.812 156.892 37.8999 156.483 cv
37.98 156.076 38.1479 155.731 38.4038 155.443 cv
38.6519 155.155 39.0039 155.012 39.46 155.012 cv
39.812 155.012 40.1001 155.1 40.3242 155.268 cv
40.5479 155.443 40.7158 155.66 40.8359 155.932 cv
40.9482 156.204 41.0278 156.5 41.0762 156.812 cv
41.1162 157.124 41.1401 157.452 41.1401 157.788 cv
41.1401 158.252 41.0918 158.676 41.0122 159.076 cv
40.9238 159.476 40.7559 159.819 40.5078 160.092 cv
40.2598 160.364 39.9082 160.508 39.46 160.508 cv
ef
41.8711 155.691 mo
41.8374 155.691 41.8154 155.681 41.793 155.658 cv
41.7705 155.636 41.7646 155.607 41.7646 155.58 cv
41.7646 155.558 41.7705 155.529 41.793 155.507 cv
41.8154 155.484 41.8374 155.468 41.8711 155.468 cv
45.0854 155.468 li
45.1138 155.468 45.1362 155.484 45.1582 155.507 cv
45.1753 155.529 45.1865 155.558 45.1865 155.58 cv
45.1865 155.607 45.1753 155.636 45.1582 155.658 cv
45.1362 155.681 45.1138 155.691 45.0854 155.691 cv
41.8711 155.691 li
41.8711 155.691 li
cp
ef
46.1074 156.342 mo
46.1406 156.453 46.2026 156.554 46.2808 156.644 cv
46.3594 156.733 46.4546 156.801 46.5664 156.851 cv
46.6729 156.901 46.7847 156.924 46.9023 156.924 cv
47.1714 156.924 47.356 156.823 47.457 156.61 cv
47.5576 156.403 47.6138 156.151 47.6138 155.849 cv
47.6138 155.72 47.6079 155.613 47.6079 155.523 cv
47.6025 155.435 47.5913 155.351 47.5688 155.267 cv
47.5352 155.138 47.4736 155.025 47.3838 154.925 cv
47.2944 154.824 47.1934 154.773 47.0703 154.773 cv
46.9414 154.773 46.835 154.796 46.7456 154.829 cv
46.6558 154.868 46.5776 154.913 46.5215 154.964 cv
46.4658 155.02 46.415 155.07 46.3706 155.126 cv
46.3257 155.183 46.3032 155.216 46.292 155.216 cv
46.2305 155.216 li
46.2192 155.216 46.2026 155.21 46.1914 155.199 cv
46.1802 155.188 46.1743 155.177 46.1743 155.165 cv
46.1743 153.295 li
46.1743 153.284 46.1802 153.278 46.1914 153.267 cv
46.2026 153.256 46.2134 153.25 46.2305 153.25 cv
46.2471 153.25 li
46.4937 153.373 46.7622 153.43 47.0479 153.43 cv
47.3223 153.43 47.5913 153.373 47.8486 153.25 cv
47.8657 153.25 li
47.877 153.25 47.8882 153.256 47.8994 153.267 cv
47.9102 153.278 47.916 153.284 47.916 153.295 cv
47.916 153.346 li
47.916 153.368 47.9102 153.373 47.9048 153.373 cv
47.7759 153.541 47.6138 153.676 47.4233 153.771 cv
47.2329 153.866 47.0313 153.911 46.8296 153.911 cv
46.6782 153.911 46.5273 153.895 46.3706 153.85 cv
46.3706 154.908 li
46.4937 154.807 46.6001 154.74 46.7007 154.695 cv
46.7959 154.65 46.9189 154.628 47.0762 154.628 cv
47.2778 154.628 47.4624 154.689 47.625 154.807 cv
47.7871 154.931 47.9102 155.081 48 155.271 cv
48.0894 155.462 48.1343 155.658 48.1343 155.854 cv
48.1343 156.078 48.0786 156.285 47.9663 156.476 cv
47.8545 156.666 47.709 156.817 47.5186 156.93 cv
47.3281 157.041 47.1265 157.098 46.9023 157.098 cv
46.7178 157.098 46.5498 157.047 46.3926 156.957 cv
46.2358 156.868 46.1182 156.739 46.0288 156.576 cv
45.939 156.42 45.8999 156.246 45.8999 156.067 cv
45.8999 155.983 45.9224 155.916 45.9785 155.859 cv
46.0342 155.81 46.1016 155.781 46.1855 155.781 cv
46.2642 155.781 46.3369 155.81 46.3926 155.865 cv
46.4487 155.921 46.4766 155.988 46.4766 156.067 cv
46.4766 156.146 46.4487 156.213 46.3926 156.269 cv
46.3369 156.324 46.2642 156.353 46.1855 156.353 cv
46.1743 156.353 46.1577 156.353 46.1406 156.353 cv
46.124 156.353 46.1128 156.347 46.1074 156.342 cv
46.1074 156.342 li
cp
ef
194 117.428 mo
190 117.428 li
54.5 117.428 mo
58.5 117.428 li
@
17.396 118.18 mo
17.3481 118.18 17.3159 118.164 17.2842 118.132 cv
17.252 118.1 17.2441 118.06 17.2441 118.02 cv
17.2441 117.987 17.252 117.948 17.2842 117.916 cv
17.3159 117.884 17.3481 117.859 17.396 117.859 cv
21.9878 117.859 li
22.0278 117.859 22.0601 117.884 22.0918 117.916 cv
22.1162 117.948 22.1318 117.987 22.1318 118.02 cv
22.1318 118.06 22.1162 118.1 22.0918 118.132 cv
22.0601 118.164 22.0278 118.18 21.9878 118.18 cv
17.396 118.18 li
17.396 118.18 li
cp
ef
23.5161 119.107 mo
23.564 119.268 23.6519 119.412 23.7642 119.54 cv
23.876 119.668 24.0122 119.764 24.1719 119.836 cv
24.3242 119.908 24.4839 119.939 24.6519 119.939 cv
25.0361 119.939 25.2998 119.796 25.4438 119.492 cv
25.5879 119.195 25.668 118.836 25.668 118.403 cv
25.668 118.22 25.6602 118.067 25.6602 117.939 cv
25.6519 117.812 25.6357 117.691 25.604 117.571 cv
25.5562 117.388 25.4678 117.228 25.3398 117.084 cv
25.2119 116.939 25.0679 116.868 24.8921 116.868 cv
24.708 116.868 24.5562 116.899 24.4282 116.948 cv
24.2998 117.004 24.188 117.067 24.1079 117.14 cv
24.0278 117.22 23.9561 117.292 23.8921 117.372 cv
23.8281 117.452 23.7959 117.5 23.7798 117.5 cv
23.6919 117.5 li
23.6758 117.5 23.6519 117.492 23.6362 117.476 cv
23.6201 117.46 23.6118 117.443 23.6118 117.428 cv
23.6118 114.756 li
23.6118 114.74 23.6201 114.731 23.6362 114.716 cv
23.6519 114.7 23.668 114.691 23.6919 114.691 cv
23.7158 114.691 li
24.0679 114.868 24.4521 114.948 24.8599 114.948 cv
25.252 114.948 25.6357 114.868 26.0039 114.691 cv
26.0278 114.691 li
26.0439 114.691 26.0601 114.7 26.0762 114.716 cv
26.0918 114.731 26.1001 114.74 26.1001 114.756 cv
26.1001 114.828 li
26.1001 114.859 26.0918 114.868 26.084 114.868 cv
25.8999 115.107 25.668 115.3 25.396 115.436 cv
25.124 115.571 24.8359 115.636 24.5479 115.636 cv
24.332 115.636 24.1162 115.611 23.8921 115.548 cv
23.8921 117.06 li
24.0679 116.916 24.2202 116.819 24.3638 116.756 cv
24.5 116.691 24.6758 116.66 24.8999 116.66 cv
25.188 116.66 25.4521 116.748 25.6841 116.916 cv
25.916 117.092 26.0918 117.308 26.2202 117.58 cv
26.3481 117.852 26.4121 118.132 26.4121 118.412 cv
26.4121 118.731 26.332 119.027 26.1719 119.3 cv
26.0122 119.571 25.8042 119.788 25.5322 119.948 cv
25.2598 120.107 24.9722 120.188 24.6519 120.188 cv
24.3882 120.188 24.1479 120.116 23.9238 119.987 cv
23.7002 119.859 23.5322 119.676 23.4038 119.443 cv
23.2759 119.22 23.2202 118.972 23.2202 118.716 cv
23.2202 118.596 23.252 118.5 23.332 118.42 cv
23.4121 118.348 23.5078 118.308 23.6279 118.308 cv
23.7402 118.308 23.8438 118.348 23.9238 118.428 cv
24.0039 118.508 24.0439 118.604 24.0439 118.716 cv
24.0439 118.828 24.0039 118.924 23.9238 119.004 cv
23.8438 119.084 23.7402 119.124 23.6279 119.124 cv
23.6118 119.124 23.5879 119.124 23.564 119.124 cv
23.54 119.124 23.5239 119.116 23.5161 119.107 cv
23.5161 119.107 li
cp
ef
29.2759 119.788 mo
29.2759 119.748 29.2842 119.708 29.3159 119.676 cv
30.98 118.02 li
29.3159 116.355 li
29.2842 116.332 29.2759 116.3 29.2759 116.252 cv
29.2759 116.212 29.292 116.172 29.3242 116.14 cv
29.356 116.107 29.3882 116.092 29.436 116.092 cv
29.4678 116.092 29.5078 116.107 29.5562 116.14 cv
31.2119 117.796 li
32.8599 116.14 li
32.9082 116.107 32.9482 116.092 32.98 116.092 cv
33.02 116.092 33.0601 116.107 33.0918 116.14 cv
33.124 116.172 33.1401 116.212 33.1401 116.252 cv
33.1401 116.3 33.124 116.332 33.1001 116.355 cv
31.436 118.02 li
33.1001 119.676 li
33.124 119.708 33.1401 119.748 33.1401 119.788 cv
33.1401 119.836 33.124 119.868 33.0918 119.899 cv
33.0601 119.932 33.02 119.948 32.98 119.948 cv
32.9399 119.948 32.8999 119.932 32.8599 119.892 cv
31.2119 118.244 li
29.5562 119.892 li
29.5161 119.932 29.4761 119.948 29.436 119.948 cv
29.3882 119.948 29.356 119.932 29.3242 119.899 cv
29.292 119.868 29.2759 119.836 29.2759 119.788 cv
29.2759 119.788 li
cp
ef
34.124 120.02 mo
34.124 119.74 li
34.7881 119.74 35.124 119.66 35.124 119.483 cv
35.124 115.284 li
34.8438 115.42 34.4922 115.483 34.0762 115.483 cv
34.0762 115.204 li
34.7241 115.204 35.2202 115.036 35.5562 114.691 cv
35.668 114.691 li
35.6841 114.691 35.708 114.7 35.7241 114.716 cv
35.7402 114.731 35.748 114.748 35.748 114.764 cv
35.748 119.483 li
35.748 119.66 36.0762 119.74 36.748 119.74 cv
36.748 120.02 li
34.124 120.02 li
34.124 120.02 li
cp
ef
39.46 119.987 mo
39.7559 119.987 39.98 119.836 40.124 119.532 cv
40.2681 119.228 40.356 118.892 40.3882 118.523 cv
40.4199 118.155 40.4438 117.756 40.4438 117.34 cv
40.4438 116.939 40.4199 116.571 40.3882 116.235 cv
40.356 115.899 40.2681 115.588 40.124 115.315 cv
39.98 115.044 39.7559 114.899 39.46 114.899 cv
39.1558 114.899 38.9321 115.044 38.7881 115.315 cv
38.644 115.588 38.5479 115.899 38.5161 116.235 cv
38.4839 116.571 38.4678 116.939 38.4678 117.34 cv
38.4678 117.644 38.4678 117.924 38.4839 118.18 cv
38.5 118.443 38.54 118.716 38.604 118.996 cv
38.668 119.275 38.7642 119.508 38.9082 119.7 cv
39.0439 119.892 39.228 119.987 39.46 119.987 cv
39.46 119.987 li
cp
39.46 120.188 mo
38.8042 120.188 38.356 119.924 38.124 119.388 cv
37.8838 118.852 37.772 118.212 37.772 117.468 cv
37.772 117.004 37.812 116.571 37.8999 116.164 cv
37.98 115.756 38.1479 115.412 38.4038 115.124 cv
38.6519 114.836 39.0039 114.691 39.46 114.691 cv
39.812 114.691 40.1001 114.78 40.3242 114.948 cv
40.5479 115.124 40.7158 115.34 40.8359 115.611 cv
40.9482 115.884 41.0278 116.18 41.0762 116.492 cv
41.1162 116.804 41.1401 117.132 41.1401 117.468 cv
41.1401 117.932 41.0918 118.355 41.0122 118.756 cv
40.9238 119.155 40.7559 119.5 40.5078 119.771 cv
40.2598 120.044 39.9082 120.188 39.46 120.188 cv
ef
41.8711 115.372 mo
41.8374 115.372 41.8154 115.36 41.793 115.338 cv
41.7705 115.315 41.7646 115.288 41.7646 115.26 cv
41.7646 115.237 41.7705 115.209 41.793 115.187 cv
41.8154 115.165 41.8374 115.147 41.8711 115.147 cv
45.0854 115.147 li
45.1138 115.147 45.1362 115.165 45.1582 115.187 cv
45.1753 115.209 45.1865 115.237 45.1865 115.26 cv
45.1865 115.288 45.1753 115.315 45.1582 115.338 cv
45.1362 115.36 45.1138 115.372 45.0854 115.372 cv
41.8711 115.372 li
41.8711 115.372 li
cp
ef
47.02 116.604 mo
47.1655 116.604 47.2778 116.576 47.3672 116.509 cv
47.4512 116.441 47.5127 116.357 47.5576 116.245 cv
47.5967 116.139 47.625 116.032 47.6362 115.921 cv
47.647 115.809 47.6528 115.674 47.6528 115.512 cv
47.6528 115.299 47.6416 115.12 47.6191 114.969 cv
47.5967 114.823 47.5464 114.688 47.457 114.576 cv
47.3672 114.465 47.2271 114.403 47.0479 114.403 cv
46.8911 114.403 46.7681 114.459 46.6729 114.56 cv
46.5718 114.66 46.5049 114.789 46.46 114.946 cv
46.415 115.103 46.3926 115.249 46.3926 115.395 cv
46.3926 115.444 46.3926 115.483 46.3984 115.506 cv
46.3984 115.512 46.3984 115.518 46.3984 115.518 cv
46.3984 115.523 46.3926 115.528 46.3926 115.534 cv
46.3926 115.696 46.4097 115.859 46.4434 116.021 cv
46.4766 116.189 46.5386 116.324 46.6338 116.436 cv
46.7231 116.548 46.8521 116.604 47.02 116.604 cv
47.02 116.604 li
cp
47.02 116.777 mo
46.7847 116.777 46.5942 116.716 46.4375 116.599 cv
46.2808 116.475 46.1631 116.318 46.0791 116.122 cv
45.9951 115.926 45.939 115.719 45.9058 115.506 cv
45.8721 115.293 45.855 115.075 45.855 114.851 cv
45.855 114.56 45.9111 114.263 46.0288 113.961 cv
46.1406 113.664 46.3086 113.417 46.5327 113.222 cv
46.7568 113.031 47.02 112.931 47.3281 112.931 cv
47.4512 112.931 47.5688 112.958 47.6807 113.003 cv
47.793 113.054 47.877 113.126 47.9438 113.216 cv
48.0054 113.311 48.0391 113.423 48.0391 113.558 cv
48.0391 113.636 48.0112 113.697 47.9609 113.748 cv
47.9048 113.804 47.8433 113.826 47.7705 113.826 cv
47.6919 113.826 47.6304 113.804 47.5801 113.748 cv
47.5239 113.697 47.5015 113.636 47.5015 113.558 cv
47.5015 113.484 47.5239 113.423 47.5801 113.367 cv
47.6304 113.316 47.6919 113.288 47.7705 113.288 cv
47.7983 113.288 li
47.748 113.222 47.6807 113.177 47.5967 113.143 cv
47.5073 113.109 47.4175 113.093 47.3281 113.093 cv
47.2158 113.093 47.1094 113.12 47.0142 113.165 cv
46.9189 113.216 46.835 113.283 46.7568 113.367 cv
46.6782 113.451 46.6167 113.541 46.5664 113.642 cv
46.5103 113.742 46.4712 113.859 46.4434 113.988 cv
46.415 114.123 46.3984 114.24 46.3926 114.353 cv
46.3818 114.465 46.3818 114.61 46.3818 114.778 cv
46.4487 114.627 46.5386 114.504 46.6616 114.403 cv
46.7793 114.308 46.9136 114.258 47.0703 114.258 cv
47.2329 114.258 47.3838 114.291 47.5186 114.358 cv
47.6528 114.426 47.7705 114.521 47.8711 114.638 cv
47.9722 114.762 48.0449 114.896 48.1006 115.047 cv
48.1514 115.204 48.1792 115.354 48.1792 115.512 cv
48.1792 115.735 48.1289 115.943 48.0337 116.139 cv
47.9326 116.335 47.7983 116.492 47.6191 116.604 cv
47.4399 116.716 47.2441 116.777 47.02 116.777 cv
ef
194 77.1079 mo
190 77.1079 li
54.5 77.1079 mo
58.5 77.1079 li
@
48.5801 78.9478 mo
48.876 78.9478 49.1001 78.7959 49.2441 78.4917 cv
49.3882 78.188 49.4761 77.8516 49.5078 77.4839 cv
49.54 77.1157 49.564 76.7158 49.564 76.2998 cv
49.564 75.8999 49.54 75.5317 49.5078 75.1958 cv
49.4761 74.8599 49.3882 74.5479 49.2441 74.2759 cv
49.1001 74.0039 48.876 73.8599 48.5801 73.8599 cv
48.2759 73.8599 48.0518 74.0039 47.9082 74.2759 cv
47.7642 74.5479 47.668 74.8599 47.6362 75.1958 cv
47.604 75.5317 47.5879 75.8999 47.5879 76.2998 cv
47.5879 76.6035 47.5879 76.8838 47.604 77.1396 cv
47.6201 77.4038 47.6602 77.6758 47.7241 77.9556 cv
47.7881 78.2358 47.8838 78.4678 48.0278 78.6597 cv
48.1641 78.8516 48.3481 78.9478 48.5801 78.9478 cv
48.5801 78.9478 li
cp
48.5801 79.1479 mo
47.9238 79.1479 47.4761 78.8838 47.2441 78.3477 cv
47.0039 77.8115 46.8921 77.1719 46.8921 76.4277 cv
46.8921 75.9639 46.9321 75.5317 47.02 75.124 cv
47.1001 74.7158 47.2681 74.3716 47.5239 74.084 cv
47.772 73.7959 48.124 73.6519 48.5801 73.6519 cv
48.9321 73.6519 49.2202 73.7397 49.4438 73.9077 cv
49.668 74.084 49.8359 74.2998 49.9561 74.5718 cv
50.0679 74.8438 50.1479 75.1396 50.1958 75.4517 cv
50.2358 75.7637 50.2598 76.0918 50.2598 76.4277 cv
50.2598 76.8916 50.2119 77.3159 50.1318 77.7158 cv
50.0439 78.1157 49.876 78.46 49.6279 78.7319 cv
49.3799 79.0039 49.0278 79.1479 48.5801 79.1479 cv
ef
194 36.7876 mo
190 36.7876 li
54.5 36.7876 mo
58.5 36.7876 li
@
23.2759 38.4678 mo
23.3242 38.6279 23.4121 38.772 23.5239 38.8999 cv
23.6362 39.0278 23.772 39.124 23.9321 39.1958 cv
24.084 39.2676 24.2441 39.2998 24.4121 39.2998 cv
24.7959 39.2998 25.0601 39.1558 25.2041 38.8516 cv
25.3481 38.5557 25.4277 38.1958 25.4277 37.7637 cv
25.4277 37.5796 25.4199 37.4277 25.4199 37.2998 cv
25.4121 37.1719 25.396 37.0518 25.3638 36.9316 cv
25.3159 36.7476 25.228 36.5879 25.1001 36.4438 cv
24.9722 36.2998 24.8281 36.2275 24.6519 36.2275 cv
24.4678 36.2275 24.3159 36.2598 24.188 36.3076 cv
24.0601 36.3638 23.9482 36.4277 23.8682 36.5 cv
23.7881 36.5796 23.7158 36.6519 23.6519 36.7319 cv
23.5879 36.8115 23.5562 36.8599 23.54 36.8599 cv
23.4521 36.8599 li
23.436 36.8599 23.4121 36.8516 23.396 36.8359 cv
23.3799 36.8198 23.3721 36.8037 23.3721 36.7876 cv
23.3721 34.1157 li
23.3721 34.0996 23.3799 34.0918 23.396 34.0757 cv
23.4121 34.0596 23.4282 34.0518 23.4521 34.0518 cv
23.4761 34.0518 li
23.8281 34.2275 24.2119 34.3076 24.6201 34.3076 cv
25.0122 34.3076 25.396 34.2275 25.7642 34.0518 cv
25.7881 34.0518 li
25.8042 34.0518 25.8198 34.0596 25.8359 34.0757 cv
25.8521 34.0918 25.8599 34.0996 25.8599 34.1157 cv
25.8599 34.188 li
25.8599 34.2197 25.8521 34.2275 25.8438 34.2275 cv
25.6602 34.4678 25.4277 34.6597 25.1558 34.7959 cv
24.8838 34.9316 24.5962 34.9956 24.3081 34.9956 cv
24.0918 34.9956 23.876 34.9717 23.6519 34.9077 cv
23.6519 36.4199 li
23.8281 36.2759 23.98 36.1797 24.124 36.1157 cv
24.2598 36.0518 24.436 36.0195 24.6602 36.0195 cv
24.9478 36.0195 25.2119 36.1079 25.4438 36.2759 cv
25.6758 36.4517 25.8521 36.668 25.98 36.9399 cv
26.1079 37.2119 26.1719 37.4917 26.1719 37.772 cv
26.1719 38.0918 26.0918 38.3877 25.9321 38.6597 cv
25.772 38.9316 25.564 39.1479 25.292 39.3076 cv
25.02 39.4678 24.7319 39.5479 24.4121 39.5479 cv
24.1479 39.5479 23.9082 39.4756 23.6841 39.3477 cv
23.46 39.2197 23.292 39.0356 23.1641 38.8037 cv
23.0361 38.5796 22.98 38.332 22.98 38.0757 cv
22.98 37.9556 23.0122 37.8599 23.0918 37.7798 cv
23.1719 37.708 23.2681 37.668 23.3882 37.668 cv
23.5 37.668 23.604 37.708 23.6841 37.7876 cv
23.7642 37.8677 23.8042 37.9639 23.8042 38.0757 cv
23.8042 38.188 23.7642 38.2837 23.6841 38.3638 cv
23.604 38.4438 23.5 38.4839 23.3882 38.4839 cv
23.3721 38.4839 23.3481 38.4839 23.3242 38.4839 cv
23.2998 38.4839 23.2842 38.4756 23.2759 38.4678 cv
23.2759 38.4678 li
cp
ef
29.0361 39.1479 mo
29.0361 39.1079 29.0439 39.0679 29.0762 39.0356 cv
30.7402 37.3799 li
29.0762 35.7158 li
29.0439 35.6919 29.0361 35.6597 29.0361 35.6118 cv
29.0361 35.5718 29.0518 35.5317 29.084 35.5 cv
29.1162 35.4678 29.1479 35.4517 29.1958 35.4517 cv
29.228 35.4517 29.2681 35.4678 29.3159 35.5 cv
30.9722 37.1558 li
32.6201 35.5 li
32.668 35.4678 32.708 35.4517 32.7402 35.4517 cv
32.7798 35.4517 32.8198 35.4678 32.8521 35.5 cv
32.8838 35.5317 32.8999 35.5718 32.8999 35.6118 cv
32.8999 35.6597 32.8838 35.6919 32.8599 35.7158 cv
31.1958 37.3799 li
32.8599 39.0356 li
32.8838 39.0679 32.8999 39.1079 32.8999 39.1479 cv
32.8999 39.1958 32.8838 39.2275 32.8521 39.2598 cv
32.8198 39.292 32.7798 39.3076 32.7402 39.3076 cv
32.7002 39.3076 32.6602 39.292 32.6201 39.252 cv
30.9722 37.6035 li
29.3159 39.252 li
29.2759 39.292 29.2358 39.3076 29.1958 39.3076 cv
29.1479 39.3076 29.1162 39.292 29.084 39.2598 cv
29.0518 39.2275 29.0361 39.1958 29.0361 39.1479 cv
29.0361 39.1479 li
cp
ef
33.8838 39.3799 mo
33.8838 39.0996 li
34.5479 39.0996 34.8838 39.0195 34.8838 38.8438 cv
34.8838 34.6436 li
34.604 34.7798 34.252 34.8438 33.8359 34.8438 cv
33.8359 34.564 li
34.4839 34.564 34.98 34.396 35.3159 34.0518 cv
35.4282 34.0518 li
35.4438 34.0518 35.4678 34.0596 35.4839 34.0757 cv
35.5 34.0918 35.5078 34.1079 35.5078 34.124 cv
35.5078 38.8438 li
35.5078 39.0195 35.8359 39.0996 36.5078 39.0996 cv
36.5078 39.3799 li
33.8838 39.3799 li
33.8838 39.3799 li
cp
ef
39.2202 39.3477 mo
39.5161 39.3477 39.7402 39.1958 39.8838 38.8916 cv
40.0278 38.5879 40.1162 38.252 40.1479 37.8838 cv
40.1802 37.5156 40.2041 37.1157 40.2041 36.6997 cv
40.2041 36.2998 40.1802 35.9316 40.1479 35.5957 cv
40.1162 35.2598 40.0278 34.9478 39.8838 34.6758 cv
39.7402 34.4038 39.5161 34.2598 39.2202 34.2598 cv
38.916 34.2598 38.6919 34.4038 38.5479 34.6758 cv
38.4038 34.9478 38.3081 35.2598 38.2759 35.5957 cv
38.2441 35.9316 38.228 36.2998 38.228 36.6997 cv
38.228 37.0039 38.228 37.2837 38.2441 37.5396 cv
38.2598 37.8037 38.2998 38.0757 38.3638 38.356 cv
38.4282 38.6357 38.5239 38.8677 38.668 39.0596 cv
38.8042 39.252 38.9878 39.3477 39.2202 39.3477 cv
39.2202 39.3477 li
cp
39.2202 39.5479 mo
38.564 39.5479 38.1162 39.2837 37.8838 38.7476 cv
37.644 38.2119 37.5322 37.5718 37.5322 36.8276 cv
37.5322 36.3638 37.5718 35.9316 37.6602 35.5239 cv
37.7402 35.1157 37.9082 34.772 38.1641 34.4839 cv
38.4121 34.1958 38.7642 34.0518 39.2202 34.0518 cv
39.5718 34.0518 39.8599 34.1396 40.084 34.3076 cv
40.3081 34.4839 40.4761 34.6997 40.5962 34.9717 cv
40.708 35.2437 40.7881 35.5396 40.8359 35.8516 cv
40.876 36.1636 40.8999 36.4917 40.8999 36.8276 cv
40.8999 37.292 40.8521 37.7158 40.772 38.1157 cv
40.6841 38.5156 40.5161 38.8599 40.2681 39.1318 cv
40.02 39.4038 39.668 39.5479 39.2202 39.5479 cv
ef
41.6313 34.7319 mo
41.5977 34.7319 41.5752 34.7207 41.5527 34.6982 cv
41.5303 34.6758 41.5249 34.6479 41.5249 34.6196 cv
41.5249 34.5972 41.5303 34.5693 41.5527 34.5469 cv
41.5752 34.5244 41.5977 34.5078 41.6313 34.5078 cv
44.8457 34.5078 li
44.8735 34.5078 44.896 34.5244 44.9185 34.5469 cv
44.9351 34.5693 44.9463 34.5972 44.9463 34.6196 cv
44.9463 34.6479 44.9351 34.6758 44.9185 34.6982 cv
44.896 34.7207 44.8735 34.7319 44.8457 34.7319 cv
41.6313 34.7319 li
41.6313 34.7319 li
cp
ef
47.02 35.9639 mo
47.1655 35.9639 47.2778 35.9355 47.3672 35.8687 cv
47.4512 35.8013 47.5127 35.7173 47.5576 35.6055 cv
47.5967 35.499 47.625 35.3926 47.6362 35.2808 cv
47.647 35.1685 47.6528 35.0342 47.6528 34.8716 cv
47.6528 34.6592 47.6416 34.48 47.6191 34.3286 cv
47.5967 34.1831 47.5464 34.0488 47.457 33.9365 cv
47.3672 33.8247 47.2271 33.7632 47.0479 33.7632 cv
46.8911 33.7632 46.7681 33.8188 46.6729 33.9199 cv
46.5718 34.0205 46.5049 34.1494 46.46 34.3062 cv
46.415 34.4629 46.3926 34.6084 46.3926 34.7539 cv
46.3926 34.8047 46.3926 34.8438 46.3984 34.8662 cv
46.3984 34.8716 46.3984 34.8774 46.3984 34.8774 cv
46.3984 34.8828 46.3926 34.8887 46.3926 34.894 cv
46.3926 35.0566 46.4097 35.2188 46.4434 35.3813 cv
46.4766 35.5493 46.5386 35.6836 46.6338 35.7959 cv
46.7231 35.9077 46.8521 35.9639 47.02 35.9639 cv
47.02 35.9639 li
cp
47.02 36.1372 mo
46.7847 36.1372 46.5942 36.0757 46.4375 35.958 cv
46.2808 35.835 46.1631 35.6782 46.0791 35.4824 cv
45.9951 35.2861 45.939 35.0791 45.9058 34.8662 cv
45.8721 34.6533 45.855 34.4351 45.855 34.2109 cv
45.855 33.9199 45.9111 33.623 46.0288 33.3203 cv
46.1406 33.0239 46.3086 32.7773 46.5327 32.5815 cv
46.7568 32.3911 47.02 32.29 47.3281 32.29 cv
47.4512 32.29 47.5688 32.3184 47.6807 32.3628 cv
47.793 32.4136 47.877 32.4863 47.9438 32.5757 cv
48.0054 32.6709 48.0391 32.7832 48.0391 32.9175 cv
48.0391 32.9956 48.0112 33.0576 47.9609 33.1079 cv
47.9048 33.1636 47.8433 33.186 47.7705 33.186 cv
47.6919 33.186 47.6304 33.1636 47.5801 33.1079 cv
47.5239 33.0576 47.5015 32.9956 47.5015 32.9175 cv
47.5015 32.8447 47.5239 32.7832 47.5801 32.7271 cv
47.6304 32.6768 47.6919 32.6484 47.7705 32.6484 cv
47.7983 32.6484 li
47.748 32.5815 47.6807 32.5366 47.5967 32.5029 cv
47.5073 32.4692 47.4175 32.4526 47.3281 32.4526 cv
47.2158 32.4526 47.1094 32.4805 47.0142 32.5254 cv
46.9189 32.5757 46.835 32.6431 46.7568 32.7271 cv
46.6782 32.811 46.6167 32.9004 46.5664 33.0015 cv
46.5103 33.1021 46.4712 33.2197 46.4434 33.3486 cv
46.415 33.4829 46.3984 33.6006 46.3926 33.7124 cv
46.3818 33.8247 46.3818 33.9702 46.3818 34.1382 cv
46.4487 33.9868 46.5386 33.8638 46.6616 33.7632 cv
46.7793 33.668 46.9136 33.6172 47.0703 33.6172 cv
47.2329 33.6172 47.3838 33.6509 47.5186 33.7183 cv
47.6528 33.7852 47.7705 33.8804 47.8711 33.998 cv
47.9722 34.1216 48.0449 34.2559 48.1006 34.4072 cv
48.1514 34.564 48.1792 34.7148 48.1792 34.8716 cv
48.1792 35.0957 48.1289 35.3027 48.0337 35.499 cv
47.9326 35.6948 47.7983 35.8516 47.6191 35.9639 cv
47.4399 36.0757 47.2441 36.1372 47.02 36.1372 cv
ef
1.5 lw
2 lc
54.5 181.939 mo
54.5 20.6597 li
54.5 181.939 mo
194 181.939 li
194 181.939 mo
194 20.6597 li
54.5 20.6597 mo
194 20.6597 li
@
180.488 32.1196 mo
179.528 31.688 178.808 31.0156 178.328 30.1035 cv
177.848 29.1919 177.608 28.0278 177.608 26.6357 cv
177.608 25.2437 177.848 24.0918 178.328 23.168 cv
178.808 22.2437 179.528 21.5718 180.488 21.1396 cv
180.488 21.7158 li
179.888 22.1357 179.456 22.7236 179.192 23.4678 cv
178.928 24.2236 178.796 25.2798 178.796 26.6357 cv
178.796 28.0039 178.928 29.0596 179.192 29.8037 cv
179.456 30.5479 179.888 31.124 180.488 31.5439 cv
180.488 32.1196 li
180.488 32.1196 li
cp
ef
187.076 26.3716 mo
187.076 29.6357 li
188.036 29.6357 li
188.036 30.2598 li
185.996 30.2598 li
185.996 29.5879 li
185.756 29.876 185.48 30.0918 185.168 30.2236 cv
184.856 30.3438 184.484 30.416 184.076 30.416 cv
183.38 30.416 182.828 30.2358 182.42 29.876 cv
182.012 29.5156 181.82 29.0117 181.82 28.3877 cv
181.82 27.752 182.048 27.2598 182.516 26.8999 cv
182.972 26.5396 183.632 26.3599 184.484 26.3599 cv
185.996 26.3599 li
185.996 25.9277 li
185.996 25.46 185.852 25.0996 185.564 24.8359 cv
185.276 24.5718 184.868 24.4399 184.352 24.4399 cv
183.92 24.4399 183.584 24.5479 183.332 24.7397 cv
183.068 24.9316 182.912 25.2197 182.852 25.6035 cv
182.3 25.6035 li
182.3 24.3438 li
182.672 24.188 183.032 24.0679 183.392 23.9839 cv
183.74 23.9116 184.088 23.8638 184.424 23.8638 cv
185.288 23.8638 185.936 24.0796 186.392 24.5117 cv
186.848 24.9438 187.076 25.5557 187.076 26.3716 cv
187.076 26.3716 li
cp
185.996 28.3037 mo
185.996 26.9839 li
184.604 26.9839 li
184.064 26.9839 183.668 27.1035 183.404 27.332 cv
183.14 27.5718 183.02 27.9199 183.02 28.3877 cv
183.02 28.8198 183.152 29.168 183.416 29.4199 cv
183.68 29.6836 184.04 29.8037 184.496 29.8037 cv
184.94 29.8037 185.3 29.6719 185.576 29.3955 cv
185.852 29.1196 185.996 28.7598 185.996 28.3037 cv
ef
189.272 32.1196 mo
189.272 31.5439 li
189.872 31.124 190.304 30.5479 190.568 29.8037 cv
190.832 29.0596 190.964 28.0039 190.964 26.6357 cv
190.964 25.2798 190.832 24.2236 190.568 23.4678 cv
190.304 22.7236 189.872 22.1357 189.272 21.7158 cv
189.272 21.1396 li
190.22 21.5718 190.94 22.2437 191.42 23.168 cv
191.9 24.0918 192.152 25.2437 192.152 26.6357 cv
192.152 28.0278 191.9 29.1919 191.42 30.1035 cv
190.94 31.0156 190.22 31.688 189.272 32.1196 cv
189.272 32.1196 li
cp
ef
146 109.253 mo
148.829 106.424 li
146 103.596 li
143.171 106.424 li
146 109.253 li
.883665 .769161 0 0 cmyk
f
.5 lw
0 lc
146 109.253 mo
148.829 106.424 li
146 103.596 li
143.171 106.424 li
146 109.253 li
0 0 0 1 cmyk
@
160 109.253 mo
162.829 106.424 li
160 103.596 li
157.171 106.424 li
160 109.253 li
.883665 .769161 0 0 cmyk
f
160 109.253 mo
162.829 106.424 li
160 103.596 li
157.171 106.424 li
160 109.253 li
0 0 0 1 cmyk
@
171.67 109.29 mo
171.67 109.25 171.67 109.22 171.68 109.2 cv
172.43 106.22 li
172.47 106.04 172.5 105.87 172.5 105.729 cv
172.5 105.45 172.4 105.3 172.21 105.3 cv
172 105.3 171.84 105.43 171.74 105.68 cv
171.64 105.93 171.54 106.24 171.45 106.62 cv
171.45 106.64 171.44 106.66 171.42 106.67 cv
171.4 106.68 171.38 106.68 171.37 106.68 cv
171.25 106.68 li
171.23 106.68 171.21 106.67 171.19 106.649 cv
171.17 106.63 171.17 106.6 171.17 106.58 cv
171.24 106.29 171.31 106.04 171.38 105.84 cv
171.44 105.64 171.55 105.46 171.69 105.29 cv
171.83 105.13 172 105.04 172.22 105.04 cv
172.46 105.04 172.68 105.12 172.88 105.28 cv
173.07 105.439 173.17 105.64 173.17 105.88 cv
173.37 105.62 173.6 105.42 173.87 105.27 cv
174.13 105.12 174.42 105.04 174.72 105.04 cv
174.95 105.04 175.15 105.09 175.33 105.17 cv
175.5 105.25 175.63 105.38 175.73 105.54 cv
175.83 105.7 175.88 105.899 175.88 106.12 cv
175.88 106.399 175.81 106.729 175.69 107.109 cv
175.57 107.5 175.42 107.93 175.24 108.41 cv
175.14 108.63 175.1 108.83 175.1 109.01 cv
175.1 109.21 175.17 109.31 175.33 109.31 cv
175.59 109.31 175.8 109.17 175.98 108.89 cv
176.15 108.609 176.27 108.31 176.35 107.99 cv
176.36 107.95 176.39 107.93 176.43 107.93 cv
176.55 107.93 li
176.57 107.93 176.59 107.939 176.61 107.96 cv
176.63 107.979 176.64 108 176.64 108.02 cv
176.64 108.03 176.63 108.04 176.63 108.05 cv
176.54 108.43 176.38 108.78 176.16 109.09 cv
175.93 109.41 175.65 109.56 175.31 109.56 cv
175.07 109.56 174.87 109.479 174.71 109.33 cv
174.54 109.17 174.46 108.979 174.46 108.74 cv
174.46 108.62 174.48 108.49 174.54 108.35 cv
174.62 108.13 174.71 107.87 174.82 107.569 cv
174.93 107.27 175.02 106.99 175.09 106.71 cv
175.16 106.43 175.2 106.189 175.2 105.97 cv
175.2 105.79 175.16 105.63 175.08 105.5 cv
175 105.37 174.88 105.3 174.7 105.3 cv
174.45 105.3 174.22 105.359 174.02 105.46 cv
173.82 105.569 173.64 105.71 173.49 105.89 cv
173.33 106.069 173.19 106.28 173.07 106.52 cv
172.39 109.24 li
172.37 109.34 172.32 109.41 172.24 109.47 cv
172.16 109.53 172.07 109.56 171.97 109.56 cv
171.89 109.56 171.82 109.53 171.76 109.49 cv
171.7 109.45 171.67 109.38 171.67 109.29 cv
171.67 109.29 li
cp
ef
146 116.096 mo
144 120.096 li
148 120.096 li
146 116.096 li
.873045 .242161 1 .129244 cmyk
f
146 116.096 mo
144 120.096 li
148 120.096 li
146 116.096 li
0 0 0 1 cmyk
@
160 116.096 mo
158 120.096 li
162 120.096 li
160 116.096 li
.873045 .242161 1 .129244 cmyk
f
160 116.096 mo
158 120.096 li
162 120.096 li
160 116.096 li
0 0 0 1 cmyk
@
173.65 121.34 mo
173.9 121.34 174.17 121.27 174.45 121.13 cv
174.73 120.99 174.96 120.819 175.15 120.62 cv
175.39 120.38 175.59 120.069 175.74 119.71 cv
175.88 119.35 175.96 118.99 175.96 118.62 cv
175.96 118.38 175.9 118.149 175.8 117.939 cv
175.69 117.74 175.54 117.569 175.34 117.45 cv
175.14 117.33 174.92 117.27 174.67 117.27 cv
173.65 121.34 li
173.65 121.34 li
cp
173.35 121.34 mo
174.37 117.27 li
174.2 117.27 174.02 117.31 173.84 117.38 cv
173.65 117.45 173.47 117.54 173.31 117.64 cv
173.15 117.74 173 117.859 172.87 117.99 cv
172.7 118.149 172.55 118.35 172.43 118.569 cv
172.31 118.79 172.21 119.03 172.15 119.27 cv
172.09 119.51 172.06 119.75 172.06 119.99 cv
172.06 120.25 172.11 120.479 172.22 120.68 cv
172.32 120.88 172.47 121.04 172.67 121.16 cv
172.87 121.28 173.09 121.34 173.35 121.34 cv
172.84 123.399 mo
173.29 121.59 li
172.95 121.59 172.63 121.51 172.34 121.359 cv
172.04 121.21 171.81 120.99 171.63 120.71 cv
171.45 120.43 171.37 120.12 171.37 119.78 cv
171.37 119.42 171.46 119.08 171.64 118.75 cv
171.82 118.42 172.06 118.12 172.37 117.85 cv
172.68 117.59 173.01 117.38 173.37 117.229 cv
173.73 117.09 174.08 117.01 174.44 117.01 cv
175.04 114.58 li
175.05 114.54 175.08 114.52 175.12 114.52 cv
175.24 114.52 li
175.26 114.52 175.28 114.54 175.3 114.56 cv
175.32 114.58 175.33 114.6 175.33 114.62 cv
174.73 117.01 li
174.97 117.01 175.21 117.06 175.45 117.149 cv
175.69 117.25 175.9 117.38 176.08 117.54 cv
176.26 117.7 176.4 117.899 176.5 118.12 cv
176.6 118.34 176.65 118.58 176.65 118.83 cv
176.65 119.189 176.56 119.54 176.38 119.87 cv
176.2 120.2 175.96 120.5 175.66 120.76 cv
175.36 121.02 175.02 121.229 174.65 121.37 cv
174.27 121.51 173.92 121.59 173.58 121.59 cv
173.12 123.439 li
173.1 123.479 173.08 123.5 173.04 123.5 cv
172.92 123.5 li
172.89 123.5 172.87 123.479 172.86 123.46 cv
172.84 123.439 172.84 123.42 172.84 123.399 cv
ef
146 132.689 mo
146.53 132.689 147.039 132.479 147.414 132.104 cv
147.789 131.729 148 131.22 148 130.689 cv
148 130.159 147.789 129.65 147.414 129.275 cv
147.039 128.9 146.53 128.689 146 128.689 cv
145.47 128.689 144.961 128.9 144.586 129.275 cv
144.211 129.65 144 130.159 144 130.689 cv
144 131.22 144.211 131.729 144.586 132.104 cv
144.961 132.479 145.47 132.689 146 132.689 cv
146 132.689 li
cp
0 .993988 1 0 cmyk
f
146 132.689 mo
146.53 132.689 147.039 132.479 147.414 132.104 cv
147.789 131.729 148 131.22 148 130.689 cv
148 130.159 147.789 129.65 147.414 129.275 cv
147.039 128.9 146.53 128.689 146 128.689 cv
145.47 128.689 144.961 128.9 144.586 129.275 cv
144.211 129.65 144 130.159 144 130.689 cv
144 131.22 144.211 131.729 144.586 132.104 cv
144.961 132.479 145.47 132.689 146 132.689 cv
146 132.689 li
cp
0 0 0 1 cmyk
@
160 132.689 mo
160.53 132.689 161.039 132.479 161.414 132.104 cv
161.789 131.729 162 131.22 162 130.689 cv
162 130.159 161.789 129.65 161.414 129.275 cv
161.039 128.9 160.53 128.689 160 128.689 cv
159.47 128.689 158.961 128.9 158.586 129.275 cv
158.211 129.65 158 130.159 158 130.689 cv
158 131.22 158.211 131.729 158.586 132.104 cv
158.961 132.479 159.47 132.689 160 132.689 cv
160 132.689 li
cp
0 .993988 1 0 cmyk
f
160 132.689 mo
160.53 132.689 161.039 132.479 161.414 132.104 cv
161.789 131.729 162 131.22 162 130.689 cv
162 130.159 161.789 129.65 161.414 129.275 cv
161.039 128.9 160.53 128.689 160 128.689 cv
159.47 128.689 158.961 128.9 158.586 129.275 cv
158.211 129.65 158 130.159 158 130.689 cv
158 131.22 158.211 131.729 158.586 132.104 cv
158.961 132.479 159.47 132.689 160 132.689 cv
160 132.689 li
cp
0 0 0 1 cmyk
@
171.97 132.569 mo
171.97 132.43 171.98 132.26 172.02 132.08 cv
172.06 131.899 172.09 131.76 172.13 131.64 cv
172.16 131.52 172.24 131.3 172.37 130.96 cv
172.5 130.63 172.57 130.46 172.57 130.439 cv
172.65 130.2 172.7 130 172.7 129.84 cv
172.7 129.64 172.62 129.54 172.48 129.54 cv
172.22 129.54 172 129.68 171.83 129.95 cv
171.65 130.229 171.53 130.53 171.45 130.859 cv
171.43 130.899 171.41 130.92 171.37 130.92 cv
171.25 130.92 li
171.19 130.92 171.17 130.89 171.17 130.83 cv
171.17 130.8 li
171.27 130.399 171.44 130.05 171.66 129.74 cv
171.88 129.439 172.16 129.28 172.5 129.28 cv
172.74 129.28 172.94 129.359 173.1 129.52 cv
173.26 129.68 173.35 129.87 173.35 130.109 cv
173.35 130.24 173.32 130.37 173.27 130.5 cv
173.13 130.84 173.03 131.12 172.96 131.319 cv
172.88 131.52 172.81 131.75 172.75 132 cv
172.69 132.26 172.66 132.49 172.66 132.7 cv
172.66 132.95 172.71 133.149 172.83 133.31 cv
172.94 133.47 173.12 133.55 173.37 133.55 cv
173.83 133.55 174.24 133.2 174.62 132.479 cv
174.74 132.25 174.85 131.979 174.95 131.67 cv
175.05 131.359 175.11 131.1 175.11 130.899 cv
175.11 130.7 175.07 130.55 175.01 130.43 cv
174.94 130.319 174.85 130.2 174.75 130.08 cv
174.65 129.96 174.6 129.87 174.6 129.79 cv
174.6 129.66 174.65 129.54 174.76 129.43 cv
174.86 129.33 174.98 129.27 175.12 129.27 cv
175.28 129.27 175.39 129.35 175.46 129.49 cv
175.53 129.64 175.57 129.81 175.57 129.99 cv
175.57 130.21 175.53 130.479 175.47 130.78 cv
175.41 131.09 175.32 131.41 175.21 131.74 cv
175.09 132.069 174.99 132.33 174.9 132.51 cv
174.46 133.37 173.94 133.8 173.36 133.8 cv
172.94 133.8 172.6 133.7 172.35 133.49 cv
172.09 133.29 171.97 132.979 171.97 132.569 cv
171.97 132.569 li
cp
ef
146 140.361 mo
145.551 141.743 li
144.098 141.743 li
145.273 142.598 li
144.824 143.979 li
146 143.126 li
147.176 143.979 li
146.727 142.598 li
147.902 141.743 li
146.449 141.743 li
146 140.361 li
.713191 0 .306584 0 cmyk
f
146 140.361 mo
145.551 141.743 li
144.098 141.743 li
145.273 142.598 li
144.824 143.979 li
146 143.126 li
147.176 143.979 li
146.727 142.598 li
147.902 141.743 li
146.449 141.743 li
146 140.361 li
0 0 0 1 cmyk
@
160 140.361 mo
159.551 141.743 li
158.098 141.743 li
159.273 142.598 li
158.824 143.979 li
160 143.126 li
161.176 143.979 li
160.727 142.598 li
161.902 141.743 li
160.449 141.743 li
160 140.361 li
.713191 0 .306584 0 cmyk
f
160 140.361 mo
159.551 141.743 li
158.098 141.743 li
159.273 142.598 li
158.824 143.979 li
160 143.126 li
161.176 143.979 li
160.727 142.598 li
161.902 141.743 li
160.449 141.743 li
160 140.361 li
0 0 0 1 cmyk
@
171.52 144.41 mo
171.52 144.31 171.53 144.22 171.55 144.13 cv
172.27 141.26 li
171.22 141.26 li
171.15 141.26 171.12 141.22 171.12 141.13 cv
171.14 140.99 171.19 140.91 171.25 140.91 cv
172.36 140.91 li
172.76 139.28 li
172.78 139.2 172.83 139.12 172.91 139.06 cv
172.99 139 173.08 138.96 173.18 138.96 cv
173.26 138.96 173.33 138.99 173.39 139.04 cv
173.45 139.09 173.48 139.16 173.48 139.24 cv
173.48 139.26 173.47 139.28 173.47 139.29 cv
173.47 139.3 173.47 139.31 173.47 139.319 cv
173.07 140.91 li
174.1 140.91 li
174.16 140.91 174.2 140.96 174.2 141.04 cv
174.2 141.06 174.19 141.08 174.18 141.12 cv
174.17 141.16 174.16 141.2 174.14 141.22 cv
174.12 141.25 174.1 141.26 174.07 141.26 cv
172.98 141.26 li
172.26 144.149 li
172.21 144.34 172.19 144.5 172.19 144.64 cv
172.19 144.93 172.28 145.069 172.48 145.069 cv
172.77 145.069 173.03 144.939 173.26 144.66 cv
173.48 144.38 173.66 144.08 173.78 143.75 cv
173.8 143.71 173.83 143.689 173.86 143.689 cv
173.98 143.689 li
174 143.689 174.02 143.7 174.04 143.72 cv
174.06 143.74 174.07 143.76 174.07 143.78 cv
174.07 143.8 174.06 143.81 174.06 143.81 cv
173.91 144.21 173.7 144.569 173.42 144.87 cv
173.14 145.17 172.82 145.319 172.46 145.319 cv
172.19 145.319 171.97 145.229 171.79 145.069 cv
171.61 144.899 171.52 144.68 171.52 144.41 cv
171.52 144.41 li
cp
ef
1.5 lw
[6 6 ] 0 dsh
146 159.439 mo
160 159.439 li
.385412 .90045 0 0 cmyk
@
171.56 164.01 mo
171.49 164.01 171.46 163.97 171.46 163.899 cv
171.46 163.87 171.47 163.85 171.49 163.83 cv
176.77 157.68 li
171.49 150.45 li
171.47 150.43 171.46 150.41 171.46 150.399 cv
171.46 150.1 li
171.46 150.069 171.47 150.05 171.49 150.04 cv
171.51 150.02 171.54 150.02 171.56 150.02 cv
183.56 150.02 li
184.77 152.819 li
184.48 152.819 li
184.17 152.1 183.65 151.58 182.93 151.24 cv
182.2 150.899 181.44 150.689 180.65 150.609 cv
179.86 150.53 178.94 150.49 177.9 150.49 cv
173.28 150.49 li
178 156.939 li
178.01 156.96 178.02 156.99 178.02 157.01 cv
178.02 157.03 178.01 157.05 178 157.08 cv
172.81 163.12 li
178 163.12 li
179.02 163.12 179.93 163.08 180.73 163 cv
181.52 162.92 182.27 162.7 182.99 162.359 cv
183.71 162.02 184.2 161.49 184.48 160.79 cv
184.77 160.79 li
183.56 164.01 li
171.56 164.01 li
171.56 164.01 li
cp
0 0 0 1 cmyk
ef
178.061 166.178 mo
178.061 166.08 178.096 165.989 178.18 165.912 cv
178.257 165.835 178.348 165.793 178.453 165.793 cv
178.53 165.793 178.593 165.82 178.649 165.87 cv
178.698 165.919 178.726 165.981 178.726 166.052 cv
178.726 166.157 178.684 166.248 178.6 166.325 cv
178.516 166.409 178.425 166.443 178.327 166.443 cv
178.25 166.443 178.187 166.423 178.138 166.367 cv
178.082 166.317 178.061 166.255 178.061 166.178 cv
178.061 166.178 li
cp
175.856 171.407 mo
175.856 171.295 175.898 171.196 175.968 171.112 cv
176.045 171.028 176.143 170.986 176.255 170.986 cv
176.325 170.986 176.388 171.008 176.444 171.057 cv
176.493 171.099 176.521 171.162 176.521 171.239 cv
176.521 171.323 176.493 171.407 176.437 171.477 cv
176.381 171.547 176.311 171.596 176.227 171.624 cv
176.311 171.651 176.388 171.666 176.472 171.666 cv
176.668 171.666 176.843 171.575 176.99 171.393 cv
177.13 171.211 177.235 171.001 177.298 170.776 cv
177.956 168.151 li
177.984 168.019 178.005 167.907 178.005 167.809 cv
178.005 167.612 177.935 167.508 177.795 167.508 cv
177.585 167.508 177.41 167.605 177.256 167.788 cv
177.102 167.977 176.976 168.193 176.885 168.432 cv
176.871 168.46 176.857 168.474 176.829 168.474 cv
176.745 168.474 li
176.703 168.474 176.689 168.453 176.689 168.411 cv
176.689 168.39 li
176.787 168.109 176.934 167.865 177.13 167.647 cv
177.326 167.438 177.55 167.326 177.809 167.326 cv
178.005 167.326 178.159 167.389 178.285 167.508 cv
178.411 167.634 178.474 167.788 178.474 167.97 cv
178.474 168.04 178.467 168.103 178.453 168.166 cv
177.788 170.818 li
177.739 171.008 177.648 171.183 177.515 171.337 cv
177.375 171.491 177.214 171.617 177.032 171.708 cv
176.843 171.799 176.654 171.848 176.458 171.848 cv
176.304 171.848 176.164 171.806 176.038 171.735 cv
175.919 171.659 175.856 171.547 175.856 171.407 cv
ef
249.8 181.939 mo
389.3 181.939 li
389.3 20.6597 li
249.8 20.6597 li
249.8 181.939 li
0 0 0 0 cmyk
f
gsave
249.8 181.939 mo
389.3 181.939 li
389.3 20.6396 li
249.8 20.6396 li
249.8 181.939 li
cp
clp
2 lc
[] 0 dsh
249.8 64.417 mo
267.238 61.8105 li
284.675 55.8418 li
302.113 45.5596 li
319.55 148.611 li
336.988 45.4189 li
354.425 55.7427 li
371.863 61.7686 li
389.3 64.3887 li
.883665 .769161 0 0 cmyk
@
249.8 67.2451 mo
252.629 64.417 li
249.8 61.5884 li
246.972 64.417 li
249.8 67.2451 li
f
.5 lw
0 lc
249.8 67.2451 mo
252.629 64.417 li
249.8 61.5884 li
246.972 64.417 li
249.8 67.2451 li
0 0 0 1 cmyk
@
grestore
267.238 64.6392 mo
270.066 61.8105 li
267.238 58.9824 li
264.409 61.8105 li
267.238 64.6392 li
.883665 .769161 0 0 cmyk
f
.5 lw
[] 0 dsh
267.238 64.6392 mo
270.066 61.8105 li
267.238 58.9824 li
264.409 61.8105 li
267.238 64.6392 li
0 0 0 1 cmyk
@
284.675 58.6704 mo
287.504 55.8418 li
284.675 53.0132 li
281.847 55.8418 li
284.675 58.6704 li
.883665 .769161 0 0 cmyk
f
284.675 58.6704 mo
287.504 55.8418 li
284.675 53.0132 li
281.847 55.8418 li
284.675 58.6704 li
0 0 0 1 cmyk
@
302.113 48.3882 mo
304.941 45.5596 li
302.113 42.7314 li
299.284 45.5596 li
302.113 48.3882 li
.883665 .769161 0 0 cmyk
f
302.113 48.3882 mo
304.941 45.5596 li
302.113 42.7314 li
299.284 45.5596 li
302.113 48.3882 li
0 0 0 1 cmyk
@
319.55 151.439 mo
322.379 148.611 li
319.55 145.783 li
316.722 148.611 li
319.55 151.439 li
.883665 .769161 0 0 cmyk
f
319.55 151.439 mo
322.379 148.611 li
319.55 145.783 li
316.722 148.611 li
319.55 151.439 li
0 0 0 1 cmyk
@
336.988 48.2471 mo
339.816 45.4189 li
336.988 42.5903 li
334.159 45.4189 li
336.988 48.2471 li
.883665 .769161 0 0 cmyk
f
336.988 48.2471 mo
339.816 45.4189 li
336.988 42.5903 li
334.159 45.4189 li
336.988 48.2471 li
0 0 0 1 cmyk
@
354.425 58.5713 mo
357.254 55.7427 li
354.425 52.9146 li
351.597 55.7427 li
354.425 58.5713 li
.883665 .769161 0 0 cmyk
f
354.425 58.5713 mo
357.254 55.7427 li
354.425 52.9146 li
351.597 55.7427 li
354.425 58.5713 li
0 0 0 1 cmyk
@
gsave
249.8 181.939 mo
389.3 181.939 li
389.3 20.6396 li
249.8 20.6396 li
249.8 181.939 li
cp
clp
371.863 64.5972 mo
374.691 61.7686 li
371.863 58.9404 li
369.034 61.7686 li
371.863 64.5972 li
.883665 .769161 0 0 cmyk
f
371.863 64.5972 mo
374.691 61.7686 li
371.863 58.9404 li
369.034 61.7686 li
371.863 64.5972 li
0 0 0 1 cmyk
@
389.3 67.2173 mo
392.129 64.3887 li
389.3 61.5605 li
386.472 64.3887 li
389.3 67.2173 li
.883665 .769161 0 0 cmyk
f
389.3 67.2173 mo
392.129 64.3887 li
389.3 61.5605 li
386.472 64.3887 li
389.3 67.2173 li
0 0 0 1 cmyk
@
1.5 lw
2 lc
249.8 66.75 mo
267.238 67.3066 li
284.675 68.5537 li
302.113 68.5557 li
319.55 60.168 li
336.988 68.5068 li
354.425 68.4355 li
371.863 67.208 li
389.3 66.6567 li
.873045 .242161 1 .129244 cmyk
@
249.8 64.75 mo
247.8 68.75 li
251.8 68.75 li
249.8 64.75 li
f
.5 lw
0 lc
249.8 64.75 mo
247.8 68.75 li
251.8 68.75 li
249.8 64.75 li
0 0 0 1 cmyk
@
grestore
267.238 65.3066 mo
265.238 69.3066 li
269.238 69.3066 li
267.238 65.3066 li
.873045 .242161 1 .129244 cmyk
f
267.238 65.3066 mo
265.238 69.3066 li
269.238 69.3066 li
267.238 65.3066 li
0 0 0 1 cmyk
@
284.675 66.5537 mo
282.675 70.5537 li
286.675 70.5537 li
284.675 66.5537 li
.873045 .242161 1 .129244 cmyk
f
284.675 66.5537 mo
282.675 70.5537 li
286.675 70.5537 li
284.675 66.5537 li
0 0 0 1 cmyk
@
302.113 66.5557 mo
300.113 70.5557 li
304.113 70.5557 li
302.113 66.5557 li
.873045 .242161 1 .129244 cmyk
f
302.113 66.5557 mo
300.113 70.5557 li
304.113 70.5557 li
302.113 66.5557 li
0 0 0 1 cmyk
@
319.55 58.168 mo
317.55 62.168 li
321.55 62.168 li
319.55 58.168 li
.873045 .242161 1 .129244 cmyk
f
319.55 58.168 mo
317.55 62.168 li
321.55 62.168 li
319.55 58.168 li
0 0 0 1 cmyk
@
336.988 66.5068 mo
334.988 70.5068 li
338.988 70.5068 li
336.988 66.5068 li
.873045 .242161 1 .129244 cmyk
f
336.988 66.5068 mo
334.988 70.5068 li
338.988 70.5068 li
336.988 66.5068 li
0 0 0 1 cmyk
@
354.425 66.4355 mo
352.425 70.4355 li
356.425 70.4355 li
354.425 66.4355 li
.873045 .242161 1 .129244 cmyk
f
354.425 66.4355 mo
352.425 70.4355 li
356.425 70.4355 li
354.425 66.4355 li
0 0 0 1 cmyk
@
gsave
249.8 181.939 mo
389.3 181.939 li
389.3 20.6396 li
249.8 20.6396 li
249.8 181.939 li
cp
clp
371.863 65.208 mo
369.863 69.208 li
373.863 69.208 li
371.863 65.208 li
.873045 .242161 1 .129244 cmyk
f
371.863 65.208 mo
369.863 69.208 li
373.863 69.208 li
371.863 65.208 li
0 0 0 1 cmyk
@
389.3 64.6567 mo
387.3 68.6567 li
391.3 68.6567 li
389.3 64.6567 li
.873045 .242161 1 .129244 cmyk
f
389.3 64.6567 mo
387.3 68.6567 li
391.3 68.6567 li
389.3 64.6567 li
0 0 0 1 cmyk
@
1.5 lw
2 lc
249.8 65.1279 mo
267.238 64.5737 li
284.675 66.1636 li
302.113 73.6787 li
319.55 65.0239 li
336.988 73.5728 li
354.425 66.0376 li
371.863 64.4658 li
389.3 65.0366 li
0 .993988 1 0 cmyk
@
249.8 67.1279 mo
250.33 67.1279 250.839 66.917 251.214 66.542 cv
251.589 66.167 251.8 65.6582 251.8 65.1279 cv
251.8 64.5972 251.589 64.0889 251.214 63.7134 cv
250.839 63.3384 250.33 63.1279 249.8 63.1279 cv
249.27 63.1279 248.761 63.3384 248.386 63.7134 cv
248.011 64.0889 247.8 64.5972 247.8 65.1279 cv
247.8 65.6582 248.011 66.167 248.386 66.542 cv
248.761 66.917 249.27 67.1279 249.8 67.1279 cv
249.8 67.1279 li
cp
f
.5 lw
0 lc
249.8 67.1279 mo
250.33 67.1279 250.839 66.917 251.214 66.542 cv
251.589 66.167 251.8 65.6582 251.8 65.1279 cv
251.8 64.5972 251.589 64.0889 251.214 63.7134 cv
250.839 63.3384 250.33 63.1279 249.8 63.1279 cv
249.27 63.1279 248.761 63.3384 248.386 63.7134 cv
248.011 64.0889 247.8 64.5972 247.8 65.1279 cv
247.8 65.6582 248.011 66.167 248.386 66.542 cv
248.761 66.917 249.27 67.1279 249.8 67.1279 cv
249.8 67.1279 li
cp
0 0 0 1 cmyk
@
grestore
267.238 66.5737 mo
267.769 66.5737 268.277 66.3633 268.652 65.9878 cv
269.027 65.6128 269.238 65.104 269.238 64.5737 cv
269.238 64.0435 269.027 63.5347 268.652 63.1597 cv
268.277 62.7847 267.769 62.5737 267.238 62.5737 cv
266.708 62.5737 266.199 62.7847 265.824 63.1597 cv
265.449 63.5347 265.238 64.0435 265.238 64.5737 cv
265.238 65.104 265.449 65.6128 265.824 65.9878 cv
266.199 66.3633 266.708 66.5737 267.238 66.5737 cv
267.238 66.5737 li
cp
0 .993988 1 0 cmyk
f
267.238 66.5737 mo
267.769 66.5737 268.277 66.3633 268.652 65.9878 cv
269.027 65.6128 269.238 65.104 269.238 64.5737 cv
269.238 64.0435 269.027 63.5347 268.652 63.1597 cv
268.277 62.7847 267.769 62.5737 267.238 62.5737 cv
266.708 62.5737 266.199 62.7847 265.824 63.1597 cv
265.449 63.5347 265.238 64.0435 265.238 64.5737 cv
265.238 65.104 265.449 65.6128 265.824 65.9878 cv
266.199 66.3633 266.708 66.5737 267.238 66.5737 cv
267.238 66.5737 li
cp
0 0 0 1 cmyk
@
284.675 68.1636 mo
285.205 68.1636 285.714 67.9531 286.089 67.5781 cv
286.464 67.2031 286.675 66.6943 286.675 66.1636 cv
286.675 65.6333 286.464 65.1245 286.089 64.7495 cv
285.714 64.3745 285.205 64.1636 284.675 64.1636 cv
284.145 64.1636 283.636 64.3745 283.261 64.7495 cv
282.886 65.1245 282.675 65.6333 282.675 66.1636 cv
282.675 66.6943 282.886 67.2031 283.261 67.5781 cv
283.636 67.9531 284.145 68.1636 284.675 68.1636 cv
284.675 68.1636 li
cp
0 .993988 1 0 cmyk
f
284.675 68.1636 mo
285.205 68.1636 285.714 67.9531 286.089 67.5781 cv
286.464 67.2031 286.675 66.6943 286.675 66.1636 cv
286.675 65.6333 286.464 65.1245 286.089 64.7495 cv
285.714 64.3745 285.205 64.1636 284.675 64.1636 cv
284.145 64.1636 283.636 64.3745 283.261 64.7495 cv
282.886 65.1245 282.675 65.6333 282.675 66.1636 cv
282.675 66.6943 282.886 67.2031 283.261 67.5781 cv
283.636 67.9531 284.145 68.1636 284.675 68.1636 cv
284.675 68.1636 li
cp
0 0 0 1 cmyk
@
302.113 75.6787 mo
302.644 75.6787 303.152 75.4683 303.527 75.0928 cv
303.902 74.7178 304.113 74.209 304.113 73.6787 cv
304.113 73.1484 303.902 72.6396 303.527 72.2646 cv
303.152 71.8896 302.644 71.6787 302.113 71.6787 cv
301.583 71.6787 301.074 71.8896 300.699 72.2646 cv
300.324 72.6396 300.113 73.1484 300.113 73.6787 cv
300.113 74.209 300.324 74.7178 300.699 75.0928 cv
301.074 75.4683 301.583 75.6787 302.113 75.6787 cv
302.113 75.6787 li
cp
0 .993988 1 0 cmyk
f
302.113 75.6787 mo
302.644 75.6787 303.152 75.4683 303.527 75.0928 cv
303.902 74.7178 304.113 74.209 304.113 73.6787 cv
304.113 73.1484 303.902 72.6396 303.527 72.2646 cv
303.152 71.8896 302.644 71.6787 302.113 71.6787 cv
301.583 71.6787 301.074 71.8896 300.699 72.2646 cv
300.324 72.6396 300.113 73.1484 300.113 73.6787 cv
300.113 74.209 300.324 74.7178 300.699 75.0928 cv
301.074 75.4683 301.583 75.6787 302.113 75.6787 cv
302.113 75.6787 li
cp
0 0 0 1 cmyk
@
319.55 67.0239 mo
320.08 67.0239 320.589 66.813 320.964 66.438 cv
321.339 66.063 321.55 65.5542 321.55 65.0239 cv
321.55 64.4932 321.339 63.9844 320.964 63.6094 cv
320.589 63.2344 320.08 63.0239 319.55 63.0239 cv
319.02 63.0239 318.511 63.2344 318.136 63.6094 cv
317.761 63.9844 317.55 64.4932 317.55 65.0239 cv
317.55 65.5542 317.761 66.063 318.136 66.438 cv
318.511 66.813 319.02 67.0239 319.55 67.0239 cv
319.55 67.0239 li
cp
0 .993988 1 0 cmyk
f
319.55 67.0239 mo
320.08 67.0239 320.589 66.813 320.964 66.438 cv
321.339 66.063 321.55 65.5542 321.55 65.0239 cv
321.55 64.4932 321.339 63.9844 320.964 63.6094 cv
320.589 63.2344 320.08 63.0239 319.55 63.0239 cv
319.02 63.0239 318.511 63.2344 318.136 63.6094 cv
317.761 63.9844 317.55 64.4932 317.55 65.0239 cv
317.55 65.5542 317.761 66.063 318.136 66.438 cv
318.511 66.813 319.02 67.0239 319.55 67.0239 cv
319.55 67.0239 li
cp
0 0 0 1 cmyk
@
336.988 75.5728 mo
337.519 75.5728 338.027 75.3623 338.402 74.9868 cv
338.777 74.6118 338.988 74.103 338.988 73.5728 cv
338.988 73.0425 338.777 72.5337 338.402 72.1587 cv
338.027 71.7837 337.519 71.5728 336.988 71.5728 cv
336.458 71.5728 335.949 71.7837 335.574 72.1587 cv
335.199 72.5337 334.988 73.0425 334.988 73.5728 cv
334.988 74.103 335.199 74.6118 335.574 74.9868 cv
335.949 75.3623 336.458 75.5728 336.988 75.5728 cv
336.988 75.5728 li
cp
0 .993988 1 0 cmyk
f
336.988 75.5728 mo
337.519 75.5728 338.027 75.3623 338.402 74.9868 cv
338.777 74.6118 338.988 74.103 338.988 73.5728 cv
338.988 73.0425 338.777 72.5337 338.402 72.1587 cv
338.027 71.7837 337.519 71.5728 336.988 71.5728 cv
336.458 71.5728 335.949 71.7837 335.574 72.1587 cv
335.199 72.5337 334.988 73.0425 334.988 73.5728 cv
334.988 74.103 335.199 74.6118 335.574 74.9868 cv
335.949 75.3623 336.458 75.5728 336.988 75.5728 cv
336.988 75.5728 li
cp
0 0 0 1 cmyk
@
354.425 68.0376 mo
354.955 68.0376 355.464 67.8271 355.839 67.4521 cv
356.214 67.0771 356.425 66.5684 356.425 66.0376 cv
356.425 65.5073 356.214 64.9985 355.839 64.6235 cv
355.464 64.2485 354.955 64.0376 354.425 64.0376 cv
353.895 64.0376 353.386 64.2485 353.011 64.6235 cv
352.636 64.9985 352.425 65.5073 352.425 66.0376 cv
352.425 66.5684 352.636 67.0771 353.011 67.4521 cv
353.386 67.8271 353.895 68.0376 354.425 68.0376 cv
354.425 68.0376 li
cp
0 .993988 1 0 cmyk
f
354.425 68.0376 mo
354.955 68.0376 355.464 67.8271 355.839 67.4521 cv
356.214 67.0771 356.425 66.5684 356.425 66.0376 cv
356.425 65.5073 356.214 64.9985 355.839 64.6235 cv
355.464 64.2485 354.955 64.0376 354.425 64.0376 cv
353.895 64.0376 353.386 64.2485 353.011 64.6235 cv
352.636 64.9985 352.425 65.5073 352.425 66.0376 cv
352.425 66.5684 352.636 67.0771 353.011 67.4521 cv
353.386 67.8271 353.895 68.0376 354.425 68.0376 cv
354.425 68.0376 li
cp
0 0 0 1 cmyk
@
gsave
249.8 181.939 mo
389.3 181.939 li
389.3 20.6396 li
249.8 20.6396 li
249.8 181.939 li
cp
clp
371.863 66.4658 mo
372.394 66.4658 372.902 66.2549 373.277 65.8799 cv
373.652 65.5049 373.863 64.9961 373.863 64.4658 cv
373.863 63.9355 373.652 63.4268 373.277 63.0518 cv
372.902 62.6768 372.394 62.4658 371.863 62.4658 cv
371.333 62.4658 370.824 62.6768 370.449 63.0518 cv
370.074 63.4268 369.863 63.9355 369.863 64.4658 cv
369.863 64.9961 370.074 65.5049 370.449 65.8799 cv
370.824 66.2549 371.333 66.4658 371.863 66.4658 cv
371.863 66.4658 li
cp
0 .993988 1 0 cmyk
f
371.863 66.4658 mo
372.394 66.4658 372.902 66.2549 373.277 65.8799 cv
373.652 65.5049 373.863 64.9961 373.863 64.4658 cv
373.863 63.9355 373.652 63.4268 373.277 63.0518 cv
372.902 62.6768 372.394 62.4658 371.863 62.4658 cv
371.333 62.4658 370.824 62.6768 370.449 63.0518 cv
370.074 63.4268 369.863 63.9355 369.863 64.4658 cv
369.863 64.9961 370.074 65.5049 370.449 65.8799 cv
370.824 66.2549 371.333 66.4658 371.863 66.4658 cv
371.863 66.4658 li
cp
0 0 0 1 cmyk
@
389.3 67.0366 mo
389.83 67.0366 390.339 66.8262 390.714 66.4512 cv
391.089 66.0762 391.3 65.5674 391.3 65.0366 cv
391.3 64.5063 391.089 63.9976 390.714 63.6226 cv
390.339 63.2476 389.83 63.0366 389.3 63.0366 cv
388.77 63.0366 388.261 63.2476 387.886 63.6226 cv
387.511 63.9976 387.3 64.5063 387.3 65.0366 cv
387.3 65.5674 387.511 66.0762 387.886 66.4512 cv
388.261 66.8262 388.77 67.0366 389.3 67.0366 cv
389.3 67.0366 li
cp
0 .993988 1 0 cmyk
f
389.3 67.0366 mo
389.83 67.0366 390.339 66.8262 390.714 66.4512 cv
391.089 66.0762 391.3 65.5674 391.3 65.0366 cv
391.3 64.5063 391.089 63.9976 390.714 63.6226 cv
390.339 63.2476 389.83 63.0366 389.3 63.0366 cv
388.77 63.0366 388.261 63.2476 387.886 63.6226 cv
387.511 63.9976 387.3 64.5063 387.3 65.0366 cv
387.3 65.5674 387.511 66.0762 387.886 66.4512 cv
388.261 66.8262 388.77 67.0366 389.3 67.0366 cv
389.3 67.0366 li
cp
0 0 0 1 cmyk
@
1.5 lw
2 lc
249.8 66.7456 mo
267.238 66.688 li
284.675 65.9507 li
302.113 56.4526 li
319.55 88.3438 li
336.988 56.4536 li
354.425 65.9487 li
371.863 66.687 li
389.3 66.7456 li
.713191 0 .306584 0 cmyk
@
249.8 64.7456 mo
249.351 66.1279 li
247.897 66.1279 li
249.073 66.9819 li
248.624 68.3638 li
249.8 67.5098 li
250.976 68.3638 li
250.526 66.9819 li
251.702 66.1279 li
250.249 66.1279 li
249.8 64.7456 li
f
.5 lw
0 lc
249.8 64.7456 mo
249.351 66.1279 li
247.897 66.1279 li
249.073 66.9819 li
248.624 68.3638 li
249.8 67.5098 li
250.976 68.3638 li
250.526 66.9819 li
251.702 66.1279 li
250.249 66.1279 li
249.8 64.7456 li
0 0 0 1 cmyk
@
grestore
267.238 64.688 mo
266.789 66.0698 li
265.336 66.0698 li
266.512 66.9238 li
266.063 68.3057 li
267.238 67.4517 li
268.414 68.3057 li
267.965 66.9238 li
269.14 66.0698 li
267.688 66.0698 li
267.238 64.688 li
.713191 0 .306584 0 cmyk
f
267.238 64.688 mo
266.789 66.0698 li
265.336 66.0698 li
266.512 66.9238 li
266.063 68.3057 li
267.238 67.4517 li
268.414 68.3057 li
267.965 66.9238 li
269.14 66.0698 li
267.688 66.0698 li
267.238 64.688 li
0 0 0 1 cmyk
@
284.675 63.9507 mo
284.226 65.3325 li
282.772 65.3325 li
283.948 66.187 li
283.499 67.5688 li
284.675 66.7148 li
285.851 67.5688 li
285.401 66.187 li
286.577 65.3325 li
285.124 65.3325 li
284.675 63.9507 li
.713191 0 .306584 0 cmyk
f
284.675 63.9507 mo
284.226 65.3325 li
282.772 65.3325 li
283.948 66.187 li
283.499 67.5688 li
284.675 66.7148 li
285.851 67.5688 li
285.401 66.187 li
286.577 65.3325 li
285.124 65.3325 li
284.675 63.9507 li
0 0 0 1 cmyk
@
302.113 54.4526 mo
301.664 55.835 li
300.211 55.835 li
301.387 56.689 li
300.938 58.0708 li
302.113 57.2168 li
303.289 58.0708 li
302.84 56.689 li
304.015 55.835 li
302.563 55.835 li
302.113 54.4526 li
.713191 0 .306584 0 cmyk
f
302.113 54.4526 mo
301.664 55.835 li
300.211 55.835 li
301.387 56.689 li
300.938 58.0708 li
302.113 57.2168 li
303.289 58.0708 li
302.84 56.689 li
304.015 55.835 li
302.563 55.835 li
302.113 54.4526 li
0 0 0 1 cmyk
@
319.55 86.3438 mo
319.101 87.7256 li
317.647 87.7256 li
318.823 88.5801 li
318.374 89.9619 li
319.55 89.1079 li
320.726 89.9619 li
320.276 88.5801 li
321.452 87.7256 li
319.999 87.7256 li
319.55 86.3438 li
.713191 0 .306584 0 cmyk
f
319.55 86.3438 mo
319.101 87.7256 li
317.647 87.7256 li
318.823 88.5801 li
318.374 89.9619 li
319.55 89.1079 li
320.726 89.9619 li
320.276 88.5801 li
321.452 87.7256 li
319.999 87.7256 li
319.55 86.3438 li
0 0 0 1 cmyk
@
336.988 54.4536 mo
336.539 55.8359 li
335.086 55.8359 li
336.262 56.6899 li
335.813 58.0718 li
336.988 57.2178 li
338.164 58.0718 li
337.715 56.6899 li
338.89 55.8359 li
337.438 55.8359 li
336.988 54.4536 li
.713191 0 .306584 0 cmyk
f
336.988 54.4536 mo
336.539 55.8359 li
335.086 55.8359 li
336.262 56.6899 li
335.813 58.0718 li
336.988 57.2178 li
338.164 58.0718 li
337.715 56.6899 li
338.89 55.8359 li
337.438 55.8359 li
336.988 54.4536 li
0 0 0 1 cmyk
@
354.425 63.9487 mo
353.976 65.3306 li
352.522 65.3306 li
353.698 66.1851 li
353.249 67.5669 li
354.425 66.7129 li
355.601 67.5669 li
355.151 66.1851 li
356.327 65.3306 li
354.874 65.3306 li
354.425 63.9487 li
.713191 0 .306584 0 cmyk
f
354.425 63.9487 mo
353.976 65.3306 li
352.522 65.3306 li
353.698 66.1851 li
353.249 67.5669 li
354.425 66.7129 li
355.601 67.5669 li
355.151 66.1851 li
356.327 65.3306 li
354.874 65.3306 li
354.425 63.9487 li
0 0 0 1 cmyk
@
gsave
249.8 181.939 mo
389.3 181.939 li
389.3 20.6396 li
249.8 20.6396 li
249.8 181.939 li
cp
clp
371.863 64.687 mo
371.414 66.0688 li
369.961 66.0688 li
371.137 66.9229 li
370.688 68.3047 li
371.863 67.4507 li
373.039 68.3047 li
372.59 66.9229 li
373.766 66.0688 li
372.313 66.0688 li
371.863 64.687 li
.713191 0 .306584 0 cmyk
f
371.863 64.687 mo
371.414 66.0688 li
369.961 66.0688 li
371.137 66.9229 li
370.688 68.3047 li
371.863 67.4507 li
373.039 68.3047 li
372.59 66.9229 li
373.766 66.0688 li
372.313 66.0688 li
371.863 64.687 li
0 0 0 1 cmyk
@
389.3 64.7456 mo
388.851 66.1279 li
387.397 66.1279 li
388.573 66.9819 li
388.124 68.3638 li
389.3 67.5098 li
390.476 68.3638 li
390.026 66.9819 li
391.202 66.1279 li
389.749 66.1279 li
389.3 64.7456 li
.713191 0 .306584 0 cmyk
f
389.3 64.7456 mo
388.851 66.1279 li
387.397 66.1279 li
388.573 66.9819 li
388.124 68.3638 li
389.3 67.5098 li
390.476 68.3638 li
390.026 66.9819 li
391.202 66.1279 li
389.749 66.1279 li
389.3 64.7456 li
0 0 0 1 cmyk
@
1.5 lw
[6 6 ] 0 dsh
249.8 64.3525 mo
267.238 62.2178 li
284.675 56.8379 li
302.113 37.4355 li
319.55 163.557 li
336.988 37.2417 li
354.425 56.6128 li
371.863 62.0698 li
389.3 64.2275 li
.385412 .90045 0 0 cmyk
@
1 lw
249.8 66.7397 mo
389.3 66.7397 li
0 0 0 1 cmyk
@
grestore
249.8 20.6597 mo
249.8 24.6597 li
249.8 181.939 mo
249.8 177.939 li
@
245.428 188.956 mo
250.436 188.956 li
250.436 189.588 li
245.428 189.588 li
245.428 188.956 li
245.428 188.956 li
cp
ef
255.813 191.78 mo
253.156 191.78 li
253.156 191.364 li
254.092 191.364 li
254.092 190.22 li
251.548 190.22 li
251.548 189.796 li
254.1 185.844 li
254.876 185.844 li
254.876 189.804 li
255.988 189.804 li
255.988 190.22 li
254.876 190.22 li
254.876 191.364 li
255.813 191.364 li
255.813 191.78 li
255.813 191.78 li
cp
254.092 189.804 mo
254.092 186.7 li
252.1 189.804 li
254.092 189.804 li
ef
267.238 20.6597 mo
267.238 24.6597 li
267.238 181.939 mo
267.238 177.939 li
@
262.948 188.956 mo
267.956 188.956 li
267.956 189.588 li
262.948 189.588 li
262.948 188.956 li
262.948 188.956 li
cp
ef
269.596 186.195 mo
269.9 186.084 270.188 185.996 270.468 185.932 cv
270.748 185.876 271.012 185.844 271.26 185.844 cv
271.828 185.844 272.276 185.972 272.596 186.212 cv
272.916 186.46 273.076 186.804 273.076 187.235 cv
273.076 187.588 272.964 187.884 272.74 188.116 cv
272.516 188.355 272.204 188.516 271.804 188.596 cv
272.284 188.668 272.652 188.844 272.916 189.124 cv
273.18 189.403 273.316 189.764 273.316 190.204 cv
273.316 190.748 273.132 191.164 272.764 191.452 cv
272.396 191.74 271.876 191.884 271.188 191.884 cv
270.884 191.884 270.58 191.852 270.292 191.788 cv
270.004 191.731 269.716 191.636 269.428 191.5 cv
269.428 190.364 li
269.868 190.364 li
269.892 190.748 270.02 191.027 270.244 191.22 cv
270.468 191.412 270.788 191.508 271.204 191.508 cv
271.604 191.508 271.916 191.396 272.148 191.164 cv
272.372 190.932 272.492 190.611 272.492 190.212 cv
272.492 189.756 272.372 189.412 272.132 189.172 cv
271.892 188.939 271.548 188.819 271.092 188.819 cv
270.724 188.819 li
270.724 188.42 li
270.916 188.42 li
271.372 188.42 271.716 188.332 271.94 188.14 cv
272.164 187.948 272.284 187.668 272.284 187.284 cv
272.284 186.948 272.188 186.684 272.004 186.5 cv
271.813 186.324 271.548 186.228 271.196 186.228 cv
270.844 186.228 270.564 186.315 270.372 186.483 cv
270.18 186.651 270.068 186.899 270.036 187.22 cv
269.596 187.22 li
269.596 186.195 li
269.596 186.195 li
cp
ef
284.675 20.6597 mo
284.675 24.6597 li
284.675 181.939 mo
284.675 177.939 li
@
280.468 188.956 mo
285.476 188.956 li
285.476 189.588 li
280.468 189.588 li
280.468 188.956 li
280.468 188.956 li
cp
ef
287.364 187.34 mo
286.924 187.34 li
286.924 186.3 li
287.196 186.155 287.476 186.044 287.764 185.964 cv
288.044 185.884 288.324 185.844 288.596 185.844 cv
289.204 185.844 289.684 185.996 290.036 186.284 cv
290.388 186.58 290.564 186.979 290.564 187.483 cv
290.564 188.06 290.164 188.74 289.364 189.532 cv
289.3 189.596 289.26 189.636 289.228 189.668 cv
287.756 191.14 li
290.188 191.14 li
290.188 190.42 li
290.644 190.42 li
290.644 191.78 li
286.884 191.78 li
286.884 191.355 li
288.652 189.588 li
289.036 189.204 289.316 188.844 289.484 188.516 cv
289.652 188.188 289.74 187.844 289.74 187.483 cv
289.74 187.092 289.636 186.788 289.428 186.563 cv
289.22 186.34 288.94 186.228 288.588 186.228 cv
288.212 186.228 287.924 186.324 287.724 186.508 cv
287.516 186.691 287.396 186.972 287.364 187.34 cv
287.364 187.34 li
cp
ef
302.113 20.6597 mo
302.113 24.6597 li
302.113 181.939 mo
302.113 177.939 li
@
297.988 188.956 mo
302.996 188.956 li
302.996 189.588 li
297.988 189.588 li
297.988 188.956 li
297.988 188.956 li
cp
ef
304.996 191.78 mo
304.996 191.364 li
306.012 191.364 li
306.012 186.516 li
304.836 187.275 li
304.836 186.764 li
306.26 185.844 li
306.796 185.844 li
306.796 191.364 li
307.813 191.364 li
307.813 191.78 li
304.996 191.78 li
304.996 191.78 li
cp
ef
319.55 20.6597 mo
319.55 24.6597 li
319.55 181.939 mo
319.55 177.939 li
@
320.084 191.884 mo
319.444 191.884 318.948 191.62 318.596 191.092 cv
318.244 190.563 318.068 189.828 318.068 188.868 cv
318.068 187.916 318.244 187.172 318.596 186.644 cv
318.948 186.116 319.444 185.844 320.084 185.844 cv
320.716 185.844 321.212 186.116 321.564 186.644 cv
321.916 187.172 322.1 187.916 322.1 188.868 cv
322.1 189.828 321.916 190.563 321.564 191.092 cv
321.212 191.62 320.716 191.884 320.084 191.884 cv
320.084 191.884 li
cp
320.084 191.508 mo
320.484 191.508 320.78 191.292 320.98 190.852 cv
321.172 190.42 321.276 189.756 321.276 188.868 cv
321.276 187.987 321.172 187.324 320.98 186.884 cv
320.78 186.452 320.484 186.228 320.084 186.228 cv
319.684 186.228 319.38 186.452 319.188 186.884 cv
318.988 187.324 318.892 187.987 318.892 188.868 cv
318.892 189.756 318.988 190.42 319.188 190.852 cv
319.38 191.292 319.684 191.508 320.084 191.508 cv
ef
336.988 20.6597 mo
336.988 24.6597 li
336.988 181.939 mo
336.988 177.939 li
@
336.676 191.78 mo
336.676 191.364 li
337.692 191.364 li
337.692 186.516 li
336.516 187.275 li
336.516 186.764 li
337.94 185.844 li
338.476 185.844 li
338.476 191.364 li
339.492 191.364 li
339.492 191.78 li
336.676 191.78 li
336.676 191.78 li
cp
ef
354.425 20.6597 mo
354.425 24.6597 li
354.425 181.939 mo
354.425 177.939 li
@
353.604 187.34 mo
353.164 187.34 li
353.164 186.3 li
353.436 186.155 353.716 186.044 354.004 185.964 cv
354.284 185.884 354.564 185.844 354.836 185.844 cv
355.444 185.844 355.924 185.996 356.276 186.284 cv
356.628 186.58 356.804 186.979 356.804 187.483 cv
356.804 188.06 356.404 188.74 355.604 189.532 cv
355.54 189.596 355.5 189.636 355.468 189.668 cv
353.996 191.14 li
356.428 191.14 li
356.428 190.42 li
356.884 190.42 li
356.884 191.78 li
353.124 191.78 li
353.124 191.355 li
354.892 189.588 li
355.276 189.204 355.556 188.844 355.724 188.516 cv
355.892 188.188 355.98 187.844 355.98 187.483 cv
355.98 187.092 355.876 186.788 355.668 186.563 cv
355.46 186.34 355.18 186.228 354.828 186.228 cv
354.452 186.228 354.164 186.324 353.964 186.508 cv
353.756 186.691 353.636 186.972 353.604 187.34 cv
353.604 187.34 li
cp
ef
371.863 20.6597 mo
371.863 24.6597 li
371.863 181.939 mo
371.863 177.939 li
@
370.636 186.195 mo
370.94 186.084 371.229 185.996 371.508 185.932 cv
371.788 185.876 372.052 185.844 372.3 185.844 cv
372.868 185.844 373.316 185.972 373.636 186.212 cv
373.956 186.46 374.116 186.804 374.116 187.235 cv
374.116 187.588 374.004 187.884 373.78 188.116 cv
373.556 188.355 373.244 188.516 372.844 188.596 cv
373.324 188.668 373.692 188.844 373.956 189.124 cv
374.22 189.403 374.356 189.764 374.356 190.204 cv
374.356 190.748 374.172 191.164 373.804 191.452 cv
373.436 191.74 372.916 191.884 372.228 191.884 cv
371.924 191.884 371.62 191.852 371.332 191.788 cv
371.044 191.731 370.756 191.636 370.468 191.5 cv
370.468 190.364 li
370.908 190.364 li
370.932 190.748 371.06 191.027 371.284 191.22 cv
371.508 191.412 371.828 191.508 372.244 191.508 cv
372.644 191.508 372.956 191.396 373.188 191.164 cv
373.412 190.932 373.532 190.611 373.532 190.212 cv
373.532 189.756 373.412 189.412 373.172 189.172 cv
372.932 188.939 372.588 188.819 372.132 188.819 cv
371.764 188.819 li
371.764 188.42 li
371.956 188.42 li
372.412 188.42 372.756 188.332 372.98 188.14 cv
373.204 187.948 373.324 187.668 373.324 187.284 cv
373.324 186.948 373.228 186.684 373.044 186.5 cv
372.852 186.324 372.588 186.228 372.236 186.228 cv
371.884 186.228 371.604 186.315 371.412 186.483 cv
371.22 186.651 371.108 186.899 371.076 187.22 cv
370.636 187.22 li
370.636 186.195 li
370.636 186.195 li
cp
ef
389.3 20.6597 mo
389.3 24.6597 li
389.3 181.939 mo
389.3 177.939 li
@
391.652 191.78 mo
388.996 191.78 li
388.996 191.364 li
389.932 191.364 li
389.932 190.22 li
387.388 190.22 li
387.388 189.796 li
389.94 185.844 li
390.716 185.844 li
390.716 189.804 li
391.828 189.804 li
391.828 190.22 li
390.716 190.22 li
390.716 191.364 li
391.652 191.364 li
391.652 191.78 li
391.652 191.78 li
cp
389.932 189.804 mo
389.932 186.7 li
387.94 189.804 li
389.932 189.804 li
ef
317.429 201.859 mo
317.429 201.392 li
318.158 201.392 li
318.158 197.657 li
317.384 197.657 li
317.384 197.188 li
318.968 197.188 li
318.968 198.017 li
319.112 197.711 319.31 197.468 319.544 197.306 cv
319.778 197.144 320.057 197.063 320.381 197.063 cv
320.894 197.063 321.272 197.216 321.515 197.504 cv
321.758 197.801 321.884 198.26 321.884 198.89 cv
321.884 201.392 li
322.604 201.392 li
322.604 201.859 li
320.372 201.859 li
320.372 201.392 li
321.074 201.392 li
321.074 199.142 li
321.074 198.575 321.002 198.188 320.858 197.972 cv
320.714 197.756 320.471 197.647 320.12 197.647 cv
319.742 197.647 319.454 197.792 319.256 198.062 cv
319.058 198.341 318.968 198.736 318.968 199.259 cv
318.968 201.392 li
319.67 201.392 li
319.67 201.859 li
317.429 201.859 li
317.429 201.859 li
cp
ef
389.3 158.899 mo
385.3 158.899 li
249.8 158.899 mo
253.8 158.899 li
@
212.516 159.7 mo
212.468 159.7 212.436 159.684 212.404 159.651 cv
212.372 159.62 212.364 159.58 212.364 159.54 cv
212.364 159.508 212.372 159.468 212.404 159.436 cv
212.436 159.403 212.468 159.38 212.516 159.38 cv
217.108 159.38 li
217.148 159.38 217.18 159.403 217.212 159.436 cv
217.236 159.468 217.252 159.508 217.252 159.54 cv
217.252 159.58 217.236 159.62 217.212 159.651 cv
217.18 159.684 217.148 159.7 217.108 159.7 cv
212.516 159.7 li
212.516 159.7 li
cp
ef
218.428 159.939 mo
220.324 159.939 li
220.324 157.107 li
218.428 159.939 li
218.428 159.939 li
cp
218.164 160.22 mo
218.164 159.939 li
220.636 156.252 li
220.652 156.228 220.676 156.212 220.716 156.212 cv
220.836 156.212 li
220.892 156.212 220.924 156.244 220.924 156.3 cv
220.924 159.939 li
221.708 159.939 li
221.708 160.22 li
220.924 160.22 li
220.924 161.004 li
220.924 161.116 220.996 161.188 221.156 161.22 cv
221.316 161.252 221.492 161.26 221.7 161.26 cv
221.7 161.54 li
219.5 161.54 li
219.5 161.26 li
219.7 161.26 219.876 161.252 220.036 161.22 cv
220.196 161.188 220.276 161.116 220.276 161.004 cv
220.276 160.22 li
218.164 160.22 li
ef
224.636 161.308 mo
224.636 161.268 224.644 161.228 224.676 161.195 cv
226.34 159.54 li
224.676 157.876 li
224.644 157.852 224.636 157.819 224.636 157.771 cv
224.636 157.731 224.652 157.691 224.684 157.66 cv
224.716 157.628 224.748 157.611 224.796 157.611 cv
224.828 157.611 224.868 157.628 224.916 157.66 cv
226.572 159.315 li
228.22 157.66 li
228.268 157.628 228.308 157.611 228.34 157.611 cv
228.38 157.611 228.42 157.628 228.452 157.66 cv
228.484 157.691 228.5 157.731 228.5 157.771 cv
228.5 157.819 228.484 157.852 228.46 157.876 cv
226.796 159.54 li
228.46 161.195 li
228.484 161.228 228.5 161.268 228.5 161.308 cv
228.5 161.355 228.484 161.388 228.452 161.42 cv
228.42 161.452 228.38 161.468 228.34 161.468 cv
228.3 161.468 228.26 161.452 228.22 161.412 cv
226.572 159.764 li
224.916 161.412 li
224.876 161.452 224.836 161.468 224.796 161.468 cv
224.748 161.468 224.716 161.452 224.684 161.42 cv
224.652 161.388 224.636 161.355 224.636 161.308 cv
224.636 161.308 li
cp
ef
229.484 161.54 mo
229.484 161.26 li
230.148 161.26 230.484 161.18 230.484 161.004 cv
230.484 156.804 li
230.204 156.939 229.852 157.004 229.436 157.004 cv
229.436 156.724 li
230.084 156.724 230.58 156.556 230.916 156.212 cv
231.028 156.212 li
231.044 156.212 231.068 156.22 231.084 156.235 cv
231.1 156.252 231.108 156.268 231.108 156.284 cv
231.108 161.004 li
231.108 161.18 231.436 161.26 232.108 161.26 cv
232.108 161.54 li
229.484 161.54 li
229.484 161.54 li
cp
ef
234.58 161.508 mo
234.876 161.508 235.1 161.355 235.244 161.052 cv
235.388 160.748 235.476 160.412 235.508 160.044 cv
235.54 159.676 235.564 159.275 235.564 158.859 cv
235.564 158.46 235.54 158.092 235.508 157.756 cv
235.476 157.42 235.388 157.107 235.244 156.836 cv
235.1 156.563 234.876 156.42 234.58 156.42 cv
234.276 156.42 234.052 156.563 233.908 156.836 cv
233.764 157.107 233.668 157.42 233.636 157.756 cv
233.604 158.092 233.588 158.46 233.588 158.859 cv
233.588 159.164 233.588 159.443 233.604 159.7 cv
233.62 159.964 233.66 160.235 233.724 160.516 cv
233.788 160.796 233.884 161.027 234.028 161.22 cv
234.164 161.412 234.348 161.508 234.58 161.508 cv
234.58 161.508 li
cp
234.58 161.708 mo
233.924 161.708 233.476 161.443 233.244 160.908 cv
233.004 160.372 232.892 159.731 232.892 158.987 cv
232.892 158.523 232.932 158.092 233.02 157.684 cv
233.1 157.275 233.268 156.932 233.524 156.644 cv
233.772 156.355 234.124 156.212 234.58 156.212 cv
234.932 156.212 235.22 156.3 235.444 156.468 cv
235.668 156.644 235.836 156.859 235.956 157.132 cv
236.068 157.403 236.148 157.7 236.196 158.012 cv
236.236 158.324 236.26 158.651 236.26 158.987 cv
236.26 159.452 236.212 159.876 236.132 160.275 cv
236.044 160.676 235.876 161.02 235.628 161.292 cv
235.38 161.563 235.028 161.708 234.58 161.708 cv
ef
237.231 156.892 mo
237.197 156.892 237.175 156.881 237.152 156.858 cv
237.131 156.836 237.125 156.808 237.125 156.78 cv
237.125 156.758 237.131 156.729 237.152 156.707 cv
237.175 156.685 237.197 156.668 237.231 156.668 cv
240.445 156.668 li
240.474 156.668 240.496 156.685 240.519 156.707 cv
240.535 156.729 240.547 156.758 240.547 156.78 cv
240.547 156.808 240.535 156.836 240.519 156.858 cv
240.496 156.881 240.474 156.892 240.445 156.892 cv
237.231 156.892 li
237.231 156.892 li
cp
ef
241.321 157.06 mo
242.648 157.06 li
242.648 155.077 li
241.321 157.06 li
241.321 157.06 li
cp
241.137 157.256 mo
241.137 157.06 li
242.867 154.479 li
242.879 154.461 242.896 154.45 242.923 154.45 cv
243.007 154.45 li
243.047 154.45 243.068 154.473 243.068 154.512 cv
243.068 157.06 li
243.617 157.06 li
243.617 157.256 li
243.068 157.256 li
243.068 157.805 li
243.068 157.883 243.119 157.934 243.231 157.956 cv
243.343 157.979 243.467 157.983 243.612 157.983 cv
243.612 158.18 li
242.072 158.18 li
242.072 157.983 li
242.212 157.983 242.335 157.979 242.447 157.956 cv
242.56 157.934 242.615 157.883 242.615 157.805 cv
242.615 157.256 li
241.137 157.256 li
ef
389.3 112.819 mo
385.3 112.819 li
249.8 112.819 mo
253.8 112.819 li
@
212.516 113.62 mo
212.468 113.62 212.436 113.604 212.404 113.571 cv
212.372 113.54 212.364 113.5 212.364 113.46 cv
212.364 113.428 212.372 113.388 212.404 113.355 cv
212.436 113.324 212.468 113.3 212.516 113.3 cv
217.108 113.3 li
217.148 113.3 217.18 113.324 217.212 113.355 cv
217.236 113.388 217.252 113.428 217.252 113.46 cv
217.252 113.5 217.236 113.54 217.212 113.571 cv
217.18 113.604 217.148 113.62 217.108 113.62 cv
212.516 113.62 li
212.516 113.62 li
cp
ef
218.34 115.46 mo
218.34 115.244 li
218.34 115.235 218.34 115.22 218.356 115.204 cv
219.596 113.828 li
219.78 113.628 219.932 113.46 220.052 113.315 cv
220.164 113.18 220.284 113.02 220.396 112.844 cv
220.508 112.668 220.604 112.483 220.668 112.292 cv
220.732 112.107 220.772 111.908 220.772 111.7 cv
220.772 111.483 220.732 111.275 220.652 111.076 cv
220.572 110.876 220.452 110.716 220.292 110.596 cv
220.132 110.476 219.932 110.412 219.708 110.412 cv
219.476 110.412 219.268 110.483 219.084 110.62 cv
218.892 110.764 218.764 110.939 218.692 111.164 cv
218.708 111.164 218.74 111.155 218.78 111.155 cv
218.892 111.155 218.996 111.195 219.084 111.275 cv
219.164 111.355 219.212 111.46 219.212 111.588 cv
219.212 111.716 219.164 111.819 219.084 111.899 cv
218.996 111.987 218.892 112.027 218.78 112.027 cv
218.652 112.027 218.548 111.987 218.468 111.899 cv
218.38 111.812 218.34 111.708 218.34 111.588 cv
218.34 111.396 218.372 111.204 218.452 111.027 cv
218.524 110.852 218.628 110.7 218.772 110.556 cv
218.916 110.42 219.076 110.315 219.252 110.244 cv
219.428 110.172 219.62 110.132 219.828 110.132 cv
220.132 110.132 220.412 110.195 220.676 110.324 cv
220.94 110.452 221.148 110.636 221.3 110.876 cv
221.452 111.116 221.532 111.388 221.532 111.7 cv
221.532 111.932 221.476 112.147 221.38 112.355 cv
221.276 112.563 221.148 112.756 220.988 112.924 cv
220.828 113.1 220.628 113.292 220.38 113.508 cv
220.132 113.724 219.972 113.868 219.892 113.939 cv
218.988 114.812 li
219.756 114.812 li
220.132 114.812 220.444 114.812 220.7 114.804 cv
220.956 114.804 221.092 114.788 221.108 114.771 cv
221.172 114.708 221.236 114.46 221.3 114.036 cv
221.532 114.036 li
221.308 115.46 li
218.34 115.46 li
218.34 115.46 li
cp
ef
224.636 115.228 mo
224.636 115.188 224.644 115.147 224.676 115.116 cv
226.34 113.46 li
224.676 111.796 li
224.644 111.771 224.636 111.74 224.636 111.691 cv
224.636 111.651 224.652 111.611 224.684 111.58 cv
224.716 111.548 224.748 111.532 224.796 111.532 cv
224.828 111.532 224.868 111.548 224.916 111.58 cv
226.572 113.235 li
228.22 111.58 li
228.268 111.548 228.308 111.532 228.34 111.532 cv
228.38 111.532 228.42 111.548 228.452 111.58 cv
228.484 111.611 228.5 111.651 228.5 111.691 cv
228.5 111.74 228.484 111.771 228.46 111.796 cv
226.796 113.46 li
228.46 115.116 li
228.484 115.147 228.5 115.188 228.5 115.228 cv
228.5 115.275 228.484 115.308 228.452 115.34 cv
228.42 115.372 228.38 115.388 228.34 115.388 cv
228.3 115.388 228.26 115.372 228.22 115.332 cv
226.572 113.684 li
224.916 115.332 li
224.876 115.372 224.836 115.388 224.796 115.388 cv
224.748 115.388 224.716 115.372 224.684 115.34 cv
224.652 115.308 224.636 115.275 224.636 115.228 cv
224.636 115.228 li
cp
ef
229.484 115.46 mo
229.484 115.18 li
230.148 115.18 230.484 115.1 230.484 114.924 cv
230.484 110.724 li
230.204 110.859 229.852 110.924 229.436 110.924 cv
229.436 110.644 li
230.084 110.644 230.58 110.476 230.916 110.132 cv
231.028 110.132 li
231.044 110.132 231.068 110.14 231.084 110.155 cv
231.1 110.172 231.108 110.188 231.108 110.204 cv
231.108 114.924 li
231.108 115.1 231.436 115.18 232.108 115.18 cv
232.108 115.46 li
229.484 115.46 li
229.484 115.46 li
cp
ef
234.58 115.428 mo
234.876 115.428 235.1 115.275 235.244 114.972 cv
235.388 114.668 235.476 114.332 235.508 113.964 cv
235.54 113.596 235.564 113.195 235.564 112.78 cv
235.564 112.38 235.54 112.012 235.508 111.676 cv
235.476 111.34 235.388 111.027 235.244 110.756 cv
235.1 110.483 234.876 110.34 234.58 110.34 cv
234.276 110.34 234.052 110.483 233.908 110.756 cv
233.764 111.027 233.668 111.34 233.636 111.676 cv
233.604 112.012 233.588 112.38 233.588 112.78 cv
233.588 113.084 233.588 113.364 233.604 113.62 cv
233.62 113.884 233.66 114.155 233.724 114.436 cv
233.788 114.716 233.884 114.948 234.028 115.14 cv
234.164 115.332 234.348 115.428 234.58 115.428 cv
234.58 115.428 li
cp
234.58 115.628 mo
233.924 115.628 233.476 115.364 233.244 114.828 cv
233.004 114.292 232.892 113.651 232.892 112.908 cv
232.892 112.443 232.932 112.012 233.02 111.604 cv
233.1 111.195 233.268 110.852 233.524 110.563 cv
233.772 110.275 234.124 110.132 234.58 110.132 cv
234.932 110.132 235.22 110.22 235.444 110.388 cv
235.668 110.563 235.836 110.78 235.956 111.052 cv
236.068 111.324 236.148 111.62 236.196 111.932 cv
236.236 112.244 236.26 112.571 236.26 112.908 cv
236.26 113.372 236.212 113.796 236.132 114.195 cv
236.044 114.596 235.876 114.939 235.628 115.212 cv
235.38 115.483 235.028 115.628 234.58 115.628 cv
ef
237.231 110.812 mo
237.197 110.812 237.175 110.801 237.152 110.778 cv
237.131 110.756 237.125 110.728 237.125 110.7 cv
237.125 110.678 237.131 110.649 237.152 110.627 cv
237.175 110.604 237.197 110.588 237.231 110.588 cv
240.445 110.588 li
240.474 110.588 240.496 110.604 240.519 110.627 cv
240.535 110.649 240.547 110.678 240.547 110.7 cv
240.547 110.728 240.535 110.756 240.519 110.778 cv
240.496 110.801 240.474 110.812 240.445 110.812 cv
237.231 110.812 li
237.231 110.812 li
cp
ef
241.321 110.979 mo
242.648 110.979 li
242.648 108.997 li
241.321 110.979 li
241.321 110.979 li
cp
241.137 111.176 mo
241.137 110.979 li
242.867 108.398 li
242.879 108.382 242.896 108.37 242.923 108.37 cv
243.007 108.37 li
243.047 108.37 243.068 108.393 243.068 108.432 cv
243.068 110.979 li
243.617 110.979 li
243.617 111.176 li
243.068 111.176 li
243.068 111.725 li
243.068 111.803 243.119 111.854 243.231 111.876 cv
243.343 111.898 243.467 111.903 243.612 111.903 cv
243.612 112.1 li
242.072 112.1 li
242.072 111.903 li
242.212 111.903 242.335 111.898 242.447 111.876 cv
242.56 111.854 242.615 111.803 242.615 111.725 cv
242.615 111.176 li
241.137 111.176 li
ef
389.3 66.7397 mo
385.3 66.7397 li
249.8 66.7397 mo
253.8 66.7397 li
@
243.7 68.6279 mo
243.996 68.6279 244.22 68.4756 244.364 68.1719 cv
244.508 67.8677 244.596 67.5317 244.628 67.1636 cv
244.66 66.7959 244.684 66.3955 244.684 65.98 cv
244.684 65.5796 244.66 65.2119 244.628 64.876 cv
244.596 64.5396 244.508 64.2275 244.364 63.9556 cv
244.22 63.6836 243.996 63.5396 243.7 63.5396 cv
243.396 63.5396 243.172 63.6836 243.028 63.9556 cv
242.884 64.2275 242.788 64.5396 242.756 64.876 cv
242.724 65.2119 242.708 65.5796 242.708 65.98 cv
242.708 66.2837 242.708 66.564 242.724 66.8198 cv
242.74 67.084 242.78 67.356 242.844 67.6357 cv
242.908 67.916 243.004 68.1479 243.148 68.3398 cv
243.284 68.5317 243.468 68.6279 243.7 68.6279 cv
243.7 68.6279 li
cp
243.7 68.8276 mo
243.044 68.8276 242.596 68.564 242.364 68.0278 cv
242.124 67.4917 242.012 66.8516 242.012 66.1079 cv
242.012 65.6436 242.052 65.2119 242.14 64.8037 cv
242.22 64.396 242.388 64.0518 242.644 63.7637 cv
242.892 63.4756 243.244 63.3315 243.7 63.3315 cv
244.052 63.3315 244.34 63.4199 244.564 63.5879 cv
244.788 63.7637 244.956 63.98 245.076 64.252 cv
245.188 64.5239 245.268 64.8198 245.316 65.1318 cv
245.356 65.4438 245.38 65.772 245.38 66.1079 cv
245.38 66.5718 245.332 66.9956 245.252 67.396 cv
245.164 67.7959 244.996 68.1396 244.748 68.4116 cv
244.5 68.6836 244.148 68.8276 243.7 68.8276 cv
ef
389.3 20.6597 mo
385.3 20.6597 li
249.8 20.6597 mo
253.8 20.6597 li
@
218.1 23.2998 mo
218.1 23.084 li
218.1 23.0757 218.1 23.0596 218.116 23.0439 cv
219.356 21.668 li
219.54 21.4678 219.692 21.2998 219.813 21.1558 cv
219.924 21.0195 220.044 20.8599 220.156 20.6836 cv
220.268 20.5078 220.364 20.3237 220.428 20.1318 cv
220.492 19.9478 220.532 19.7476 220.532 19.5396 cv
220.532 19.3237 220.492 19.1157 220.412 18.916 cv
220.332 18.7158 220.212 18.5557 220.052 18.4355 cv
219.892 18.3159 219.692 18.252 219.468 18.252 cv
219.236 18.252 219.028 18.3237 218.844 18.46 cv
218.652 18.6035 218.524 18.7798 218.452 19.0039 cv
218.468 19.0039 218.5 18.9956 218.54 18.9956 cv
218.652 18.9956 218.756 19.0356 218.844 19.1157 cv
218.924 19.1958 218.972 19.2998 218.972 19.4277 cv
218.972 19.5557 218.924 19.6597 218.844 19.7397 cv
218.756 19.8276 218.652 19.8677 218.54 19.8677 cv
218.412 19.8677 218.308 19.8276 218.228 19.7397 cv
218.14 19.6519 218.1 19.5479 218.1 19.4277 cv
218.1 19.2358 218.132 19.0439 218.212 18.8677 cv
218.284 18.6919 218.388 18.5396 218.532 18.3955 cv
218.676 18.2598 218.836 18.1558 219.012 18.084 cv
219.188 18.0117 219.38 17.9717 219.588 17.9717 cv
219.892 17.9717 220.172 18.0356 220.436 18.1636 cv
220.7 18.292 220.908 18.4756 221.06 18.7158 cv
221.212 18.9556 221.292 19.2275 221.292 19.5396 cv
221.292 19.772 221.236 19.9878 221.14 20.1958 cv
221.036 20.4038 220.908 20.5957 220.748 20.7637 cv
220.588 20.9399 220.388 21.1318 220.14 21.3477 cv
219.892 21.564 219.732 21.708 219.652 21.7798 cv
218.748 22.6519 li
219.516 22.6519 li
219.892 22.6519 220.204 22.6519 220.46 22.6436 cv
220.716 22.6436 220.852 22.6279 220.868 22.6118 cv
220.932 22.5479 220.996 22.2998 221.06 21.876 cv
221.292 21.876 li
221.068 23.2998 li
218.1 23.2998 li
218.1 23.2998 li
cp
ef
224.396 23.0679 mo
224.396 23.0278 224.404 22.9878 224.436 22.9556 cv
226.1 21.2998 li
224.436 19.6357 li
224.404 19.6118 224.396 19.5796 224.396 19.5317 cv
224.396 19.4917 224.412 19.4517 224.444 19.4199 cv
224.476 19.3877 224.508 19.3716 224.556 19.3716 cv
224.588 19.3716 224.628 19.3877 224.676 19.4199 cv
226.332 21.0757 li
227.98 19.4199 li
228.028 19.3877 228.068 19.3716 228.1 19.3716 cv
228.14 19.3716 228.18 19.3877 228.212 19.4199 cv
228.244 19.4517 228.26 19.4917 228.26 19.5317 cv
228.26 19.5796 228.244 19.6118 228.22 19.6357 cv
226.556 21.2998 li
228.22 22.9556 li
228.244 22.9878 228.26 23.0278 228.26 23.0679 cv
228.26 23.1157 228.244 23.1479 228.212 23.1797 cv
228.18 23.2119 228.14 23.2275 228.1 23.2275 cv
228.06 23.2275 228.02 23.2119 227.98 23.1719 cv
226.332 21.5239 li
224.676 23.1719 li
224.636 23.2119 224.596 23.2275 224.556 23.2275 cv
224.508 23.2275 224.476 23.2119 224.444 23.1797 cv
224.412 23.1479 224.396 23.1157 224.396 23.0679 cv
224.396 23.0679 li
cp
ef
229.244 23.2998 mo
229.244 23.0195 li
229.908 23.0195 230.244 22.9399 230.244 22.7637 cv
230.244 18.564 li
229.964 18.6997 229.612 18.7637 229.196 18.7637 cv
229.196 18.4839 li
229.844 18.4839 230.34 18.3159 230.676 17.9717 cv
230.788 17.9717 li
230.804 17.9717 230.828 17.98 230.844 17.9956 cv
230.86 18.0117 230.868 18.0278 230.868 18.0439 cv
230.868 22.7637 li
230.868 22.9399 231.196 23.0195 231.868 23.0195 cv
231.868 23.2998 li
229.244 23.2998 li
229.244 23.2998 li
cp
ef
234.58 23.2676 mo
234.876 23.2676 235.1 23.1157 235.244 22.8115 cv
235.388 22.5078 235.476 22.1719 235.508 21.8037 cv
235.54 21.4355 235.564 21.0356 235.564 20.6196 cv
235.564 20.2197 235.54 19.8516 235.508 19.5156 cv
235.476 19.1797 235.388 18.8677 235.244 18.5957 cv
235.1 18.3237 234.876 18.1797 234.58 18.1797 cv
234.276 18.1797 234.052 18.3237 233.908 18.5957 cv
233.764 18.8677 233.668 19.1797 233.636 19.5156 cv
233.604 19.8516 233.588 20.2197 233.588 20.6196 cv
233.588 20.9238 233.588 21.2036 233.604 21.46 cv
233.62 21.7236 233.66 21.9956 233.724 22.2759 cv
233.788 22.5557 233.884 22.7876 234.028 22.98 cv
234.164 23.1719 234.348 23.2676 234.58 23.2676 cv
234.58 23.2676 li
cp
234.58 23.4678 mo
233.924 23.4678 233.476 23.2036 233.244 22.668 cv
233.004 22.1318 232.892 21.4917 232.892 20.7476 cv
232.892 20.2837 232.932 19.8516 233.02 19.4438 cv
233.1 19.0356 233.268 18.6919 233.524 18.4038 cv
233.772 18.1157 234.124 17.9717 234.58 17.9717 cv
234.932 17.9717 235.22 18.0596 235.444 18.2275 cv
235.668 18.4038 235.836 18.6196 235.956 18.8916 cv
236.068 19.1636 236.148 19.46 236.196 19.772 cv
236.236 20.084 236.26 20.4116 236.26 20.7476 cv
236.26 21.2119 236.212 21.6357 236.132 22.0356 cv
236.044 22.4355 235.876 22.7798 235.628 23.0518 cv
235.38 23.3237 235.028 23.4678 234.58 23.4678 cv
ef
236.991 18.6519 mo
236.958 18.6519 236.936 18.6406 236.913 18.6182 cv
236.891 18.5957 236.885 18.5679 236.885 18.5396 cv
236.885 18.5176 236.891 18.4893 236.913 18.4668 cv
236.936 18.4443 236.958 18.4277 236.991 18.4277 cv
240.206 18.4277 li
240.233 18.4277 240.256 18.4443 240.278 18.4668 cv
240.295 18.4893 240.307 18.5176 240.307 18.5396 cv
240.307 18.5679 240.295 18.5957 240.278 18.6182 cv
240.256 18.6406 240.233 18.6519 240.206 18.6519 cv
236.991 18.6519 li
236.991 18.6519 li
cp
ef
241.082 18.8198 mo
242.409 18.8198 li
242.409 16.8374 li
241.082 18.8198 li
241.082 18.8198 li
cp
240.896 19.0156 mo
240.896 18.8198 li
242.627 16.2383 li
242.639 16.2212 242.655 16.21 242.684 16.21 cv
242.768 16.21 li
242.807 16.21 242.829 16.2324 242.829 16.272 cv
242.829 18.8198 li
243.378 18.8198 li
243.378 19.0156 li
242.829 19.0156 li
242.829 19.5645 li
242.829 19.6431 242.879 19.6934 242.991 19.7158 cv
243.104 19.7383 243.227 19.7437 243.372 19.7437 cv
243.372 19.9399 li
241.832 19.9399 li
241.832 19.7437 li
241.972 19.7437 242.096 19.7383 242.207 19.7158 cv
242.319 19.6934 242.375 19.6431 242.375 19.5645 cv
242.375 19.0156 li
240.896 19.0156 li
ef
1.5 lw
2 lc
249.8 181.939 mo
249.8 20.6597 li
249.8 181.939 mo
389.3 181.939 li
389.3 181.939 mo
389.3 20.6597 li
249.8 20.6597 mo
389.3 20.6597 li
@
375.608 34.0396 mo
374.648 33.6079 373.928 32.9355 373.448 32.0239 cv
372.968 31.1118 372.729 29.9478 372.729 28.5557 cv
372.729 27.1636 372.968 26.0117 373.448 25.0879 cv
373.928 24.1636 374.648 23.4917 375.608 23.0596 cv
375.608 23.6357 li
375.008 24.0557 374.576 24.6436 374.313 25.3877 cv
374.048 26.1436 373.916 27.1997 373.916 28.5557 cv
373.916 29.9238 374.048 30.98 374.313 31.7236 cv
374.576 32.4678 375.008 33.0439 375.608 33.4639 cv
375.608 34.0396 li
375.608 34.0396 li
cp
ef
379.04 29.3716 mo
379.04 30.1279 379.184 30.7036 379.472 31.0879 cv
379.76 31.4839 380.168 31.6758 380.72 31.6758 cv
381.272 31.6758 381.68 31.46 381.968 31.0156 cv
382.256 30.584 382.4 29.9238 382.4 29.0596 cv
382.4 28.1958 382.256 27.5479 381.968 27.1157 cv
381.68 26.6836 381.272 26.4556 380.72 26.4556 cv
380.168 26.4556 379.76 26.6597 379.472 27.0557 cv
379.184 27.4517 379.04 28.0156 379.04 28.7598 cv
379.04 29.3716 li
379.04 29.3716 li
cp
377.96 31.5557 mo
377.96 23.6836 li
376.928 23.6836 li
376.928 23.0596 li
379.04 23.0596 li
379.04 26.9238 li
379.244 26.5396 379.508 26.252 379.844 26.0596 cv
380.168 25.8799 380.576 25.7837 381.056 25.7837 cv
381.824 25.7837 382.448 26.0957 382.928 26.6958 cv
383.408 27.2959 383.66 28.0879 383.66 29.0596 cv
383.66 30.0439 383.408 30.8359 382.928 31.4355 cv
382.448 32.0356 381.824 32.3359 381.056 32.3359 cv
380.576 32.3359 380.168 32.2397 379.844 32.0718 cv
379.508 31.8916 379.244 31.6035 379.04 31.208 cv
379.04 32.1797 li
376.928 32.1797 li
376.928 31.5557 li
377.96 31.5557 li
ef
385.112 34.0396 mo
385.112 33.4639 li
385.712 33.0439 386.144 32.4678 386.408 31.7236 cv
386.672 30.98 386.804 29.9238 386.804 28.5557 cv
386.804 27.1997 386.672 26.1436 386.408 25.3877 cv
386.144 24.6436 385.712 24.0557 385.112 23.6357 cv
385.112 23.0596 li
386.06 23.4917 386.78 24.1636 387.26 25.0879 cv
387.74 26.0117 387.992 27.1636 387.992 28.5557 cv
387.992 29.9478 387.74 31.1118 387.26 32.0239 cv
386.78 32.9355 386.06 33.6079 385.112 34.0396 cv
385.112 34.0396 li
cp
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 16.0.0%%For: (Troy Carter) ()%%Title: (nl_dynamics.eps)%%CreationDate: 8/6/12 12:02 PM%%Canvassize: 16383%AI9_DataStream%Gb!9skuoPudkL]j!9X>3MMfdPi6:CI/>qU2.&\[/&9-P$IX\rMr`(88mW?nk_g7*GYDnW==&g`8W_+S&Usm<.:V5J"^DB!3>tl5L%;DR@0.S34Ne.V$<DY'sWpSj<S"@;#3Prl06?]Fd;[+BS?o_YI[X4-C<-;4Big<$,D4$9JgD]5`Yk<I'tX7lCX8/M!LVeWQgW-3Jo%[6[]TEWR#6dSo\6fr?.oI(_@_X%CQtYZQ>u+><Tl$c(bG/CpHe^7aQ"0c0n=J.Q+a91LoG4<77edoA[HiNK,JRN[kJJcsR23E$JH%-(2;*CV2V'K3iEAm'IiM/Y'LLpT)mBlj#?dlWc9\\uj\Z6'rl)C/.LGVM:_gGH3'tQIK*c-$UU@>##k:.B.#*r.KffT<tc=cc/2o%`d_$Q]8^"-dA(M.oEOL'rrG<>$ID.)l'&HG<hjllD@V2+!m.6c46k<7/Z<U&?Z"=!]?#Jro1:H;e9^SC!VCc;on30mjtdFm08Hrb%)q_\F7<$[lZnFIAKZY$4'pH4@!\dIeoq\`?8P(/bFT[M3)l%(r>(@1n!b'GukfHcegQPt8^"H`"lKM)+]k6*bDd>sRoRh\:);P6=%qk):C9ca]]D2W:nZdKF52aZrrS0GK<!7>T6R`I/(88:K>!)e[s*pmub:]m5nTg4,*2d-'&d-)k*!rS6nr7!S$1emm!Put":j'Ps/%Vm;7WAXP`a<q1&'QDS(B9uC>,L:&iICM?t[b$^YbehKn#A&:HXgGH1$Bjr[lL7_SK<5Mh8'#%KuiKI.GlVsq[Zs)!:I(NS$kLD&1%LJgh1V=[TCoI7MrT$)-uNLs;\gOu2$$erU'8tTOMn.Y+qMsqD7brA#H`AZ[&rk]H0-UOPTU6)WKpkeCX^K?A16Ca:0'L10cG2Xh"%WE-9_oaaqqGtbb>\V-UI:"jV[4f+^t7^43"XH-Hmq@@@MqsY7Bd2o*cVU&q:iEr[?m:/:Q\O,2mp>ICu_Ud-6a%o;fQJa.A_Y2q9%m6rKNPckcc@Uq6EPV`,DI7EIr>fU$4Di??Vjck(eSC0jr;TPrSBFXYGlX9%GA7FloD;&b$'\eD8=Gt<\[ZC!4^5JUc#@!Nc1Wa6=%LN8DaT[M(qR)o]!2Pcj8$C(cQ/m+`D^/O;Ff-t%K2l)u:#\tBU*G[Cr'KUZ75,\E/j`G$2Br6;RGs``SaZh8ic=j-E,gpM93[9RQ%acV!$h+[5Wq89Z^).FiHl".kGV]V!E`^tR4i<H'BdED#W\F`Km'Z`N:9=:L-rKAN'`;*(+U#Ek<c<pE$O]GIcir#YQFIiDSrmH:N%6%9gX_eiNU$3g:Eq+L`&MtFLMQi9XRb@Ol:r2'EC(&H\\9E,=l5H<&7n*lP7/,d_AdD+$l8LZ*'[9Q.L>+_ZhXVQkITpP:*phq>s%<C8E@bCWbKi)?g[=Xj8HoJ.7D_^QPt097'Ge%]>u.9@fH_<:<sCAfHnoeQNE9%\%XNRZL?%d,k6%6fJYWqChgJVTK=\+)+<!mF*O%N8GnK[L/YTB*]U6MZ8cYCk(!0Mq05bWd^$H#!s,6a3e;..FG'kEtPYWoR`d$f_Z@=I1B.P*QH=e'J5.5J(cs#@BidbqASA%\8+GD%.PTl?WF/nZ.u\c]NV3q_8,F7K#]2W'-eQoT_"gm%UqenkTp8RYZ!8S;kBNa8HAFu"BION3Wd9BIUEc!)Q;bq3&6*J.%h8$@Um+hT%Fp=.7Ug,TQV'$@`795cJ;uefN<*$iu2H3skD:584WN$-THHsn@rE0nu.jdk/BX8>["Y#3^WF4)]%FIi&WLIXbe<:7QV&A-Ol.]qb%Sf:^)Nc(hh""$mAS>O^@hinb-,S?N>i&?$e;KUaF3^TfF:auXCFUM3K9&!H%KlWkZE>M<F+r*Y,FE_L(9r5NrYSJa>"m?(a)$D:"%I;G0J!:&NEWG&61_FBWFcZH6hoVu4TbIUP)YmbtQ'/W!,?p!;;MQ@LA[&.$R"J](l3Y"gnnkM]CZ(^1`[<PXcTuTS6Gq9[U7>DX%%-(t:=pn%nGKRSQOei1r-$5k("3pM:Z3]rXK8J`*N3*`,DN$;(a=qA;I0hg+oMJ<<j70^>6b#>CZH3V`3-L_7"V3j]S+&OdFH,FgS%rdZb&"c?uc(^bn)[F-=jOP/j7s!4gM\cA0aP6=kgbpZ1!W<2q"A@2L(WWp\H$:`]"kaDiAY*T`@6.AO/a>q`t)AS\j&?R59?UcEU%.iYK7pSK&804hHuK++\3TJm7l,-(t[>7C\TK_?pMWa(-'$C2PN^)Es-TPk9nE33Tj7R8n2d0(W><RhWfcpk>e,KE*RaJoP`J/UJ!%/dO_C6*LI;<>.)!Nm!+8!nCRQ`tW)9,J=0Y)7!5=P#T5:-gBRFW!/rpRRe`uV[ARlh*g3:BJ1jH,7PPUN^+g*agcts@S/$OXN(d3%Hmk3'!nC`QpbD"l6]kbk$8Q+C%50,e=jX1[W`<I+XqcVQXD<]jb.7V52+iRSLnE=$pm47aBRj3J9j'j`$f4nk_n$lRb6=<^KIt#I%"VIAH3n<5U!]$dn\3gQK\."I&&N'iQ@@4pSMHWj(QT%U.5larYf7733ljoc%WbX"U+G"+bFJ6RQSuqDL)b:M32rPEt.QHSc3`Of?%!`CM7W8<^q(q#&1N]5<Q83'#7/bE^nCIEbM.:>qP$$9$`ZkmL:&8bn&1>SfW!mtJC(,u0LRa_sM72_qSBR'*$f8KkRoc;0ae$;#J%@'kfc8Zb2f(FdhTLo4`f2r)n<>/BXb>Sfnq@HhPE2js_%7eEou%,2O!]1V`&d4H^*Ko=D@PQS[.m$S#M]>tnN>3#m=D;s<fF;&Op%DkPo)VAjhVY]-rB<<O0s0Nq:&GJc6RA>[Uoe>+e<]JLjDg+nn,e3'0BMl>0_XX]I\?"*-/rJBJK+@dh,o&am!YfFs#jWWP1iI?G.%'r:u^AE[[a=A]HX9_F#fn\4!:::-5W\Z/K\jH:QnJS>SCWMoa1ALjcLPU]=QRLHq/QZsM"PIAV21FX*;38A,68rm+uiO1mSk4'$T%Xm5+)i@$8l.d6a@4^<+%S3l+A4tQ]PFu,UTYu'1Ng-r-KrIho.qr?05&q):*GCl-BfK5aopm.l/.Y_d4S*fT!DW'8c<abIH?s^4b%$^&PlTosl63<?F?*_2XhNkK)Q",9[)IR\70E5sB+"c:o?eY#*i+fgpLc:`aZb)&X*TJ2tIHt:[OMLfhKoJk6"JbE;320s\R?Dhg]%[gbe<Em,f(9_?Ia@KhT4E']ZG5LaJU/Y\;e8g'M41J1((BI%Zs,#SgJ(r/To$fReG:*`js8Um"9NI%)$LFh`d=UfBnBie;I53(W/%oDr\;V*[[i!To!1,2i^1d*t-%4`:401-43f;F-YJG@)g.[u*^O<N2AIJqUdgqC8pDXSD:T:i5m%+4V]).2B\G9>j"3Cb?!:P)^";%Y@T(E'Jg`eYnotB8G4IjYZN]?W`+\<ZZ0Hj<.4DLKR-BC&rH-m!VKhn7HD-./I&PG]I*2g)'MS'`1XD=X;`e7F9rp@`5!oAS%W"4%]0%^g$.[j(l^OXemFcEG.mn$efoXA:EU#>ENC>au(Aatmp".XT9Q00,B*QXIctJoi>9`lLV!Xt!6,$Ej2k9(;rL`Npd+TC`gXB>5%/Oa1T4Vb2)P4cPHmABk&X2jFJCN6/hOVi[?VHfnR4QF>r"asIHV2TkIY7YQc71;-rUK[R=OWP*8X<'me^@*QF]4FVS.UH8?oV'?W%KiK@98qJ!$M;%/g46bKndo,!PM*)RKD0ZoJ/4lQo&G7"+23n,\X<[b[[uC>]@pE%;b-EC'ctKLrq!G;p=N$2F%"cX'V%r=$9$hpj%rb@J+Yui+h%IAT@2B*`Uqs4.h/#.%3*b@HV,a*VS/ReVo/#2Ja=Q>jW&*MP*rPiU12gjo77B-#Y[IlP6kEN7a8`+W8'$a%I=qMF.%>#fTY:c@n"0GtoYWVlO$>(sZOkVK9`MUu""WTru:YA<m:Me]06mVe/(6MfpPWKrO$9jLoQm?WtOR<`'0\#e7d[4G?-=43@W*EPAf%[o2As(SpqE/bHF%Bm&:s1]'7ZEo%Z2FQoMPq>GEjJ_J@,0"!$daV3_![.ON^G']^OmU#dmPK4I'SX2h:Wpr.6oU>g/W$bAIrkOT6%A;2Z*-SKeR<r`68m5hd]Zb%%]Y1foK)G0c:hBY>=hrqPmNOM[ObB]YE<ndR1>+I8Neh3r0lcJ%l?8iepBrfgfooc-+L4%YO#G0Fq%;\!WA/-aHjYMTNGOB4sf%t]lMgnP^BC4hRXZ.3O>q_i9ednMeRMhZHTMG*QSA?kmXs%$I<3\;;PqiM?D.OLuos8NQKVrWR*8XhJK%(m@t9MlG&Br*P3_C'S7!L]9;#0@a7.k'O;_rFiqA+n0bpA"q:=&ZgJs?953#s3$NPY2lt@)`1o+NUqYsK>q!Zc:q@)9i,j2_`5$K%q1!.3f8mi39<Zo^2F9nUG/.=g>mK%Is(Mr]%YHfL?/5(;4TD@&)l+@(O".,SD?Ek15kX`kI:X^0l^RMQDI4=[gM6?oq1EkR5Afs9%\XLUpJ\nPfZj%&!ao$/GX-(UQo&n9$/o].:+s]qs!k3qU9O?>Di%,JR_i)6N>tD3u:@R:Npot?:r]nk\P+n%#9&;]:aZ:,CT-Xd<%H6Q-Bnld6*#Q!@3BaHWPBh'F):2?s9oGOA$oHcE'hHaike^shb(tu*8qO0Aqg12mRUNFL!JE(uaW0O0q35$pOoFW)Y#j2/nM?/g:%0EAUO/)(b.SW]m5q[J..^RD@INEYdXnlnZIpY\mQ0SrB5-LjfnLUHjQ%ltH'SM#qj/6<qfr"XO;>(P<mqCH";okOO'U<u\@9cAU4%-1bc/>3iNtF@1%'6al"%c"h2"j^u9^Wr79Dl[@1dW8(]?[9c!FK&C"ES$/AD83CkL4dj-+5c]_U",t49)(i[QM"[]6#Q7f#FjW4E%W!OoNSUM5d-;PraY$p<*`n53d2@W)OMVs]k):=bg3-;<+T6@OHo5#JppRtBH>u3,dAA@s5dirgKUTjU>9\(%j??$W'I4fNc@0!\3%?1?t0YQ#s,Hd+T:qk"(&NZo?lY`_oTV=bM2l?f_^BZI4/CXd&m9iYa^\>I=Z&6Y8C+L8.EJ>gS_>$+KW"A6)q5ILL$bpUp'&f<$p%]gfca"8D;Zn_X@%0X[6ZX#[E\0-b3l+X_f-1AUi!lrAO=/I).\gdpX$GY2>)-!etO)E8NH2fV$P2;^V&4&3tPY^/`FB),Ij@gl0;%HcZ!446aV@K!e9L6gIcgYDkmG^"%q=IFrc`Wb_gdJK%pHNM$mg[J$Y$h[i)C(lC)E;S6q?%r1e<AXt8>^@YT=KEX(M2\915$mqOL%V=NM0UE*VVRDN$*<'s^gOB5YW:61Tr0F8qG*Qa,=)FH8N4dT\MRNr(LM[e][<=RCg6`R_O32C!l6Euu;cA3g\^%E=<8ckiue7c6^%i:pFijZo28dEs+80U]O4;t%);)^m=V%IU?EnSacI>E=o32$Ud!X4KM3jK$l3oVf'E[kmO'We!B0Mfa]ghJMC+H*g1/L%^lG"+?Of%r!YX.ZPn)V4hIhd#ns`-)r4I'G,toI8eSAXqSVt/Y$U:(ct^!.aT3gBGW!=`l[1U<^l$5po4pPES_$Y^!A$Zpo4\'%2Z"N=<rhj@%+B]_NB"pEBe=/[08S?ZT_lu)Zk=elmJr0"7,WV41OUF!G7h(i!0m42[`F36hkBc1LB@)?%Ktihd4ute1,(9DGkfEdQ[G(+p"j$$f%?[`3<Q+U2mQU+:G5$.(CUY2[AR*oF&bb!h7^`H+9q0)f&T3AG5`YiX-l9@.1.?X1M5eT)=i3A0ms6$rAm^*of(t4)aKdo*O1T]`'%"EW@A]emj`(1X]\KEDE6*OO5]j(hGiq^:HX(s7\;m;LQ@)9*9daBngpBqV[/'76Zfec3N"NQlhKkmog^s(=4Bhikt.ILTdm(u9]c%(0;LUqRALT\+0J:;Z;``jf:,7eY.mJV8JgbN`kMk`K>2D1A)&W<9@itcP4\D(mk&r608\Z[<AnV!EckbVP2'b;8kZD-qNS"j-!IG%k7.>_0QbT9hRI=oRkt8!dp7E[XIIU9A-^CKVot8FGE2%j.!>ffI!?JH-D$+4Tg)m$ILO_#2')j>Z8W^%SET!>]AE>OH/l<]Y)i9O%[Fsk9THU$AgeC)<g!,qdF)<U@p9";m:tP!D(p@]eKO<&_!HYh)Mm%:&C%StRjR.f<nChW#PHPu`%0'&q)Xh'Pfc'u/ioXV4OkJ1*%5@g0Eq,1ugTqsV_cYKF[Dq'Oig<'84BAe*[9_'>lAC92GZHjM=pf42'o8Y9Es672W8=OCs((4@?h3-d"hJ3+`q@/,4$a0kXpQdBt%RGk-G[lu%0=)5P].GZ/IC[V_8@T;C)C\9o]h&#:>:G1-^6EdoC[,6/F[CIQ'2\r0@q!lcPI+;'K>]XJ'G0O+W^41Rn^q;SjS[Z)`%$Q0@RQn#=$3>TG8h64e8i'700\as"CT7%K"i)]eCq@*815oAQa&fJR<+1-'2$B]E8PFDi?^t5[aNoc5k::L4VLF]`A'@j5*##>,&%q[L<CmWNqX[?*"k3Yln>>=HZCA"hb/Re=K%ZVH(Z5.GR'BEZk#il7No$WLZLRY-V8\Pc-J]OoJUYH*4Rd^m)AAjFq9D&>8ds!GoP%:u]1X:-^4&ch\-C<tEo7/+H:@!S--Q[3<=JeV6,Ue0592iHhiekVqDRg]Eu[VVGKs=$QmV;R,iEoI_rpCWenA<3c,)X#l&?h<O*@%4GMGf?O45lJ77H![U;ha9Y]Mb23u0P^9r=\>c62lPAXXjf!jWX=S7_Mmscm.&#e$d<a`gUJREoPKaOGPk9%ufn?:B_[35`)ZJIh)%D=##\>He&2CF*0I[I*WA]laP;+0m;;E;Q<#>.&6)+09c3ZkJ&qdjMA&@<r`*ol4J0/BK3gWLe8;7\"Zfj9Nq\4d9uM)JG:"`T)8q%>8N"Gj+ob"]hUM\$G&Z#n5^a5osi6r;+P[=qk_m0L\.@rUN"FMN627*8PsUj)\^*uEla&6fd7q5?&f?.;=rE\jQ`jdPt1.^HZ,Hu%R(gIQrLXla*bE)Ml9dr=BnSIU:ueC/^1p2/pN,`AHd15M'2T!J4lF*K_kdS'J[oKM_eP#6X_+bPqY,J(fDiWr[Mg;o_FfdgcF2Fl%S';4GB^T'8T:Z($2s6X'aatU4W7CLNnmlabYNEHXe*gAaZ@^@gUgJU4p#n/AGYKl-TdXoCPcU#<)VqT+Vu%C,<Chgm8<8rAocH*0%LpOJQGs0s-J8&LXg.%0-Da3X@&1O;qXLUEVPR,/lhPmp;Cm!J%hF_NO9atFD3-QfmR6/_@IlC\sV%-1qlcK%Jq<sNrqo.V\;T.Y_%$bSLFjn&'eTaji$p^i9h*>TfDrVH7E`%c3\Fp9#tIb!;H8f(TPDDKJ?M6"oop1a-5NRhg=pXXR0%cEl/rb3@ggo8tD2%&cUKjAJ-%QVG*S?%jB#o$R9ZDR81:_Ik4M*@F%8Cplq5#CXEXW'GE^oMW!!(Uc$dhSaq+*H:a>_)4"DL_PDA_GF4R$:UMr6;cU>-e?k&o:W2n%Y$)XM#1B'5D6sXUq9RNSO(=C)PbP)@M'o#5bp>)I3B`GL-EJ3'-OMRLUM/IS::[G$Z\m=ja"%Oh2uLbce=c`pl.,&YSKV,fFR)EK%Ae"Ub+VKY/p[KQ8LX>p])\]&[<)iLl(q:aoEM:oDDdZP$C%8UipmSPHgV*P&ae7CO&N+p$aC@5;JhamSH"h3C:s0<tT*TRb;gm5`%\#s'.6@S`DAU3TO+QGCP=oYlZgCJbdhoLF-H0\p9/AIT7T=_FB)n#7+E3j7CQ'OAS[#`_2]Xs;0aY0/1d])?Qch5fInZA5%IPg$2%o33iTr3L^@arXiT;_,_I,ign%1'G:Z.P:WtqGR>!Lb!s)>:7adEm]sXm8j+q?!hl[G4a[t:j8K<]2+Da,2MR%DS-[hh;eJ$"1,aV%m&pB6<BI\4<Manh/!OtQ2](#(_T&Xd<7'A8(3sf)V?+_Nj*Ej7Q+_M!9<B$]7V_`VGE/d\YcO#151S35@e6pk=r\6GfX+)]BhJ(-%^D2<]qZ:KOVR\e_a(\?o9q'R-4Y2hoL!?$kVc#/)2g2"!g"f0n\^M2Vo/C73N5L+J\(8=Zh7&=F+g7D7VE0*V2q-CLp9.-oYghi)%_MJr(hg,g0V<se#B`'E"m\K!9NZ^lXcImJ)#jGjfiT]CXK9Wd_f\(LM^R)N`0@EAXp,!'>mVM28J*W/;4a#AK]t-3-/A?!"[BZsH%>.WJ_6b9r(WiQFJeRiHtDN@d.;T(oK.Q=h'[A]Yk,+Y_41$73\g8Q/lU&+Jo)i/TB;Jmsp<;Nt%\Z#ru41uU5Q<(aRV:*<jp8QIX%lI1Hj<=A'U_?*"qYZSRgpTF'/"=]/f9?#_fGJ/e&eL;\J*#9j^5oJ`9=8\2(GP;bb%pB4;FtB`>"sJE^4W<=f5LST7dd4I:F6"H<%U`Hi@fl"&5KQME2C5]S#8<q/`jgE\$YqOOnC/%Eu4_XXt4nr"c5cW)+<C>RL5^N#I<'(m4%T6sJLN[<JA,`_&ETrC'kEg0'f[BS\%<6jdXb5Gu'2/$S;'C#M5G.*HFQ\O5*qt.isWo!Cm4kr,JY`R_CA3;HoeQhOn5mfBe\+R0X*.Ik7rK6Nmr"t2JYD+^YP?)0P&8<>:%OSeHXrS+@-/IU`sh`q*2&*1dKC3;&gMtCJ^\`Y)hIW;,G5LM0UK92CQ/)enJ7s_[#HVo8r>4Y)g)Wp=)UEA.>X%_QQ)hdiSpq<t5%$p\!!rk31@8d&iPm;;0+p>Re<l(=B%_dWVoHVJa`4YQ[U"W<di^2/8$VN8't%"<T:IL8KsBl%A;K9.,\c]uC'6&IG[*NPOdbk9oG%SfcBems&Ep6M_lZH3VX"\Q"\?db;oQa$GU>`Hl:,pEQ"-7%52`HEr\/I]Qdm"4E1#f@$aDDR(&+:NOX12#VSVo1"fgdSfU)giG!%%1SJi:[t@4QL/m4&$F;RcJX='8b+BYB\s97**Mf?lo6p:ATtY>W-$aC9FPp2RNTCW0p^WGKLQQ?9R>m]l>sPunnfUXu`KLga'`2J7%=3f:G5FmeV-UkUhH$JO2jhTn@+!"hIK\bh?')toLI&3Xhp5A+5D3:Zeq35.alMA8t/Ae(5<#\,!HQW_ec%)_1];Vg'<9WosZ[BA.%*,`q4Gri%bDmtD;ZRmKeBgF_[+)'_L,45!7,TNY0)aSCDKTk$$Z_43l_KkBei-FV_0R$[Yr+\,)nFg-_\Ca!f"?fb=bLCa]s64i%%JFW2od]M]MRVGp6\kHtfVs]+j:\TRDpQ_kRVh`.X3O?L\2Z3JTpoROg6#WA&\$Poud*k4r_tED[kGcA(HX1mko9Ki1qq`#.0A#9X%Vq](Pp1+@iIHj+&E_?XP_"1`!1nUV>J>Y',@WDCP)YEZ,4SUe?+3:_=Nd1IN2$;^<08_]<%d*_^WfQP*[Iq@Q&BCUGBkh'rTD2A'%R)rl^?":HQ8EG$(2sF8Ek*$"Oe@Msca8`-EGRk^)?$cMco_`-CII6?ZHWjTU3jWFGT[>[0RJOmCZ-tq7g1tc)S*$S[Q2=%ud[$KH%):=&LhNjPcc4:[_eVc$XL.j5C\!?V+PR5l<1&"j$(%V[RnCi0>HL3`K6>C%gO2F(10+`&Ls,0Wr0"\5I7rRONN:m=s+g6C:F9e&r%gU]O\S]s)P?5?rPc;\2WZ[1n7f"Dr8@H2H`9m09l>]q4:18O3U;L1LVnOKV7>R)LEWRgY^UgV/XZpOG[paZ=n36!>jUKS5Wk7FFN%/#LMXfB;=0*MgCJl>kcO._Cc\]?9fei>P(pdrM^;-Gq'.cK>gS#Arqm=j.$n-.3QZ'P<O_F1Cs7WncBl=V?eH`S`Bu&1O#/"<tgQ%6et$8D/l7d"=#daIpE:(7=QSE]nnRl,Yp^CrAE**Z`@4:4o&^3q.b.;e1aqJ[9+!*qnm[O(/JX-e/$!c5LeI#,1k2DrkLXEiN?]_%J*j=.r'.2d(h]BO^Fa%N`N9#XBD%2E;cjX+/jGr!QeMf*N!mUAT$DPA4S7a][s>rGkkEVLRXALercZW,/-I=Y4_:-D<_4TlDh#q;%2XOb@_U&%bohi=R4&3L;7L,4Ib$sJ+^I.$8<eEDq2_/V.,C@q6gn?nr;o_W@5QXS2#4d-pk!'dG1e9D"!Kl.Mp;2ZlWs"NKX^p[O%`D;U($p(^rb4M;C9ICo_qoG;_[sb/'VgZKa%^j[_39-o%55b^Mp/+fh4oO:iaWd>%LchA,.TCR=O5#.$l_?%:>98o0_8<FBomj=m%,[o^#0C1bZh/LJVjGHQMY[e&Yilk+*cA2!3m65JQ8k``US2J-DmoI1k1WunHEh+B(F-H"&&D4)in;6cc]huUXlu4(`P$P)#ELo^4%d&=V!%Kbn"#Q`aV4tPQQTW8Ul.ed#9;9:>+s%u?85!D]q&e>I^1bFj`1sXXYQ.bZ(d>u:]DLSq(\DHoAn]pB#+rt3SS6!n`<r!.#%@mt)'5C\GI.,iob*n_\p_PTWmQh-c#H&o/Sb8>>#3Bmtm49\r'BM2iSRC?_IQ=N%knHJX7%g3XRMR1ClE@5pb`ncRF*M^l.UX%um%"$KWm61'BujjVNWpj,G5>:95!b<b5n<I4EhP!p^c7c4A0'L+/.Bb5Vn2P>J9*U!Qi/S58[A7iYT[N%i+n5d]f"Z5f2Q_,)VoIf6m%]1\CWTe?-tHJpb7>kRSe$sIf0%l-hm5,6kBFF&/OUK,F7F;q+0rEJ.kCNBlq0t\mS]+FoV<fpNs.Z.@J0:?dBE$c&_8]=nThk)=O%RgX9$ga(.!fLi(5@MfX6kN?*K@keq]oCG*^iR3_4J#LD&:RBN2-8b]YY5CPIIMj#jgRps``G*L=?uHG1f2L^3KO6Z1,MuNX[o;=S%8#)'d0e9QKi\6#0DpQ@%.UG=D.Nu!>m.eS">Ipe^hfTn70Se6:5k!^tb\j@#iuMrC?ND);3A[L/\Vk5O#GXtW(B]!SI5d:SkLL+Q%-fRnnZnE$9SYo`Z0LB__!nG-nh=TbiCN0VO`$$F!$UbVZX)HTcd_n6S*;5&I7!a)q\GGT2U'@+c&8UGf1F,V^eguX\\VU=>gUiOq%-_(Y<r7M0(:ohN)i!O5/I$f\<4#Mol#T=h8p,m5JHc?jnP`)?RCg7/%hK:V2jS#IG!/Te;ZPQsLKXYm(]\qC*BZnIjO7F!t195M5%c0ptPX\=!_/f"CcVpN0WLZJ5rnRA$iF)mZ<m+d'q$:?"#)RDbc\0&$_'T=CM1MaoPmUDK/JEJI6jr35dqsGUK0M.1]0$/181Ga"p%,b_JrYPjQ.hJc#OgS6_ZBHdm"6j3Xd6aCBf=2fk"_^&Udo%)@1;..icE<7-NSG=a1'&K9kIikn"FXD!ff;<RCf^L;[X./g4g_r>!%gkW?la;B',(e?p)B&=9*$'sXTs%%dsQ/5\-*I(h'H0[5Vnh?^';%.TEL\m`k0N--=ehD!8g:A!9K7I9(362LL&2S"Qb-9f9$r=B[%i&65JNL-cjNQ"KMS4I\p^h`pY7\b5h?i?71gHD]*M0-8']4FJM;ZUhmFtdIq`_ZZN(6>.VP,t4l!N%KbQUU>P%:+W-67g?MoeCRs%J9c<h>De,Q,q-ra7CS[(Fb*DDlglj_-hpa0S:5Hn8TF*&8A#:\g%!Y?nId)'$GaL`?S%b,K1;@f(6?/;R.3H3?fR'!ZSW:P^2)^2%cLOq<`VD2$_-)U\9d5>R,J\=5(t#L5\*`eHip`3'qI8G!#"QQ20[ICICib5N\JBVQXmlS#Z9Bq\=bfVZ*7-C!##c=\dA,*^Cc-qd%2iB12&Y?r6jhr&HqZYctOZ`CmN<Z&'1`G0^1$T)Y!#nM)q0P^NQ^0!?qm[3P1ki2!]_`jK`ZjB[d37IFaSt8.39h`WRXF%h*bXK'%jUEP*6]ism%U0EI'!df5nK[Mt.'D2+2/mB1i1+H%];Z1\icISY4]`qSZkp7G*7H^U^2fGhZ^##Rj8uQ!-(B^kB!:4^Idg8lp=S95%l%[N]A%9s_fA)ja!]<XsS3Y[i&;o4Cg2JCp!^WO4'C*r0pII8`2]a8m%@@saGd2#((35Po"YdSNb?esdRlQE^Vhpd@P8W9NmqMRk%pVFHWCi;GE2$@<\rk4pU%#D_DYVH*'^/)]cFW+;^2KL\i.gBr>[lu&>ib7<l7"h#e5TRTU/fK`eBFVjrToXp?B3%L2L*=!E21p7X%^".-[1ZBr0?kZoS#e:nYq0p9E.;'ShTFtGQ"A_Mo.hb)K12-=i-4==0]#/N:!c6rF*CptagS%Ju0O=#,QknPBM7?tom)uFh?DcWF%.6$;!%Ll\KDl3seM3A3HgbO2#q+];5iq:QRa"2LZ:;hu:#>W]b_TWY-Et.c/ce^Ntqhs&JhE^^(K?G!bGq7u#k!j>L9HbfAUgHSp%]g6$<66&3V+r,$.k!sDG]R(2M8\Q?f[^a*S#5_'NDtC)`KpRY;NKJmii39G0E*</!M#m.aiWG7"WBU-8Zdf:+>Aj&nA#FHLHRd@m%Ik"H>DYp\bZ$BLr)0C`-FE6T26Smr9N1l)KkkIkO_\mRo.05Xnd"Q,Z3SB"Jjj8!<I5:#rS\l-&d"Q,Zn_&MXjNrTnd"Q!<Ng)mI%SjCD0$VljP(S3qUc5%BaLFt]AN`r^0F6LIskYRG?O[BqV5tBZb=q7*M6ZP`ORiN;QX)Cja?#U#!G79XD7!aE_W/]P%ST*b^mNO'+%,PbhfL:o+L]jGK*8FPf[8:/I2fD+dVmL[haHt%A4hCP/TSS##R='-)Ak^GY/280W0;>[R!g?6]uM30e7]7&PWeHAQq$;V>3,fRoR%N/CkoOOSFMaeL3-NM(&./"$8l@It+e58f,m"ed`1(n3f@PH<%!Se>bm`:5<jgAS+NBth2s,*UhPh$W-thoB9:OX%l`%4^Q#c'"fa%h;W>V$.P9V(n]%q@nf<eP2g.f`S#jNq''rD/d)Iq7q=g'doe?P:K2umG*6QVk%Q0R,CEE`IId0M;A_n2S7)h($AnDd_B]/51O%ag%4l*2$9X9:eWOR.r9TY\YCtZ>"ZrhT]`ZWEp(a4t/nRnYVPE7mjQfmJ"a1&tlXb'L#)M(I6?<90s&,]2T*r(pT40fjRIo[Ute/nD[%H$m=f`;,qt&b>]Z&^2Y3+?Ld!JOLj:`2/C9OfsAgbXZP]j=(,)!"3,H(kZ<1kr5AW9V)BS47Gn(QZR(d,2#a(fe]m\fj/O?G;s*R%)=6naj[-=C!!)APW6$(uh.!1'Ic'gfm.p"#NA9**CdmE7352^$^n!2:fU<m&KF>S-?gp&o`BARUHTHs1;2K;o4iDWM]0e(n+k*[2%>W^j%l5ohbm"cZh#`=U3A]YCL[fF_X)l.]s1phJV4hV3Wb+C-W]NMKMrV(jbbIJTC[iZJ1a^@/"$<o'%?=-*P>_LZ7cA;&Z+<&uV%qm.(uigld7Lc+1C:U,\Uh``;U`r>=a(>]A>*-8=CJ-^D_Pqb]M3]#&MP'nOQ02Wr_A3ri(*>-b_Vm(u9I:cPCU.1'^G\0P8q!Z5<%)j.t$Ue)acNf8DR:E5LZk>jB[Ie,O*_o/''m#N3M$(UI6m8"^aJYjlai8#FDe'MPnAAZVj,&(_S7V"1Z:%i+nNY.E,NtILG`66I7%Nl].2c=&mFEbD3?SBtOSH&o;UEi^JU:h)N/#D!g>7`e5,r>!_:JTHI;4]h4*V&gk(1rd(7#L:WJTKTunR^O&74u#7`0;/V*[k:(F%O5\ZD(tjM'H$.M,2A%1;/l)CZkeJL4O!.r@3#b7FmKA5/h3&a7IQ^p.5Y!GOf284m=;\Q=?."Q@A*:b?k@,teDVFo*PFauS0-;f=%`hnq17o.S)B#KZ=-TiJ'rXRIMo&2PmRELDUG!90lM4dehLC;cE`E^Y:jMULH)>O]Y.HSIp4n.<e\7t-D"_;UJ3?Kl$/f(gqZZFZb%6=rA!\;7iZZ1gWf-o%<3).QGf!0a96p4;,a0ikB'h#M=?jQ/5R#m+[OBCP+8]EF7Anf15\?Q=g9R5i6Y5d:M:B.LM]RZVbU#G(t_%[g,+JNb<=L2j_1pY]=(XB-?$^(Ln<=9QV[6Md*nI7%KbZIr"Vl[s-n$l`n7-aU@"2dn,2*nWMe\L62Z,C-&6n'0&j%bJ]d]&i_*G%6XM?e23hTp'kdu-:X][+AplOY,]M7IBZm*I2+%1pFqnH=a:mihN7?S*=l9>#E>eOuRMi*>VjW\DHTE%DpYSoj8/5c<VNR&KE2Je\%MJsog84=rUa@O;:[HM+n4o>'Wo=&+XKH-F!CQjnX`Z.ed_o(uC2fW)\C)AQ@DW2["I]7;!'oTDna5+hHe+W"3TVmnZkDW"`)=F](%_Mp^^*%;UTp^Em2VS^_$&J=8i';r^01K5I6D+VtIfh4P+0bFq^;[2b)TA1A2U/-HOmn339?glCZ@iqX=3VMjP!&S]r)<i(7qKHHE%0K7iUL8,P$!jg9/M(Q^[:>"gDW64_Mj9=YY7OL-A8Fi;Cm?S#q(NfEn<6&E#P*8%VnF>,)B?oZ3<;,@u3F7SlQq66@i_QPMK/GBK%/YE!]$cLB]!qD2udR?I>Dl6^DPZg(l;MG&AVf!BINQrnI15e-&YD]0d=PUR;Q0`[_(O.REo$7(>Euk8N<-PWPk%3uI1FU.9=hG8<%G'dI#6qT)^%R@&=P-h1G%(jQaA@IdAN"dqq[ZS_Mp[JFMSZSe267u.4[=-%<oir;g=%rp3fVorcgV9)d5q-2#@EEEUJd8:P5/)g.%i!d6iBE%0B#\bjnl&MtdH6;&ArbN_*eGZIl)8tBJ=GGX*F`6-cX#O?c#^Z'$A`E[<A(<Z/D7K?4#1]5(fgs)4f_]sjj:C7i2EQqt%*?ScY(Z*GL49dYoFr\3WG0#;!ScA7uPkRXHa%G`mpK2P?"&JnnPMgeh[XF3O%bu+?SD"X%8'CD]QX?h4ZCBq1,lMt2g/%#]3PV_T%)21.XR$f3=dY[VQQ(r7;EUE'"\]W-CKj8^6DM1[D!o"N>mp":Q,B;H#GF$t8.B%7S)2ZQ/Lmo7@Nu-dB:q;Y+-U-Z1Hi]d$j-s41%S_s'K`&LGLCc]=VJ8Z->U22m*>e9.j@7JM=o8<o%daQL=o?3uJnM8p:3^:_X9Kejt0PWc$Cc]=j,bpk@&hf_,C6.@rZK_;<C&HRh%-cr6,pF4@`$XO\g2k/*Bm<..9FMTs^e'+\IH-XrnflZ#hHTRS>G?&aZCcXdjP]-d4Via^:7hW:74f)sU^K`gl)fm@MVXs+<qb5)1%A^gI+Z;u4JQqcb19BVKp11<)s\/ZG>RkB;&;p)!/bG?/?@kk:Rr,V$'Ei^V/VXsCA]t)[WB@HZ**;@,Qe&\EX>:h#ib,K"%\H0oE%c!JH7VXs-:^m1%eZg%6+@S83pp1;Ha3raJ:+?RTeVW4%P]9:!u>iTGFq)*siK.+ei7A;-!!0[$Rec&D9:8T#q@Y?%`0cL&XOU7]H%[)R)!T-C[sgUiimI<?.Y`K]ekg[r%YcHj+Ya/@"JD)iac&]N[Ti?FKEj,!c-3?3/Tm8CU"qZo*g^,t`"DO69mK%?9aU"p_[<1Mne%M^13uN2^5PpnYm\0S)#(H-Z?3]4XP/hAO`1mNZW]/E!rfpI0:9k,^T5ih66(0jX@;fA%\37#WM-k)RA4U+X$8R7K8je$CF5k)RdI%%(tdVI[X0M20U97'Z[lKc8VK]^$'@P>c$CpmY4I<pUfX,N6NDO(V%*0a$&VN@#B4Fh1Os^erBX6qJ5(qSqHOG)"p_Ga@&)(]n[j#%[DkD&pkkSo^qIM>SLTa<e-0dMLmsZ!m\YophA1#C)=g7X--:]sCq1<H(,NiAA^&)6)*34!2UZm^L?;tnG(o9X#==^FM"h7fTnq#Z%S_[*fpO?Wi"+J;D#SeTUE=,>^"H(B2p$)FBE(2R-JNLITc<)<1#RX76UGIU6>aeE<"eR@`is'[F@dTdWAgjqX:Esm3.=U:.T15n4%Isq7,i>p_SCakZ*j(qd>/'lt'Q)!10)Rd!UhV.H/l772ED>5]NEC,/OTq*FgAYr^-o*3+Ul.o`lkt,D&F6m7V7e5Gh1EVr2E@2_S%Tt<?UJM[*N!>Nh([oL'&0*iq9bKspL<FLFQ,Vi&t_@+*0n1]MNT1"Dg,4K*tE9E]tGr>+Gj?QH.hWh$Ymc&NPPMU9!ANotIEAq@h%9u%3^A)3A.E^!@99mMp46dH3cU$)$fa:F,O_d+H'QoD9nX;gTeSnbu\s#k@2(S9&+c:"19&O3O$SFN./nn/KQ:TP:D7_9s00_;O]%,PNB;o9!Un:NF_qJJ0Q&'u&jg^mQaYQ9ZV%Eq70&hkB5MD543Q-,4kAF%rb%nou7rS&R:t\H_Z70#J-cDd:KchRAST3+<NL2-FW#%Zss#K9OUM-0>YIdlb'sA'6aHM&S&GGGM;IL.KS17N):H;M<UJQh5<'4I-QD]i4\a)!1U?aabB(mN-#Ik;$A'l1lZ3Ka7+ec[sG8D%kqp\'_u-l&G<ib6VS#cI>YDWcI<LW#n=0S&OqBUod8WIQS(`"G07@I62Dhm(L(@5*kqT8Oba\1+TAn`0)RPeuDPWcUFcSdcf\%:M%F'P9`];ZjZIIUH'E7jXPUqp:[D'eH6Rl?_jGC^jjWTDae5,S"<88_d04uDHhY+,0)bkgHo:$_JkFO*71P3fo<D+7\drU]"!BBB<f%iHd`7\_n_q^p5T+HgdJ/G4&f1\R!P,'"\Urr;._Mk:`F^^UN7p5c"#2rmPWodX#;9=sDc]Nf3(*>MZ8mrRm6$:d1DS]D4VaA[g0Q%&%BV+iRrFOE=C]c!g*gi;`G7PWm/h[I7]KK8/#]RCIl>$9XV&,,MgI*?NhWZBOp`G-Z\<C_om`W4^87\g?W*`VYlN&dPU]:qdJU'%eZ0.CTdSa!N`[jgf"^4oHi3\So,8sKVDe>M=LgVPKW'?%EbCe39Tck=GaqNA7muKT.&p2DklmP)gX*pl2G%Q@53kLYjf)KO:r^%H%e\,E,[:LcI!]l[olZ\7i>b^4q`#N+Ii\`sm>;c=@T"(A0fb;[(\X=ae,jDHOGmTA7'/H(RUMR&ia@]YDS6h2@Pnp_odrS9&/9r.R%QWE&$*c,3ET(KNqGMm\#NgKNDG7hI?&gIr&I,N8*j(0h'<dIB_nD7:AeCs(>9QKaV1o:nNnDe1l`aE_jK1UZ!/ris"YJRcc`*KjT%9P'LPAn?/VpfM)Gk;HcZ+</#ST5./=e;G3kUs[T*/AR&D46,E&`m,BYR^H*]GA5$RO1@3/Lr4!i0@G&hS)\7N>'5.4j;3(g:.N7D%K<NN>EQW$0f?K,,>lh8uNl#E0)OaeN0<4SWFM6;KGQWm*rWkZ@-8N1B4LY<e+"NJt=\5^`KR7S],a'$0*r@Z`Nn$e@3<r<hN+gDm%m'bhn%Us\C]VdS#n/O;#OR#-WEhZq?IdC%Za?+<pqCcN#c_o0K9[nnN%)!L%V8WZTR'18^0/a0AOX32EA!+;aUMt$QB8utr^m3)_%3#7[=2O#i\>2^JX$S\`-ke8Qae1<lZW!prPoJoo]KIfAI%Db&TT)4X?bQ<`m"))EJ^aW(kLs^+io2ukK+U]theICU?L>J%2R0=FE%=p"CIN0FJ_^sA\o^p"fZ5^&*6URqK*3GoU?g`4,F3V(:gJ#gT#P]+bbfg`W=0/+VnWgE9F6kuS@.:4:5d[8rj5*$c^9:,4skifN8%i5NBoO%&%,m\P:Z@n>,,]p*I-q^]^tPg;:gJ4)8B0@_>^1SlG`Caf9`5Q2G)Bq,XoJ#hJJR9TdeqMfJQe/7rV"ZC3)B1"]RqG"7k%.K7#0iE:A'3#db1lSnXm:iYprMj7X0n\'A]GPjcF5*A%Z]mcHE\,%E!0jJmk42L[fNL%[Dm_+'UM/_A;kM<*mm_+).9aeYLEeJf<%_Jf+:p]_;q?GGt6-)Pdf?doS9l.kS@IM#U)4i3esOF-rC7kaJR^$/%^hWktqkWJjsf_>6Q[O;U@l8QNc<3CTH_RE8dVKB"KF>h/r%me$t&eShhlpk%u-)soi'EUWRA6h0$u(N<:<aS5N7D^V;^VK8qJpjrk'A!>g9(Rgp^p5Miu9.]j=5B#EE\G,iRYLB0#T>nQni>\p%%1K$`Uf.SN[N*B#D0^f$m74=3br4IeSfY)b(a8R@YqUpJ_H`Q%kp[O5fMFZTQI$<_VE4>[<Pg+1c3;)tr&]`UB)rk8>n;XPnrk:N(%a1KqVr&bMQ?Co:,os7T"HkW:NN1p%28&P)t7I.3mh!5c*X5A$ej,;We&beK'Yn,<'B!5.Cf8i5fT1b5gHGf6cIZ[_%"`'J[me$r\%[^c@7o?,2Dp%&nOqc:I'ZdRjD3S\rB7/-P3]/a,.rC$DV3Sa>O_B%f'^<s9+"7G3=1n*O:eShbjpu5oEL?uJA\^tcTA9]UPET2?D%>f1OE<^21I$MXD%A2aHlrMUd,r*I/-ND@EES\i'hiR;t.@oLQro"W^.Ib`Ar1%2f)A'ZYq]%8T+#LZiTVR1]S'Rm*TkHt&in+@('%eM!&Fi>OcACh"g1qHDr7me$t&eM"c]Mk:P"HE/,(;4QiV^G1,'1%+]Blq+L5'0Efaia0AZq^j21f.Yo=@!'n6*ZBZ>*t?AENItdY%L3@ssJR-HS&`,-AoA7hHP_CO\n;[21Zpg/&_9#X-'>oFI3A!8/hR0r+gu_a)dKJnNW7jqWAFU<u\T\TJ2+kR=k#lae5?QerLrSn)%Bjl([9WDJaeaE"IBs!^oh_3<R0G'IPGhi6gjYm)PQIe%0c/nW+Z^^'7k%@2_<;ts4b+Fr!TmH4/!1L[VBc[UC^W[GOE:<Qn3;e)L%(J\.n&)mFW2MI(&k*9o=s*,3[KL&8@HJJ9-I]m!fK\PkTU@@Y-F!<_1?G?eBBC\<4QEM*XkG-8)?E[GPp\OWT[GHts^.P2J5>ObG%^S&oJ95lf)gs1V=ApsDapXjlJ^3[;;:G'hhY>=>?[8o#1HG6^Ms7)MKR5+<RRG$/,H;?9Y:L=$*Qe.R+,%0[`gJs9+8XGOgZU?iS%W*W`)Kt0Yn8l%O_3lL;"P$cr3@lij_C8H0ME*#;.pB[o;4j5+O!fl[G>#g(n5Ms?LqVu%gGJ(6JZur=Db2W*b]"G7!</UuMU&+Jo%0C52KJ+[Fr[27%l9j.6L^FRJH`poU]Y<Jdr:?!q#Ehu!_C]9"b8L*P@[bSd@F_0HOk0&UjE_UVVO)=W*VX8bGEW'!2XlL;$0]TU3%RO]?Q<-E8.)p@qRbJ.YL1%"ZO+)IcS$?A:p4hBKE/Ubr395EF>-.DM_9PGC;k+&q\'%[c\;R;Z*Z!C/[CPSl1l'uKW3\oXJGur5(%^MguuX)Bbq(\41S3V'U@B7:9m+d:*5T;WG[f!dl'-$WpDOlC^lpg,<-ATufW=O!r*cP>d/TjiQQ/MO-9IX[bQ?JQ8%?_,)`iSaJ!%#LEMSdirj3?Z[?N(9e#_J;&>LRk&?[8#6s`JQ0:qggUffo$.@,^"s.`_22hiG_?Q"[tO\)`Y'^&/6L'ThC3$,l9+4"]c?N']*,"t%IMq(f/kQZQ5<nYq9I)jaXihFV4Pa>L!B^r1&UXPbR`.lli+4j)7%9i!1dINO)PE0eTPI>!nebNT'#P)A0+$8Wg,\uX4#qe4r[Gas%(Vot%oiZ[R$j^l\6N6+dL#^fA_t"3VYMH@Go<n8eebAdSATb\\r8CU%<N&"2^\EX9S%UT3HY>1"q.sI-:BMfiWeA7.IH-Z.lr:G1%)AhMKqF8Vr=$jO%74,bcdW.@;ri'LQp\(E%f$g]H?8ja\DKq-WYEtFfA5O,0WjgsMA_n'sQYSm73S[iWIX/I;WRmVhH'C534fJP@%C,5Ze<sT)4CHp,N`"caqiTG@?HM@#+@,E"GBmTmXH+7RLb0RZC4aKfD:XuA^]*%<nkW<Xhjmu+iH:9G)ZE_u*>^S&MB[r;UbEt/s%:sEVFVa\f^D%JkdP^]OH58LF9nq67uNV(a6QGK==mYKU8pf8']\%:YM!s<rUm2Pt#4OcW#51IDKF_Pi:9tsl"3N>7bV+kE!jnYgg%0'r$XX3aoYg2c<?HFIj4/^-\ODp,%<>]oKWF2t0!`PY=ZeK6Umf6G8R"dJ$8ldXqaD8t"n5HEk:iEag,>8O9XAns31df+BM]%$@6%\:C\aj>UtTZ@bGAaH.QX:!Gq7>#f=pW9%oC^gdP9Q-$kgVZ@IUh$)R8qi0<Mg!Z12:T6ukhK3cDHU1if:-F]!8&m>W%e"sOkPAN!%Gs06rBN?q$\kJW*csr>h^X0-rF`i'ceGK%)'!UT5+lu=N!9dEPnj/RTD"JsW/I2+5:&Sh9o__jj]<pjs+K-pu(n3JrTe5sD'R,Gl%)Ka:%#s:7TZJ2iZ'?mHFJM*d1GgRDZTL<_8r9R4a2:J^c].6kn!Jh4rnG7=;c;;jc>4TV8klejXXd^88a5+]T0@a@KY8d&t[bg]-%LXRKSYcDKmTIkAqoj[IeGkRL=XNl%4X6&#(G-CJKfJqW7]+F/aWH;H(B@Y8,3HnLW4m^M_Y5Q"c9:o./="q4PG*j5!<^f$pY]C!=%F4d`XHE6D!9A.S7D6I!SmoSUKq5J=1HG$HJSi4RTmm=`bhYV']X6#XL[+kh]ggk;-s4BBLJFboTUs>OJ(><2mZi/$eoCequEV6rQ%ehDHCL%CqdL]4u6G$(`o(35\pqTK0^Aq7kqT`Zq'Gpo@BOloMR%r^qkk20&sQWsJqI2Y5(gM?\YBAq)]nRSQ6k03DYc[<kk$R>f\%K6B6.p:m](*i`#ZAB[(q9:K3M49KI[R`3THk*L]\OcEs0@,>)AS0&F9g;.%i*jG"tCj[!Nb4>;J9UDR7NOTdWj\qDK_*UoM/M=Qr%Upd^JS8KmQ[^;j4EaSdR*SrZ!lXI)(C0'MEgK+d7hqO^XhG*Yl]/s4VH!`c=(+=7c[pT(i1)BbdLP<$1:UeM$.T_*[rB)po+,Slp%\Xc94r*F^<VodFX._hQkq)*TEL4b5;g[kdT/Wh*Rl$a).$b]NmT&A'gg!I<4THa'-dIm0t_0YpT[W;^ho_]8td9?j0>rC.7j]Oc#%<i"PgZXURZ/%s!Ra0j[>p?#-9lM;R%g^/i0G.ul4+>%]G$'PgAO2R5"hsb$G8Bl6LV;gZ)qnATL(]'p4T_Dq+p.9?FE%JT:'C3(p%3_"`(RgXi!SKe5n`(r9ET9^sUR-D`4;sIm3pLp`I/^INd.lO))O"o2cbG8l9L(01s@u_9G*Aa,R:#BZA@DsR6>'q3)h3entl;=!3%/82u9`+nrjD,-o*7b35J2WUtddUVSX&icq?kJ@:Q!tD/I-D!EqRNokt'iS87H;&f@/et54b'i@kVg*tV]/tNJ.m4;sS^WrD<6;"<%N0Qp-N).73>BJS3cPKEtXJjeR4lXXGcKhEgJX7*DRBSY`#XZ;]/tSSN5?,h+qHUO4qi`Jth.cc5)k!,]orVuSNX1+r4co\7[sKfY%WSHC#hH%\;I+?l`3nW);5.F-`T!aam5<k$q53I):2K!0J74Pu7/T%]IIls!;B@"9>gID&dV@S;M4\ir:h@i@L-?'r7l>msBnSEDc%n&^@>A@6`"I`H<sA6*L\:FX)<:57WEEq!J7i]i*+:8CCP-]G38V`GJe/NpPRp=(YRn9sY+dR_68p;K\?QprYQ#2h9NQNm'Z5U4Gn%/uE+qk_;>!b9pDZ/Y>UJ28GC1B"$+$[$5;Tqc)In![3j-mf'*,/Bbe?f$K#=U_]T[$nJd]<0uiHW.2q'N2lqDh'W-HF>]Y<R1s_=%p0@FKDL^iA!WC[\fU)B1[?LRHC0sH<CrGa32)qtRTOG"cb2L/RCTkShK/'=S:Hb!q0bbKBQ0H'+DtDdfFJ)uk"g:^N%C]BprLBgC%>U]@)K&.S\G`=03FH>GV@Bb!D'BtX6f9h2KmS]OO2@7c@P;nRWR`ifTSDc>;RhP%KL=_e%k@?-hn;969E*;VogBe>uh2b69//<5X%<;Bh43A+jS_KOo2f5\42[B/d4ZCTO"nniO=:tX<iO14"!\ndSf_op0UQ?Zu*BBqdIo%$]-Y$Pr/2brQI]KUQ/Dj&ISTN@IN:HR:u%kKq$bH-1,a\.Ol9(KXkI?hj1jZ@@:_9Y>%"(Ro$,_QVqRY+*0[M.(J(7!d'RjCC!tZ,?RYrq,FEZ*>Ko2WdF(06]N;H]=Cbr66'p%i;Ch?*tu\UO(IJAEYo0G_4RVMbuO[2\Rgo:j'5i&$q_W<6R1_)s'E-W$E>2k"6K7fh;(@uo!uH/E<k4Kg!Y<-iptE*/DWe0Z$h&$%'fotR#**RI*RW4MW_]7hV.u](q\*b27(r\lj_@#fe[VpY6*MKqW7&,9.5b%JMbt'!8&VBciO>)Kq7SYk/OCpnf*3tBBX6CdDg&e$%P5(A*Sod&P_#Lg&-f(@bs5f9%^WJ?(a-1CRH`m?Oa,dIE2aPKJDC6@bDg"8-ClJ#ceW,^P_1m+qFm\"9Zf1j]S5,sY\1N_P>V4$>%GYo[L2lpeg"drZJhYj.T2Wl=mcP7[HHh]L3V<?B(Ps\!_AkIapH_ouLF[HZCYil&e></<m<]hLj964;P`s\.fk)J`7J<\=&Ci8XE%q.XJuDa!gi9XU=4!8r<n))^j`EIE7=YX(*%>\4'M4r=>=]'ZY@^U>?4YMG$hmj_thS];^E*[G=DIoeX.#+j71rsAG:h=oUJ]r-F*%Jje=J2]gXRq`HiIZ+TdVEeKq9B0:D;388St>rLugde<.+)L)(>4f0#O>B^TCW3QL97(6PW[opKDUmt0Q.A_MQcUR$U2*RD8f#3p,%>*m:B.,AFg(<;;j#KuJjRb`bSbb%N`Y39Fm\<YmIVWI<<?:%7e;!ss>#RP(Z4jSeR]+^Y?f5;odgV*HgFOu^`(^jA5NWl96qBKK9%DT/pu:@CV,@;1`UJPrgSqW:9]4WkGA?m2q\mRa3gQUEVqShiV&'WJ1+Hs/(_I`*(D5bgJf8$oHuSU?,HTi\n;F-r&7R6/"kOFtL\%a2R[slIdCQQAgNL=:>EH%:CWISeM;\$pinsOU`<BMqL[9=E0>CYs@AZ1kRW:jGNecaA:LuJ_-4J$'dK5<+>Qb(IWFdo[3%1YiGgM%r8c6j9Whg0f`2S'HR$/^#Cpd;,niBU?4aXa]ch=ob%*%'[B1*<6npd&:h>>G!7pKo)MAr[Q%9%-pb5j-J^A#"iRORR3@MF7jd2K`%F)?3iPhe=n-+W>e"iOcf_HN3H6gJu-/FP)5,KP/e=$U^O*dbig`t].U`q%!Bbm;l]EFg[S9gSrEZ+M&>g3/a@UXCn$dG%W3(Ca8q%f!4R7(al-GUbo0_/Fkd6+m!0(6m<Z&)c@[=`_UU-!/.U/17<1!]P>&3jOK6k-d0#GZ*em^krn0H$bP-_DQ3?Ds+d+_H)Nc,3&G@&%^:06D:OZs?I)8IsWB@>d>Br:XNOG*MG5\rq4mgh,,`.B=3Pgs>@thp2Eb%'PDdCZ8j<U%o#N,$D$m8\U,X9*Mh<r))eR^7fM'RnV%gFMpZ6bboBI2:nSp%;rJ]BO>44cs?%W!>GY=eYe15?QnePgV5YK.R&\;QSU`Er:RaNAh?*^cbkhg\Y@hNbJQq\8sW.Zce[1FJd+6%X8QF[J'_K?hET<?VZEj=!h$QV]@nG%r\4kaLbFg')tpIH>32S2U/q6#@a?spk\M-Zkk&50eOg,/QU'[6T_Vr=:Ip$?p@\,SZk=0n%WloPq.*^Y4(:@/30c)j!&\N7XY%5era6bbCC<i6#F)h18H?tV7#T\GZNsd<LMVsLDj_+JVbEm!-D=^Xc0'Ei=$k65ghO^WI.d*@d%K_XniP-k!_s(%,ec&%-RhVFhT]YCEk9BFnkOU?C0ogH4%[4WckgX"\#c#K[5et/s]dQ;%lr`1IuVqZ&f34Co\7]Ras[13B20$M8+%Ia0Lsc\pD`ADQfjWR#AQ5P>2ub(9Khqh8h/oC#Z#%Q9jm>IjL)_WgC@@JO:aFjAkEK#u"MEd3=e`76tog]gt>.*CeH]`pk#OJa=L%?Fj*LCA7Y[SSER'f:&KViRid!e\(`.Gj.4;>s)*0XdReXfu<nVj^i$#2sR2]e/U%$FjSZP7"PWUW_]WFb*\g!)CE?+bu*5AnYEEX%\[\k`^-o8B8NnZP8f3F"/=lFF;PT,F;1$/4g!.mFb!uCEc-l"mgMcm7cK(hmb2"i#Y]`e($9?-.b"=ZV2riU-dm`Tt(:BV*5I4#=%'3GGp*kg[*CG"U+Pmh7Xk(J%-Zc[;6=%P2'TRZ9OKOcfa\;\?)@)YaDI,E#3pX_J.<3GBY1j/Dr72$hA=ZLd:e.mu`WqeqnjfJ1C%CbOi,42Tk$/Y0OQ>lifq#aS6B3R"ggc""mge5MAOA1P<kY#[)&.f?KpKPhW1dSLAtR6UR_20pX`k'OG*bU1mRq8/^O?FK0jC9Q$p%B`*'Nm_&OH2;3]DC,0-U0CA-EC:WlgWAg"$Y'TbD\(0;l,p1_+4T:][f=!gdI`:lI\b!?nHaZd%^BlighG&EVo'Q^"l8tcMQ*6CZ%YuLFlq13neEgQrVNpC-8e;A2jOj%.H1Q8h?o<%_/]>!i@mHD;rU!@F4'&Np=^%#"AG)uC,&'Y$MZ+Kus=7+cm=-_Y@X\ca6hHX#=%$6-/o^NTCFPX@7*\Qh`_[)J6YS6;i9@/KZf@h"KL3/(DZ5PcW_Vha9dK5H6/OISZHLjhslWB%$(IGIgj['4O[.ELNA'=$CEedt^I%qtMtnL+]>^>Mh1mpDh32Ou!;^"HjprA\/3(8i\Y;F7tN;>8c;@>?BW))`pZH3uc%"W4;J2cEl3ZcLPU8O;*'8L`]jL_p@AOPJt`T%3Y),6.WKABH-@t^>\?EC\7)<rCaD"_dd]dAgWkY+qJ4bFY[Q]m,0ApDOT_T?.H;!N<^-6AhMRM"pTnB>Q.*Vj4U5G)iu5SMdk_$F%[g4'ur-;#Q_K]eDdlXAE\_JD#&GAXj0(UGogmmFV/>F49i(Z:W%McK6bPT+KUrS78.<)'QEauLV\=?oQ/q)pgh82USrL4iH;7p+Z%`4]3i.<rODg7F@AMq9cB^Ft@FmVE/TqSC?XNZJR*\M#VaDmbu`H;oQ-PAlT"Xh7<8)O'f@o$-IRQZn^d"$q@.cc[:tTge0&@t?bH%NtPRR:D!?'8_a=XkheI76bFqnE8@OahdE:fO*$D;A[<A7k3NmK>j%r'E0hr9!2-s.7))aipQt,'Npa`q9Zj0jc#UcjNHY3,gFBt7%q\NYRf!hdsHKG>)(Z8-Wr5r-E7l*;(Hp"lu/Fd@C!A!u0FR4Wt7QO+Rh:A'"oN6q9GPB&U,TZc\*nt1Er0>3-oN3)_"l&UW4;PtE%5tV&[*fK'^=MFcAnQ6c\`I3)9^r]9_?5Yf+e#Sl2$2I'i%l_hloip?I/'$aYCk8e!lrbS"p"$UtSQLNKGG!-j!IS!@,g+ejlqcnR%qCH7(nuJInd_9?C;lHdi<:&/^?c)kmB&0M]]CWZ4aAU;"Lke5H+,J^WKI:K/nEhjg\"$`i\'(FOZKHHX9Vt>CC-j7k41$Mdr4"@^%'rHb24`G%VXfm/Dfuo11A60"?6h;oTi]ruD)3GmcDK0LR2)JiqGF]j=cp]/ISktdED):.5B*)5h[?tpVZN-r_=b'#h\63321=(X-%qQ[p@q5u"^gd42`b1u4(akV/)EL$mIjC%j4E$^e;)<DWurT.GMe.JPS+AiIM5^')r[jM2B:.G`u5^'&ZK=L0c(_L0VXL#GbBuX()%#(Y&tM5OKOedQSD-.S=A2WH#aW+,0lfP.2AJdB^u=,og7;N?_t\kd6*,H1o]b7KL,mUR6uoZ=/.(rp+[`p$.BT*?@PXTnk!?u6I7%r^?W82GZOAIY&#GM;O9<T.pQe]3f+?[$-C07+g-OmBKA_b0?7T5hJ62H$+2pk2)Dp)ie*qqQT9H.e`!RL4EO@A^%cWkN.%GX`Mt\%$A^9DEQ.S4,?d?eB^g!-doSq,BL_m>O-M,'Z(',[=6nKoG4RLGfndD6SW1)!;ZGSSO]o9k3-Xa)I$mOkOP?-@hbfo"T]%+\lS'6U%I0nrPb@c;[M0N_FSC>a&;d;!5EO:b07IF=m;KNQ/<\l'=L!8=(.@B[RNO._6P#/s&:[^>;@FmJmdsNoJ"!WcSM)QWEY__=]if2SD%@1gQE`#B:]=N#2?nOBfb&JB)R::u^[2]<BMS5-`E3=","i]*KR@j2p7EL]e:OlV:Q6l`*<DoDU%@1gQE`#Gh`*uK!f::u_MM1n>;%A&]IGcC)l,h?g2,p:o89FeC`2kn1/-R=3LNbH0.B2m1'\:fCpb9k>gkC\P"^B#q*)n?E#F:=Y]p[Y`_^\RMZ_UXoBU7q-D?OAl3B%0`-$=1OIY^B=[<n1becL\U*FckK)E<p-#nEcBd9Z@Wp^_lqpRi(A[n@joG,V*A#qjj0lD0/icLm"9EMHJ'sEbp/,aI>:JnP@6I71%F>\W(oRK"->nn0"/i/61,-5q"m*<4pX6[ed/$:h?c,,@2]ndlnO6UnS9V.U*/8F#:?^ln[6lOZ"T.94h^]'TkVkN1a1&1!B"nekI%G]1#$C]?;=#r,$O'Au+QeBOd;)+dD"iJ3;eLG+JmWLFS<PD=\W.:;9Jb0AO(ZdZ)Mr_9P)dIkoGj^'sXR\Y(uT^Gu="4RTP:`CH-%ihGTL;#$7dOp1X\qEKfYpi?K^]YiV_pq)_$/5kEr^Bl@"%mU*0s8PZJ6LlOMpE1aIq!)#!0QUu,1?G#T#YOY<Th6M9d'<um;h`O5%XmZ&%<@n9nI6dTU+Y#60P!pZEBS$S!,suj)[`D65=*(YkaRGBo+"H2TW$]5MgOu)*aI3<,c0:ZGC93]QhWodB;L&('%'4.'$r[di%$;jZAOs93`78\*&-7]4aQ88sjk`Ljp+QsNQOja=m]PHYO_[s(H'llR5R$:;sVhufMP&c_!(o54a,`.`d4#BN#b,Ua@,Z,k!C/,Rq%<nW")-&IrP3COZ.;GUA:K9Vcad?F['Y2t0d;GRsHVQ?ho9MfkkPY!m[&E-n^aD%).n7kQjOVE%A0lrd/&s>*PUDYC-1C]0t=4;5f%-tr\-5[Mf]i>#@F*n"RA<$C_q@SSgUGZU5PZ60eVF;`/_2,XWIKGIjE0%"fd(E*U=,@t%RP=:#"lT(a]M[].c3Mcuc_$\,=U&f0N%&hqua=:HutBG.ra;Pg<A/X(7ETE.OlkTE6cAKWJ&5WPi;.\Xf-Erp@m6jS<Fn=]5]*BR/q]aSJLOAcTr&C?Q'9S8Ws,:-?AH9d!H%UffNOq@&#^lnPKDJE.s8'a\%ll*O"-WN%9W'WPW-R/kon=!`BJ-'BCf(YOHSPQaW(A_:l@#a(dbZ9la!S14mN.0J7d8XYkH>k"m)%I3Rm^*q2M7,3T?hTLC!()K[Bn8K%paLd=cN<;NJl8>HOLWhbY@KLCDXAt"6TObK;N;iDo>'a01jdj_[YN"cApahW5N-4+"?<%NVZ%W=gcr62ZjZ:o4grQ_5Y9.%.G5eHlu+"\$u2<@%m'P9M$]#nj57L`.]tEi($Z?ndfNBg<tsYD>4gOaqf2.6s:f#IO\B5r&mIVU@B=%$`7U)"Jqj@2g#s$18TS[ZQu"_T:/H12/1qs,)EpH&n&;Mcn]!fWDG?Dg3'&e1`.)5RUHQ19Zt6p`E.2[Srj[X(I2%PP`mdbM8USt%;5[Mr0rL]O+nR7k=XruK,Lm'86*Z5t?o>`q4TP>sTM1!\RS;G<)ScNI[QlT9;?i"IQ:9N$^_[&J6YTFI.q,rMXob/%L_e#7O\-^S%FX$BIRR$`RoSP2%AJ-$.+G:m0VUZ&$7B;('2J#L<WmImLFe[$ECg!MS"J/MKAV)AYHDj^V.eSOrOlh7Q!D>[b2)Y4[fHnod#Xg6H%-kL`jee;WK1,M<o7?o9B%4.o&A0=FoTEXGO(tLB;1m+)TdZ?&`a]+YD%[oEr#9lSFAYo`"Dcj2p/Kn[RT+W0(L-gY?-ko8"XEOsP%d#b+S;!LJPUU:N[5R,a=&i#NS!;;3_#u'7"TMS%NSo?).3\:G\,UlbW=er6QChmQ0#gfE$6(h:e4NWm-&.DG>k"$e.5p4;SMF<"6%HURuW9;M;ikiFY.$DbmB8<Eu5"%E<Li#*[@FG_L,:k1<_)+8e2p0<pf"mn;Y.CA8Gd:%8"aU4JZ:g]qgX?9U/bFZWKM@-KHm5_*c%O?h3)cR%e'6$J`<W+P^tD9hCHR`O6)/@2.h[caTN"k@Vs/:4OM"p?aiDpJ_"=l[ae;PJfjoB%$n$'qu,k+%N"D'$%GLd@5!M7;W#%3nfe+2()rbopqI-a*2Zs#aK8O8NfdKH#&FO^bsu9,K6rVAC!0rkXSc*N*15'VLd"NXZ>LJ.eD42.8`sGE7UPD$.c_S2+Mj`Ot#:*%CCXp-9RSG3RKJ"u$pM_#j1C0s\Z@gL!!OX[XLX.QPP2J&bsD2*X.!nM%4WI422<rK&_UaA73-%s'ULs!;<qHZQou7jV[SnPLE`:t%ei)\n9;:.^2Wk("%P,Si':WiZjrEZRU>iWE:rYU'gR\Lp5r3*/SjSW2V9(IUi6#`-AZ;(`#8g,ngD1gQ/H'KkF<'JnQJ*)pq-g7<%gS?(53i/43F=7d#fsFI7&oJR#gS?&lPM.27VF-b`feD0Z6c3H7N,>>Mi'`W'LGHam:9&0\Yt3C[QVkdYKnusCe?M[_>Xf`l%*B1:%W$@'dg'HH36^^QK'sm.,@bF-'XG],\<G\^rXV+@;<C]?LZP:H[6^afJg2*gMoh='lgT%#B)kt8TFf_H:ZY<WdW2AjGj1q`W^8b*\%Z)p%oYgkbB<Q>\aRVo0dn>PGgX?)XrMT`$[geAO=<h1bIXZD]7&lC!oWh[iNWI_IZ3g>1fQ!JPRbD<=0brV.m@VM<S/CR;%=XVRp%F(Lh`.'p:NA(I>IZZp""Ft=</GF;lp1/g&U]8ffclLR&[*T*Z1Sn$ALa-isgZKq9<ebkG57h!m5EXY$q.AUOFAI!Ic,.T;;^e?Y!%g-O[JADD.$*Ma4)1,\H,]hORpi0Ka@nHd0m,94sI>B+I#SJuQL>d,T(r2cEV=D#NL!#3Th1FnLaTi*sd>B/)XF<5+"E@:oP.CuT?%Pei#UEg^q.Q9hX:D8oH$W-@NoEPsBnDEEmJW7eT'3#X>FG"p,9-'BZ*[M_T<d$TB$`Naol;d^Pa,Xekq4gX--;IIB$[c3T*jK,lT%6k!l^Nj">)@,$P`T4GiV`CZCn'TNn5TiPhc3`b$D[Z7]Rpo\s9NeUi:i1)5V]P?uY1#cS`-,X<473'.DB1`YF.W)7s`.?Nl4D_qF%WZ)p&%V:7NSs0m/D7V+VW2!okoiQ2N<?<Y#dRN%dcAZP):iL$:3>7Djf.$S[At2RZ3&;%j9lukEW3=D4Gr^0ae5>;N\B`)2B?$W=%V6^]hNe@"f]lmX^1q+K\qX0b3.L;U9f.l=LMU9rGAfU#7gh,?G$$#;k''q@53cg0!1QM0cp9\>L6,8kq\'6m)N]!qOAfMY(HHeD^%U3k*D`XJj&iU"'L`S+nD9ng$J2rq&I*CC;]9X5)6D9--nCE>QT3)aYJNhaapmXoAs9fi>_gMrsq9uU\a;-p?t4*DV2QK"L,j1?N&%$/:K8(JcW8A&kiJVB^lLEAS(N7;LXtXCgbcff;er,[/Neco"ag?$73e:ot$dZf=$G&S0Mk*+(Q+p\\8_lg6If3"$C5gr),2:aTD!%co0oDK2YI1'o*u1TMDV+`K>ONED=b*SEigc1QH$']#'kT&1Q(MRrOr/MONlej('9:D?2QRpb)743&?R\%$),nNCkDqNYR>(8_scb%`&&o<cp@E#o8;ZM6jREL,iF^\!&h'rS72-u\')QD=`k[,%"_U$aYrLa#cp"n1I%5)WH$2/@1\9aH[[U,]Mh\_Q6#UN5UU_u]\PCb%:OuYl0EespR9aFXTo@s7/N`S?aFqE7G)S\U)NB*unTL",:"+C2%RpoAO?&dDDE"e6\ncnXJT"D,c-Khp&)'KlR<HLu;75^XgYl-A%KUk'h!lb4?GISYAJ_@3b1@5,M57N>$VB)e6iNhgUM-j64A_B@QF\*[4[VOIjKk&hV^9;iV3s[h=A"6pga9%@TfS1Ej$&uN:L)ort%l7qX5Op%d\S7ju6&C"_;TdQp5X(0eU9W,3>gTZ=gJH9pgcS:qC;12soG*#/7$@^`a?#m_`Q5rRs9lNnT,psaO>BU>5ns0Mg=a#$i%Z%1Mn*F=Gn._7/mPd,LrD:uaIbGM/J/A$S$?#a(l^]>@sD;!kOOF3C+LUN)i;flh;<)_I4S(Vt$Kd"(GmQ_Eo!4Qf83\@+<gNJ*[%>-fg8\-%#2693#D4*!cSh19c\W,B30kg1:f`j'AB.M"gegNJ+El-uZa[N-<!`OhOT7ij-\R%;oR."a^F>dbXZ&Nuh3"=L_Bkh(e+%SM8d+*@[[/`3J\BHFoV]NfF`A(J,UqY-AflBA.p)\ePrmVB*iZ_en(L9BgDM*JUsZO14L;)@/BCCqC0/0Lba6S2?JMZ5pQ[g&@4%%JK'4+St?ZmL-+f5YHaM)D:_c8?uOeB>W>d?'6N;i@?oN3>m2RumKkpt'b+5)Q5s>/rek:>U$";XD:pd^EK`3F\5)-DlgULAHd'&n%`SY7X6(Cotr7bg(RRQTtB@[g+B$&_KGZXFRh,P6*jifao,([_hP:,=)kr#EF6eCp8CZurLRR1gPZlV9NZ1mrI5'g?_n.'b3(DWQ7%(*L2&J8@r9^M,s.[a<\a^_^rCHmF.gg50/C1RVB>?N6&;kVLY+gdGO-gf].49b)2rNQ60^SBSMZjm@B@<eFS*)#U+Y%Y8O]$QelS%=Wb]W8qD4_3-YR8s.)#g],Cmr27hG#bKdU[mT7Yb7SqabDHt/6+Ta&g]Ktj1?0g1F)D8ACQ$'=_,k0bsc%:ZuCh#uD)jo93fZuU9%$+Ji/X[&qsZ9^sOLs%3bs799#O9frTknhj8@1_q<L^7mbCH7d4_Yjon$Ubp`>HRSJZ="7Ip<"p9&Ig`GJK"rB967;fZ>-n]J^.ZN%dl#NenuH@g6PSG5g*nuh3f"(bd;Vu5B^YOm<_[4",%r2l%)o]E"c]mAW)sHC.\mO3^)<*a#Ia&r9AJHie*n_ELUu"<Hkcj>N77Q;%FYu'<JLl/MNpJ!RFB[$8ZNF!Sl]qJ`WZcig650T+.E&'r0;8H:32*\62dGKnQWFOD3rt9/7@\d0,k*=&hBMEHmdVsXeLhjAZ4f<@%(;PZ^4>67m*M%(QGkrW@Y=&K)p/7,9<8rAM269A#Kg5^3NKu!JJrmI[rK_6sU:%g+QnRG(MA?Y;>t,Q`MS(TgL+:2DE'`QCpge3I%&%>"`<9/>P)3lCOQp:tdk,3$d6?W=h.asO<(JVBZ)>F8V1`][$reFF,-)sW_=>77-pjsfFs&]?o=Y]_E-gLu9"jX8=C68N(5@IH&%g-;^LrG08!0[Oau!.^BSM&;!P=CXno-(>b8)&7N6NaRhYbZk8iPD!uYSZdW,19<>m$Oh:,#)T@#aADO:-;TfgVHNQ"8T_Gp#%07+%7`2LV-H9Z%9sE\rPN6+l'snT,s-pE%J3\f;2O%!Blp)'eUFg:N)9]5eVA_8k$6Cqo#Uh`C?cZEH:0W]99[YaJRL7n"V[a.kB\`Fr%6,1!RVC"l<dK,$k5R`-%kh+14f7ZMUKT;ZqaeXUMkb<b%>;@$ZJ]`mL9/W]i307+'RS"VC7[+Uf(8Znt!0hMj9sF+IAJPqq5W56N%F<!5VU)]a\_OZ/Gp>2iGO.uD0lTmR;&,IJ=,Z\B@M(m1Q7(+_!FQk,XU*g]Yh#:@nC=3f"KV;T(7$/5mL9#iTI<Cr4;$C%>JKe7/%>THer.l\]-f5,bPhh_V6PX@6]74HL**/ZX4R(sVtU@XXh]7:WK[K'`H:GCVgE&35`njI15\lf'c2QhkEhZgtXAE.^?BG4otRaLJD%L8W'uLHCXjX;sp^BOhoR5EM[3Z;ZK(L+6*GX=,Pp$,-C1/1iSq;qNVj%lD,V?m&olc1)YCS1_U!guUjFjB%[LTkhG8%ZH8'2MFYU%HcAbU)C#PiJL-!_8]`<;(5-LA'+`!8Q:TO$8kMk1-'JS0i'NOi7YfqcCF.j^9(p[b&%>:,[bh:!ZcGVU0p7[[Ya^dBFGZpQ?AH-*%qq$"l'Y8\e77qZS(fdUF_iD0N()0UB=JBMqGm9ia<Tp^pZ;lh,lYIqD_nF)/s-pfPFkf)"9pqU6?pLp]]#%r4BX%+d_9lc>8L6m5%_.^:572m&AIF6R?3r_Ecn$6]_Y&&rC_>8pe['R"$HE.k2>ge]kF"qC=\6ohgCs6.=>B&R#]mI+%09&!Cg&!a#1-$?J)JuKIThm-O%$ACfe.%i@dlR?kUHCq;S>G@[cnj[ctf!"YqF0EK,j"2Pe3^(c$Vn'S8X%-AAJl-Y(GK>'0luia]\eL:aE4r%Ba.<u$\OZ^S!#l7Q%IbLVaC#VAc;d*GOpIYFGD-oL_YcgQ!;]T)tc8.C)VKulJ:5oC$U6O,RP@!S%D(T$MhQ-^o75ZuT<E/c]]8q]H30X',aRK^l;4IWp%jFHna.T*oJ9?t-la8"umNjD(t3g9W'U@0Z<?(eq4bqWC0ieT3N'sC+F#VpcOMS8P3]3=Ud8Jbh%A`b)oe;E.0If9,*+l&;Q[HP/F%C25VoK5LE&rg4O#b,N+7C?sU@Xn?<_FSD%./Mid-U1m)>C2Va7k=!R=]'$Q:3MbJl>)Ybp<at*HSUrWOW?1M6)q!:W,bt7?8(8MR%gLZR.BiR/?Lp*7W[06])H,^'D@a;fT5:d44U5rc%.GCr$hg2[0qN7J"\+qgpOm(l,[aZ':JepX-MWE!-BIQh2#N2E3%NA$I-G$ml%>c>i:VE7l/,r4gNS!0&-3\jS"SaQ3bDsa\(<_G-fg<+4gMLsMNFUZ@GW4fnU,\HN-EeGhDCrGDM0O]!NES9-X`Vh9B>0)ao&]="T%;[tF'EqYDhC,4)rs$h\q\cUsV^HQgGHmrt+2I!1g+qP)Mg8T>$^/<$$Q1K&pRXW=*Z>%!R/l9dKoh(*E];_d(lWXp"1;2f991dsH%07sR3IqD[e93<'HPQoUc#e\GK_FFC*"td@b6oK0'ZljAfQ\H"d]oH2?<+VV&AT/Afef_;*.@+4_HJ4o_/5kSD\f=eSZ-PaBN8Jn]%2E4Wq7N83%%8/kZYM_>;bKTs4^'2'S=*V(tHe9pG?.JA^a\MT`K%0sMb#+b5@`KHdma6.&86q;'h)l.g+W]1m<IuY$h:c#7W0Nh:%Hck_&-`OZ48+jt)cPnHK57Rqd2&M)<$bO!^%c1*jB[UPbf,rK+`$Be9[e:54/?2'<4rJd*=5j+LBVJCsIpku4+MkV@ZQ*?3*(e[D%)sf'>q.Oq-me%#NH?"1nA`cU,`\0So<kI\5dluOs^=S2N=b#\DYU_T?*.+_&e\'OKWrlAqKaf3#LN5-Fo:BT;9;M,BS!ESbh5DVt%Na<^'=HamI^L5O.Y/F2<`X+c9J*VF3l<#p1:o>K[G-+O6\HX+#$Z^DK/_m["/C%/Y]LoR@0!\!JNM0j#=RO)cBWmn&*5;J:gD1iB%5K9l1J?02q+^pGV3,sRc\C4]cHV"K-@TtH)dR=gi[)>4!M=[0QT>eafdcXJuS35V0YbKfO)!?3QDnS+ms'jMOCr\22GuV+j_PD`1%O#:%?9XKa1`Z:.B%.]T)[;Hu?m6,jX@W]*3aN_[JMJ[Y_UUkG"D!5P5/lY(e%d`DugG)*eM#$fLUj.h*KD!2ARc@^%-JQX.H*h8+%.5:mf-at!dOJ>G7K%!+U;EKd[0OgX(/\,tMT?TPN.NTPYcbPgFJLbmfZ5<r>$Pj'AQ@s\MjbbYh=3Rt'<S=?K(l-s[P"7Lp/a:,Y%IY8nlnA;S.Js42<9:-5M<@#t#[@Ic85<?b,@mN1P8)'ffMQD"7WA2[Un;*9mQ1*nNbb+JSnhA"i7`9K3\B/GdTd+AoF?;0I@?Z.S%-,M"4#TE?>a\,$-f1Ab::a<kD8lJPEDZkC=AA9ZX-di^Mii&5729]O]66]-TaN/&8Knq)M&G/<'LJ>p?9GOnS9oc.3pGd%Y["hY`%l&o_"P?g$?cQ"jrQ[e7.PAP%G<^]ZB@]IDb-H,&\ar*)4FO1[1=HWaU7iQ&3$6Fd?1Q:Y#KhY=%;Fk5[cT'9oFG*@h]Dia/$80(*%ku!Y231KUR2Ydd+UJB)B&JC_S!:pm`q6\l!))iuX>]1rWguP9uq/tP/[%P-hRhQAP_]9po6&-6Q8kB@XT!%ZK7$E_=W=,[P.;5#&%^d:GdLP/*^Jki*&.q^<Hn/g1))Ye^:C2DY.aa)6D(Y-1ElO[OmZdhTFE)TtjjZE_$0/Z.l!XY;U<l,W'oT?(;6N>(D1+B]u2d;88%"j8PQ7&kiO0!4HP%e4Y8h\tS>\I+o=[UPQ'!*#QA)ML;5@eYsU;*UL+_,_hLrH_TiEYZY-eTK`(BV$]k@jWK+9Q(n=\q6F+eZYLG%@#K5ojZHhb(.Tn,*`#i[POu;6(en)9mIF0Y9m0*NE3;>uf'@KcCj[(spRrdGZ<n[8)sI\N_.E+'KMD0`Y10:i"mP$"V^o:Wd"u7P%P=b*b>J[`e_B(Vg71H=(fX[Q<OfUf;JPj!"2VBaq1$)i-+sQtH_^=,]&b3(sBi/eH7(NHI:CPF(F9N1*bB^3eRa<aLaB*=b`+A![%\2e4m^4Jj>Q1:0D@+u/MjXZFNY3dfJJ_[!N4-?,=?s.#_6r(1)[p1+t&k_@O6RRSRWoYdR;O.bf=b$tJL[7@iL<sf45@YZ3056:C%0=VVoGQ7-0c1QFa#&L@&TANR#rGnQ5/uF-tnaHHiWPAB/-Oh'j5Jt;[.AXn-;8e]D<Wu`T@h?dm8)Ae'ZCd+7O<mDiO-UBiiYjrC%ed.L<DID+H$h>,<K#i(iINZ//^@aS,AA++(n>L&B'B$"K]Y_TP'IDt/]KQ#87.a24A+WFqL2F"^bN;,c%/;nc,a"YpCorOdfpO#j%BrE=Vm7?N3A'P+Yagks,-!!'$`bd(b%EL8=Y93f'):s@!L(i'8-Ml<P"9uI2ic%*Hp]c<j]HH^uOa?5!+mk[c"/X/J322K(G%]n"%[:1)!:f9`O(I(i>2j4UtZUiRtV@'q0_TPBui4UpsP-@@1VF%Qiem-OrJZaG[-=QPQA<J8U`1Yh8e2>::!FCmEa]_?-1l@gZ7W]'\%gUOr2&*;E(^ZfS6Xt>_F0'rA/2$1sY_`_<tG6E)hO3`,^/=O@@?BkW@?RIbdYUJd"CAA;cqhT,==>7.9s,XD1'19][Zi,fL+[4c$%-r-D=eF(f'3Qh;)%/ottd'q?Rhb:B!`^hC<[-3`kp+^8',jS:s"7.ruqI"0jP4XCn,1k%",`iS]^e>h=9r>7k^!LRbOt"-gg(\(>%/_$_dBem"m.?.>'2/*]'UGYVDQ.>)_oMB+3Z5lN-F3Icp'fhVn[DY_9aVaGVV\(r0c1PcLM^_PDde#@>5t54*Rb/8*G,pk[m!l7r%gJ05-8ntDteOUg^gQ&7&MMb)A7<>0VJgf)t7^m/(mp+;9PBW0f+l1JBHK5ih5IIq9s3&Wt?2RCj]bB'/UqSkO*:SiU9AWq5V%_r1%=1Vm<hFI#,@5S!hQ^TuZWD\MW-8kgL;PXg$'g;E[4g^QF0knCQ_.Duc=2pglG<%R!>t,E2#%,K@!3e#r"VX9*aLGPn1<OF3*#6.#%/dMmp+8lG\mO4!LG[7I'7uK>%;>7CC"9@o8L%H`s"6$J&LTVGo#)=U*/[_WCHq_VYYD(j_->14t7k#$2!H83CkY]o*L4td[E!P%G%)bP[:K!]5_<AUN2g_+FTGNod%X_,2P[rlkDa+g3A4i7`Db@`A,OHkLg'DBYtU!BcUW4FdGRN+)6Z',hBr@C;`'aJ6;G$A3Na[E6<%+adh.RlNZgN[3aKL8frsg>js)3_+PI#$*(P8k@KD+9F+KSX53k_ToIkA]^4\nlEoPSSNofOdbmAWeGeiqr/OH'B8KW&6neqe*H[8%b2oI)::98q+2X`FYoh\b,3VZ-::ZG98$7W.@m;6,;TH$a$7%H<@(%=M9t"kACU(/L6+6asdDf)Q=n)B@W#_VZ-+C#IIL'Y&ci)2m%@D4%FY-9gKC.D1Z*-2U7:!P&#0!Wi=12]2,4s4d=k3I9gK.Z+ZFa$hAJEfq/W8_7Z<TQNLosPro_mj>XIjpFf'al:5*LJI8;3@uK%d9NcS6'SLd::Mf^lWmE:O!GFM+e/m2Le,Vl_/?-@;KGPbRqJ2FHr@6P80dDeEPUlp-:MF\arneDDIge\]T(_4qdBF!.^&43]S\e8%=)i;nVcDNG^TraS2:U[#3d*mMni,)HC.\K/42,%Dh+V5`OLZqe)7HZ+?Y'pma(EEuoPV7[V.#_'&24lp<7_kZW4N[4pI6FZA4@i&%UR0FM77PZK)ZB#Y6r>1`o>%Rs$1dSA)M,eMqefn@l:@^gQ5<Ua6k8i1CDQco4,[MFemRgDR&np'Li3o\;TWfMfKZ0/Q_GoudR'AK%^J2I@A8pA_GE0eB*M$JiP)12%6G5$P5FC-"0t)kA:*aYg*.*(/pfR86dW`$?/sX$?\*-&=Ok"i3>1f;4">K2,/N7'NjkOn'[940-%I/q0/^ETH)0&Nm6'*E?aOgGt"fgUj:@uHFe&k#$O`l(-*DU>Ru.f,1]PHE__!7m3b<L>\sfXt0K_?aqpH!Nr`-4T%9l)sj8#-JVZ%;=Eu133R!6dG;fGN>m=9FtDnd7)dN'=X)i5aH.sNNp&<k.^["*:<Y9.]4m<:Lh%q[,j=/=/<6B;h-=Q"RZ^GBSMk?!1i9ZrRfo+(%*nVL*WKbOS_'FA-g2<1OmN+8=s1o>S,@n/MT!GbD[l7@iAGsr1#Q`p/8F66@`[K?6)O7G*Y`DGH/([5.r?"TX<S]+tog)B'`ki_.%2c$rh4Xc)hr@gHRBMZ*5DRhe(k1Pm@74ik0l?-7A.ZXo+'fKK4=[c%sI78KkUDZX8`Wac8I.(5WU)cVgV0"6G29CU>c*JW<><NpY%E^e'.<[HL_0HUAf.;9Nb4W(:I?91g#n/_@%8*#*Rg`jsl0pD+`U!ZjJ0@UsGb.V%9R2'crP?tS<DVl+q3>>$L[:<rS77Cg9H#$i]%3CRQ!3RP+m>M$/hE9k`(;K@FmPCm+NbVrb[S7(cG"\jTI),@INE/:Q(b(3NSE[`l4Gj.UV_i=.&PP:2dI2L3n[0\]S+eRp8Ot8qX%@L.V5OhZ@TL+pNb"U<Q-Y68PB#K&%@:t/r]hnT(enJ*Nq9CI=R8\m]^gDpY>dWI^Qqu@2TOS.>iYPEiGMO]*@n*G+^BM&'i5%2!C%AfH,JU=K&0':(\A3:[AsQ@-aPQ:=[p;Vk/8"ZfFG"Z]=EX2M+]g.@Ct,d\c_F5H^?,c4=EW\RLIW`Hejf=Zq_e^'(ce`"n3=7d,_%HCfdj`,Fb.5HY3^-_\$jGasF2[c]UV9h=R(]BtkuE\<@GPL)^]EI5?hKROlJQVWkAIM.P'Ng!;dFe"-9d`l`Nji#o6q'8q$o-?.9%8$@u;cr?,VeS$R7D\-Ieg'P6Fjh2$rO,0gr,S]g5:I5503scYc4:.9$XQ(Q_!NBl3m3FMgj@ibG-_WhgZ[9EWKROlLfCu!:EuhFb%>Zo01PdS.-H6kH;csPH"949GaZH3mDnge/<GVcq/\tS^%>;Y5nXefYVf^9#c2dKr+$W@X!brmj6,@6K(,8RfV"]5qYe&dWkn7EH(%+M8pj1W'UVFu$,MeIc=uFW[e#9JG:e_,!0j8eRtY1rokIs&Qm(5]Z_jCf"%^SZ^,bQL7%0U7WN;mXXMeG0IH;3Y/P^+C"iXN/NcG%(Sm>e/MsreJg&Rj\(-9Nj;FJ*X/gn=o.+iXJ,8lL1*lesL=m.]]E;h>?!5f[F6)#]DI>0jg6D(5UO8S4k+:>[a9+$V\^WsTSW,+#%EAb2g8dLh_4u`.]E'haU!OKE\[`j]KY\%]&\JlAC9kjg<=&jfN\KRlFGO)sZ-#f"m)dM?)oLo:G.3`Dc68"bQ,5!?8b!4RXIZGci%.'G:)NbO-n=QWH>ST>\E2?N_IOA5GP%gq5Njr6oaH?L>rs$@^igV?E.Z@$gIJ1?:U*EtIlfp5Hk6X=GCEL@7]FE_-$A4KA&X@IWB%p]jZ.+gh"%JCM9:24=amV,A@lTJ`S0+)e?Og$)JHhq0B%,k]J<k<]WQ<]T:/-%7mT`q0s*V;q,1H>[W]^R2\X%sIWYXTTe1Ri;lG%MTXL@]O7#6Q+VgGF,Y/rOOS-fFPVt7Ch`Xp@f:M.bXQQGh2Lj+-"B;QU!0:]i,_ks-4,6&=n(R.SQe-Lj,\WOD.N^&a=?<ln;<`/%hH]':'BKW]_IH9r8+-%Y2#l@lctM`]E]B:X%ZAJ)-AOtg^t,g;3&!'MdcYl_-@daid(m.TD_BXi=(FqeY3IiG!8"6>C)bIE5UQBF%mi6].*C!IsPH.#bDfO7FMuQE"$9IQfT.<n5DRh(?L[B2re-Ngi<]#c273=b/.s=P*[8u9Ym=ZKm!s_^VWe8*AXtES8*,b,Zp:Ar_%-?DLR:TJ=Sk3bgYEfQ]+&P9Q7NA\"Br?D3,Y+@\1,Kr;#e37]pVi)S[i69bC$3;!miS%55eCf9RLlRM-H!"gL6#/rh>gJmO'Je74%p1:Yt["VW2h5qh;#NAYBf\fmdC=6f)>IH1@+#HMTAQC`&P(XgS,$$T/KuZ"8?6,GLm9HY1d@D`oQRh]q!XA-%K-G0jFJ84LGA4iO%HQZpa#Nkq[@6N98#i^kKptA_QLB]oa=dG,DCKd,Xjc%GMs,RF,>_Bu7Tj0Js.q4(f2V0t%r<2[0M;*2G.>Z"IgmTW=Yg)%p18\6h%#NfHFR/\#6mG"D*odcqXlB.E>inQ!<.=12Y7%Y'.Uo&m&Gg5@UB;6M\E9WG:UM$+;>i,sS8Mb?*iU:jZojPSKq38mGUr"cmVj;d^%,JN+KC`/.O(aj>7E+E0k<'TrLOlJ\XRh"+Np0,\7MPe8Y$@9oW)fMDpWF*L=ECG,FQF\VB7B<t82jG9p\Qdb-eaG1]<<5)m>mnmR%mkm+`]Y28(b>'k8l77GpI5K4mF6/ql@OBt']mC$a;KuP.gN`ZT%sV8'DUSc$^.?P@,FB`"8%2,$-:nr?5o%XufbHoCETVqd_XQt>%[3G>qn&)%K&p.b:DcB`(WO3WP%;?_u=tA8,,\_DF3"QfBQb9_6V,Lq&G+rJ?hFI#,@5S#>`7(c#fu.q[Rs9*f/X^hnr=uNa9]9r3%e>Bclc0JdJm2;B"LO//Ko.rrXEW$?Rm7FlMM_:[[TsV4Mb!'6'm:RuY^iR7Z`rG&k]q(GJ"6^?+cI@-omP?3]]\TL()*`&!Il4(\%5_tgqVI$nNdm2;[kc(5q[$d+ol7VoJ8oa:n*V*H*aM%NF!*O6a_b?UH[;Zf0Nhig<k5Bc?=AA0/5-B8h+VF+:nNLKd'_>[*.F&Y+%apBJ,*0KfD\.*71H2>OrVYcnK"u;1r5jG^BW`l,4dlu/[kbt/q'U_ne]$C2=1nr&W3AdJO;ooqt?*Q@mEt@CV;^=sfVd<LP"qZ1j%bSUm+)3:N&`(?`GfmUV(,CLZDf8%3?F.J]e6JBu2X:+E9V!:8Dr!0[@gFna")J6`>2X*sN6k@YBcDp8I^iY&U&m"7CauQhe/fhB3%M:g/lK*OJJ3X*oE>Hd7JrM)6ZDNdF4C3c>(&\_/=#eJ(F*5hY<W@!UL9'pn+<2*!;V\8)LO)sZgH&S:#?DrNe?7SVuW]+!(qE]s1%@n"8LNLm21?"1\YqrO.k%l7Pn]]@hbdh[-Y9J`D)X[L:FoH"#2&3F731^W^A)e4!0kjFMiCYeq4I@4A#JJ2:85'9)iFM7pUeo*:_%3^2ksJhkbI7uS1b>IQH:g5;/X,Y<mS1)&1EE#CDZ$(;)<O[n^q,p/YA:h:/J"2@p=TA%gGS,rBi5P&$1pcCbuLeQ;Lqc2.DB1q9r%m<%(mXcV^<QTa^#1LN<E^i$_u:m#TF]&[*_5IQji'1lp1:g9H48P_genPm9B=*&DpS\0iE2N>c-MQ.c)C1AHa9?ePV,a.74>*mMM%7A=]<!s<]U5*ADIa>Zj$!QI^i[ZGa5GF7F\D7[hW/34AcUTJ))3\bKZ`/W$Q-JS#q#.gbW]%$tC@mEmC8'kD-(h"X\aT'f:6L%RW%H7l@L\M4su4#%jL,-0itG(FZZacBpo:lLjOH9@q8(#$N]>'rjuk['3J4B;uP?;)p>;C)`1XiPdURWFKN;/'!#pp[MTI2L:4_W<A;%o-2@2jIO*&AlAYX@7ne\m2j*J)#)1u;6_YGZ63/R4Te96WFKP\7SRL\7XJPU#>o(l#N79nj6b"4$XGqZ(ONgNPS$=^#-#-SB.6GP%pJ$7fD*[BV6-b$&+kOl5&P`\rjZ%/l"joLZmfOBlB_mXThg<#TP_0He6.6m>4JW`uB1Cpi$g2,)mM9HIZp"R`]l#!5e8/0HRC^dJ%(rS_'RE\KMW*8Ll<le5.4@Z;][fO.='iD'hhD,baWR=M%;6<%n=j:#I;\dTN'lg.s746-$D'[/H]T:e4_as(274(;l8l[/Op7aK2%/8iSI,0="FSk;m2eJh&7ngf%7KnM'o=@CU/Y75;@!^u0th^jKIs+3A!_@GX\aJn"A;H'0rAZ5iM,cU8\gL!)'Qd!a<8ObBC'%1GN%l-$)_(/%1IN(""G$rG1l,tm"l4bbq\02N">nTU@M46:V<r>TQmBn+$^fMlTqVrT[&"4rWH8@jZEJn3Mu<)+8Qal8'm0$0(t8F)O<%>t)&J3hc^%M<Ij:BCa9`RZKck%CMuVjdDPCKLdgAW_o]LkE[658fm(Z-JNeD86Flgo2"$krsj+Q8to`*p)3I?`NAmkL1>6f3:D'-%'M02q81D\rM>W_:Dk%CGX#l;AamY(.dP2O`)s(?\'.`[D*NX]jate"2U2_Kql"@!`F.\tgr(_$?<f8>FB20D-(i<+/J\7\(Q/?&j%;_`kLl0Idls&SL>ofMO)jNth_2_q3-#24bK(S0Ipd'E#DL]UUk`Hr0?#=m'L-R$9?b5$>WAt5KjKlH<(j3t;WO^,!Z5'9\5U:=1F%--!>qHR>/D/WVki`95X<Lno_>%n%koP!SZNL4+Ks]'@-0h+^7KB52[u!a0_JqJDgcpcFH2o[i!W/<i6]'!`[KXe];!%5S[uI_r;;%e@ZKKqms66G1nga6YU_=a=J#kE8#L[H;XOS`$q3,6Jel?27josC#X"&9_>JhqjG&"i;$'0IDH=Nm-DKFSm1uFJme3;Pm`0I2j#5W%MBbP;<03uRfTu]f*Zl6oP%u91EdPga9GN=+;uV_SmbBKCq7(m%qu+"%c:TT`hV-Jt&.,q9&?]-n]KlV'bgbtd$..^-LQE=::OO%k%SCQ/L,`Qf=gFp5J.a>m*BZTM[JRN?6]',85XC)ZU-;r^u`6+k4h6O1U>o#)1fGCgH!s6i_&3AI=3LEWHe^aq5SJ'TYRQT\sJMR2!%*Luse+Q]K>%gBk+(/[=H$HVd^]T;2F84J$.QO"a1F^iu:VR2hJ?4bo7PXcHJkpH._6H0H:f&Z_o7k/Xc<pEYNh62b1o[)V`o^)In%A5NPOZQd=j'RT'F8Crp\F?rYsH/VEs":-jWfa%X$Qi[,BB``;uL2u@4kSa$$,^1Zl,#,6`5Fnp"[`q]<kUc7mWbnHC2*pq%;6@?a%&LGXK(q!=A'2D?"-p)bYkkYlOGTb/lN,^[P73!u^/h99_NqAoZN7!\q.O/;W-kiCic@dbo)DcPG83N.d@]GPu_!jFR_'TAo3$3pU%C#cT"IW9`Ha-+WmKB&6lTZ1j+4S[R1;:8H4L?D8`46A=K'3SNDE9T'-%&-(';]uKk<2600^%_>2/35+>\G0q;^HSS!.#Q`KhmPWm%aHd(QMi6%J='&B:Wb\sEQr:,]FDZGN.cM>!Y7D.15F/J`o):3BMpqNa0j>a"jYQQ%6!d$aa8/WEN`B7),]ie:a7<%Y@@=;0PtmQG%*bpbeCjDrpGid*NOM!\dJBNQgBmE721=K^5KART]Q'R1.q:'d2c&WEscm90nJn>g^Oigp?NRqP'$>G_,%0::,lV7=cq1>&A7hl0p%/"&-A7L!\T4HL[loTa.u2'MnO!,g8iHA,RA8MiRX!&_3>1Oju2OLS9&o]2eB"dsh-N_s.s)Jq5S$cs_];8b3oG0M?a#j8)Gg,1`t%=^$aa5o=#]Z_0VDm:J_HF<,i16#mCO*c2[.,7NMVV<\bG7\>aqAObe$nHo8re#g*\1LeQ=N45T[\!`uS&J,(-5GP6`H6BKX80^2K%\i/&??j_O4gNkpY:9GkM+0(=*0c&X2>3UW^$DSUl,TOht0-JuG@]4/,($#ine=F36g3GA_5q-tgWD+kNin%Dgnk7<ZNghRA0G(1d%[S-lGfc4>sc7nI;<0PN"*<lm(1@[H4C7smFm]IeqSO51#DN]<E]UZUpOGG3`EU!0#FDGu3PZ_FlCHWHlOkX&uRgOHmrZPr][M#Ht%/Ns)jmOpB8S4*a(7OAQ,NX8j^P-f,_&lih;20,0#;NO=_UC.k=I7t4!UgQ"3>?r/mfB`RQYfB-IlN*Ep8.W$/$>pLD;`:u[^:m1G%H=r@<TZQNk72[_7aF4_bG6&Zc;MHCWDEueE?N?Y-!H:^"U!gskaAaU%ZMGXKKN#X,9V.n;C?eISG\XD=b^5[jK$WhW)]kNEG<k6$%c<#N9qZ?KXl?<0t6(4t8>.\<#g%D-ADgSibW,0'-aIUG/FZEmQQrK8)0=Bso:/pI;,g(82;ZD9[5)f'a8*htTRQ,I,%<T7Jp5>:t%n$jC*U>[DX:n9Z)7,eC'(KV)>q]N@O`m)*[P]]Q>mHFHXDG!3d'oQX\5)1Y/.SaHhY']cP[JM-l.oLr$Qa\XWOmauDH7h'\\WnJo%B:t/c:YYWnYJs\u4(MQY=UL`mrd8N[*9m=P1;@n3644*/4od^pFWc#*9<<1#a-=eJ6GZrr>*-3;;`FJET&EL,jWu[L'_3RP3jY9D%&?D#?#/dAU*jY8s4>A-!*hi\-jKShRi'e@@>#u)bUN#sJPT"!u&<Kiu(mZfP7Fg",K1@Msr[83F=tK?f)9(cA&6Y3.p(YoA,9+CL%'_2P?Crk):fO&op5XhcsJ-o7VB-DP9JZDJBW*nq#!'dMY(!PZI%D^-brZS(B&<^>e_O6*j\QG%WCUc)36loe;;HnQ:g9Am/<Bf:;%onJ_tc=uD2k^6O$KGoI$A6-Fh^ofLG7?Y$ipoWGp$Z1d*ogc&7+LAAQB+D3:YuJFjg6mgp\fQ:Qc;H.:<mftZ9!(m7LLfMt-2H4$%K#PO_20TA(q-1o$8Z.b8I,l_r0EK%&qhi`VqjOt]&4JM-CjifHCoI]ESqX<6"*GI,Xq7U9[/+U&+LU(WpI?Y,=_WkT>tl2[m7fn$%oq$`%;H/s,W?JI!TVcL`4@(6hg>t,DR/28mYqFN/W1=leU0D.Grp+$]G4h\SnJ#-1IT%QNaVZ.`+-W]-99^XSkI("dWoFsF6-@.i%T619.b2L$)e2?]\a5pdBV/bq,Wk/p9l[.CG0'8:`eu^;mjZlE[p)PmSo*QsrqQ\R)/mX0?:6pHBY*(pDi.BCU\O@*Na&K$A8'uXc%4D?]48@OK%ZdIj-$^S3-^25s`!W.dYVI"$0>7l/F$H%;Xb,dT/1&D3B1Y9^EkWYZbMj++>Rq;4XEA8_V[@__j+O;(]p@tmmmLt0;%JY*MfHQD8U;GksR":T;*g"o(di3MJ,C>Bj`(M+4T7q.#aT/?6"(kHAhVE+[Ye71l'B2)oo+KaCB]l-NhZUC""=JJHtC0MmmHO7U:%7nqWrXLCL295-Et5uk88F&"`ef24]UrY^l#MPJ['lO>QN/Us[YegOM_<m.YRTAOM!f*D3A0:a,d:!^'d*ZEt7LJ\,nL\^CgH@EBr%!%f99Y'_.C@tCI84QB[bq1V^2r*,VH,gHX]jlel>h/*=-WSkE592uh20c28[+th%e)J!cH<:k&)%.J<r_t"tFJ*=pq?F_0C"U0AG%k@FGRT_B^nkjO)mKZIpac:)fjhB9rF+UIhk:[_V[S%asQf-fd#l(h'0GMC6&*^N@YEOrD,g%;S?Qk.%cog4$:O8KP&]U1lgNq2CT%>*`8j%KMjHJtk>t3R[.=q9@lM.$e1Jl"sfJ'3a^J5?JEN(qCW_\mF<"RZ:&QqJCn#VZ":r*FaPq],,k\l98O#%lOOB[.#SukS4,;%l.F\"TcuQ3WJ#1Nq2-PCP1K]<V_":0F6tqR1FMpL+VYVRR4>72^aO,*iC^`%FRq;[D+IX8Z%QP>bEaL^Efdc3*8qIE24b1iqj'bd%!>M"/KV"eb^GW/0j1?$K:R[m1aqM^^OL2B^G08"..A?sUGf6[ODS,$AXQhX?/%!qZ(P;/>;K@M@_0d=)Gd,>8>5uAC8'`LKr?4JV%$7V9Q'^`2"dE,.=n:@ZUa5=fdcM-W6Z_MWn/I;:1:4XP!TlN26,K%6bX@QpD\nVL8US$6oT"n8GG);o))JOJ]FdRj?eBAJhXAO$^%'B?$)W"2(U@*.1Z#t(8"62XO_(]C\hP0=)&mMrmF":2iiN-*T'$%qgEHGc]W;shsS\R/bF\NoIr?dt=C(:N)?_Q4F\.p$P3A_eRG%OLSSZ&0oJ6YSt*JAA2LD\&1"+oO;Gc`770cA2Epn,#o.k#P-A9Yop1Q?m?jTjO3i55JOR[,Ur$hcI)Qo7he>tF7s9R9'VT:%ce@U%&Q,L-J4\"</E5'I;T"R"7pPbhKFc,W(6p\7jR&PQ1@iT&=c1gOD#HI-%i\',M\;DjVM.a'=K+![.Y5%"kt#t\@$;<1Y@!+JDHc1i%4A\_h`2;cFp#RR8^;B\W*K1:_lF@VT`rn]6=&GMg=#eISJVfH2JSU]rf:\#5B*lYlCh;+;2$?8VmB\6RAbsh[nJOppaYCB]96H/S%HBue*81B#I,Ck-V+Rr>;7Ru8%\/:rGle7Siiq[Yu8Qi>c*EtkpV)Mh6F@C/7I3@CSK^mh?f0hi:*WdmF3Xa4%5`YjeS=/S>mlWIU%X<URh9GIZZ/;nF957:FJSQnETlgFG^i]ABD9UL=C@@4\C'XW*m*0ET8=tbpi1>=b.(Wch7IEs7?ibb::fPT>!,MZHD&C+r?H9s7R%<!CdG]Yis[0FZb-d7>^W>drr;%HfG'Q/[^B+ViI*OkWLZRKo7^D2E6W(raYZ(aH6/@uS&hNI4;sBl$J-Yi(qJ`BnAr9cAfID":CC%kN%2Uh$8Tf8bHK@4F"r%p(];O8HPX=oE[7V8nBFi;e\;nM_msAc1P$FQgX):["L>o8XcF$fr0e^)'+Uh6]?%'?1GQC+'-]!Q%iYl%1inV<Q-1mO?CM0;H&F;?Bg$I`9nb"OW?0qr)$bP\(n:*WerA"f$@$tq$V-H/daQYZAV@n3pCUtIQq%_@qbJ+!W/r^#@)1nQ,I+<-%0CpTeI;*5o7hcj3qJfoq/*&*'_]m6:?Zr;_)mEks>*MmiANe2WD-;cPE`:PaN05XU;+>HG>.bCtfm<X8*d\(3)"i#:b"T.2KAXS)%!-gqsOU^-upX/mE*Do;LYMD^5Oddd8A[Krmm86@D%Tq\IlsWA.;bR:H&40n\_Zd:CHoXLJEE\aWd^[@(1Kq7P%&.0"EmYfg*?Jh"%0+6790I*jhf,8.1Y=_6J;2dE$ObH2uN2"Ca[Nq#q-)-@HrlV!p[/C7c_RikfE>#m<XWa>QA@1aC4qBE#R_N$`1Kq9b5Wm>*flK=u%6A1?pXs`5Lq['$lnOTEd:\T+0OdK"WPOM*f0fU_]LG:A)c7-tN:!3YY@7EoIdZ#rUOL.q)hntDs.*c6jL09m</0hV3WP'56iAtbS%f>Sq[6u(&P+0dBi'\\1ler&mq,AN\V-H'd>"D7Y&W6+/u%_K\t2&K1po="nZZ8!mfF\]lsJn2=7$Kj$%,Qc;,>eGJ"[4n@(@pqi(%O+eJ5[PZ2VkZK(u?BHjpWFH\N']!,)OXZ2hGfH89#t)MHJ[eJ']#/+%8>ERDdZ9M[[NG!0UU<4KhBIs1jQj_rBd@.u0paAtqRGc?%72hROi/pK34L5=.^'XJQ80d*(Cb'P%O^SjP,=oFZK`46[k]roA#MJT8$kX99Ek`dr1>NKYcZN/\49UPmG%h`^kTn:?rB^)tFo4Au%#3;'/N"!mL7e*<DoQ]I5p6-r0i#nrGieO6Q)6rUAN(ceX.H=<IcJCsQN^9CDa!p],gn3Inq!00E72fUTQm9":rHXKc@6!,VFdH&Z%,bsBC>FB>pT<'d>861d4o]0sL[J+n(3Ah<BYi`#u6!3kE8D:I4K>)<a.BDsUHNKNdEW,=FS\8!l=ND9gm>sX8#K6n3#\aXEj'5#f%/qn*/C9+0U=NSt=D@;?\_4G2$_79oi>;hVKoa&(X"^nJ"#K:2Y.bn&]DTdZeG*'u_BL@"oh+)`@`@rQ"KZJ[u.D@c@HnRS:kDX[/%L4X+jLZGmH4;,DC(tT&/&bQ:sOVc^=_=Mj72*/0H3>$qml$%krR%34l!nEHQa'pp'SAAu]'@Otk%D:5)7.s*UbL/'Q<<\9L47uaS%;R9[-XGIhHNooQba>AmWN(eF^]QX\2TYj`mE[<S%>BM]\W4AB%X;TtXoi(UN"_Gm(m1pOK@?tp@icL-i`\V>o@3B%`l&/R/q]Z?[%/2h`[X(J&(K\ocJOf;<jm]Q,%POrLfF,2&iMK(!j;]_H`Y"T:4Yt<l4Z61&oB@gOB=gThf-PupuAYd=(%5Z/WFGSQ"a8hJdqC`Ea%d.eWU#P];`fH_W_dK$^[*VR[NC`"TDGuWearqT+f"qc=iK!<2rWARjH*.jDYVA_?C7pZAkFqu9FCaa\j">8uC"EPMT4aOC4N;,Y*%?7CsbQX]T\+P3/n?dQFEiK'aKn!5F<Q->$-F_gd(;WZPC2=3e]2"mDCB7B;]%!LnI(hto">#C91Ls=RE$aOYUhYJ':de,4^`p1K?%.6GJmjl(g]"`;bTqQPk+.HcS15-Zo6A@B$WTU7?$nE[+FD/)N*;Wk:i^)W_;VXGc37r?!X#s605/4-S,#5DT5k0e\B?0\Zt#d%T@%pekD_3jX>``64#M4LusSC'8%"LNA:WE*B0aW5)<4Z60Oh(t]JOR"Rh)F_Lu^,<dpj>E>>s;S@&-?"]8>Z@d!X1oe#WKEI9!3?alf%$Le%(Oi?UD!#ZOC;0IJj`&*@uaE(hX],[XmUiIu[JXVO>2S25>c*GIJ<(W$A"hg4[8kO:jf4_(^O^gTbpJK3+0PQabR+H:WA(VW.%SYbPV$Dj#(TT!_F6PAs'Oah^.[Ce,orR%6Um32K'NN..Z%E,hqQ'>5'ML_gG]jYT?87BmW@VW]DK!&_7rMuK<b-4i&(O8qLL<^83%IK&:fpA-]5Ek9ABqYT5L]kea?>.Be!Souk]Ls:>Fh&?)'0kD1"];2,<Cn^*1.`WAb5,HaaQ]12J6#]/erKA7t1sWTB#]qXD#QFNa%DEl0^XQoDL=APA0IB$$3n4nG5-OYjH&7/"-Ikk(.R<A8.K`nr70bIdIZhdcl3k]b>i7KnH@L,uGdc71r2',^RiKDW%3BJ5Rg+tqZ%A*qHX\@Vn%_#qP.-](;DML9R<A6Ub%@bERM2YoYC)n;<t<KP6RC&/je2?dT(;H%LtE1=lt)0,X'N;N=Gfa;<Gi!V.Q$/4cs9Bkd[%Dn0oFaTEEPNa,$J3@TsaZ4pGnHeflNoQJBZ.IlgPEI/ME=Le8^P":QK6KQ(r2@;u)UhE<**98-g3j*=0".p7*0DnLtg^`21Sr7_Q%e)4k7f-&GkAb!_Fmo0\tYVUHTl:&RkP)sQs8B1Dhp(>EGL&T2e=Cd,EZ@7WmeSYNd`)$XgKC"]a&9/g,EL_h)V;THi'hq<JdG1O5%-kS=Bkd;U?aH,1PGb'j$%^1"aOs-6W$$.uiLoVk%>p;<;[`-4Z7<UF!.J).$Q-bZI=lut%,G'9]DU;&51Os@JG4047pb$1T<E!k:%]W!;2.ZPdNn"TaV+Q!.>)DPdNo(jfe#QoI6L_?)?q<u'-WO;MXa2VPC)+Y(*$-)1V$[iRS4FV`k0*$`*6NJ;76S3@K[h5j.Id5T@%>uDq+iSgFp)RZP_2?DcnHF)1$>YCj^Sk=,HQD3s,M*O:UaR2ne*2p,e0bglVO!P2;6mZC@8QNhP)=B%%DJh`sCI^^]c>L#D&uj8Z%!dHI:KJCT!fhH;!b0WEoQ-BWu"e[dm$"hQAS*,7]$90]+o+'"H=ZL6;&Ujs\o23X:i71qhP8(eW>FMhpk0RUkV,JLOBk.UsAq6hI%E7.<Ra@Qj;'84Q471Z-i]!>FGM-q6fWqhj05SZ#Z`..A/W%H%,djW8ca(IG(\&DlX*Mbc+I]KVfB`DOS0g1%h;B\PFnaIW0ZZ&Y7%3\_)<[b>B!W!t%=JD)S?PB7/_oeVsM7.`9YfF[ukCQ2b0&XqGL1'36$<l).k^PE6hWZdU#*0m?uh$Na&?`k97KW_)A8^L#87!rXQ%`7.(IdXA?ndqhRfl3q>sr(IC+DVl=4S-4I,7bTBembf)BOk1,)RhgtKKI_kX)<!;9jkNE=kTS4gXtR+`e3i8Z"m"r:OQ"S!SS<+T%R7]2Q*IpShER"i17msQ*,HO"Qi+6NP:@Z(Zq_U"!a63N3#BnOM*4HAWo1>aGX#)Do,H?g9l4qW`73NU/G6K&VmdqoSQYHYj^G.;"%ej01O6ph-k1dH5`qIPnV#"1dH?`5:pPqKk&els8p+<JY-$We/GV<d-LCa;*e^gVD(iEKLfjOlmgV5Ec+><uq/ji,O*@l8opQ)\T!%%82<s6bRWqZlPX[qoL/46R.khHg4*XA7UCQ,\Yi,@>1e/_;eR6baj7[KN(>k.oZNi0m754AZ9RKfMIOG:"@3'hUjm/<@qY`F;6bB%^_TU$-kgdT^XP_>9X?&0;M6";5ZUpoNaW#%'eSr(\(ocuqPR7%,jG3<7^8O!V`l]iFMtJI9:;1\L`'dg3ulNeV6EYp@WHH,GcqWI%T>a^n^k],O^c5Wm'Gs0d$s>BCeI0chYSr26=@*ib`cCYpOc#j@Gu<fpMh4cdAn67MULRC+JRCPqD9Ge$qal=3hd?ZiJ?s1[]UG1d%RB?AS)>ihg<H/_ISE>]B/U:R0).K)T-j(i>28+7B6\)^G2/jMqQ371,'01ZHqlQ*cR].K:`0;;D\F(2X/1N>5QkABMJRLBU9cPmG%-M2;++e"L?9]PU'9MW;7>qSk.U.a9mW(&m')""j\%=9fV#bi^)c73WL(`Z+bRZ\/P-adgjS>2=OG#8iAG>&PE9g[d;.8<^IfN/2+%H<"OWUW6S[Z-5k_N^Y*`Q!'0*HuGhin7glu3i4n25OXKfog(SlU9Y!PdJI8u#$[%;H,F=GZrJ]C@VR\h;XU;j/g2QrF[<j$<E0WA%eo8h_!8V@sL<\p>,u!Y@<eOj!K*5$*F)#_US^_)ff)B9"1SV.DIH^LY\=IXr<Y0&i()Vn[9K'!M]_!E`r/<1bk9OS3qT>23dZ!<r%pIJjJceRZMcdDIfrJZ#(-(UiDQ8#PkN$-Ab[?=?qe[-_s3"q$AY_cI4/?K[X$!#"D2Yc<gjDOM6*9.6&OJU-N#!8;)BO9HtnN5@'%o^c)SI6jqkXW'qYZ1)nLQ1-<YJ#V"%Dd/c?8sYo_7&<ed'q(N2NN6&q[H\bO!A<j6Nf@;U1c\WR+6p9C?FGeD:5IX_?_[M,24Y4Y%c;008KimJSC8"jU]JQ6:ia^o6?A'##W67P<cu(e-D*q1h0V.^u/p^EmH#'Pq&V8:he+:);!=_P+<>U&(gUg;Epe(RE^-md>.5P,O%LaY+QY@G5/@_/(2oEpVDJe]`tRa8.*;h&V1(BN/hZcIKq4t?.`#BFmEq42#AUVU[P3PWJ!l'HJE9chU]8&@]$7a9a&RBh4@`e7KH%cXbNV<`9WQ?X=NY6;jMrY`i%K##QGdBd@aDC749m;%m$Qgc^YJ9h\[W,uZu2i64%!j08\_%;#4T0\KHjANSge)+%D,hpCV\HE*d>%+^C?d(p\4Q=t!XRfT0].-?O>'eo^L<<LO[Vb9)=^MY$.dLqgo5:-&*(MN`>)Gft*-f)ceNV9<RYRb;P:Wh,3n;nJ$4[2;=T[Hk?n%THGI`4nT,.L6ZHp]r'XC[@=YW/SHA+eX,EAF35B,Reruh*(uJW(aG=B,.?4H?cnqdR4E1g9f,TX*it?a$#L)i9:\Y1G<'/D9WC[P%QeHKr#>mMlM/F?7e2omFHQV@QO'%FQKZ9Vpr@-mW0orku%gQQ]0pe8NO[!XIRT$(1(QjMHC_Ni2QpI)Ep*=3PC)B?D@[\*-+EQjt%n?/)ZQ[7&@*pFCOQh7]1#e>VWRJf="[;V,T"=3f+1jog"/d5r>-+smuY1qqa&7?X5^%Cq8&XUh:VQePSM&#35`uZAW9X&g0gX!C%%h\rrTk^US?=2`gg&dYp6%1HFja?(Nhj5iZi"<)X\T,)8MTJR+-UjX`g&A"E?+l#u"<pp`-M-_oC/g69ijQVmKK-/OY/\rOk2q2e>%6"%dJ,2Nr71GU95&r;;=+R7.#=%$9T15K^.Wo9)ofbcS_-4+[VM<p1'k7Uh8BIUe@R,[Kj5$[^UOf/n)C-\R-rZFR`:4&mp%GboQ%7C8madP9n1s"-=j<$Ypj&T*A%DjMe//;js$$Z80T%`g/p/WWec[\Wh7n/\5TdGF/[$W+\l?)B1.P't`JIQde&;]9N[%Vs3B6sF+;%D@L,E\0V@Jp:5iq9+J7>hF"fL+S9MSr"%rXn3HJL-rH&FZ&km.6LDKc-7D0[`L^`oV-o+>5EMpLSE<k9Ia<%FO@#q@M>e'(KUS@,%WC4NJg2#0O>F`UDFRJ[b!-Zn3mA1d&nqq\8UK"!;-gnlVF\(3:]jc9P&1n.2&t/RF/*3?e4l?rYn[!Le1U%hK6Z9nIdbM0BS*QMX%mO=PBDs?"m$`(^UZq!9A;RZgQ.jg[e26\%YQ@d>-Bu$X">@L17>gYBeVmrW]2G[u=AV]ps$AeAuZ;#)DAQn1H"=dHhF1$B'\+JBP%\><[VDFmd7F'9`E&9L?+U+QK+5MI)(?7NS^fTD&MV*2K'CG)Ui1;]b;_5_:=k-U[E\NNKYo:t+uekm_\mZ_It6q,PF,cl.=22J]Z%Yh.*,Gmr,D\WS?n\>d<[I8VceTi%:9BB7ojZ^rV4HnK08V9^9F[="HBLp]pQ1tE9s0d9/@/_qUq7Be(o@dL?(>Cu?QTn_nb?A-LZ%7SX&,_DguJ0(VJGpCsNc4fYr]V)1*S<E?DT1<*/#"*lBk\$o7He[O7*H#M%#mO9F-$"tq^"C"39FubfS,@>#/^o7H@@Y6Qk1Q/\6%C71MjZDmHJN^PJO&i8S!,_ka#p=YXBf^%:^q]&.*J,[K\&kl6<"k1-!i]Z99mglUP++MlNGOP!RpNS(`>D]gY^BN]ra.MN^iU`Ae%]sr0%fgbHOqSA/<k;-[J[YU#X3=5'nLbA0@r!5pV"7j5SMrTY>*0WS*U!OHn>:,uXQ9(/&VPP?WBQ$m56H5AU8^qMKRF/^tFW.qt%h'0?=9[AIS9B:Jc]!d\H84PMuCALWlPg-]T>-$BAQI'U2,^tSgJ!)Mp(6Ztar]$"pA]O.c@]sM2c90gMrkM'$2$Z9>62BkdWMKX_%/Go8taBp$o^Y,+IF`iinoM'&s=2o."XXOpW/p!*rcnuL/fOK7"ZmdF*W!e=i20iG/,6\81aK<TV\#D"YpTbb/$%[:-FU[@JhPl]^%YYn0<WrlPhb*l9C+L_T:j`b>jKBoQmcUB=[WUs!t?:B:(_%Xl2a5:7^Qn"Fo(*@q+*E9dpg7P=Oli=mo"<mffR(hQ1$t"0Aq$A#4%Bmo+5qh.]?(5_"A1O<7s1q!_e_M.n?P5o-b*84m(R`!e!6\rQ+&m$m3$#hRT%`uj-M\@"NFUQ&?2l/sW.M`^Tl.<$&Z89VEVb7Yc%`5OHfFPWm"QZDaa$DNR$gEI(1;cE=cIh"5epgk>0%b^L".e5W5b@E;/?q[YreFnn317L&*o[O[IQ;"5W/3XL%#7'??2I2c+^.BED%'%L*H,38M.G"/G<etXGQPJqs$!!l'GM2!/DV1D$B8l6e;-,S"Hfm64U0MW7u^+r_;.E!Qb1DXJscle?PQG+4IWY!c8J)Uck@!!AA%,c+NZ6eL8D/J(AUpC@[0k&"Br[$3P%-C_&Dq69"=?2P;Yf;*3?1Rj?h@XRA5.JrrqNU;.'8Th9&Z1'fMWr!0cqO^a%,Mub0BaMRl%P'&AkaR2pSC4a&o/[%-b`4G#sY?k7l06#cO=pCNE?S%aa?VmkC[d(SUA4SL?<ST7>C0JK.,Ud#,k-r'9O_b'R4As"mP*0T]=:O&a%E$Y*80JcP<-9#DH\Ratb;/Qq*iFXmZ&+Ai]Ll3P"TjX(rH?,GQ(=BkgIuf$O^\oc[]Ag8uphpr9l/7t*>^!cj%"5D%?$UrD5H?tE%nQ*SCq>0VGr2@-h("J?8]ilkJWpTD)[CI'Pp0/qi'jH.D=q"+GaC?J8^S,*>_1MlB0Mb*5J%VLuPklT4'YD=,&sKuacRu]LF12(S%Y%q\k"H^m@@M^="hjUlL&@mg4^[XnpZYX>%;i"DXPZ$Ws]#>ge,q@Ch29^Kr]i#G@6coWP`a4CA@pS.sJRS3`"Eu`4-BJ@.*20+I%Ibh6.XeF0%"IH[f9Vl!a1usQc427dAg61?)>J1-n3agF@AYfh"QhDYcik;JM7[%2eU(h&^XUd1S;hr6b+hT]C0e`LM'btb!")?W-%$flp/fk;C&'c/4/iboR;RK$#:]_/jKKp0Xui+pq`.i8l(1D>E^%RLh,WX`:a6+OD,K(*o9>>okTZE;>c.`@>+SZ$9Q(.NMC7Siu/%bh<Y"Sao+KI8M-@SYM-I9shK,(X1>,XD.M;i\^k$S+u`sUt>1lH&\(2Ll\9Tn,h9%s.S<f2SG>H"6M4>VsJ9WqcE@(panLbjekk6%D:>YWON@qL<?kf@2XP&WgFY#-iZKO8DO[Wp-#@95;d/e4(`N\h;%bfY9VnE0"PHN(a)?fJdBA:bNmN$'+la*ohH3g:4F)Ug,S?C:%%*p&1s/Fno[]r`ka=npOm?Isn3/J(@+uV4]A/diaQa])i4fsPb,"T*sjS$k`4;7XLc"BA>8esiQruO3<KDK\X(*9@C(,Ll"Ki;%a%#WN(LDMk,@OK,I9fXhT%d6Z9OdXlIj8#`B7;JKZ2EO^a3Sgr9M2#8mbhPFPu)ZQqmkRu<k>#R,p"_sP"H4HdQ=jlYJg.gha[KJL+%K`o6^Z75qi![nfUOLk4uPV3gXqjDpl8!T^UnQ`4_.=tdNJ]PFS<4EQAFg=_G05^PogCL.$:K5@OrN:+M"uf9@Rht=dCM,9]WdXT!%8l:)!Y3M@D&cF#GJbnc:^[SkmqMe:qC6MoH6N,&.`C8Id"[U_Om?WN&`CV#!ek7eJ67a"9U6;Ad>"jWE"uNP:QgN'Y;nbi%4On"S%9TI*Kc*@esg=)KCP)&a)Yp`P%FgXTl@ahaC[.7P\lom:W+*m0]!7tNhHM/#\RY6o45B4b`_^td#Eu=^Z4'YdK>=Z!YRH_?/T;f&!%^$4j3(7-RHl";V"?c*EPc+YcE'<]L.lPH?bZ7X/;VU53l_[,&X<t*(PoU6o3NBV.CPZa#(d]@RD3g["-CY2=oXHm9Nea1@7_FCAl%ahF(0`K<`?WHP(GC4'9PA.>,`Y\PNmgb=R7Rbq5^aY.b'ae\TIHRpWT.qC>(h^^e,B+EG`naDdsmhHTCSpA[c:>LIHR#5R+PF\'.%Mn(cS++,MX1\X>18I*B+Xh(U`N2SA8>c"!J5_0BFahFkBXIE!Q7.(Me156N$3E30rZ^MQeH\CP[^K%G*cL]sZs!-^>LKQI@`#`eV%d@(^)P%MrQlJ*Jt=gd[Pje1C@h$r1cXDQPEd%l51g=^g[CRL&!]&ZJH89R->A]Aq";[MdL1?ca+2caD0QaD=o^Z&_/#)t/bq+Q[F%2WW@PfC#q1UIcFm40=2lj-Hjs8r=P&*!bQ)nX6H'[PYUsVU%#NdS#u@GKNn\nQaGk/;\,3YCGc^Y!4me[&*W>:rPbtY/Q<&-;gCJ%AZiK4-&n`?QAjHY5.-h"94M9<m?t\g0)UO9g9bM;#/dPOY/#;&5W;-DjZ-*X.CZdg2-'DGPXMlc[&l67<A*uFjURb%'JB@0P[l?^%HPp42>/3/FDbH]5!mTgLZ>.BXZ/ui3)L;f[8_R'I9QGR%<n*X+,"u#0Sq=S7o66p*Z,'!]B;qorI;&;]JJ$X_1Ek>B["X]SFl1_E%("V3R/`ff)7a/<[BW=Uq""tj\"tYTu20Ip92VfrVr?_s/(.:!Me=/+/c"8V8k(m=/)PIeU)HLXl[Ziig=im.^k:[=pF3?"HR"q\5%I1FCo@/ZX";T.>;?Fg9mhCbB_3`N5=AnNUDD.[F,]a+\,GH&[EWeR`Qr%ssd*-Xs-qe1A*`&r?IN3<&,>2NeHrM2sS:Q-rpm"IsZ%3/X&MD2)%N5Y'g%frS.AHKdikNI4P;))>#\(<[nu(4OX/LED.+^4+_\/O:QEe&f'B;ZiJ5Q455[MZI4Be7GG9p`Z8OR_Ymfdfb_/%M*s^'?JsU<A$W1(:s8L>ZS*p)dm%t5GQWe*:56+)8Su!k/Qt_1^OH+LZt.Xqp%s0m`q;N5j8(rWj*DfV;,Vo5,PnE)abTZ@fG"bt%1P6*GH&udYddL]$qL0Nq^>?n)17Pq;>@6jZf!Cn>;[.T7chQ#B&.JcKJdc.'OP4_^@bgNM)7P[`FP;'qFK_P?FN<1r(PO(0[+fW=%^Ye1'[DdiK/M7E1ph&Yt_84tp1t6WjSU4-e/%7)s>nM:Tdi&cBd_6W1Vn-9d]0nm/q0Vt,8Zal+QEq<QcJqFiLD-P&=1paG8EX(6%;45mL>$F8jn,1hnhfNMVak_QZp5LPjLN<&QC%j29=11-Ubsf4H%3rJ<g4dd&mFZq,&l*a?kbP,g+b.P?<U)2l_]<&;GIT^=]1a7E%'_CQG2(aI:.Q?n?+Epb`gK?3h+,cC^l[].%_b%"4GE*kp;+.-,BVq1LN8o@od(&Ct@50QK:@iHc1;Yu?0KjKVC)E@+&TtGWes)'(%q@9Q[jYen25kN!56r0<6Um&_E"?5St)cBXh)6reHmrN@rMjsP<&lRc^bH]5#YJem;[[*>b.]tYacd(QC/K/sI0rp(tFXn^%)f')c%B!]/(F>VmMWAc]m\l-(PU?nSTE3CYf+L\tkrOK4:-)%B=.lNa]L(tSlJcEO`]\tV7U3(VP/'MF?M:;L(hb>#T:?RGi/P\F[R'mNY%3ahuk;[sI=c(K2I:[h76?&r_o^(YqMZ-A\q5F-;=D)&`dVP!Z)E[dHs1E!a_d@&+cf1g\(cEpLbKG_?H=8L3%XiDTf#'G"8Fk\W@%pmAWA]q17TMN5CIjJturDbF0/Ad3[YZ_Not%%c99YIaOXkYIQ@@.W2e6bRk?PEE=7;f+\H;62*W`O&8I:AXfim6oE)AX35g[JTW*%4f=ooPpVX=@\1&E9%XUT"eOBnIC&tQM4m*Y/9\p!B_$t?jK9TAed;(lPIhEi5WrU$7$?t[1q@ta[+rYG/YfTrl;o"M]D_tL]AP]f%UVpYV8WqS.e'uFXF,L\&/,>5:/;SMRD<ajQhg<i(pYPQ@]f1@fmgZ;khE3^[\)-cSHZ-ps]f5ohhO@4:DaPf2M82tJ"b(#N>pX)o%N"R9HoN$n`qr`P7D0-<bP8,,CcA?NWD&<h_PL6.K8%a"lnRa'01Mm^i[N]k4DtQVZ>_YEm._VOqJ7?\URq,cWOQXqj?`9$qdL$D_%@$oCET<(9DfR<@PJ%2D4p-b.<QZ`)C^T,jQ4q[aJ#2PZD[4:N6+fq)m8kCt4'hGeeQIb")QA!mLNa2$[\^)f<1I:B?.C6O`/bOk7%L5=eD+5IdBVWmOjJHLJUfr#=+[r[+4>jgSG22BNA`ZoE8`u:u[V.-@[\L>m4d!iL/2X>4h$fV_LKM\1\SFq2^@YL#g:><-'79uhj%1N.IGdrY#QbH+Be/k4VqfP`Wj="[p)j=#1p?A#oA:6?uF!()lf'P"L5lTD0f^o0*pKI(`c<8D!"5.p>Lpm$<'43`P[q%NU=LTblW%S&Xn6-12gE25cb$9"!Jb7Vr%Lf]As:-<M5e7e2F[Htg&CrTtu?%.tG`SH&:"ije?n?*j)-U37TqHgLJ]^g>#]jDi-SDr'RV?Q/bp%8o3Zi@Jf1AX7Y"&-'*1T(@OKA*kfXh/sbob(]%8!s8<JCEq8g/k0NkpJ%^=1+).uu\f(Ca"il)7V3&/#XZughT>o:]r\rB&>^Uea%D4$js[`W[io\46Q5cUCj;GRTS/=Pra,`[.\U.C1$Ld>OMY#-X*/]1V(^CRXgrV&G=l,/YfAYeQMH`b$8osSe>"m-heD;5$gp)Eoc%jFq:/'B<(!l"P'XAJ:3jINm:0&#SmTk.9pugOsN^3"gQ3[715"0;Y/d\83DILX#)<C)RL0P29o](r=^EZ./I^c>keL2ZsT;20:9K%J-gF2(iR$f,Sb=RKl#YF(dm`m-MfeEdKX0VBFW^NLQ[f_=PRLIID<b"83chj.WB,eCh6qRVGV9%3&J6*+>^A^]8&^oWp),U]Vblk%5G)::p'%-P/6adHi^R!lS0aF$A(`:;r;DnV`FdlVLKXEj_^-@o6cbI8P-F2R1`lgG1mjh6L_>mk:@cm8:G_(*%RK/f5Go`53dIr6%SkWT<RQO^qcY8\7U^iVdK\nXLEh,knBg/N\XuuI?K78En,sQk1n"urBPqANsar67=;sQVt2(raiTII'[*7]QA%!,VUWjgOP`P*Mi%#*?]J&E/SNiOKChdC&>fgWHn;kLm+QN7ep%Mbu_MYNJ*,ls:!?gd_sc![LA6E%QO8D?P&]4QV/W`9VA->35NoOn\P%:$H;8$D9t.%QbI1taQ47abmEW?MU"FKm3/\#O[TSmUF8/.%;R.$W(D#e#h!Y)e[KEJUZkT)DI&7.&GPuuO^'4;l$-'&ElmfR..m;7XSf*@.3uer%B<FgTmk+,9)8N]NQd>Bp;*t2Hg]7+TV]q:Q_@^'hqFDI@*1uo"S6sRD<BWD5"SVQI"GLHu]V<*(E/WA]>A*+klVs]A_"&+J[<n-_%In$Xs.iH<SSYVpAVnesWYIar.2H!^Nm_dq`C!%`,6#[A6(b#d&.'0JoaX`9t.@h<C"7\'/a##2ChN473q[5c>EEWBW-II5>ZH<2c%1!s5=%%7k4Y)B>q.]\a:A`sPpXVdhO+c!.@Rp;qhnM?si&-Q'k"KAlLM>GGs=4-N$Tk^Ms.O.XFOT:sFGfDZY_M'N`[jm<:D'F+K%!&S$jK=\QL!*U,B.\/M0bqjI`oda$6WaoWObE/l+ink;=_5":P=%I5@"PN+lEIuq20M.XabHu;T8V!gJEL[a$7s$AZ1*@(7/7"6J%Q_(T8$uQA@hU[/7`R]`!'[X@&6L8u(IchP;#;tK-BKUuATqo_'o!pLB-&=&Ifsi\a#'C8`9K(M$_%e\jS7Ubr3InM.F_O\:[lrXR%DB#r5^U!B[(ATk#YOBB-kNiALpLA#totoNggu7Z:9pMl-4-m$mqmW3%o^./'nZTO+pcE\Zrr(Rdp8GV=]_;-dL\M\Tr)q)+T"!5*%j9dThaRkCoGs9k4GQ&oINZ@5*BZ!@2<JU7dpR*,)%URePE^QYa_0Y,A8pth5knC?lbf4hle$4NI%scN=^8q(9)ccn_YJJ!H'$pGu%Go?>'cuN(Rp7>nlb;"?pg(J01#19>X<Z?I6o]uJU)er]<4,<YA9Af_U5Q9,ms6%H&o],rHhu3:6s-NcXf,4)H/Pb=7YK+Z8M]jbJ%:t+&e3Q]LP^_Jgr-(2orEa#*>,pYue1o[qeaWf"E%mM@S$4.@^"oP8mDY$IYY)h\G5.'=TfO\VHkfYQ'dNhU^aCg[h`^f26Ci;sd%rLob3-`nZYm^D5+`8k'm6pE#TpN#;'Q7'Me.pgfiE`O8cnbMa?Huu(gCWD@uZQF6:k#GnP%D`s"JWJoo5.'<*YV!R=rNt"l<7>il%=W'$'nNC3p/ks%MWLVKdXo)t+eXFtTBh-Hd`:1u,4j(lF2AfMm;t'B<jg75D`[?sDac4o$q_">o-Zhl,-XHGfS;;eN`I0:MojNaX%ocSG.ZgZU<hHi3AXI*gbZ$6P_A9dIN1`^%-ol6BF1`Zn.l7p.RlmClT_$%@0i19N*Y%L8dWK_QSfRG/Us0K:R76B;%YlJS1e$XY<%,B$rf2kj:OF07)?Q$@;=AaI$grUdA8]0Pi;qmWIaQ-?o^3BJ.^ecQjD3>*#$%=A-K<1Q9o3C9mP-oOce7%JeIhS25'UeG?^ctBG_%Bi$UZ/_;rFrPMPS8fK^i6XoGb[&CcMa8:n1Is\30W\62dl77SuT.]+CqhDe6qb>=@Qs.7t]l^\WRr./JItulE4OoiNV(sPigo&EH%AM^a_lT=h->>Ctid@Qu<'HU4Do'KpYn+F:,+_BXV#P+f]H.,\.\+[jea>62a^2rr"k'U+uU\.Pa8U[r<jP^#C,jTAc5jMe+$dOb=%ZC<B`8>"^eMOq\&'-`+]6Nr'/J/hr7BAI'!mLqn*YGC])jber6Z%pT7\(9W]"l#CeWE"@Nfu\tu'4h!u<GtYSqjYnEQV&j@dS`eK%N/Vnf\%'ZkWa'm4jafi"1.Em@9u\T"/stl[)8i$3(mF]VH[Q`*##5(u?7u4t9QdW@DU'fY[O!i2@raD3f4(`4`5b%5q:(Fa2I&>L%H<bS)CKoX-p@Uh.8&EgYd#%\sEFAO.j(GA_hYA$@2ch:dQJWQW#\$7P,J5lYg_E>;p'.kE8"oHC\Zq"\ME4*]NoiA).hY_X)r^`_%p\Hr^]HV!P2j]nG6j:c!mMM5`Z$Um9:Q`]8VLu%9eQNqjP+pS_hRnArOmCM\[i@#8(s/!GT;c4HC8l>k.G)N*)XBdLisl0TDU6F&%X9k(,O*FlU0YMFk'i^#m>Z&WlDoF.!bufhrjD;Sl>Y9#cNKn:r,Im&U:Yo;A.As1nUV)!<?hq\FX!p#>m:C_b<P`gQ4@\I]r*CJb%'I+VKi5HH#(U/`Dbm]f#.e"qI(#C:L_-8O-/L'qC%*X;H]SK>uMdJ8V00'h%):/Q]p#EirAH,@=26*t3S6WS?V6E?eB,#>0]Gohd%]cQQHE/:;VP4SlQ]37Xdeq'#6RR<7#?5$1ED&V@NZ/u*d*^iH:VJ%S:dtr+2)r9,Tc<\i.G>(IdCmmk+@+0pGHh5V20gXSY&;R"\%9Xk5#;90C9\!`e,9?,X=LW'WE)3cpto:;"s4bh?A=fRm4E"tsjk,l%+#JNK%P;gOh'Zk7CaEE3<H@$0G't#3lPW31'L<uC-MlJ[g%[l;4Q:o`Y>jafi"1.Em@9u\T"/stl[3Q$jC(mF]VH[Q`*N,dLK(N!.)DckS#_dr=F2K,MSHH4msAhB0'^T](g>ec1[`U(2N\\5O/%TI03pa+<&V;'TdD'%o<MDGG6G6YI-1&kP0qcVVKj&anK@d2ifb;B\'"]kacA1*>e_p#`h;Ptk<U7X4gW^%T_RYK5DXbp?s_;9j3W%qtemS.sLF"0Zr'3JmHDM@/&$5)-E6`$X7Z[1Agc_qh*.+7pagq<a3?-MGb\m1loGu'1(HX[(d;`^Ek86f@8k]:.YHPmE'6`+YQtp%eKgRrV2TH"Le,(gj%?[+QSWbqel(&BJ$5i+naGk1=ML-$nr<52Tmu/C(J:d>ash*Zo@'WFXrHIW1@O8tqCnd%dWoa`)FJ\3ie!Dr%*,Po"GI&bliLgFDSsS0]R_"?ti77hp\!HTul?2>A!U&nDQ$3/$&B/RLC3nIleS9!*g6#N7eat;@TNl@CP&fG3[qJR'K`pp#em;9D%isru\RM5`$;?NFW\JN-i%j\`Q0esne1.F]Z_+pmXR')+_\@dmZlbeNf:1pIV49XI4D;4"Ol]T97<o1-D2Y&d')iqnZ[T#@>Q`]4*%P"WBi766*\n/4OJYN1h.SI!dsYGi]:I8B5f4;3>8S17ZB#>,lq1-DAf4Wr;0>I&[c"e)9Rg"'KY1s7qf2e*_,WocD)JOKMn7P8p[%c7*Zbn^FHEXrHIW1@O8tqCnf!kPs(:&q@q2htuYo^QHn53+.oiB^X?qfl"N=Oo8M9Z6Z?QetCgbkJ>4c0.!2[SS7`a`'L@18,PSj%-04O)iRqWG\<NY"m%EQ$&]Y>)3=\`gIl1!FX))6cs1Le5,5(uj;.sTURWt`JH1^;KG;IAg="!u$#m*/VI6-9SG=p.er3pZ"n=O\r%k<(1F'nSC^qF*3,N#WI!2XV6BQV34IbF","+oHST!KX#'1S7I1n>PXh*&kBNrDr?X\jh$p'";u/ZX(+`TJD\7UDn.7]p7(0(U.(3%,31.^/k-Q=gZJg=$PA-.1kd3"(%V#]6"QoaR*ukA'q8['b"6\^ksoTCOWR)gSWAtIke.LFB?Z'%i"pR''9>1t7brH#T8G/Y$'L6[%>L#m\EJm1e-4po?2G"4)T)fZNKKT9rc$>"JSE4^p,$"C(rL^7<UX?rgZ4f9GE$!Un>='aD?blI)as@k'3Y`^Q[Dn'FSLRJMf<Q)`%o$<)jfXW/#lHkgm#4EA:UoWe+d*(7h/=`ak(Gd0Uc#/2'^-QBbhTjOW(%O"c"&D[C0qAO_Em\j]-h\D;Ze23^<c47=_m[lY-4F+d%_^I_BREN]hT>&YJj8mGNT']:$%IKtQm)RiuIc]#K$cY!10BDrk&gXZZpfpb!15:^n"$nJi;>\K]C1j1L-JK`q)/OeelhW#*Y&5p?%lY*`cZJ?IAp>SI#5\'!>AK"7>&#M?n?,Z&:$'X[hik)$f,Lu@ZlX$G7a4iW`l"PH5`tuj<3PE"dl^R&:aR);+Nd"ZeDL=P(e"sTZ%17>NEM(.!3Q=_R)hNhcib.0>NQBNrG@V,8BV-1%gD/"_>qmJ=SIHt.,^\<=W&qB^\bM/;JA#Y6`3K>5Oc*!k7+(K?>9Sgc]m>&(j%?R&&G*QDTHRZZO1r>*"co46br[Uop(d9eG2[*`E$J%%)oeZpX`(r,j\od7t6%J'b&%)82U*sbHjNji]9LElf@=S^4"2!NGh>`e1?%$;.qk->'m_,doXOqA]-n0n6YVIJX=DhgWWDi=ib5F5:k%H"eo0?Q$Jtl7[er,)_DHqtfgLQTjLS6!RM2g=:K99kpeXFignl'8&7)%W:^f^/F>GmN"IiD&Y".MahAM4b@T"G2lPTZ;!q]Rr:l5I<pe?H;!LF-aX>;Xnf<Y_QTj8IGK#Xi2R"a;Y!S;i#52+DG3Ca:=^m.l%^IV6==@d(Pq[#pQI`MEl>C>4HW:bu.^,gp><]mo<-C?n!-;g7$Q8TUaG[CTiKCM3OGsX2^RMc';X_@:TQ#%aO+<'Zeh`Hq_/('"?%>Y?PHBV_>>]N$9$UCi?mJ,-7/2E?'H8<&/eL&?[--"P1\0F0h_(jLaL`7HFD?Cl&+:I]0HNCsj+5Y`1"RrX/e,%WA4Jd5i5&\7oE%K^V(!P_=Jm-4cgV!2l=ehHT\`rk[2+)]k$OWIbZcfoTT23$L/_C$-0JHio8`3JKUoGf*B+4W[Bhh^3%'jpc1spJ%1s9GhgG4B%PN%3rXkQ[)&:]-',4hMS()&DP82YV;S00WMm>o+@1V$R=<$ueq4^r71DO^[s$iY8\jgu%Z_aNq8C?Jjaa]bk;6)c]o^(gjs,_7kfrT.%Anc0:MDt!j>b)[9+M(WM#Y"JjElV=?m<:bOe<%"6=CFRi$qK*p2)od_iV1r3m-]EMM-!@mH;$1j-!]/>\p@afkmSe:Mb:$EfBA,o%6nqcR(+>pK=g!?:p2shsH(tMKl4$(sWEK?:6q<Y`LP&SI8nQbOC7lVl@H;fQ#WXVj[SJ"N:uO.PmeEl"\Mn]f3[\Mo\[s:h82+:O%A0NHmE93ti"hBC@0gt+E[gg%#cq$=LZodrWG5mkt,u_S-=afnY+(O7geLWVr5h]cK>rZ+UDdNdb.IGI6hu;L'Ai=O5h?(mDRp3dE%GmiuB/8rub==eCM4^"d_D2ATNQEp;Z',KJS_#B(X!7WIL[N)#4hH;RbgTjj,lt/_;07<)\s(M2H,cda0eob(mYsP-"J*@Q%5(s!<%B[D^$l4]RoI#X=Q(.KgVKOTR$`C-\\^tiU+GF(tDmGblu?E"Wt\I2H$8E?11aEECKD!=o(\';Z&)4?b>PO):1@C?Oj$_8Xf'njO0%WJdWr_so3YKmT8T5Lb>jD.37#%G)unB#)K#/Bg4J6Z.h1-Oaebf+7$&XmHZLafO4G[_e2bc>u9W0d'`fD:L!qHqC5*=kbK`*T&m:%lq\I)RmKhDV_H[pZr_*XgDn64U5D@&:>>QS8j^tuXNDrWX>EPo&:1?A)'c0UgK-D*^SoN>)0nn*=q%kYB]#]?lbh6L'89s9m&Z9M%b6lA#i^k9sp/_sVT!mS`Kle+pBpP#V?m-ofm3aI!rIFj+Q\JUPCuR3^VT_3QGlENTPWh-?C"g]"+SeM<m&%>7DbniO(^9jOQJ7tf%2d%$)RJ*b$T<Z-Y"lW?N%ZA,c'SJh3U`a*D'^3R7UG+B"WJ;5/Qn+`jMSYc5X"WhZMf)q`AIt+0'9CO>AX,@,PT\c)R*CqY78o3'%.40%'Q-ic=e)o.RmG2B,-_bLI/r=P<jO$'@"MuH;.oBtqb58,NRhecD/X'iqC7/dMKEi.G$d=tL2&W0`]jPJLANY1Re$'g%BCDGS%5Ce+g#O[[5"u<\7meVb'Aa?X<(p7`3eh+e4'(.HL2b+V#P`VZpMJ^_'.ba_eBf%4+T$;.X-;h@l$GpYOHLJ^sk[kAo+d"6QpoI#\%qog[sk)+"YN2GT0.4%'+,dH$D"V,c?`h[9!=;`AE_sc7Vl(G\Kh!=iFri,M/]s(Y!"I@SoqeMB6$1';r-;p;5B;kG);jGJ:=1/&4%F-VdW,;-L/dM(am?,#F++6jeBHa$=2@Cb32HcaU$Wp9&$qi(JZQ#>II4;NM0Z#DpQ)N2E1b#l`a'=[%?mgJ9i8i9!Lk4ZMsl4-jA%?P!rI[J+Z4ohsONm<ug\rA8k.&;n3J`GS=hR^!K;G>;rDK>J`eHQN98>T)>R(Mm,0meE[CK;e*-mJV^J_3m!b(D.bq"5`Bm*ketD%m<uf?%r39%_pi>+TPi+ilJmiM(4A(+)2tLhSaVr8oq7K1qBmhi:e"8/dg&DQIIQ'Y*];N%?sf,nI_,/bN"q)]+R\Dh6Q`"b[^>Rd%[Wbr>G8`b7SF6c:,",.@L7Jj`c^i=.Z8ISg*.XLXJ;^l.%A)%U[**8'[@F'ud^a&cC+`:@nfd6b9h#uqQq=_(JW]t\DS86X[m/7D%G3Y?86"!h3q"\%?"bHUe>p'BXm<!1Qk$+Z$calafe"'au*LYSUf=#)Z#HD]H%V"[:o!pi?SZ9X;QUG<P;+<#+d@+tm@@HTUD%!4Y%IQ4gu5!'bkk1i^f41>_/Z7^qo^!sTP6Y0G[mbAT%V'#:5JYG:h\'Yk8^"g/X^=;6!7T[*eXlup[=4"Q22!O^6^"\.S(if"f6JT2$%@,fp0GF."rd&i+T]h\%)@&h`,]A;<%D?^>Doq1)X)0"CMHRXB4e@jUq,X&fp!n$[NhJEiapNfYC*o:Lg;,tCpfoX\KoPObHah*P`%`m([%]+&JO-e,ia+j]<,mXF6VAi*gt35+'pQLM)&.32-*Dg,a.2?-AicLI(RgCUTTh:i0tKO-Cf,t(JV.'GPkmbS.J/\AJ09p+8d%4l#&bhSu(W\f@_sqnR%<&Q,cR36-nRVH?@JiP@E@Q%LW&IJ7Yi?<u7!S`\;m3TP]Bpjq8kR>S*B[h2WgPCFN-G3ArEomX-aecm#c%G5AZk*'=&,HQ7+*J"'k%VgfY[=0d;p5r)O8DaRq285@,[[']_>^ME8`f\]tK^-t%%OUl`6q3D[Ca&W$^NWaVEYEa4br@;B,ln:X`%\d8*Dq"J^ofO&*!e@ujT$h=#*GuY?u<(>C6$1j@'KE5pI`4f`1m,.3p^V%6^mi0T3V&jO+3hNY+Y(-<TMgf3NI):gq+#*%&,q]ac%AEr"HR`_fIRj,M(2ah\Zce($lHY!C&@@/=aq[Ku,)>YrU@t)G91X[i6YS9Y@GAiJg'I@`jP.V$NY,&u$RJ)4TjHa\I[5PeS"4<.'%2^Z:L<2`Jga][j6GM-1QIRGX[V'L3A/TXiC9?<u:i]m\3\)/'.6i4c:<^h.eoEIMI"47?l',GsIKt?Dj(rhD`S2asS*Tl8EmEEo/%Z\XQa9JaEa\HpR7(\UC6kpB(_F1Ndse[$P6E0BJRel7T[n?op`P;?[(HEFa-_p?_5WiE61Be:J?D;/^T=;0=T)Q#&EFmAWg73k0H%EQ9*),f03PgM\e/lME..N;[&6^'Atl`Kbt99.+oHi`*4ereCAWfD\c,R:"F4,enlW_D2OUfJX857m)r[U9OuiY89C_0s4o+6l%r7%^rp]S&HBlbqGU9TC>u&?i$mT.7M;I[1=^,cVS;<$QI)L2AI\M\eh]cSSZL+6qc$X%-GdPlK$_V)MWd\7VL;qS3KbjhY,/"c[tu5g%D/l<KI*oR'Y8)I-hQMtW`"A:Up:a7fP$])rAcoiQJSidO_P@`DNFo)"IRr$P35ejok$'cH-ZJ\p`k(@naBrt7dI,Y2#K$4E&f.:#%ZFt\h7AO19q$H@D'](OQqIi;SMjX+bkS=adE[_u\-CDf#;*LF3Lfs(Yn)fZ[*#Oa:AGuAs;]f4o;0^Rl5IL8]XQ@W#`"RD;"6Q/Y%_#L1)Nndm]&sh2D/jj"B>V3D$n6XdMr'CiLePGF-9Z!"Ye6:1:5@a\]Ah2+oZu_H0lblhfNOL$0,$h$G&5$f;fdt#poN>!ciiaH'%e:rH?+]c!n?:K!?UP:N*0?WV$M'9Z-&5K((#KVL5X]s\]&54J#<c'9V<rbN`!oRnC&:R(V17+`a-!/%LQWfT23gE;EHQ)/=dN+:3%;f&V).pGds$t4e3fU9h/a'Fa(e;q-eqW]hA(/5XY>*orJ9`Ji)2F*$C<M77<pjN97Q@2gmqXA9_ma4F"N=41?WC][fT+K#86X?lc%"]MMTeD8D5ZZ_[/;3+F\>h:8MfW,:m;j/>hiq[c#8V^7C*cJr6-fZg">)\R-(p2!:pX,SU@\V!J2A[iQT,"?d-RSWdE)u)B:3O?I%s47L@J,k5-KCKtJ<^ocdQJ30Zf@P52g@AdoJXD0#m.TZ1#GYA<?>5K:l$L2r%&08G#.WV#H2U:$Wa42p(#LifZ(TNggM)M!)l?'5%>+fh<FK;t3I*o(]cQsbu'Z:!2&/GNVRq`99:qR?-s$/CF/$N,\1IdBsL'[M*\6_gmYuNPh3^:qFrIiPUWQhrl7-2bY9;W,%iXq,"%M)'#iLmQlWjfrRghIh[4'^,psd<472ZjFi2$4Tu"U-KJis%0k5I8-$%^Ho$&1%f\>W8+6N<n\VjY(rUAMQ5:f,c`1,;W6*bCVcsA%g9":B;Uj9ha1[04\\p<Lb"HkU(M\IDZT9@,/f3gfYBj#T'_"*h[J-m?6Mc!&$_'U6b@_UTgU<R.Fk?i(*KM="=u83jhl/3@FFgS1%a4$?/O_2O%_6Kts7hE#C_&d;#/l=a/VntZ7c3uR5C3NBCDl,2gim8O+6(YU/`p&a23Zh)YhW46=2H9[.#2]\uD:5;Gl6mUK%V;jm%Z/&;N0O)<*Ikl-D.-O#=T1JLefOp-T59&BeG`R,ngSP:O,KjEL4g74,5V4VJhNBo(pl3_.[F7FI>)'"d)N)Z*>U:hKNC0Q_Z\[AA%nmH4VVG]O`MMeF^S"$JD!tV-+$GFnoPE"2m1O=oL1ah%;8*RMSdBT\B-mPmd[-$!F$AONlSn"Bb';?X=Su4%LT&IgZO;b2L(oFnN%#o5,7$+=\TKI[,@-Bhcj;,fVG2(LtSf%8&RqC]sp&+Z9.qDt$e)Vc-grsRJSKj%kLBN@YL(1-<o9W1FO;om#bCY'RO#t,M<_5UZ@%o[U;NlKCU8VCkR;e6'DRI:X*U-C%VK<9$Y'G>7+IOhu<1R4gn-c1K[`Y@=O-AqI#;]Vsjf1Q=>c<([&0LikUab)oYe1+bBHXA)+I%!$o-uOAb7l]KQbmf11cMGLIMM=T;o(rAq2f'?<bo_^W,BETanA_jDX^nE)_BGq0pADl=Eu6uq?3&?/fC@N5#0$quO3X0,`A&VHU8%Xt,cIRFZ"CQ;rEmTq>]T\"BnA>LFn=8udo-U_B.mG1@GB\X&@9pu?o3cZ!7C<8&W'=JSSKWL$(f#I\<]Ok84]/Z.D<e+M9rOS9S^%-K<uj?gT-3iUK`#838(gj%%@bcA8]Zh`9gMHl"7+>VsVtBERja2>$VD1ot&KT!&[^I`<Qsn"9U7/\LbQ]'L3hrd%jn$V/<X$g3\&%mM=ZEek1)n)s0=d!>sd5NnRe'o$2,]_.I]g5JP7nc[L+l"bE?-.O\c:+kScr,:jB.mLm@C;005%D.mfc_m2cl^,-(2e8B0X9S,9G%K2D787UHeTZU\-NO_X+OCrJE'BMlJkHJOGE]kVp%pA:M3IDl-YK-;]U(;-sJlU9Z_rHc@h6QCmccHu+u6uQC<G5#`eI"HYsnH%jP%4S7g.K:IhRC;S`-hK2tX*fPG8nOXq#A(Ltd-^-sfp$Rn]`5CGZ0F"B/C,A'RNp%?P`Y*$r?ac`c9eANC)R=_F<d2K1n-S]t[AL)r%Zhr(X`\]0-&=G[<;"%GOcia%P5&;)0n2n"o&o:P@d-Y0odL:K4M0Aq>'3a/$&3#i*ODIBG$fE4?Z0L)P?Ir)%GRnq88;P<g]sUM(%;@4,jIdkd\:E[/1-3tnaOe]HdMCt*phRK5aqaO;?L++IX,J(<X.ui+R^CdN_Y8m.,P[4n!LT*"VJG#Q@)pC]m;k#fDV?jq8&P/b.%)pL7>7Q]>aPQt'4jB8GYaUEF_'#r,(W2Pku^!pLTaPAY?'WZ(TEZlEL>`f&Y6nOUII@ERVi^.m(:_0:)p<\/Z35[$B'r,4E-iY5'%qQP)m,7&3ECFHnADmM]%h&:qk#R/1BW4#0/lPU<Z2M=c8+>6Zq6^OWifh+<\7skK8\36"=IlK<pHRTV;WZblZeYFP;_ahfW4]'Ss%D8+<j%@@C\ehkHa(7TJ_r;M>!d<aS;<n58oTS$<+,7t]1l[kndZJ]>SRl>SH$S%[?@Wn/e=3c.5F-<14N)e9c#VT[oJ%CG0B2V4/%&dr`l)Q3&F0Z8h)=q`9%0t3l"FpML-K`o#5qPL<2JNAT1epI_C==M7r7%S:8Sc&>mEdg@SQ@.)c.PAHWP;,3mZnj!o`c4,K02K%7%a&?4joC8&9RV!\!]"1?"H@(t!+<rj?a^4S@&$L`f>nB(aU6g>pj2h%D9!FH(VmZcEqjDsXq0XZYiWROAfc&eNfg1<_nU*EjZ?#bg%.OqdrWG!t99-YtO=>.XgQs>j@!2n##Fb3[SpBbI.:ZJnb3[C[+*B"s&g!Jj`WXo.^UI(+SW'Za$ONX*k[/7$-^d-!VE&E^U?@I_g%\8nQP$-lgrYiYHW83W]hV9"3mPE+f0bNs)ui>GGS;d(Xk:IS!$4;G!/-mkBV??;eqp0!LbIU[k(%qek5lt#8UoRD9c$0UiC)r_a?%*OQtb)&<HQqbfj)8FbdaY`Y!2kip"]/fo='Se?qk/%-Ng)3U&YA=X_'nWZ=Z4QXS^*D`N>gQ/6@bK!PqT)8$lOK6FlPQ5GOqXKf>%%t;YH#UDVZ[R7$.dBGHts'K>=f42j<6[urOL\kPr!LdUiUQID#PDuGiK)dKn'^],/fPDQ1]3]!\Bp!o&+aFR>\U/0M#5iGdC@jeh%'W!$OJPi5g:V#,KM^">[.A%3t3qX,+`_R$H#g!2aZ!aLuj&C`&Tos]+>9k)!W-1i^HDd?FnC.P+23oAn&r-?r&l\sQj+F!;41<hM%HRGcI06`#j*ChKU`p21KSY-lOq#h7.dIU!ZOmC4(CE0,o5rD]kQR&NJhnpQa6,a`F5p\lb^NY9E,k?TkQ$@KuRP4k9ml3U%h_#RA%ZDt95\4Ji?-W`c%,2N]f("/"UljI36ILRZ^7ou4S)DeP!OeEE,D?ko29L8F'0\Wu-F,DHSmT_]CP>q*qf2n3-JftgZN>k=LEhmG]%Y^;?!))HHK8IFhbT6A7I^3E$XYY3ukZH^BQaY&//U*E=tG:1U8(sL%ngrl_;IV"g;1nfI*7@ftmnWp;Fh/^[A&Q;(J1J2u=fu7*o%S-n!pSe5,*>T?nHW"`@6W-:h)*a;]T>K"RnD%D;a'&p3=XI+:ZJD2J_*?.sQ;ou%+mq+RS,t_HO7Z=2W<uhN#SYd;6D<*P(i6='U%WPgV<J<JA\E#+&%$9^ORk*l_cIZ^H>1FF]>bYf#\:2&R6X!!FufApMsbYk\nSUo2q]<"MQA7%Spd5Ie:1tq_uYb`FE.Y3fmagJRR%F)Drk&Y-ueQAMX:P,(q8:?j6-Jc&EqP8mQ/,pD.'N-2ihcC?#e<1Jk*<=5:Y.ZTN]bu<]c65SNb`6OaMJ_/.%;^MEAR@KO?VJ=29%lSDZUA#][$7nHC>+@T'<OJsFeR4;[6WJW@N%r$m6*g%19<a_o0A>LnfBP1qM5(f-7eoM8<.%)PNC0M?M2(EfUS>allYdl'S8iL:G%bi)#RO\A`2<L]Mj0iI9\L2SkF'd\C/MFru/8i7nj(!Rm('hqGZ$7>@D=b,ZBophph[q))qW+s,Z>hV1.<&rcUm.^!K.IaM3</89$%cbo9"T'DE#KjG0p$]7E+I!7[;]AS"-A(h%>MKba0n;DV/<*lKe[a2A*#hqK8M1/R!9FUBNo1',7d-:7l@3Voj/>V)a>^-ocZIU/t%95It7/o>ihDmI^=FjLqU.`T(`rMJlKT;bJdO2BNM0DPG<OQ`pr@R;4^h^tpoVcmmcXuY1G$\W!9f,\;Y2:D)`UCMlXHj>e?SMo)"%Op5Bu7[@,flDi0sF<!8As'I'+n<r+PPU?[oa:#EX>NJ"&75X_[U3FosOLlWD[1%H&W8&&Hrol:JH/mYVJ#T24KeEi\[ikU3#(j<:%Z!@?X[X5e6mP7Z?BDNELE"6/8f1:+Fo3]##>=t-:HS9?6Zr$)H-'X[7.]"'CNU!iD9<iAcNpk052@NIG?CtfJK8G1oLkN'&X*#@K%hq1mX^_(i;V=5uZ[6QL5:Zsc2_`0t/2nW-j.8[''K6BcFFOX??LS;Ni!%oV+nP_U9G\*4n&NuqqLc[UEM^=J.Rh>6>C,JrU^#li2%S=;I,1O9o$p8Y-N.=d7EL@:K&\Lj]fcn\b$qKuUsUc/D;h&T0E\uJbQY#^R;*"YBSBjY!GN<5P`_'X]tOe"*XTtO]Aki9S2ZkRgc%Ctgc1kd`%t>gVor3FATWF?X%Cqu#")HA6kD>XPu3=7)sPr=RdrhDYb>+QQ0<%)cnS%XRZoO`KJ]X]M\g[&$i!'u1Qh@G?Bci+TsB%Q-$2)AjJn2]Vu*pD,XWiI5rNs/8U!H*9Vp-&6:#+O36/cZjid'+.gI=Flh*U8UQp0/a.&D,k.A\RI,;aTcOf+[u<cDb\9#'9/(:)%jVhdF-9K#?cVQWaXeB$D"B!3aH!c.Zo"lD,-GakTER*#!\DK-9W;s`oC7L6I`XIB.dm70li9?f11AK;'"=(<1(,3a3l%4`Cp(WD>%;!4CJcLP2X7pN1`'1--121D/4j_;reFF=XtjpFGT@+Y=-Y6g=[Pa)mb\s3gZ?S_mhVjqi;*Qh;6%%KIrAJ8A!]O;.VlgPhpR3<hO%UQiqF+-"Tc<gl$B>,O+<+kRX>-R#I3NqEUUkf/u^PG'F1gJU2ZkXgP*.*oO\dE.+d%rLbn;53eA?:<r_#*GG\=HOCf.aAKjK@l.d%a,pMtO*ZZrBJ)u6HE-5V3$-nZ:o>JpWA[FhP#F_%6f"*[$7p'3bVo4`4Km!=SPI1`paA<U5r;M<3`d4WC;UuLSH>Ha8<A.6UfZ*X%bQST-XERap?2I6<n-%M3;0![?ns3Q;&V0;RQlqTU*]PmlLlSN%rhHu<)LIQV[<Yi@klmC+N_Kq^GI8$D6(erp9IjQ1ohF6eL<LHK%0>+Ch;NYFJ:7BcHQkK*Co3mSoD3H0]Xgd_I$g-u\bZj??/4&oG9rAc.S#Y@T"KCD0j4R]4"jC(cF1u0S>g0fC?lc_h/2177W!j(,%F`E1Q?<KVf;Bm36W<'?\RY`8Sf\h?%O>b2J3G*%iabbaET4h0!,4BXNbb"0`$'2Hd3OFAPh#,Y-;3':Qd*e0$]]GXs9M$^P`CsFZ%&WnD!EsXssn[k1:=qIXr8hVl$7^#juZCXZ!(ERUK%7o#9CsF:W`l&79-H*lp1$b?o'06[mYBMdi?5%$N#>YT4\]aYdjmj$i!Ah$G%q,jg%Y9e3=E0Wd#`Q>fT(:Tr(U*Zso`aB*r*MY?edPnHV-h$6XMnYtseXjiW>(^@05piMR\.FQ">t[g;TqTXY(%aZNKMdlMi+'f]%Q,YriH>Xa@/m&OFhCa+8ko!F!(i,#nJS..//TnhR"W?9X&X_qh+Y.uY=_E4qd"eU8cA&pr0b6[9,@[a`@sX0dnd9#-cdpA\p0$0h%SJbug:$jb)ei@=N]#JEAl$gVa/jo!7Pr@Em'MPC`E%Yap2*+5n7TR:,l>qm@pJ%$3ZqP9l`Ejmg!FcbS@m4AJ48(FQ,erFOl?+ED%gG((jp%,<9+MW&N>Y&AXZFBEZ&SZ)fQ`7A"A@;)*,/4;f[5uEJoj(-uA)&usYY*u#q!TKC_n.2iX]i%+G8<P>*&elp+MX]K6Rnch%,em9X9%1j`pE[N(s2/LTq<^%Ynlolin<r\9M5NHrM=!*W\sH0@gM@GN2]]]PI#BD4&R9$i=5-k>+Pm3\<F.dnBncB^%>f#f?'TRW%^'-;n(W<e_FobBsq6q=r7@F`nYVIKoSM]b>0:rj6Wf)f&7"a$4aGJe.N226*C/-K`]!+i_l@bo'L`GYmp#!!MCm;>B2-Xqp\`,i@%-9AG9+"->XopfY@\;i?sYMnR;jhMe;&<=NT=>AK40A72F4G<pJr,s6+B&o-AEK17QpE>f?&Kmh]M]+5Ye9@olJ_kae$`D16Y<FF#%I2M4_d"%>nij)7FSX'VYL5A7R(#'1.^3-F&R7=YeGJnY.aF($a?\6n=3<QUn1Z,4rG'/)($86o$;ZsQ!9p`\Qn"clEb'\7r_%4KY%5-VL6$YW]$g`)!UZ)r9Si6l_V1cFX.IJC\Api2Y*9eEqRO\l@\lnY1VjRY/cE,F?NdV$r<jfP$p;QVLYCT9A>!Mn<B3<341_)UEo%J78oCIE.\D74(Zqb=,+k5C"")-:cm474#<[CUl/;@?WLUJ84hK+M:[FM`B5o*Kb)sc:[J&jQ8c^hd+/SKaU2!7FjB``UgmVm;@Q<%P^'8B[nr[k"ge\G]8@OB[]YN37XQ."@DB'=DNh.G+OEhDrlli()Gj)lm0p8!.\Ka.3Mb*4cX:GB?2jOQVX)hiCgZG%C;TWo1>rE_%`7fT'7^hVsQ1QqEh5i9SXDkG[;n,-T#^?qjlGXXS4-oFtW8NAn*V/#Qj=cQ3^fmHBo"&0m<`EDWh3MPl(@:R:M[?=an5Wg+dX.iY%RI6rSf.Jed]1uQj="[nW3c.6Z%\I'\/o_]ho\E+6MttQo`H.p9GVAYTOOZ_@s7[\jb:0(8kSYc=h<>c7[3;QD`o1c\`Dn*O[u,^S%b>p12n>=E\7*9D'BO(4epa2>nRR\4G/at*R@>73;mW*Qc2R!Pql+A1(0T_PK-er9io")K+;*=ccnJO-tA'Mt]S+JeNO7^]AeH*R2%P$jLL3PrR5$a./m[k4:j=6+8&8p<KNXod"+@+p>XU9,PIqVE&l:^3"b9W3M,O)3mq74P=R/[1sM-FV`DY;G9pVsY6@(#<oe`HN+Q%[G4Y)n^&1T%JPm)5A;cnK\S4j\CrJHR-GunD*2&T#_H/s2RNj#*bWBVDr\.7D:+%mUkeYs"q;:I]d4WL]&&Ns:UO4gp<WSG-YH>W%R<gDgcIEKi]$.Bne>*CNNC8s<P]3;>95EAU0d4fB);**nPioF%(%^uGq6![IXDFWnU>kkegIK3#i[SE:.&\0M9srBF\S#47\X="S%[DcJ;(7aabXqOm&+&+XAE#TsBi$&Ab\pL;a[-O;.FsQMY=m`20q*"&nhrG>VZ\heSV=r^"0$$bnc'kF)0HgUiE)k`BF`R(0YGr6V%@rA!+[#S+dFb1RB%Bj(0)?*U!,EL)+C-k!/)A#DD1E>`#K;=G1fgRQ3OS_[N@RTgd[[`)R2)c"9)DI;pKs]N4O[M4R"I^_^n6t(b%hBgu'OFA"(bB;[$G8Cft4QmDYGMCRD',Z\\SRPl+s).+d%bI`.*%G)Jb/%a@q)sLAm<ID4oo:8*T*(i#O*kX(]sKU8Gb'6-n9XuE%iiV8-F)uK>BIdX3adln1bIIJ/q+b5%D&d.ViTKjOLsMX78=,M%f0E6'*TLBF3H77Wo$XW.[;t0?C[V2>ZX1AVd.<tIs1!CFdl4HO%TDnE\k3;i^L[3"<:4LukQP*h4rdAqck(fkTpE/7_?G:melK76\qmR)3f95d,di\::;X\P\hHo*1?G:`lS_i.OI!C$"]mfbL_p=rM%Dr8>,jiPqfe)upCJ,=/[.bhPHH_4%-qVg]'iSKaKXaMY_Nt3<ah4OHA=53!$=/UQHoBQ5)="dmn=b$;A_p@4Is*";7p"*7u?Mscu%h<g8afC/0G+0XOL])L%Cl2&:&C#n[%r@b'mO11aQ*Zf5qT72(\Y9<]i9`F%j[t";@ec,WajAXM~>%AI9_PrivateDataEnd
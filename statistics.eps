%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: statistics.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Troy Carter
%%CreationDate: 6/4/12
%%BoundingBox: 0 0 454 416
%%HiResBoundingBox: 0 0 454 415.6650
%%CropBox: 0 0 454 415.6650
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 120 8%%BeginData: 8992 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD53FFA8527D7D7DA87D7D7DA8FD117DA87DA8FD087D52A87D7D7D%52FD4BFF7D7DA8FD04FFA8A8A87DFFFFFFCAFD20FFA8A8A87DA87DFD4BFF%5227FFFFA87D7D7DA8A87DFFFFFFCAA1CACAFD1DFF7D7D27A87DA8FD4BFF%2752A8FF7D7D7DFFFFA852FD05FFA8CAA1C3A8FD1AFFA87DA87DA852FD4B%FFA87DFD07FFA87DFD08FFCACAC3CACAFD1CFF7DFD4BFF5227A8FD04FFA8%A8A87DFFFD05A8FFA8FFFFFFCAC3A1CACAFD19FF7DFD4BFF7D52FFFFA87D%7D7DA8A8A8FFA87DA8FD077DAFAFFFCACAA1CACAFD16FF7DFD4BFF7DA8FF%FF7D7D7DFFFFA852FD09FFA8A87D7D7D84A8FFCAC3A1CACAFD13FF52FD4B%FFA852FD07FFA87DFD0EFFA87D7DA8FFFFCAC3C3FD12FF7DFD4BFF52F8A8%FD04FFA8A8A87DFD11FF7D7D7DFFFFCA9ACAFD10FF7DFD4BFF7DF8FFFFA8%7D7D7DFFA87DFD13FFA852A8FFFFA1CAFD0EFFA87DFD4BFF5227FFFF7D7D%7DFFFFA852FD15FF527DA8FFA1C3CAFD0DFF52FD4BFFA852FD07FFA87DFD%16FFA87D7DFFCAC3CAFD0CFF7DFD4BFF277DFD05FFA8A8A87DFD18FF7D52%FFFFC3A8FD0BFF7DFD4BFF5252FFFFA87D7D7DA8A8A8FD1AFF52A8FFC3A8%FD0AFF7DFD4BFFA8FFFFFF7D7D52FFFFA852FD1BFF767DFFC3A1FD09FF52%FD4AFFA8527DFD07FFA87DFD1CFF7D7DFFCACAFD08FF7DFD4BFF527DFD05%FFA8A8A87DFD1DFFA87DA8C3A8FD07FF7DFD4AFFA82727FFFFA87D7DA8FF%A8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD%04FF7DA8C9CAFD06FF7DFD4BFF7DA8FFFF7D7D7DFFFFA852FD11A87DFD0A%A8FFFFFFA87D7DC3CAFD05FF52FD4CFF7DFD07FFA87DA8FD09FF7DA8A8FF%A8FFA8A8FFA8A8FFFFFFA8FFFFA8FD05FF7D7DC3FD05FF7DFD4BFF52277D%FD04FF7DA8A87DA8FFCAA1C3A1CAFFFFA852525227FD08527D2752FFFFA8%FD06FF8476C3FD04FF7DFD4BFF5252FFFFA87D7D7DFD04A8FD09FF7DFD05%A87DA87DFD06A8FFA8A8FD07FFA876CAFFFFFF7DA8FD4AFF5227A8FF7D7D%7DFFFFA852A8FD1AFF7DFD08FF844BCAFFFF52FD4BFFA852FD07FFA87DA8%FD09FF7DA8FD06FFA8FD06FFA8A8A8FD09FFA84BFFFF7DFD4BFF7D27A8FD%04FFA8A8A87DA8FFA87D7D7DA8FFFFA8527D525252277D527DFD0752A8A8%FD0AFFA84BFF7DFD4BFFA852FFFFA87D7D7DFFA8A8A8FFFFFFA8FD05FF7D%A8527D7DA87DA8FD067D52A8A8A8FD0BFFA84B7DFD4BFF5227A8FF7D7D7D%FFFFA852A8A8FFA8FFA8FFA8FFA8FFA8FF7DFFA8FFA8FFA8FFA8FFA8FFA8%A87DFD0CFFA127FD4AFFA85252FD07FFFD05A8FFA8FFA8FFA8FFA8FFA8FF%A8A8A8FFA8A8A8FFA8FFA8FFA8FD0EFF7DFD4BFF7D7DA8FD06FFA8527D7D%A87DA8FD057DA87D7D7DA8FD057DA87DA8FD127D52FD57FFA8A8FFA8FFA8%FFA8FFA8FFA8FFA8FD04FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8%A8FFA8FD55FFA8A8A87D7DFD0DFFA8A8A852FD0EFFA8A8A87DFD58FFA87D%52A8FD0EFFA87D52A8FD0EFF7D7D52FD5AFFA8A8FD10FFA8A8FD0FFFA8A8%FDEDFF52A87D7D7DA87DFD78FFA8A8A87D527D527DA8FD78FFA8FF7DFD04%A8FDFCFFFD65FFA8A8FF7DFD78FFA8A8FFFF7D5252A8A8FF52FD047DA87D%7D7DA8FD077DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8FD057D%FD4AFFA85252FFFFA87DA8FFFFA87DFD06FFA8FFA8FFFFFFA8FFFFFFA8FF%CA7D7CFFFFFFA8FFA8FD07FFA8FF7DA8FFA8A87DFD4BFF527DA8FD06FFA8%7DFD11FFA8767D7D52A1FD0CFFA87D527D7DA87DFD4AFFA85252FD07FFA8%A8FD10FF7D76CAFFFFFF7D76A8FD0AFFA8FD047DA8A8FD4BFFF87DFFFFA8%FFA87DA8A87DFD0FFF7D76FD06FFA8527DFD0AFFA8A8FFA8FF7DFD4BFFA8%A8FFFF7D527DA8FFA87DFD0EFF7D76FD09FF767DFD0DFFA87DFD4BFF7D27%A8FF7DA8A8FFFFA852FD0DFF7D76CAFD0AFF527DFD0DFF52FD4BFF7D27FD%07FFA8A8FD0CFFA876FD0DFF76A8FD0CFF7DFD4BFF5252A8FD06FFA87DFD%0BFFCA76A8FD0DFFA852FD0CFF7DFD4BFF5252FFFFA8A8A87DA8A8A8FD0B%FF767DFD0FFFA17DFD0BFFA8FD4BFF527DA8FF7D5252FFA8A852FD09FFA8%A152FD11FF4BA8FD0AFF52FD4BFFA827FFFFA8A8FFFFFFA87DFD08FFCAC9%7DA8FD12FF4BFD0AFF7DFD4BFF5227A8FD06FFA87DFD07FFA1C3A87DFD13%FFA152FD09FF52FD4BFF7D27FD07FFA8A8FD06FFCAC3FFA87DFD13FFCA7C%A8FD08FF7DFD4BFF7D52A8FFA8A87D7DA8A87DFD05FFCAC3CFFF52FD15FF%A17DA8FD07FF7DFD4BFFA87DFFFF7D527DA8FFA87DFD05FFCACAFFA8A8FD%15FFCAA1A8FD06FFA87DFD4BFF7D52A8FFA8A8A8FFFFA852FD05FFA1FFFF%7DA8FD15FFA1CA7DA8FD06FF52FD4BFF52F8FD07FFA87DFD04FFA1CAFFFF%7DFD17FFC3FF7DFD06FF7DFD4AFFA852A8FD05FFA8A8A87DFD04FFC3A8FF%7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A1FF7DA8FD%05FF7DFD4BFF7D7DFFFFA8A8A852FFA8A8FD04FFA1FFAF7DFD09A8FFFD0E%A8A1A8A87DFD05FFA8FD4BFF7D52A8FF7D5252FFFFA852FFFFFFA7CAFF7D%A8FD08FFA87DFD05FFA8FFFFFFA8FD05FFA8FF7DFD05FF52FD4BFF7D27A8%FFFFA8FFFFFFA87DFFFFFFCACAFF52FFFFCAA1CAC3FFFFFF7D52527D52FD%047D52527D527D52FFFFA8FFA8A8FD04FF7DFD4BFF5252A8FD06FFA87DFF%FFFFA1FFA87DA8FFCACAA8FD04FFA8527D527D7D7D527D527D52FD047DFF%7DFF7D52FD04FF7DFD4BFF7D27FD05FFA8FFA8A8FFFFCACAFFFFA8FD1AFF%A8A8FF52FD04FF7DFD4BFF7D52A8FFFD047DA8A87DFFFFFFA1FFFFA8A8FD%08FFA8A8FD0FFF7DCAFFA87DFFFFFF7DFD4BFFA827FFFF7D527DFFFFA87D%FFFFCACAFFFFA8FFA8A87DA87DFFFFFF527D7DA87DA87DA852A87DA87DA8%7D7DA8A8A1FFA827FFFFA87DFD4BFF7D52A8FFA8FFA8FFFFA87DFFFFCAA1%FFFFA8A8FFFD05A8FFFF527D5252522752527DFD0452275252A87DA1FFFF%7DA8FFFF52FD4BFF7D27FD07FFA87DFFFFCACAFFFFA8FD09FFA8FFFFA87D%FD0CFFA8A1FD06FF7DFD4BFF2752A8FD04FFA8A8A87DFFFFCACAFFFFFF7D%FD0EA8FFFD0AA87DC3FD06FF7DFD4BFFA8A8FFFFA87DA87DFFA87DA8AF76%A8A8A87DA8A8A87DA87DFD05A87DA87DA87DA8A8A87DA8A8A87DA8A8A876%FD06A87DFD4FFF7D5252FFFFFF7DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFD50FFA8%FD0AFFA87DFF7DFFFFFFA87DFFA8FFFFA87DFF7DA8FFFFFF7DFF7DFD04FF%7DFFA8A8FD5EFFA8A87D7D7D52A8FF7DA852A852FFFFA852A852A8FFFFA8%52A87DA8FFFFFF52A852A8FD61FFA8FD07FFA8FD0BFFA8FFA8FD73FF7DA8%FFA8FFA8FFFFFFA8FD75FFA852FFA8A852A8A87D7DFD76FF7D7D7DA8A8FD%047DA8A8FD77FFA8A8FFFFA8A8FDFCFFFD68FFA8FD7DFF7DA8FF7D7DA8A8%7DFD27A87DA8FD4FFFFD047D527D52A87DA8A8A87DA8A8A87DA8A8A87DA8%A8A87DA87D7DFD04A87DA87DA87DA8A8A87DA8A87D7DA8527D52FD54FFA8%A8FD24FF7DA87DA8A8A8FD54FFA87DFD23FFA87D7DA87DA87DFD54FFA8A8%FD24FFA8FD04FFA8A8FD4EFF7D7DA8FD047DFD04FFCAA1CAFFFFCAFFA8A8%A8FD1BFF7DFD4FFFA87DA87DA87DA8FD04FFC3FFA1CAC3C3C37D527DA8FD%1AFFA8FD51FFA8FFFFA87DFFFFFFA1CA7DFFCAFFFFA14BFFA87D7DFD19FF%7DFD54FFA8A8FFFFFFCAA152FD04FF7DCAA1FFFF7D84FD18FFA8FD4FFFA8%FFA8FFA8A87DFFFFCFC3847DA8FFFFA87DFFFF9ACAA87D5276527DFD14FF%7DFD4FFF7D7DFF7D7D7DA8FFFFCACA7DFF7DFFFF7DA8FFFFFFC3CACACAA1%CA7DA8FD12FFA87DFD4FFF7DA8A8A87DA87DFFFFCAA17DFFA87DFF7DFD09%FFCAC352A8FFA87DFD0FFF7DFD4CFFA8FD07FFA8A8FFFFC3CA7DFFA8A8A8%7DFD0AFFCAC352A87DA852FD0EFFA8A8FD49FFA87D7DA8FD06FFA87DFFFF%C9A17DFFFF7D7DA8FD0BFFCAA14ACAFFA852FD0DFF7DFD4AFFA852A8FFFF%FFA8FFA8FFA8A8FFFFC3A8A8FFFFA852FD0FFFC3CAFFA87DFD0CFFA8FD4A%FFA87DA8FFFF527D7D52277D7DFFFFCA7DA8FFFFA8A8FD10FFA1C3CA7DA8%FD0BFF7DFD4CFFA8FFFFA87DA87D7DA8A8FFFFC97DA8FD16FFC3A184FD04%7DA8FD06FFA8FD4AFFA8A87DA8FD06FFA87DFFFFA152FD18FFC3A1A8A8FF%A87DA8FD05FF7DFD4AFF7D52A8FD07FFA8A8FFFF76A8FD19FFCAC3FFFFFF%A87DFD05FFA8FD4BFF7DA8FFFFA8FFFD04A87DFFFD09A8FFFD11A8FFFFCA%A0FFFFFF7D7DFD04FF7DFD4FFF7D7DA852527DA87DA8A8FFA8FFA8FFA8FF%7DA8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8A8FD04FFA1FFFFFF7DFD04FF7D%FD4FFFA8A87DA87DA87DA8FFFFA8CACAFFFFFFA8527DA87DA8A8A87DA87D%7D7DA87DA8FFFF7DFD04FFCA9AFFFF7DA8FFFFFF7DFD54FFA8A8A8FFFD05%CAFFFFFF527D5252527D527D277D7DFD0452FFFFA8FD06FFA0CAA8A8FFFF%FFA8FD54FFA87DA8FD08FFFD10A8FFFF7DFD07FFA1C352FFFFFF7DFD50FF%A8FFA8FFA8A8A8FD1AFFA8FD09FFA152FFFFA8FD4FFF527D7D5227A87DA8%A8FFA8FFA8FFFFFFA8527DA8A8FFA8A87DFD04A8FFA8A87DFFA8FD0AFF7D%7DFF7DFD4FFFFD08A8FFA8A87DA8A8FFFFA8527D27FD04527D7DFD055227%52A8A8FD0BFF76FFA8FD54FFA87DA8FD08FFFD04A852FD05A87DA87DFD04%A8FFA8FD0BFF767D7DFD54FFFD05A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FF%A8FFA8FFA8FFA8FFA8A8FD0CFFA87DFD4FFFFD06A87DFFFD1BA8FD0DFF7D%FD4FFF7D52A852FD047DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87D7D7DA87DA87DA87D7D7DA87D7DFD4FFFFD04A87DA87D%A8FFFFA8FF7DA87DFFA8FFA8A87DA8A8FFA8FF7DA87DFFA8FFA8A87DA8A8%FFA8FF7D7D7DFFA8FFFD04A8FD53FF7D7D7DFD04FF7D7D7DFD04FF7D527D%FD04FF7D527DFD04FF7D5252FD04FFA8527DFD04FF525252FD53FFA8A8A8%FD04FFA8A8A8FD04FFA87DA8FD04FF7DA87DFD04FFA87DA8FD04FFA8A87D%FD04FFA87DA8FDE5FFA87DA87D7D527D7DA8FD77FF7DA8A87D7D7D527DA8%FD7AFFA8FFA8FFA8FD12FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-04T10:35:05-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>236</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA7AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FWA/mz5081eWYNL/wAOWovLu9klWS3bTdQ1CqxR+qeJsSOD0UhV&#xA;f7RI3VFd1VTnzN5vk8uWNhLd2y3Vxcx3Bljhf0z6ltZy3TemjBmKuYOHX4SwriqhYa1r+r6fcX01&#xA;pBb6Jc6aZrYq5eX1mDVHI8QycdweA+Zrsqk35f8AkLyDdeTdJvk8v6fNJcWNv+9uLOBuTLHTmQVY&#xA;7k771OKhEnyl5btvh1XyJpjxAgm7020t7hfhNatCY45x/qor5VxyHMfJzPAxy+ie/dLb7d4/MxRu&#xA;n+Vvyp1GUiz0PR5Z4gRJb/U7dZUBp/eQsiup2/aXJxmDyacunnDeQ27+nwPIow/lt+XvEL/hnS6B&#xA;Sg/0OCvE078eu3XrkmlZJ+WX5eOjr/hvTVLgjktpACOXLcfB/ln/ADAxVW/5V55A/wCpZ0r/AKQb&#xA;b/mjFVv/ACrj8vuDJ/hnS+LVr/ocFfi3O/Co64q5/wAuPy+f7XlnS91K7WcA2aleie3XFWn/AC2/&#xA;L1q18s6X8RJNLOAblePZfD+vXFXmvmfQ49E1PVhonkrTdSaO7tkgs5NL+sR/UBYCT1EMCF1kmuVl&#xA;i5EMlVHLjWuKpj5f0rRbTzvob22l29k/6R1mPT7qG1ht2ntI4iKMYwjEROxReQ+JQG64q9cxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvLf8AnIG0nvfLulWq6joOlW734aS98xi2aDms&#xA;EhWONby0voA7LyPIhSKUBNSMVZX5m83T+W7DTpbm1ju5riO49eOGUoQ9rZS3Z9JChLqzQcO1OS9e&#xA;mKqGn6z5k1ezur65soLXQrnSxLaFJWlm+sH1PUDVWP4CnApQb9a70Cqn5PuNck8i+XX0SGBozZRC&#xA;X9IGWBtkUKVVFkO+/wBqnbFUy+s+f0P/ABztJuAf+X65gp/06T1/DFUBqUmtXSINb8npqBT7D6be&#xA;QTvGSN2je7GnOpHitDkZQEuYbcWeeP6SR+Ovegh5mstOkEX6ZudGavFbXzJbyC3LHokd5J6XNidv&#xA;96JPlkeAjkfnv+1u8eEvrh8Y+n7N4/IBkSa7qUCq2o6XIYWoRd6e312EgioPBVS43/yYmHvjxkcx&#xA;8t/2r4EJfRMe6XpP/E/7JHadrGl6kjNY3Udx6e0qKfjQns6H4kPswGSjMHk05cE8f1Cvx070Zkmp&#xA;2KuxV2KsT8xTJ/jzyjEyuHJv2RuNYyBbfECwPwkVGx69uhxVlmKuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV5F/wA5Oan5l0/yFYS+Xr+606/l1W2txPZtMjETLJGA7wOjhebK1KMGIAKm&#xA;uKs683eabry9FZvDZC/M4uuUIlKzE21nLcoEUI/IO8IjJ7Fl2YmmKofT9S8yanp11qF7bw2ulXWm&#xA;+pbQKzNMkxVufIsqcldSCKqtPevwqoj8uJrebyHoL20Zig+pQBFIC9EAJADP1PvirI8VdirTokiN&#xA;HIodHBV0YVBB2IIOKsbk8jWFqzz+XLiXy/ctU8bOhs2Y7/vLJ625qftMiq5/nGKpZqV+bV1PnOxF&#xA;qYfhg82aaXS3QH9qVgxnsxX7QkLxfzSHpkZQBbsWonDYcu47g/BN4tXvdJjRtVmW+0iQBoNciA+B&#xA;GFVN0ifCFI/3cnwfzBBuYcRj9XLv/X+tv8KGb+72n/N7/wCqf96d+4lkCOrqHQhkYAqwNQQehBy1&#xA;wiKbxV2KsS8xzQDz95RheI+sTqDRSkAjiLb4wDyqOq/s4qy3FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq86/Nnyr5m8z3uh2GkXFn9TgF7Nqenz3X1Oe4imtzZERyCz1AhPTupEchQRyF&#xA;DyoVVZF5u80XPl6GzaCyW+9cXVbdZCstbazluUCKEfkHeERk9iy7EmmKoWwv/NGqWNxql7FBaaNc&#xA;6Xygs1LtOtwQxd3LRp8BSnHFUX+XVzFc+RdClhRkiNlAEDAAmkYFacn7++KsixV2KuxV2KuIBFDu&#xA;D1GKsWm8r3+jPLd+UWjgRyXuNAuCwsZmO5MJHI2kh8UUoerIWPIKoHRtZitPrD6XbzxWtqynWPLM&#xA;yUurAyVJlt0UsHiYgnjGWRqExGoKmkgw3H0936v1fJzhMZ9pmsnSXf5S/RL/AE3eJnbXNvdW8dzb&#xA;SLNBMoeKVCCrKRUEEZaDe4cOcDEkEUQqYWLE/MVxGPPflK3ZGEjtfvHJQcSFtSGFQ1R9odV+nFWW&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXlP5z+VPMms6voV3pHl6z16K0jnjuVvb&#xA;Kxv0jEk9s54xXt7p4BeOFxVST+zVK8sVZn5v8y6loUFo9jpp1J51uuUEfqcw0FpLcRgLGkuzyRCP&#xA;xqwoGO2Kqdhda/qGjXGqagBa21zp9Y9N4kPHKQ5dmLoj0K8aBvpCnqqgPIXmNJPKekQafpd7dpBY&#xA;WvKRTaqPjjFP7yeM9vDFWQ/pnUf+rDff8HY/9lOKrJdfvIYzJLot5HGv2neSwUCppuTdYquXXL9x&#xA;VdDvWHSoksTv/wBJWKrT5guxOsB0W8E7KXWL1bDmUUgMwX61WgLAE++Krv03f8uP6DvuVK8fUsa0&#xA;8f8AerFW/wBM6j/1Yb7/AIOx/wCynFULf6Np/mOzsdYtZJLDUhEs+m6pEFWeJZV5BHBqskbcvjie&#xA;qn5gEKsd0/Xb7QtVlttSgW2mbnPfWUAdoJ0FDLqOnV5NQF63Fuasv2hX7UlJHAbHLr+v9f4vOhIZ&#xA;wIS+sfSe/wDon/en4HblP4pYpoklidZIpFDxyIQysrCoII2IIy4FwiCDR5sV8xXEI89+UoGRxMzX&#xA;7xP8PAqtqQ4O/KoqvbFDLMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiryH/nJC6kg0&#xA;DRmkeSGxS+M0txDBBLMsscLmJYnfUNKnjcjmawPyKggkLVXVZpruqax5b0vT4NLs7nWz6dyrFxNc&#xA;TfuLSWeHnLGr15yxpFyc8iWH2mxVT0+TzdeWl1qmqSxQ6XdaX+60sRNHNFc/GXdi450ZCPhahHgD&#xA;iqC/LPheeXEWL6xZrJY2CqzcFmWkFOQpzUV7YCGUZUbq2TRaDMkiOdWvnCkNwZ4ipoa0NIxscjwe&#xA;ZbzqAR9Eft/Wg/PflV/M+hfo1Jo7eQSpKk0qPIFKgrUKjxVI5dGqp6MCDk3GYjJ+UfmX6wstt5vm&#xA;tUjk9SGCGO7iiX4p34+jDfRQkcp4zThT90oAC7Yq69/KrzjcG4kHnGRJ2iktrSf0bgzxQPLaPQTf&#xA;W+VWFiOfELyLt9Kq5vyo80D1jD5tlgaZp3kkijuY3d7kVaQlbv4CkpMiqgAJChqioKrK/KXlnVtE&#xA;l1Fr7WZdWjvZmmgSYS1h5SyvxUyzT/CEkRAFCgcOm+yqN8p/8oro3/MDbf8AJlcVVdc0HTdbsxa3&#xA;yH924ltriMlJ4JlrxmgkHxRuteo7VBqCRirB9E1vUfJutxeXPMjD9G38pXSdWChIHlercKLRYnbf&#xA;nEAFB+KP92SsVP0H+j937HOJ8eP+2x/2Q/4of7IeY3PfMUyDz35ShaKXmWv2SYcfSoLU8lbfly3F&#xA;NvHLnBZXirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeU/85F60mmeUtO4X2o2d3PqM&#xA;aQRaPqiaRdzVjkUosjRXBlXk61QJ14ksoGKsz83a9rujwWb6Xpz6k8q3XrQpHNKwMNnLPF8USsq8&#xA;5o0j+Lry+HfFUJp7+bbyxutT1WVIbC50z4NLEJikiuKOXc8x6ihlp8LGvspBqqknkTWdHXy7HBLq&#xA;X6Eln0+w9B7iS2juVAgpzVZfVjO4NKqcVTeG602OaOR/zBlmRGDNE8ujBXANSrcLRWoehoQffFUP&#xA;5/m8veY9EisLfWdK5x3UFwfrF1EF4wtyIUj1KMelaYqwqbSvMEeqwLZ+c7G20x3j9NLfUpRFZRw2&#xA;zR8RC06rIplKyInGm3FvgxVGnQ71o2S68/W9+w9d42m1FkT1na39JmijYIVjEMrhGqFZ6DZQcVQg&#xA;0LzI0Tw/8rHt7ZZKl5ItTklkr6cKoEaZm4BZUlkNPtc+J+ECiqZaHplxa+aLfV9T87WN5bWt1PPF&#xA;avfvLSO5M/JRzkAHFGhRV+z8JNKndV6N5T/5RXRv+YG2/wCTK4qmuKoDXdC0nXtKn0rVrdbqxuAB&#xA;JE1RuDVWVhRlZSKqwNQdxiRaYyINjm88sI/Mej+evK/lzWvV1K2t2vm0TzB8JMtuLU8oL1a8luIt&#xA;gHA4yLvswIyMRWzZkkJerr1/W9SyTU7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUh8z&#xA;+R/LvmYxnV47l/Shmth9Wvbyy5QXPD1opPqksHqI/pLVXqNsVT1VCqFHRRQd9h88VUrxI5LOdJeX&#xA;ptG6vwBZ+JUg8VAYk+AAxV5jpkmm6cdP0nQvNWu3rMLK1EK29jWK3liV4pCZtPUERpMjSAHkoYFh&#xA;irM28r6ywofNurDcHaPSx0Ne1jirj5X1nkG/xbq1QCKenpdN6dvqPtiq0+U9Y4hf8XaxQKUrw0yt&#xA;DTev1Hrt164qknmBLXR0nXV/O+tQRrEJZT9XsnX05DIuxj09gaUYsF3UAE0FDiqP0Ow1jVtP+uDz&#xA;Jrdr+9mi9C4g0tJB6MrRcipsf2wnIexxVG/4V1ngyf4u1ejVqeGl1+LfY/Uajrtirn8q6y/Xzdq4&#xA;qpX4U0sbNTfax67bHFUJq2jXmm6ddajfecdZis7VHnuZUi05ykaJRm4x2DNRV32HviqV6fI9xrf6&#xA;J07zVrl0/OdL65EGm8IJbWkVHMlgCQ5RlDrVeSkVqRVVP4PJ0o1qw1a+13UNRl031jbQXC2SRVnj&#xA;9Ny31e2gc/D0+LFWRYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWnUOjKagMC&#xA;DQlTv4EUIxVLtM8taHpc7T2FokM7RpC01WZzHGqqqlmLE0VFX5Ko/ZFFUyxV2KuxVinmxfKkmq29&#xA;lrdhLeG8s7maV/ia2itLEpJI8yl1X7cqqOKljyofhriqGj/NjyyJZY7yG8sfq8bzXDTRLIEWP6vU&#xA;EW7zsSTeIBxB74qyjSdVtdUs/rdty9MSzQOrijLLbTPBMhoSKpLGy7Gm22KozFUPqFhaajYz2F5H&#xA;6tpdRtFcRVZQ8bijKSpBoRscVU9P0jTdOa4eygWFrqQzXDCpLuxLMxqT1Zi3zJPUnFUZirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqkt1atdSWizI11EiSy24YGRI5S6xuyV5B&#xA;XaJwpPXifA4qq4q7FXYq7FULc6Vp11cJc3Fuks6RS26u4qRFPx9WP/VfgvId6DFUpbyB5NeFYpdK&#xA;hlRehl5SMTWM1LOWYmtvGak1qoPUYqnNlY2tlbi3tYxHEGd+IJJLyOZJGYmpLO7FmJ3JNcVV8Vdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirzH84/Pd55TutIkt9ch0lJ47iS&#xA;eG4tra4WSO3kgd3H1i/0xiVDcPTi9SRgx4rUVxVlfm7ylH5mgswblbYW4uaTrFzlK3dnLaERuWXg&#xA;KT8zsalVxVdp3lux8vaJKbMD67FYrBLdqOBkFuJHQ8AeI4tK3HwBpXFUn8l+VprvynpN3qGsatLe&#xA;3NrFNcSG9nWryKGJ48tuuKpvL5LiZQI9X1VG5KSfr05+EMCw+13G2Krv8G23/V11X/pPn/5qxVaf&#xA;JcXrKw1fVRGFYMn16fdiRxNeXahxVJPMiaLob29p+kNa1DWr3bT9Gs72V7qehoWozokcSftyyMqL&#xA;3NaAgllGNpTXXtJLT+aLDWrXTZOL/XtL1WfU0tl4DktzGiQXA4kGrRxSKO7U3wWz4AdgWV6d5f0b&#xA;U7GG/wBO17UbyyuF5wXMGoyyRuvirKxByTWQRzVofJcSwosmr6q8gUB3F9OKsBuacu+KHS+S4mUC&#xA;PV9VRuSkn69OfhDAsPtdxtirz/XPMCaPqkzXM+rPo9tcXdtN6d9N9ZAsoIZ5J6SSxLx/euAihmYA&#xA;EdaYqmugS6iPM+hyJf3rRteavpupW8tzLcW8rWXNYZFEjMFJ9PlTqCStTxxV6birsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVeYfnfe6RoMegebL6516C4066eysR5eisriT1b+PjWWO+jl&#xA;Qg+lwWn7TAUO1FWW+bYfNk8NmPLkzQT0uRO7+kIhys5lgMnMM9VuWib4BSgaoOwxVDWHl+/tNNuN&#xA;T1S9mn1abTPq95EWjMPKMO/McEQl/ioTXj/KBU1VRX5eyTyeR9CecRq7WUHwwgqgHpgDqTirIcVd&#xA;irHfOPmmbR4bay0yAX3mPVWaHR9PJorMorJPMRusEAIaRvko+JlwE0zhDiPk15Q8nQ6Ek97dzHUf&#xA;Meo0fV9YkFHmcdEQf7rhj6RxrsB74APmyyZL2H0/jmyPJNTC9X8tah5fv5/MnlCHk8z+trflxCEh&#xA;vq/bmgBosN5Tflssv2X3o6xpsEr2LJdC1zTdc0q31XTZfVtLkEoSCrKykq8bo1GR0dSrqdwwIOSB&#xA;YSFGij8UJXN5W8tz3zX9xpltPeNIJvXliSRhKqovqLyB4vxiQFhueK1+yKKpFqlpHYecfKVpaQwx&#xA;WTSajIVVSJBK8DSSNyr8XqPIzOTuW3JNcVZjirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVeRf85GH09D0iafUGsbFri5tZeMjJye8sprf7MWmaxKwMUkq1CqBy68ipVVnXmzzFqei21k2m&#xA;2B1GS4W5HoKJGesFnLcRU4K325Ylj37sKAnFUPYy+abzT7jUtTaOCxudNJXTgjJJFPRiW+NQ4BXs&#xA;x+gb4qjPy/nSfyTockcbxIbKAKsqqrbRgV4psMVT/FUn8xeZrHRLZ3kpLcrFJOsHIIBFEOUk0rna&#xA;KFBuzt9FTQGE51t1cjDgM9yeGA5n8cz5fo3Sf8v9Fv2WfzZry18xa4qko6lTaWSktb2camvAAHnI&#xA;OpcmtaDDEVz5sMuQHaO0Ry/b5/jkzDJNTsVdirAdeeLyL5iPmSMGPyzrcqx+Y4VqUtrtgFh1EL0U&#xA;OB6dxTr8LdQawJo+9vjEzif50fu/Z919zPVZWUMpDKwqrDcEHuMm0N4qxbzDOo87+VIDG/JnvmSW&#xA;ilKC1IYFvtA7j5/RirKcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiryf8A5yO0yTU/&#xA;KNhaPK0Fibt5J5I7+TT3d0tZjDDyS0vxIJWqoQheT8FXdsVZ95i806f5dtoJ7+OZoZVnPqRKrAG2&#xA;tpLtlbkyGrRQPx26jemKpfbeZ7rWYL309LnttJfTfrFtfzFP3krGRJIeMbSAGMKvVt6+G5VRX5fv&#xA;A/kjQ/Qk9WIWUAElCoNIxWlffFUw1vU5LC1T6vF69/dSC3sbc1AeZgT8RHREVS7nsoOQnKh5t+nx&#xA;CctzURuT5fr6DzYvqOjxHUNN8u82vL3Upl1LzHesKNJa2Z5qjGhAje59KNYunp8/8qrCFe9c+c5D&#xA;XKI5Du/b3nqzjJtDsVdirsVQes6ZFqmlXWnynitzGyBwKlG6o4r3RqMPcZGcbFNuHL4cxLu/FfFi&#xA;n5b6nLb26+W7sLG9vD6+lKAQPqiP6UtsK9TYz/uD/kemTucYSsWnUYuCZiOXT3dD8QzfJNLFfMMk&#xA;B88eU0L8Zw98VjKn4lNqakN0+HavzxVlWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V5V+e9v5h1C20fS9J1rWtAieZri51DQdN1DUJjwKRLFI9hLEY4+MzyMrA8uPw7rQqs/1mXyxEtsd&#xA;caz5BZjbNeiOvFIWa4ZfU6AQhi/+T1xVAx+ZPLd5a3uk6RNHILbT/XjW3A9D0HVlT02X4Dxpuq9N&#xA;vHFVfyHb/V/JWhQ/F8Njb/bNTvGDvu3j44q2jJc+Zrq6kNLbRoBAjGgUT3AE05P+rCIqH/KbKxvL&#xA;3fj9Tly9GEDrM38BsPt4vkEm8u61HNqmq69fQXscl6y2ljCNPvTxsbOSUQuSIiC07yvLUfsso6rl&#xA;jiMg/wATad/vm+/7h99/1RxV3+JtO/3zff8AcPvv+qOKu/xNp3++b7/uH33/AFRxV3+JtO/3zff9&#xA;w++/6o4q7/E2nf75vv8AuH33/VHFWH6mzSyX502K5g1SxuW1by3JNaTwJNK9uzXNnymjQETlJeYr&#xA;WjBhuoyEAQT3OTnmJRif4qo/Dl9lD4M80vUrPVNNtdRspBLaXkSTwSDukihlP3HJuMkPmGDl5z8p&#xA;z/F+7kvk2Pw/Hak77/5O22KsnxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvIf+ckL&#xA;qSDQNGaR5IbFL4zS3EMEEsyyxwuYlid9Q0qeNyOZrA/IqCCQtVdV6Be+TtK1LSrLT9Rkuby3s0lW&#xA;NpZmMjia3ktmMkgPJz6M7qGJrvWpbfFVV7TStN0afSrRlWS3sWpEzhpjEAwDvU8yC3Lc964qhvy6&#xA;tlt/IuhRqF/3igLFeNCTGDX4KLiqQa3Z3WpeQJY4Y3ca5fG4vWQk1snuTMyyEEfA1pGIW8QaZXi5&#xA;X3uXrdp8P80AfIb/AG2yq3i1l9NsDYXVtboLePms9u85J4jcFJ4KfcclIS6H8fNqxyxj6gT7iB/v&#xA;Si7CLWEL/pC5t7hSB6Ygt3gIPepeaev4YxB6/j7UZDjP0Aj3m/8AehhHmzQvPs3mttQ0ee4/RoS3&#xA;BgS7aNf3cis3pRepHEGahDiRG5L0cfYyTUgLWP8APKO0uPUl+sXPpIYhN+j4x6pgRHCNEh2Fw8jj&#xA;mv8Adog+0W5KrW0785uHoQyvFZsLiSQNPA9x6j6hJcx8JnMhX/R+EHA8kA8KYqrLY/nMlvJFFcmK&#xA;OvGA8rSaZU+swnkzTrIGk9H6xWrcd4wFB5Yqy66mvOXlQ36CO+luqXMa04rN+jbppAKFhQMD3xSA&#xA;l/kXULqC/wBZ8r3djLaPpVzNc2dy9PSubS+uZp4Wh70iVhG1f2hihU8xWyf478pXAChw1+jH4eRB&#xA;tSR/lGlD02xVlmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5T/wA5F60mmeUtO4X2&#xA;o2d3PqMaQRaPqiaRdzVjkUosjRXBlXk61QJ14ksoGKs082+V73X7a1it9SbTGgW5V5EV3dvrNnLa&#xA;ihSWIDg0wkrQmqinHriqhYeTtO0TSrm5FZ9WOnG0ur4tIPUSIMyj02d1AUsadTTYk4qu8l3c9v8A&#xA;l1pV5czetJFpscrSFQookIIHFB0AGAmhbPHHikB3lF2Nu1t5It7dvtQ6YkbV8UtwP4ZHGKiB5Nmq&#xA;nxZZnvkfvcIPMcunaedJvrO0jFvH6q3VnLdMzcRQq0dza8R7UOTaEXpUHmGJpP0te2l2pA9EWlpL&#xA;alTvXkZLm65V9qYqw3zLZfmQvmrUL7Q1me0W1j/RUTSxm1N2IZw/rRvcxH0izRA0jLVHJTsQyqVr&#xA;rv55zPdR2Wkws1s0cUpvI47cFzaW8hNufWZZlFzJMsh5BeCgIxauKovUJfztjluZ7CCCZpPrBtop&#xA;Fg4RiOWYWyMPrKcvUjWJnYUPxEbU2Vbub788DM8UFhbLAKLHdH6uXKi8CF2jM9Fka0q9KlQae4Kr&#xA;dzdeboLPRrjzEhivU8wW8it+5Ma280EgkVPRdzSNXdTy7jbkNzDIaHxH3uTpYiUiD/Nl/uTX2sj1&#xA;3QNWl86eXNf0+4dLa0+tWesWS0CzW9xEWikZiw/uJ41+Gm/L23m4yzzCbgeefKYEx9B2vucBVacl&#xA;tTxYNTl+0e+KsqxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpD5n8j+XfMxjOrx3L+&#xA;lDNbD6te3llygueHrRSfVJYPUR/SWqvUbYqp+bh5tSC1XyytZgt0swf0TGP9El+rFjKeVRdel9nt&#xA;XlirtG0XV5LBrnWLydtTvLJbee3dwYYn+MlhFERDzPIBio7bGmKpZF5c89x+WP0At7pSxCzNisyW&#xA;1wpC+l6XPj61K98jKNghsw5OCYlz4SD8lmt6xr+nWnp32qaNbxFhG0a29zIaKpkdTGkrEIIo2Lml&#xA;FQEmgGSayUHY6Vd3V7e6dZzaO9zpRjS9hSO+AhMic0Un1+P2N6A7YqoS2syata2H1zSGurlJDDbx&#xA;RX8gfipfd0mZVbjE/FSatQ0rTFURYaXqF/pp1K3fSxZqZQ7ywahCyGB2jlDpLMjqUeNgeQ7Yql9n&#xA;KtwbBor3S5BrTzDTVa21JK/VisUqkNKDHxk2/eU+I0HbFUx1nS7/AEXTpNR1KTSoLOIqHkEOoSGr&#xA;sEWiRzMx+Jh0GKrbLSNTlvH0xJdMlvLeGOWRmt9QVXjcfDIkhmEbg/5DGh2xVDa9ouoRyW+jS3el&#xA;WepaqsqafItveysCgAdgTKyJtIFqxFa0HXIyjYpsw5OCYl3FkGkat5q1i1e60zUNIubZJpbcyrb3&#xA;QUyQOY5ApMo5AMpow2PUEjJNavHonmi61/TdR1W5sDb6aZmjjtYJllZpojF9uSVwF3r9nFWTYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUqv/Knlu/dnutOgeV25yTKgSRj&#xA;QqeTpxZgysVYE0ZSQagkYqv03y3oem3Fzc2NnHDcXqot5MAS8wjBCmRmJLt8Rqx3PU1xVRPlDy19&#xA;ZguY9Pit57bl6D24MHEsCCw9Ip8VGYA9QGYDZjVVIPL3mXy3bjW9As7E2uieW0lW5ZmZ6ENI8qmN&#xA;qsVYBmQqzcqMDxIpiqBsdQ/L6zvpYIdKube48tR3F0BI3wxbKz8A0zCQzSswBFQ0sb1PJK4qyNdS&#xA;8r+b4brSSpvbMLG8p+JY3KyHZHUglo5Ixyp4jrXFUzs9C0uzvpb63iK3UyCKSRpJH+BSWVQHZgAC&#xA;dqDFWtT8v6Rqc9vcXtuJbi0Ei2swZ0eMTKFk4shUjkFH0gHqMVX6Tomk6PbvbaXaR2dvJI8zQwqE&#xA;T1JPtMFGwr7YqjcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;diqSz+TvL0txbzraJbm3rSO3AhRwZPVpKqBQ451ND/M38xqq3f8Ak7y5elTJZJHT1OfoD0S4mSZG&#xA;DmPiW/3rlYb7MxYbnFUda6VYWs7T28KxyNEkHw7ARozuAFHwj4pGJoN+/QYqi8VdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSLzTp/mW7fTH0O7S3+rXcc17HI7RiWBHVn&#xA;SqpLXkgZKEU+LlX4cVSa50z8wrfU49SGp266Ta3d7c3FgWkkaS1ktSIF58E3in39OlKb8j0xVEaD&#xA;B561DRLC/uNdtkmu7eKd40sPhUyoHKis5rSuKoyXS/O4Uenr1uzclBBsAPhLDkf77stcVXforzl/&#xA;1MEH/SAP+q2KrTpfnf1VA1639IqxZvqAqGqOIp63cVxVd+ivOX/UwQf9IA/6rYqtTS/O5aTnr1uF&#xA;DUjIsBuvEbn99/NXFV36K85f9TBB/wBIA/6rYqth0vzuYkMuvW6ylQXUWAIDU3APreOKul0vzuFH&#xA;p69bs3JQQbAD4Sw5H++7LXFWLal5r80afqt9YNqX1p7WWO2hjtbBGmmmNo99KAkk8SBY7dAa86sa&#xA;qBWlVUboHmHzZLrllb3t9b3FtJf3+m3lutsY2VrOOR0kSX1DXmFQkcNqkV2rirPsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVSPzXqfmGwi059Fs1vTNexQ3ylHcpbMGLuoRl4moUcj&#xA;UCu4OKpFqHmLzTLPPCLMjS5Jp4g7WNyjmzNlFKkjSNJxjdJ5HjbklGA24kfEqyHycZT5T0b1VVW+&#xA;pW1ArFhT0VpuQuKqU3mS8N9NFY6f9ctbaQwyyidI5nkUVlFvE4CyiKoDkuu9QKkZUZm9hYcwaaAi&#xA;OKXDKW4FbV5npfTY/Bc/mu0jX1ZrG/hth/e3MlrIEj93FOfEd248R40w+KO4/JA0cjsJRJ7uIf2f&#xA;Dmk1j+amj3EkUt1ZXWnaLcuyWnmC79FNPmrUwMkwkY8Z0RmRmUDoDQsoNjiEM0BBFRuD0OKuxV2K&#xA;uxV2KpZeeV/Lt7cTz3unQXb3PpmZbhBKjNCroj+m/JA4SVl5AciuxNAMVSe+0+Cw8y+XLe0gWK2e&#xA;6vp2bmzO000EskjNyBryZia8sVZXirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqS&#xA;+ZfNen+Xv0d9cjkcaleR2URj4/C8vRm5MtQPBasewOKpHqv5jaT9dn0I2831meS6s45VMLx1htYL&#xA;j1PhkLFXS8SlASN+QFMVTvytdwp5M0u5bkI4dPgZ+SlDRIFJ2fjgJpMY2QB1efrbXMN9ZeY/TkuJ&#xA;PKlnZXdzBH8TFtTFzJrBVajkTHNFNx+0TGABuKwxCohyNbK80q5A0PcNh9gZr5vv3vNKs9J06Q+v&#xA;5lf6pDdRGhitniaW4uFYdCsCt6Z/34U8cscZUbQ20Vj+hbFZ9JnX073RUKIo24iS3WQpECRtIhIV&#xA;uuzV5VGJibHLu/U5kckcseHIakOUvLulW/uPTly5R62g/MTQ7X6p5d01J9JhLrZ6dqRhSaCNiSqR&#xA;zwXMiPHDWkcbICVHH1F64eM9x+z9bHwIf6pH5S/4n9CbeVvOF5dam+jaz6Q1Aqz2s8MT2yyGOnrQ&#xA;PBLJM0U0XNW4+owdCHQkcuMozEmrNhljNHryPQjy/HvZbkmp2KuxV2Ksd12Vf8V+WoqNyE101eLc&#xA;afVJP2qca+1cVZFirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYl5w80a3pl/Bp+nWq&#xA;8btE/wByssbyW9o7SFOU4rCjq2wVFlDk4qnmoanpmnx2KavPEJrmaO3gYoQHuGBA4r8fCu/U7eOK&#xA;pNqHmnyZW40uK6t11J/rUEMCoQxmgiIlCnjT4fsFq0r8NaimKtFmT8q+Skhl0KqkdaizyvL9B9xc&#xA;nRC88P68fvV/KkcUl95mmChreXU/RhB3Hp21lbW7pvXYTRyZY45Nsf8Ay7W4udVW1uUkRvJmnroJ&#xA;9QEcrh3DSvU/a5W1rayq3hJ23GKHomKuxVjPnLyRa+YbcyQyiy1ZF/0a+CByrqGEb02POMuTG6kM&#xA;prvQsrQlDexsXJxZ6jwSHFD7j3j9PQ/KozD5aR55pvOkr2Xmu7kKW3mXTi9tCqGL0I4LaYO7RJ+2&#xA;YpiA8hLAHagGStpbfcyOl4heM8Y7uUh8P0i/OmXeUtdub+0k0/VOMfmLS+EGrwLsGenwXMS/75uA&#xA;OcZ7bqfiVgLHET7FXYqx/Xv+Um8s/wDGe6/6hJMVZBirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVef+d9eNvrsenfUPQvblUi0/WRM0HHkRvK4ktEMQkanpev6jEErG+KsrvfLtjqlpYR6&#xA;ygu7ixeOdJUaSH9/GtC44MDxJ34EkeNcVSi//L7yhB6urR2H+5G1W6nguWmndlkuEJlPxOQQzDlQ&#xA;7ciW6knFVJ09D8p1W2tnkLaRGDbW0fKSTnbqGVEHVmB2yGQXEhyNJIRyxkehv5Jx5O0290/y9bw3&#xA;6hL+Z57y9jBDBJ7yd7mVARseLzFdtvDJuOnOKuxV2KuxVZPBBcQvBPGs0EqlJIpFDIynYhlOxBwE&#xA;WyjIxNg0QwrW/K0mn3VvqNpPeJa2oMaXNmVe+soWILonrJMtzatxBaGRGKU5J0AWreHnH7nMBjn2&#xA;NRyd/IS9/cfPketc1dvKlwNOk1Ty7r99Lq80bzR3k1ylxbXjlaxrLAytbJGTQVt44yF6EZaCDuHD&#xA;lExNEUQn/l/XrfWrD6zHFLbTxt6N5ZXCFJrecKGaKRT3AYEEfCwIKkgg4WKX67DD/ivy1NwX1TNd&#xA;KZKDlT6pJtXrTFWRYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXEAihFR4HFUj80+V&#xA;114abW5Nu2m3kV9GeHMM0Vabcl4tvs3bfFWK3H5Wi2v5Nek1WSWeCbUL5oBHxiZr1QzDiZGHJOJR&#xA;XNSEPH3xVEeVND0u4071ZdMt9RuY9P04RC6CyHe2B4+pKJCo3wFlEAnc0Ezi0G3aRFk8o6YkZIDu&#xA;DAxAruaeiK0yNy7m848VbSP+l/agPzC0S307y61zoGh2cl8JFBRNPFxIY6EkIsUNwQ1QKFoyvY8a&#xA;8lm4zEDrmqWk5hk/L+O8jSVhJMdLnjbgWuSOCxWs0Z4rbxr9sisimpGKrrzX76Ga5li/LxpPqkEq&#xA;fUl0qQrNciWzRSs31fdVEtxQoSGC17Yq2da1OJ5ZP8AR3IP1horYaZNFwVf3kCvJ9Wk5PIOMfwbB&#xA;mq1ArUVZb5Qt9O1ibU4tT8oW2mfU52S1kksyizRCWWJXHqwxipEIf4Cwoy7+KrJPKf8Ayiujf8wN&#xA;t/yZXFUNc2F7pFy9/o8Rns5TyvtIUhasTVp7atFWTcl02D9dmryqMTE2OXd+pzY5I5Rw5DUhyl+i&#xA;Xl3Hp7uRVo+t6R/jy6jtLlCmu2iym3NY5FvdPPpzCSJwrrLJbyxfCwrxiJ6DJxmJcnHy4J4/qHP5&#xA;H3HkUx12Jf8AFflqWrcjNdLTk3Gn1ST9mvGvvTJNTIsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVSHzTD5qeTS30CVUSK7jfUom4AyWwYGRKyK32k5KKUPIqagA4qxie2/NNdSkmvJ4&#xA;ZNAN1qD3EAaL1BZvBKLUVVF2QmOq1LFgxJpTFUy8ky3kGjvIkX1y4Ww04xwx0i5/6MKLWRioPuTi&#xA;qbQ635jeaNJPLs0UbMA8pubUhQTuxAck09sVQ35haxrek6At1o3H661zBF+8ikmX03ajkrErsKLv&#xA;WhpirD3/ADk1211CLTJPLj3kpaGGK4ja6he7Z7Z53eGB7Q0oY+BUyfC+zMFozKoz/lZ3m24ty0fl&#xA;V7JkE8koupZxII4DbUVI1tSHkk+tMvHkKFG3NMVQh/OPzSsMrnyVPNIOXoJb3Ez14xwyVkL2kZQH&#xA;6wEXiGJZWFKCuKplo/5keZdT8022mP5eex043NxBc3jfWJqohnS3dWEMaoXNsWYNVeLL8WKsu8p/&#xA;8oro3/MDbf8AJlcVTXFUg83eTdN8xWRDf6Lq0H7zTNWiFLi2uEqYpFYULBW3KH4W6EZExB36tsM0&#xA;ojh/hPT8dfNjGgea28yXnlO6maKLUoJLiHWNPUUkguxZycx9okRv9qOo+JCDhibFoyw4JGPcXo2F&#xA;rdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSLzZrmr6THpr6bpz6j9avora7EaSOY&#xA;oHVi0tI1YihUDk3wiu58VWNXfnbzFNfTWNxpElppk0s9uLya3ukURESRxSPKyLHHyKxtVtv3oXb0&#xA;5CFVHy/ca6thAsGla1Bd21vb2WopZTaDLELi1iCMP3txK6n2JHyxVFXus+ZbYIHt9ehdzVRNJ5bT&#xA;kifHLxrKKlYwzfr2xVWg1TzLPCk0Fp5hlhkAaOVH8tsrKehDCWhGKoKfXtXXUFili1lZYKK6SS+W&#xA;RMkk5CwgAzVX1PiA/m7YqmH13zX/AMsHmT/gvLn/AFVxVA2fmTWrqYxwrrUxkLG2SGby07MkYAfY&#xA;TGpV6g06YqirjVfMdtC89xa+YYYIxWSWR/Laoo8SxlAGKonQfM17HpltY23lrUZ/qMMMEnpXGkyc&#xA;Ssa8a0vu60Ir2xVXvvOmpWixCXy1fwPNKkcQnuNJQOSasqVvxVuNaAYqq23m/UbqBLi28salPBJu&#xA;ksU+kujAGmzLfkHFUplunfzPo1xJoT6Fb2TTS3l1eS6cgMckUkUYAt7maQ1nnHVaVY9ziAkyJNln&#xA;WKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgNf0a31rSLnS7iSSGG6UK8sPD1&#xA;Fowaq+osi127qcVUNA8tWGh/X/qjyv8ApC6kvJfVZTxaT9hOKr8I7Vq3iTiq3zH5Xs9eFr9Zmkha&#xA;zM7RNEsDV+sW0tq4YTxzKV4Tk8aUJA5VG2Ko3SNNj0zTbfT4pZJ47ZBGss7BpGA7sQFH3ADwxVj+&#xA;uflzpetay2qXt9eFj6XC1QwLDGI0eNuH7kyD1UlYOedTtQjivFVO73zDodjfLYXd9DBevC9ytu7A&#xA;OYYwzPIF/lUIanFWAaJL+XGg31vqk/m5vrB9SUw30llA1Z+VY5hDBBJ8BfisbtRSoUD4KBVnhlsf&#xA;MGmXUNtcOkfqSW0sqKnNHhfi3ESo69qq3E7EEdjiqA8n+RNH8qRSRabJPIkkUMAE7I3GOAyMoHBE&#xA;rV53Ylqnen2QAFUV5m8sWvmG1t7a5uJreO3uIrpTAISzPA4kQEzRy/DzUE8aV6dMVRGgaLBoukwa&#xA;ZBNLPDBz4STlS9Hdn4/AqIFXlxVVUBVAA6YqkPmn8sfL/mTUJ7+9nvIp7i0+oyrDKPTMQcOPgkWR&#xA;QRQjYU+ImnL4sVZdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;iqS3/wDhv9KXn13/AHs/Rx+u8vV9P6hzevL/AHV9rl/lde2KsMuf+VRfouH699a+p8d+f6R9Pl9Y&#xA;i9Tn6X7rl9c4ep29WtfirirMfJ/6B/RUn6F9T6r9Zn9T1/U9T1fUPLl6vx0pTjX9mmKp5irsVdir&#xA;sVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2.777778</stDim:w>
            <stDim:h>5.916667</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -415.665 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 415.665 li
454 415.665 li
454 0 li
cp
clp
[1 0 0 1 0 0 ]ct
298.3 103.824 mo
448.96 103.824 li
448.96 .75 li
298.3 .75 li
298.3 103.824 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
298.3 103.79 mo
449 103.79 li
449 .689941 li
298.3 .689941 li
298.3 103.79 li
cp
clp
1.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
312.182 6.83203 mo
331.095 13.1509 li
342.159 17.1348 li
365.278 24.9019 li
372.136 27.1147 li
375.011 28.2349 li
382.169 31.814 li
386.074 34.1338 li
391.049 37.5791 li
398.899 43.52 li
405.882 49.563 li
412.837 56.1816 li
418.926 62.439 li
421.527 65.1699 li
432.755 78.1221 li
443.041 90.5879 li
445.415 93.23 li
448.537 96.3369 li
450.321 97.7939 li
451.995 98.958 li
454.479 100.317 li
456.89 101.309 li
459.229 102.029 li
462.067 102.659 li
464.942 103.071 li
467.542 103.222 li
467.726 103.224 li
467.726 103.224 li
0 .993988 1 0 cmyk
@
305.506 21.4287 mo
324.42 21.8457 li
335.483 23.3828 li
343.333 24.9658 li
349.422 26.6509 li
354.397 28.2598 li
362.246 31.2607 li
370.936 35.3008 li
373.311 36.6167 li
375.494 37.998 li
377.517 38.8887 li
379.399 39.9307 li
381.16 41.0601 li
384.374 42.9487 li
388.58 45.708 li
389.85 46.5137 li
391.063 47.5356 li
392.224 48.1558 li
393.337 48.915 li
395.438 50.0605 li
397.388 51.7427 li
398.313 52.4907 li
399.207 53.0146 li
400.913 54.2378 li
401.728 54.668 li
405.472 58.0649 li
406.162 58.3027 li
406.836 58.7349 li
407.493 59.5298 li
408.135 60.0908 li
408.763 60.4248 li
413.841 64.6787 li
414.352 65.0391 li
414.852 65.6558 li
416.301 66.8018 li
416.768 67.4019 li
417.677 68.0488 li
418.12 68.5908 li
418.558 68.7349 li
419.41 69.6221 li
420.237 70.4971 li
420.642 70.667 li
421.433 71.4219 li
421.819 72.062 li
422.577 72.4009 li
423.676 73.2437 li
424.385 74.0747 li
424.732 74.2271 li
425.075 74.7197 li
425.414 74.9131 li
430.613 79.8896 li
430.891 79.98 li
431.164 80.4658 li
431.437 80.4468 li
431.972 80.8618 li
432.495 81.6997 li
433.01 82.2368 li
436.365 85.0308 li
436.59 85.4297 li
436.813 85.584 li
437.034 85.2656 li
437.47 86.4028 li
438.74 87.3916 li
439.15 87.6958 li
439.354 87.8267 li
440.15 88.8818 li
440.345 88.855 li
441.49 90.2788 li
441.676 90.1978 li
442.229 90.6489 li
442.589 91.2979 li
442.946 91.271 li
444.328 92.8286 li
444.496 92.7417 li
444.828 93.2847 li
444.993 93.2139 li
445.32 93.6069 li
445.803 94.0381 li
445.962 94.3877 li
446.12 94.397 li
446.589 94.7427 li
447.354 94.7798 li
447.654 94.9097 li
447.802 94.854 li
447.95 95.4189 li
448.244 95.563 li
449.387 97.0171 li
449.941 97.3076 li
450.35 97.9551 li
450.484 97.9868 li
450.618 97.8369 li
450.751 98.1309 li
451.017 98.1021 li
451.796 98.5737 li
451.924 98.9058 li
452.177 98.939 li
452.429 99.189 li
452.554 99.0498 li
453.048 99.5518 li
453.291 99.3589 li
453.412 99.3389 li
453.533 99.689 li
453.772 99.3677 li
454.009 100.131 li
454.362 100.373 li
454.594 100.518 li
454.709 100.557 li
454.824 100.455 li
455.052 100.727 li
455.166 100.752 li
455.279 100.892 li
455.615 100.807 li
455.727 101.108 li
455.837 100.388 li
455.947 97.2979 li
456.166 101.157 li
456.6 101.412 li
456.707 101.324 li
456.813 101.492 li
456.92 101.375 li
457.131 90.522 li
457.341 101.451 li
457.446 101.544 li
457.653 102.022 li
457.756 102.085 li
458.063 101.767 li
458.267 102.039 li
458.367 102.006 li
458.568 102.224 li
459.161 102.32 li
459.259 102.493 li
459.356 102.414 li
459.549 102.522 li
459.646 102.247 li
460.122 102.779 li
460.216 102.632 li
460.404 102.748 li
460.59 102.651 li
460.775 102.541 li
460.867 102.372 li
460.959 102.543 li
461.05 102.464 li
461.232 102.257 li
461.592 102.319 li
461.682 102.316 li
461.859 102.085 li
461.948 102.085 li
462.211 101.526 li
462.299 101.609 li
462.56 100.397 li
462.987 97.6768 li
463.493 99.0098 li
463.907 102.674 li
464.071 103.02 li
464.152 102.9 li
464.315 103.071 li
464.477 102.89 li
464.557 103.088 li
464.636 103.03 li
464.716 103.186 li
464.796 103.011 li
464.955 103.191 li
465.034 103.226 li
465.112 103.486 li
465.191 103.437 li
465.27 103.241 li
465.425 103.477 li
465.734 103.553 li
465.812 103.393 li
465.888 103.453 li
466.04 103.274 li
466.116 102.666 li
466.268 103.526 li
466.342 103.392 li
466.417 103.486 li
466.716 103.202 li
466.79 103.326 li
466.938 102.858 li
467.011 101.602 li
467.23 102.724 li
467.303 102.659 li
467.447 102.946 li
467.663 103.177 li
467.877 103.376 li
468.089 103.932 li
468.44 103.958 li
468.923 104.077 li
468.991 103.872 li
469.06 103.905 li
469.127 104.168 li
469.195 104.044 li
469.262 103.971 li
469.33 104.128 li
469.4 104.03 li
0 0 0 1 cmyk
@
grestore
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
304.389 .75 mo
304.389 4.75 li
304.389 103.824 mo
304.389 99.8237 li
0 0 0 1 cmyk
@
297.456 115.95 mo
297.456 115.534 li
298.472 115.534 li
298.472 110.686 li
297.296 111.446 li
297.296 110.934 li
298.72 110.014 li
299.256 110.014 li
299.256 115.534 li
300.272 115.534 li
300.272 115.95 li
297.456 115.95 li
297.456 115.95 li
cp
ef
303.904 116.054 mo
303.264 116.054 302.768 115.79 302.416 115.262 cv
302.064 114.734 301.888 113.998 301.888 113.038 cv
301.888 112.086 302.064 111.342 302.416 110.814 cv
302.768 110.286 303.264 110.014 303.904 110.014 cv
304.536 110.014 305.032 110.286 305.384 110.814 cv
305.736 111.342 305.92 112.086 305.92 113.038 cv
305.92 113.998 305.736 114.734 305.384 115.262 cv
305.032 115.79 304.536 116.054 303.904 116.054 cv
303.904 116.054 li
cp
303.904 115.678 mo
304.304 115.678 304.6 115.462 304.8 115.022 cv
304.992 114.59 305.096 113.926 305.096 113.038 cv
305.096 112.158 304.992 111.494 304.8 111.054 cv
304.6 110.622 304.304 110.398 303.904 110.398 cv
303.504 110.398 303.2 110.622 303.008 111.054 cv
302.808 111.494 302.712 112.158 302.712 113.038 cv
302.712 113.926 302.808 114.59 303.008 115.022 cv
303.2 115.462 303.504 115.678 303.904 115.678 cv
ef
307.184 107.961 mo
307.396 107.883 307.598 107.821 307.794 107.776 cv
307.99 107.737 308.175 107.715 308.348 107.715 cv
308.746 107.715 309.06 107.804 309.283 107.972 cv
309.507 108.146 309.619 108.387 309.619 108.689 cv
309.619 108.936 309.541 109.143 309.384 109.305 cv
309.228 109.473 309.009 109.585 308.729 109.641 cv
309.065 109.691 309.323 109.814 309.507 110.011 cv
309.692 110.207 309.788 110.458 309.788 110.767 cv
309.788 111.147 309.659 111.438 309.401 111.64 cv
309.144 111.842 308.779 111.942 308.298 111.942 cv
308.085 111.942 307.872 111.92 307.67 111.875 cv
307.469 111.836 307.268 111.769 307.066 111.674 cv
307.066 110.878 li
307.374 110.878 li
307.391 111.147 307.48 111.343 307.637 111.478 cv
307.794 111.612 308.018 111.679 308.309 111.679 cv
308.589 111.679 308.808 111.601 308.97 111.438 cv
309.126 111.276 309.21 111.052 309.21 110.772 cv
309.21 110.453 309.126 110.212 308.958 110.044 cv
308.791 109.882 308.55 109.798 308.23 109.798 cv
307.973 109.798 li
307.973 109.518 li
308.107 109.518 li
308.427 109.518 308.667 109.456 308.824 109.322 cv
308.981 109.188 309.065 108.991 309.065 108.723 cv
309.065 108.487 308.998 108.303 308.869 108.174 cv
308.734 108.051 308.55 107.983 308.303 107.983 cv
308.057 107.983 307.861 108.045 307.727 108.163 cv
307.592 108.28 307.514 108.454 307.491 108.678 cv
307.184 108.678 li
307.184 107.961 li
307.184 107.961 li
cp
ef
367.218 .75 mo
367.218 4.75 li
367.218 103.824 mo
367.218 99.8237 li
@
360.336 115.95 mo
360.336 115.534 li
361.352 115.534 li
361.352 110.686 li
360.176 111.446 li
360.176 110.934 li
361.6 110.014 li
362.137 110.014 li
362.137 115.534 li
363.152 115.534 li
363.152 115.95 li
360.336 115.95 li
360.336 115.95 li
cp
ef
366.784 116.054 mo
366.145 116.054 365.648 115.79 365.297 115.262 cv
364.944 114.734 364.768 113.998 364.768 113.038 cv
364.768 112.086 364.944 111.342 365.297 110.814 cv
365.648 110.286 366.145 110.014 366.784 110.014 cv
367.416 110.014 367.912 110.286 368.264 110.814 cv
368.616 111.342 368.801 112.086 368.801 113.038 cv
368.801 113.998 368.616 114.734 368.264 115.262 cv
367.912 115.79 367.416 116.054 366.784 116.054 cv
366.784 116.054 li
cp
366.784 115.678 mo
367.184 115.678 367.48 115.462 367.68 115.022 cv
367.872 114.59 367.977 113.926 367.977 113.038 cv
367.977 112.158 367.872 111.494 367.68 111.054 cv
367.48 110.622 367.184 110.398 366.784 110.398 cv
366.385 110.398 366.08 110.622 365.889 111.054 cv
365.688 111.494 365.592 112.158 365.592 113.038 cv
365.592 113.926 365.688 114.59 365.889 115.022 cv
366.08 115.462 366.385 115.678 366.784 115.678 cv
ef
372.438 111.87 mo
370.58 111.87 li
370.58 111.579 li
371.234 111.579 li
371.234 110.778 li
369.453 110.778 li
369.453 110.481 li
371.24 107.715 li
371.783 107.715 li
371.783 110.487 li
372.562 110.487 li
372.562 110.778 li
371.783 110.778 li
371.783 111.579 li
372.438 111.579 li
372.438 111.87 li
372.438 111.87 li
cp
371.234 110.487 mo
371.234 108.314 li
369.84 110.487 li
371.234 110.487 li
ef
430.047 .75 mo
430.047 4.75 li
430.047 103.824 mo
430.047 99.8237 li
@
423.216 115.95 mo
423.216 115.534 li
424.232 115.534 li
424.232 110.686 li
423.057 111.446 li
423.057 110.934 li
424.48 110.014 li
425.017 110.014 li
425.017 115.534 li
426.032 115.534 li
426.032 115.95 li
423.216 115.95 li
423.216 115.95 li
cp
ef
429.664 116.054 mo
429.024 116.054 428.528 115.79 428.176 115.262 cv
427.824 114.734 427.648 113.998 427.648 113.038 cv
427.648 112.086 427.824 111.342 428.176 110.814 cv
428.528 110.286 429.024 110.014 429.664 110.014 cv
430.296 110.014 430.792 110.286 431.145 110.814 cv
431.496 111.342 431.681 112.086 431.681 113.038 cv
431.681 113.998 431.496 114.734 431.145 115.262 cv
430.792 115.79 430.296 116.054 429.664 116.054 cv
429.664 116.054 li
cp
429.664 115.678 mo
430.064 115.678 430.36 115.462 430.561 115.022 cv
430.752 114.59 430.856 113.926 430.856 113.038 cv
430.856 112.158 430.752 111.494 430.561 111.054 cv
430.36 110.622 430.064 110.398 429.664 110.398 cv
429.265 110.398 428.96 110.622 428.769 111.054 cv
428.568 111.494 428.473 112.158 428.473 113.038 cv
428.473 113.926 428.568 114.59 428.769 115.022 cv
428.96 115.462 429.265 115.678 429.664 115.678 cv
ef
434.977 107.788 mo
434.977 108.235 li
433.106 108.235 li
433.106 109.406 li
433.196 109.339 433.309 109.294 433.437 109.26 cv
433.561 109.227 433.706 109.21 433.862 109.21 cv
434.3 109.21 434.646 109.333 434.904 109.58 cv
435.162 109.826 435.291 110.156 435.291 110.576 cv
435.291 111.013 435.162 111.349 434.904 111.584 cv
434.646 111.825 434.282 111.942 433.817 111.942 cv
433.627 111.942 433.437 111.92 433.241 111.875 cv
433.039 111.836 432.838 111.769 432.636 111.674 cv
432.636 110.878 li
432.944 110.878 li
432.961 111.142 433.045 111.343 433.19 111.478 cv
433.336 111.612 433.549 111.679 433.817 111.679 cv
434.104 111.679 434.321 111.584 434.479 111.394 cv
434.636 111.204 434.714 110.935 434.714 110.576 cv
434.714 110.224 434.636 109.955 434.484 109.764 cv
434.327 109.574 434.109 109.479 433.817 109.479 cv
433.649 109.479 433.504 109.512 433.381 109.568 cv
433.258 109.624 433.146 109.714 433.051 109.837 cv
432.815 109.837 li
432.815 107.788 li
434.977 107.788 li
434.977 107.788 li
cp
ef
448.96 .75 mo
448.96 2.75 li
448.96 103.824 mo
448.96 101.824 li
427.172 .75 mo
427.172 2.75 li
427.172 103.824 mo
427.172 101.824 li
423.958 .75 mo
423.958 2.75 li
423.958 103.824 mo
423.958 101.824 li
420.314 .75 mo
420.314 2.75 li
420.314 103.824 mo
420.314 101.824 li
416.108 .75 mo
416.108 2.75 li
416.108 103.824 mo
416.108 101.824 li
411.133 .75 mo
411.133 2.75 li
411.133 103.824 mo
411.133 101.824 li
405.044 .75 mo
405.044 2.75 li
405.044 103.824 mo
405.044 101.824 li
397.195 .75 mo
397.195 2.75 li
397.195 103.824 mo
397.195 101.824 li
386.131 .75 mo
386.131 2.75 li
386.131 103.824 mo
386.131 101.824 li
364.343 .75 mo
364.343 2.75 li
364.343 103.824 mo
364.343 101.824 li
361.129 .75 mo
361.129 2.75 li
361.129 103.824 mo
361.129 101.824 li
357.485 .75 mo
357.485 2.75 li
357.485 103.824 mo
357.485 101.824 li
353.279 .75 mo
353.279 2.75 li
353.279 103.824 mo
353.279 101.824 li
348.305 .75 mo
348.305 2.75 li
348.305 103.824 mo
348.305 101.824 li
342.216 .75 mo
342.216 2.75 li
342.216 103.824 mo
342.216 101.824 li
334.366 .75 mo
334.366 2.75 li
334.366 103.824 mo
334.366 101.824 li
323.302 .75 mo
323.302 2.75 li
323.302 103.824 mo
323.302 101.824 li
301.514 .75 mo
301.514 2.75 li
301.514 103.824 mo
301.514 101.824 li
298.3 .75 mo
298.3 2.75 li
298.3 103.824 mo
298.3 101.824 li
@
364.99 123.897 mo
364.567 123.897 li
364.559 123.681 364.495 123.51 364.379 123.393 cv
364.252 123.285 364.081 123.222 363.848 123.222 cv
363.541 123.222 363.334 123.312 363.208 123.474 cv
363.082 123.636 363.028 123.933 363.028 124.356 cv
363.028 124.959 li
364.333 124.959 li
364.333 125.427 li
363.028 125.427 li
363.028 129.162 li
364.063 129.162 li
364.063 129.63 li
361.444 129.63 li
361.444 129.162 li
362.219 129.162 li
362.219 125.427 li
361.444 125.427 li
361.444 124.959 li
362.219 124.959 li
362.219 124.374 li
362.219 123.852 362.354 123.465 362.623 123.195 cv
362.893 122.925 363.289 122.79 363.82 122.79 cv
364.018 122.79 364.207 122.808 364.405 122.844 cv
364.604 122.88 364.792 122.934 364.99 123.006 cv
364.99 123.897 li
364.99 123.897 li
cp
ef
370.231 131.025 mo
369.512 130.701 368.971 130.197 368.611 129.513 cv
368.251 128.829 368.071 127.956 368.071 126.912 cv
368.071 125.868 368.251 125.004 368.611 124.311 cv
368.971 123.618 369.512 123.114 370.231 122.79 cv
370.231 123.222 li
369.781 123.537 369.457 123.978 369.26 124.536 cv
369.061 125.103 368.963 125.895 368.963 126.912 cv
368.963 127.938 369.061 128.73 369.26 129.288 cv
369.457 129.846 369.781 130.278 370.231 130.593 cv
370.231 131.025 li
370.231 131.025 li
cp
ef
371.215 129.63 mo
371.215 129.162 li
372.052 129.162 li
372.052 123.537 li
371.215 123.537 li
371.215 123.069 li
373.78 123.069 li
373.78 123.537 li
372.943 123.537 li
372.943 125.805 li
376.345 125.805 li
376.345 123.537 li
375.508 123.537 li
375.508 123.069 li
378.073 123.069 li
378.073 123.537 li
377.236 123.537 li
377.236 129.162 li
378.073 129.162 li
378.073 129.63 li
375.508 129.63 li
375.508 129.162 li
376.345 129.162 li
376.345 126.345 li
372.943 126.345 li
372.943 129.162 li
373.78 129.162 li
373.78 129.63 li
371.215 129.63 li
371.215 129.63 li
cp
ef
379 129.63 mo
379 129.252 li
381.925 125.427 li
379.612 125.427 li
379.612 126.237 li
379.145 126.237 li
379.145 124.959 li
382.969 124.959 li
382.969 125.337 li
380.044 129.162 li
382.582 129.162 li
382.582 128.316 li
383.05 128.316 li
383.05 129.63 li
379 129.63 li
379 129.63 li
cp
ef
384.079 131.025 mo
384.079 130.593 li
384.529 130.278 384.854 129.846 385.051 129.288 cv
385.249 128.73 385.349 127.938 385.349 126.912 cv
385.349 125.895 385.249 125.103 385.051 124.536 cv
384.854 123.978 384.529 123.537 384.079 123.222 cv
384.079 122.79 li
384.79 123.114 385.33 123.618 385.69 124.311 cv
386.05 125.004 386.239 125.868 386.239 126.912 cv
386.239 127.956 386.05 128.829 385.69 129.513 cv
385.33 130.197 384.79 130.701 384.079 131.025 cv
384.079 131.025 li
cp
ef
448.96 94.085 mo
444.96 94.085 li
298.3 94.085 mo
302.3 94.085 li
@
277.536 97.23 mo
277.536 96.814 li
278.552 96.814 li
278.552 91.9658 li
277.376 92.7256 li
277.376 92.2139 li
278.8 91.2939 li
279.336 91.2939 li
279.336 96.814 li
280.352 96.814 li
280.352 97.23 li
277.536 97.23 li
277.536 97.23 li
cp
ef
283.984 97.334 mo
283.344 97.334 282.848 97.0698 282.496 96.542 cv
282.144 96.0137 281.968 95.2778 281.968 94.3179 cv
281.968 93.3657 282.144 92.6216 282.496 92.0938 cv
282.848 91.5659 283.344 91.2939 283.984 91.2939 cv
284.616 91.2939 285.112 91.5659 285.464 92.0938 cv
285.816 92.6216 286 93.3657 286 94.3179 cv
286 95.2778 285.816 96.0137 285.464 96.542 cv
285.112 97.0698 284.616 97.334 283.984 97.334 cv
283.984 97.334 li
cp
283.984 96.958 mo
284.384 96.958 284.68 96.7417 284.88 96.3018 cv
285.072 95.8696 285.176 95.2061 285.176 94.3179 cv
285.176 93.438 285.072 92.7739 284.88 92.334 cv
284.68 91.9019 284.384 91.6777 283.984 91.6777 cv
283.584 91.6777 283.28 91.9019 283.088 92.334 cv
282.888 92.7739 282.792 93.438 282.792 94.3179 cv
282.792 95.2061 282.888 95.8696 283.088 96.3018 cv
283.28 96.7417 283.584 96.958 283.984 96.958 cv
ef
286.727 91.436 mo
288.126 91.436 li
288.126 91.8618 li
286.727 91.8618 li
286.727 91.436 li
286.727 91.436 li
cp
ef
290.13 89.2637 mo
289.873 89.2637 289.671 89.3584 289.537 89.5488 cv
289.397 89.7393 289.33 90.0083 289.33 90.3608 cv
289.33 90.7192 289.397 90.9883 289.537 91.1787 cv
289.671 91.3691 289.873 91.4585 290.13 91.4585 cv
290.388 91.4585 290.584 91.3691 290.724 91.1841 cv
290.858 91.0049 290.932 90.7417 290.932 90.3945 cv
290.932 90.0361 290.858 89.7563 290.724 89.5601 cv
290.584 89.3643 290.388 89.2637 290.13 89.2637 cv
290.13 89.2637 li
cp
291.021 91.3184 mo
290.898 91.4585 290.752 91.5596 290.595 91.6265 cv
290.438 91.6938 290.259 91.7275 290.063 91.7275 cv
289.655 91.7275 289.335 91.6099 289.1 91.3633 cv
288.865 91.1172 288.753 90.7866 288.753 90.3608 cv
288.753 89.9468 288.876 89.6162 289.134 89.3696 cv
289.386 89.1235 289.728 88.9946 290.153 88.9946 cv
290.612 88.9946 290.971 89.168 291.217 89.5098 cv
291.463 89.8569 291.586 90.3442 291.586 90.9824 cv
291.586 91.6992 291.436 92.248 291.144 92.6401 cv
290.853 93.0322 290.438 93.2227 289.907 93.2227 cv
289.761 93.2227 289.61 93.2061 289.453 93.1836 cv
289.296 93.1611 289.134 93.1221 288.966 93.0659 cv
288.966 92.3882 li
289.274 92.3882 li
289.296 92.5732 289.363 92.7129 289.487 92.814 cv
289.604 92.9146 289.761 92.9595 289.962 92.9595 cv
290.315 92.9595 290.579 92.8306 290.752 92.562 cv
290.92 92.293 291.01 91.8784 291.021 91.3184 cv
ef
448.96 80.1519 mo
444.96 80.1519 li
298.3 80.1519 mo
302.3 80.1519 li
@
277.536 83.3096 mo
277.536 82.8936 li
278.552 82.8936 li
278.552 78.0459 li
277.376 78.8057 li
277.376 78.2939 li
278.8 77.374 li
279.336 77.374 li
279.336 82.8936 li
280.352 82.8936 li
280.352 83.3096 li
277.536 83.3096 li
277.536 83.3096 li
cp
ef
283.984 83.4141 mo
283.344 83.4141 282.848 83.1499 282.496 82.6221 cv
282.144 82.0938 281.968 81.3579 281.968 80.3979 cv
281.968 79.4458 282.144 78.7017 282.496 78.1738 cv
282.848 77.646 283.344 77.374 283.984 77.374 cv
284.616 77.374 285.112 77.646 285.464 78.1738 cv
285.816 78.7017 286 79.4458 286 80.3979 cv
286 81.3579 285.816 82.0938 285.464 82.6221 cv
285.112 83.1499 284.616 83.4141 283.984 83.4141 cv
283.984 83.4141 li
cp
283.984 83.0376 mo
284.384 83.0376 284.68 82.8218 284.88 82.3818 cv
285.072 81.9497 285.176 81.2856 285.176 80.3979 cv
285.176 79.5176 285.072 78.854 284.88 78.4141 cv
284.68 77.9819 284.384 77.7578 283.984 77.7578 cv
283.584 77.7578 283.28 77.9819 283.088 78.4141 cv
282.888 78.854 282.792 79.5176 282.792 80.3979 cv
282.792 81.2856 282.888 81.9497 283.088 82.3818 cv
283.28 82.8218 283.584 83.0376 283.984 83.0376 cv
ef
286.727 77.5161 mo
288.126 77.5161 li
288.126 77.9419 li
286.727 77.9419 li
286.727 77.5161 li
286.727 77.5161 li
cp
ef
290.898 76.1328 mo
290.898 75.8867 290.831 75.6904 290.708 75.5508 cv
290.579 75.416 290.405 75.3433 290.181 75.3433 cv
289.957 75.3433 289.778 75.416 289.655 75.5508 cv
289.526 75.6904 289.464 75.8867 289.464 76.1328 cv
289.464 76.3848 289.526 76.5811 289.655 76.7153 cv
289.778 76.8555 289.957 76.9229 290.181 76.9229 cv
290.405 76.9229 290.579 76.8555 290.708 76.7153 cv
290.831 76.5811 290.898 76.3848 290.898 76.1328 cv
290.898 76.1328 li
cp
290.601 77.0571 mo
290.909 77.1016 291.15 77.2139 291.323 77.3984 cv
291.497 77.5889 291.586 77.8242 291.586 78.1152 cv
291.586 78.4961 291.463 78.793 291.223 78.9946 cv
290.976 79.2017 290.629 79.3027 290.181 79.3027 cv
289.728 79.3027 289.38 79.2017 289.139 78.9946 cv
288.893 78.793 288.775 78.4961 288.775 78.1152 cv
288.775 77.8242 288.859 77.5889 289.033 77.3984 cv
289.207 77.2139 289.447 77.1016 289.761 77.0571 cv
289.481 77.0122 289.274 76.9058 289.128 76.7432 cv
288.982 76.5864 288.91 76.3794 288.91 76.1328 cv
288.91 75.8081 289.022 75.5508 289.246 75.3604 cv
289.47 75.1699 289.783 75.0747 290.181 75.0747 cv
290.573 75.0747 290.887 75.1699 291.11 75.3604 cv
291.334 75.5508 291.452 75.8081 291.452 76.1328 cv
291.452 76.3794 291.374 76.5864 291.228 76.7432 cv
291.083 76.9058 290.87 77.0122 290.601 77.0571 cv
291.01 78.1152 mo
291.01 77.8242 290.937 77.6001 290.792 77.438 cv
290.646 77.2754 290.438 77.1914 290.181 77.1914 cv
289.918 77.1914 289.716 77.2754 289.571 77.438 cv
289.425 77.6001 289.352 77.8242 289.352 78.1152 cv
289.352 78.4067 289.425 78.6362 289.571 78.7988 cv
289.716 78.9609 289.918 79.0396 290.181 79.0396 cv
290.438 79.0396 290.646 78.9609 290.792 78.7988 cv
290.937 78.6362 291.01 78.4067 291.01 78.1152 cv
ef
448.96 66.2197 mo
444.96 66.2197 li
298.3 66.2197 mo
302.3 66.2197 li
@
277.536 69.3896 mo
277.536 68.9736 li
278.552 68.9736 li
278.552 64.126 li
277.376 64.8857 li
277.376 64.374 li
278.8 63.4536 li
279.336 63.4536 li
279.336 68.9736 li
280.352 68.9736 li
280.352 69.3896 li
277.536 69.3896 li
277.536 69.3896 li
cp
ef
283.984 69.4937 mo
283.344 69.4937 282.848 69.23 282.496 68.7017 cv
282.144 68.1738 281.968 67.438 281.968 66.4775 cv
281.968 65.5259 282.144 64.7817 282.496 64.2539 cv
282.848 63.7256 283.344 63.4536 283.984 63.4536 cv
284.616 63.4536 285.112 63.7256 285.464 64.2539 cv
285.816 64.7817 286 65.5259 286 66.4775 cv
286 67.438 285.816 68.1738 285.464 68.7017 cv
285.112 69.23 284.616 69.4937 283.984 69.4937 cv
283.984 69.4937 li
cp
283.984 69.1177 mo
284.384 69.1177 284.68 68.9019 284.88 68.4619 cv
285.072 68.0298 285.176 67.3657 285.176 66.4775 cv
285.176 65.5977 285.072 64.9336 284.88 64.4937 cv
284.68 64.0615 284.384 63.8379 283.984 63.8379 cv
283.584 63.8379 283.28 64.0615 283.088 64.4937 cv
282.888 64.9336 282.792 65.5977 282.792 66.4775 cv
282.792 67.3657 282.888 68.0298 283.088 68.4619 cv
283.28 68.9019 283.584 69.1177 283.984 69.1177 cv
ef
286.727 63.5962 mo
288.126 63.5962 li
288.126 64.022 li
286.727 64.022 li
286.727 63.5962 li
286.727 63.5962 li
cp
ef
291.559 61.5073 mo
289.962 65.3096 li
289.554 65.3096 li
291.077 61.6753 li
289.19 61.6753 li
289.19 62.1797 li
288.871 62.1797 li
288.871 61.2275 li
291.559 61.2275 li
291.559 61.5073 li
291.559 61.5073 li
cp
ef
448.96 52.2871 mo
444.96 52.2871 li
298.3 52.2871 mo
302.3 52.2871 li
@
277.536 55.4697 mo
277.536 55.0537 li
278.552 55.0537 li
278.552 50.2061 li
277.376 50.9658 li
277.376 50.4536 li
278.8 49.5337 li
279.336 49.5337 li
279.336 55.0537 li
280.352 55.0537 li
280.352 55.4697 li
277.536 55.4697 li
277.536 55.4697 li
cp
ef
283.984 55.5737 mo
283.344 55.5737 282.848 55.3096 282.496 54.7817 cv
282.144 54.2539 281.968 53.5176 281.968 52.5576 cv
281.968 51.606 282.144 50.8618 282.496 50.334 cv
282.848 49.8057 283.344 49.5337 283.984 49.5337 cv
284.616 49.5337 285.112 49.8057 285.464 50.334 cv
285.816 50.8618 286 51.606 286 52.5576 cv
286 53.5176 285.816 54.2539 285.464 54.7817 cv
285.112 55.3096 284.616 55.5737 283.984 55.5737 cv
283.984 55.5737 li
cp
283.984 55.1978 mo
284.384 55.1978 284.68 54.9819 284.88 54.542 cv
285.072 54.1099 285.176 53.4458 285.176 52.5576 cv
285.176 51.6777 285.072 51.0137 284.88 50.5737 cv
284.68 50.1416 284.384 49.918 283.984 49.918 cv
283.584 49.918 283.28 50.1416 283.088 50.5737 cv
282.888 51.0137 282.792 51.6777 282.792 52.5576 cv
282.792 53.4458 282.888 54.1099 283.088 54.542 cv
283.28 54.9819 283.584 55.1978 283.984 55.1978 cv
ef
286.727 49.6763 mo
288.126 49.6763 li
288.126 50.1016 li
286.727 50.1016 li
286.727 49.6763 li
286.727 49.6763 li
cp
ef
289.341 49.144 mo
289.464 49.0098 289.604 48.9033 289.761 48.8359 cv
289.918 48.769 290.091 48.7354 290.293 48.7354 cv
290.696 48.7354 291.021 48.8584 291.256 49.105 cv
291.491 49.3516 291.609 49.6816 291.609 50.1016 cv
291.609 50.5161 291.48 50.8467 291.228 51.0928 cv
290.971 51.3394 290.635 51.4629 290.209 51.4629 cv
289.75 51.4629 289.392 51.2944 289.145 50.9531 cv
288.898 50.6113 288.775 50.1187 288.775 49.4805 cv
288.775 48.769 288.921 48.2148 289.212 47.8228 cv
289.503 47.4307 289.918 47.2344 290.456 47.2344 cv
290.601 47.2344 290.752 47.2515 290.909 47.2739 cv
291.066 47.3018 291.228 47.3408 291.396 47.397 cv
291.396 48.0688 li
291.088 48.0688 li
291.066 47.8896 290.993 47.75 290.875 47.6489 cv
290.758 47.5537 290.601 47.5034 290.399 47.5034 cv
290.041 47.5034 289.778 47.6377 289.604 47.9067 cv
289.431 48.1753 289.341 48.5898 289.341 49.144 cv
289.341 49.144 li
cp
290.231 51.1992 mo
290.489 51.1992 290.685 51.1099 290.825 50.9194 cv
290.959 50.729 291.032 50.46 291.032 50.1016 cv
291.032 49.749 290.959 49.4805 290.825 49.29 cv
290.685 49.0996 290.489 49.0044 290.231 49.0044 cv
289.968 49.0044 289.767 49.0996 289.632 49.2783 cv
289.498 49.4634 289.431 49.7266 289.431 50.0684 cv
289.431 50.4321 289.498 50.7124 289.638 50.9082 cv
289.772 51.104 289.974 51.1992 290.231 51.1992 cv
ef
448.96 38.354 mo
444.96 38.354 li
298.3 38.354 mo
302.3 38.354 li
@
277.536 41.3096 mo
277.536 40.8936 li
278.552 40.8936 li
278.552 36.0459 li
277.376 36.8057 li
277.376 36.2939 li
278.8 35.374 li
279.336 35.374 li
279.336 40.8936 li
280.352 40.8936 li
280.352 41.3096 li
277.536 41.3096 li
277.536 41.3096 li
cp
ef
283.984 41.4141 mo
283.344 41.4141 282.848 41.1499 282.496 40.6221 cv
282.144 40.0938 281.968 39.3579 281.968 38.3979 cv
281.968 37.4458 282.144 36.7017 282.496 36.1738 cv
282.848 35.646 283.344 35.374 283.984 35.374 cv
284.616 35.374 285.112 35.646 285.464 36.1738 cv
285.816 36.7017 286 37.4458 286 38.3979 cv
286 39.3579 285.816 40.0938 285.464 40.6221 cv
285.112 41.1499 284.616 41.4141 283.984 41.4141 cv
283.984 41.4141 li
cp
283.984 41.0376 mo
284.384 41.0376 284.68 40.8218 284.88 40.3818 cv
285.072 39.9497 285.176 39.2856 285.176 38.3979 cv
285.176 37.5176 285.072 36.854 284.88 36.4141 cv
284.68 35.9819 284.384 35.7578 283.984 35.7578 cv
283.584 35.7578 283.28 35.9819 283.088 36.4141 cv
282.888 36.854 282.792 37.5176 282.792 38.3979 cv
282.792 39.2856 282.888 39.9497 283.088 40.3818 cv
283.28 40.8218 283.584 41.0376 283.984 41.0376 cv
ef
286.727 35.7563 mo
288.126 35.7563 li
288.126 36.1816 li
286.727 36.1816 li
286.727 35.7563 li
286.727 35.7563 li
cp
ef
291.217 33.3872 mo
291.217 33.8354 li
289.347 33.8354 li
289.347 35.0059 li
289.436 34.9385 289.548 34.8936 289.677 34.8604 cv
289.8 34.8267 289.946 34.8096 290.103 34.8096 cv
290.54 34.8096 290.887 34.9331 291.144 35.1797 cv
291.402 35.4258 291.531 35.7563 291.531 36.1763 cv
291.531 36.6133 291.402 36.9492 291.144 37.1841 cv
290.887 37.4248 290.522 37.5425 290.058 37.5425 cv
289.867 37.5425 289.677 37.52 289.481 37.4756 cv
289.279 37.436 289.078 37.3691 288.876 37.2739 cv
288.876 36.4785 li
289.184 36.4785 li
289.201 36.7417 289.285 36.9434 289.431 37.0776 cv
289.576 37.2124 289.789 37.2793 290.058 37.2793 cv
290.343 37.2793 290.562 37.1841 290.719 36.9937 cv
290.875 36.8032 290.954 36.5347 290.954 36.1763 cv
290.954 35.8232 290.875 35.5547 290.724 35.3643 cv
290.567 35.1738 290.349 35.0786 290.058 35.0786 cv
289.89 35.0786 289.744 35.1123 289.621 35.168 cv
289.498 35.2241 289.386 35.314 289.291 35.437 cv
289.055 35.437 li
289.055 33.3872 li
291.217 33.3872 li
291.217 33.3872 li
cp
ef
448.96 24.4209 mo
444.96 24.4209 li
298.3 24.4209 mo
302.3 24.4209 li
@
277.536 27.6299 mo
277.536 27.2139 li
278.552 27.2139 li
278.552 22.3657 li
277.376 23.126 li
277.376 22.6138 li
278.8 21.6938 li
279.336 21.6938 li
279.336 27.2139 li
280.352 27.2139 li
280.352 27.6299 li
277.536 27.6299 li
277.536 27.6299 li
cp
ef
283.984 27.7339 mo
283.344 27.7339 282.848 27.4697 282.496 26.9419 cv
282.144 26.4141 281.968 25.6777 281.968 24.7178 cv
281.968 23.7656 282.144 23.022 282.496 22.4937 cv
282.848 21.9658 283.344 21.6938 283.984 21.6938 cv
284.616 21.6938 285.112 21.9658 285.464 22.4937 cv
285.816 23.022 286 23.7656 286 24.7178 cv
286 25.6777 285.816 26.4141 285.464 26.9419 cv
285.112 27.4697 284.616 27.7339 283.984 27.7339 cv
283.984 27.7339 li
cp
283.984 27.3579 mo
284.384 27.3579 284.68 27.1416 284.88 26.7017 cv
285.072 26.2695 285.176 25.606 285.176 24.7178 cv
285.176 23.8379 285.072 23.1738 284.88 22.7339 cv
284.68 22.3018 284.384 22.0776 283.984 22.0776 cv
283.584 22.0776 283.28 22.3018 283.088 22.7339 cv
282.888 23.1738 282.792 23.8379 282.792 24.7178 cv
282.792 25.606 282.888 26.2695 283.088 26.7017 cv
283.28 27.1416 283.584 27.3579 283.984 27.3579 cv
ef
286.727 21.8359 mo
288.126 21.8359 li
288.126 22.2617 li
286.727 22.2617 li
286.727 21.8359 li
286.727 21.8359 li
cp
ef
291.559 23.5498 mo
289.699 23.5498 li
289.699 23.2588 li
290.354 23.2588 li
290.354 22.458 li
288.574 22.458 li
288.574 22.1611 li
290.36 19.3945 li
290.903 19.3945 li
290.903 22.1665 li
291.682 22.1665 li
291.682 22.458 li
290.903 22.458 li
290.903 23.2588 li
291.559 23.2588 li
291.559 23.5498 li
291.559 23.5498 li
cp
290.354 22.1665 mo
290.354 19.9937 li
288.96 22.1665 li
290.354 22.1665 li
ef
448.96 10.4888 mo
444.96 10.4888 li
298.3 10.4888 mo
302.3 10.4888 li
@
277.536 13.71 mo
277.536 13.2939 li
278.552 13.2939 li
278.552 8.4458 li
277.376 9.20605 li
277.376 8.69385 li
278.8 7.77393 li
279.336 7.77393 li
279.336 13.2939 li
280.352 13.2939 li
280.352 13.71 li
277.536 13.71 li
277.536 13.71 li
cp
ef
283.984 13.814 mo
283.344 13.814 282.848 13.5498 282.496 13.022 cv
282.144 12.4937 281.968 11.7578 281.968 10.7979 cv
281.968 9.8457 282.144 9.10156 282.496 8.57373 cv
282.848 8.0459 283.344 7.77393 283.984 7.77393 cv
284.616 7.77393 285.112 8.0459 285.464 8.57373 cv
285.816 9.10156 286 9.8457 286 10.7979 cv
286 11.7578 285.816 12.4937 285.464 13.022 cv
285.112 13.5498 284.616 13.814 283.984 13.814 cv
283.984 13.814 li
cp
283.984 13.438 mo
284.384 13.438 284.68 13.2217 284.88 12.7817 cv
285.072 12.3496 285.176 11.6855 285.176 10.7979 cv
285.176 9.91797 285.072 9.25391 284.88 8.81396 cv
284.68 8.38184 284.384 8.15771 283.984 8.15771 cv
283.584 8.15771 283.28 8.38184 283.088 8.81396 cv
282.888 9.25391 282.792 9.91797 282.792 10.7979 cv
282.792 11.6855 282.888 12.3496 283.088 12.7817 cv
283.28 13.2217 283.584 13.438 283.984 13.438 cv
ef
286.727 7.91602 mo
288.126 7.91602 li
288.126 8.3418 li
286.727 8.3418 li
286.727 7.91602 li
286.727 7.91602 li
cp
ef
288.943 5.72119 mo
289.156 5.64258 289.358 5.58105 289.554 5.53613 cv
289.75 5.49707 289.935 5.47461 290.108 5.47461 cv
290.506 5.47461 290.819 5.56445 291.043 5.73242 cv
291.268 5.90576 291.379 6.14648 291.379 6.44922 cv
291.379 6.69531 291.301 6.90234 291.144 7.06494 cv
290.987 7.23291 290.769 7.34473 290.489 7.40088 cv
290.825 7.45117 291.083 7.57471 291.268 7.77051 cv
291.452 7.9668 291.547 8.21875 291.547 8.52637 cv
291.547 8.90723 291.418 9.19873 291.161 9.40039 cv
290.903 9.60156 290.54 9.70264 290.058 9.70264 cv
289.845 9.70264 289.632 9.68018 289.431 9.63525 cv
289.229 9.59619 289.027 9.52881 288.826 9.43359 cv
288.826 8.63867 li
289.134 8.63867 li
289.15 8.90723 289.24 9.10352 289.397 9.23779 cv
289.554 9.37207 289.778 9.43945 290.069 9.43945 cv
290.349 9.43945 290.567 9.36084 290.73 9.19873 cv
290.887 9.03613 290.971 8.81201 290.971 8.53223 cv
290.971 8.21289 290.887 7.97217 290.719 7.8042 cv
290.551 7.6416 290.31 7.55762 289.991 7.55762 cv
289.733 7.55762 li
289.733 7.27783 li
289.867 7.27783 li
290.187 7.27783 290.427 7.21631 290.584 7.08203 cv
290.741 6.94727 290.825 6.75146 290.825 6.48242 cv
290.825 6.24756 290.758 6.0625 290.629 5.93359 cv
290.495 5.81055 290.31 5.74316 290.063 5.74316 cv
289.817 5.74316 289.621 5.80518 289.487 5.92285 cv
289.352 6.04004 289.274 6.21387 289.251 6.43799 cv
288.943 6.43799 li
288.943 5.72119 li
288.943 5.72119 li
cp
ef
448.96 .75 mo
446.96 .75 li
298.3 .75 mo
300.3 .75 li
448.96 2.09961 mo
446.96 2.09961 li
298.3 2.09961 mo
300.3 2.09961 li
448.96 3.84082 mo
446.96 3.84082 li
298.3 3.84082 mo
300.3 3.84082 li
448.96 6.29395 mo
446.96 6.29395 li
298.3 6.29395 mo
300.3 6.29395 li
448.96 11.126 mo
446.96 11.126 li
298.3 11.126 mo
300.3 11.126 li
448.96 11.8389 mo
446.96 11.8389 li
298.3 11.8389 mo
300.3 11.8389 li
448.96 12.647 mo
446.96 12.647 li
298.3 12.647 mo
300.3 12.647 li
448.96 13.5801 mo
446.96 13.5801 li
298.3 13.5801 mo
300.3 13.5801 li
448.96 14.6826 mo
446.96 14.6826 li
298.3 14.6826 mo
300.3 14.6826 li
448.96 16.0327 mo
446.96 16.0327 li
298.3 16.0327 mo
300.3 16.0327 li
448.96 17.7739 mo
446.96 17.7739 li
298.3 17.7739 mo
300.3 17.7739 li
448.96 20.2271 mo
446.96 20.2271 li
298.3 20.2271 mo
300.3 20.2271 li
448.96 25.0586 mo
446.96 25.0586 li
298.3 25.0586 mo
300.3 25.0586 li
448.96 25.772 mo
446.96 25.772 li
298.3 25.772 mo
300.3 25.772 li
448.96 26.5801 mo
446.96 26.5801 li
298.3 26.5801 mo
300.3 26.5801 li
448.96 27.5117 mo
446.96 27.5117 li
298.3 27.5117 mo
300.3 27.5117 li
448.96 28.6157 mo
446.96 28.6157 li
298.3 28.6157 mo
300.3 28.6157 li
448.96 29.9658 mo
446.96 29.9658 li
298.3 29.9658 mo
300.3 29.9658 li
448.96 31.7061 mo
446.96 31.7061 li
298.3 31.7061 mo
300.3 31.7061 li
448.96 34.1597 mo
446.96 34.1597 li
298.3 34.1597 mo
300.3 34.1597 li
448.96 38.9917 mo
446.96 38.9917 li
298.3 38.9917 mo
300.3 38.9917 li
448.96 39.7041 mo
446.96 39.7041 li
298.3 39.7041 mo
300.3 39.7041 li
448.96 40.5117 mo
446.96 40.5117 li
298.3 40.5117 mo
300.3 40.5117 li
448.96 41.4448 mo
446.96 41.4448 li
298.3 41.4448 mo
300.3 41.4448 li
448.96 42.5479 mo
446.96 42.5479 li
298.3 42.5479 mo
300.3 42.5479 li
448.96 43.8979 mo
446.96 43.8979 li
298.3 43.8979 mo
300.3 43.8979 li
448.96 45.6387 mo
446.96 45.6387 li
298.3 45.6387 mo
300.3 45.6387 li
448.96 48.0928 mo
446.96 48.0928 li
298.3 48.0928 mo
300.3 48.0928 li
448.96 52.9238 mo
446.96 52.9238 li
298.3 52.9238 mo
300.3 52.9238 li
448.96 53.6367 mo
446.96 53.6367 li
298.3 53.6367 mo
300.3 53.6367 li
448.96 54.4448 mo
446.96 54.4448 li
298.3 54.4448 mo
300.3 54.4448 li
448.96 55.3779 mo
446.96 55.3779 li
298.3 55.3779 mo
300.3 55.3779 li
448.96 56.481 mo
446.96 56.481 li
298.3 56.481 mo
300.3 56.481 li
448.96 57.8311 mo
446.96 57.8311 li
298.3 57.8311 mo
300.3 57.8311 li
448.96 59.5718 mo
446.96 59.5718 li
298.3 59.5718 mo
300.3 59.5718 li
448.96 62.0249 mo
446.96 62.0249 li
298.3 62.0249 mo
300.3 62.0249 li
448.96 66.8569 mo
446.96 66.8569 li
298.3 66.8569 mo
300.3 66.8569 li
448.96 67.5698 mo
446.96 67.5698 li
298.3 67.5698 mo
300.3 67.5698 li
448.96 68.3779 mo
446.96 68.3779 li
298.3 68.3779 mo
300.3 68.3779 li
448.96 69.311 mo
446.96 69.311 li
298.3 69.311 mo
300.3 69.311 li
448.96 70.4141 mo
446.96 70.4141 li
298.3 70.4141 mo
300.3 70.4141 li
448.96 71.7637 mo
446.96 71.7637 li
298.3 71.7637 mo
300.3 71.7637 li
448.96 73.5049 mo
446.96 73.5049 li
298.3 73.5049 mo
300.3 73.5049 li
448.96 75.958 mo
446.96 75.958 li
298.3 75.958 mo
300.3 75.958 li
448.96 80.79 mo
446.96 80.79 li
298.3 80.79 mo
300.3 80.79 li
448.96 81.5029 mo
446.96 81.5029 li
298.3 81.5029 mo
300.3 81.5029 li
448.96 82.311 mo
446.96 82.311 li
298.3 82.311 mo
300.3 82.311 li
448.96 83.2427 mo
446.96 83.2427 li
298.3 83.2427 mo
300.3 83.2427 li
448.96 84.3467 mo
446.96 84.3467 li
298.3 84.3467 mo
300.3 84.3467 li
448.96 85.6968 mo
446.96 85.6968 li
298.3 85.6968 mo
300.3 85.6968 li
448.96 87.437 mo
446.96 87.437 li
298.3 87.437 mo
300.3 87.437 li
448.96 89.8906 mo
446.96 89.8906 li
298.3 89.8906 mo
300.3 89.8906 li
448.96 94.7227 mo
446.96 94.7227 li
298.3 94.7227 mo
300.3 94.7227 li
448.96 95.4351 mo
446.96 95.4351 li
298.3 95.4351 mo
300.3 95.4351 li
448.96 96.2427 mo
446.96 96.2427 li
298.3 96.2427 mo
300.3 96.2427 li
448.96 97.1758 mo
446.96 97.1758 li
298.3 97.1758 mo
300.3 97.1758 li
448.96 98.2788 mo
446.96 98.2788 li
298.3 98.2788 mo
300.3 98.2788 li
448.96 99.6299 mo
446.96 99.6299 li
298.3 99.6299 mo
300.3 99.6299 li
448.96 101.37 mo
446.96 101.37 li
298.3 101.37 mo
300.3 101.37 li
448.96 103.824 mo
446.96 103.824 li
298.3 103.824 mo
300.3 103.824 li
@
1.5 lw
2 lc
298.3 103.824 mo
298.3 .75 li
298.3 103.824 mo
448.96 103.824 li
448.96 103.824 mo
448.96 .75 li
298.3 .75 mo
448.96 .75 li
@
432.388 13.6499 mo
431.428 13.2178 430.708 12.5459 430.229 11.6338 cv
429.748 10.7217 429.508 9.55762 429.508 8.16602 cv
429.508 6.77393 429.748 5.62207 430.229 4.69775 cv
430.708 3.77393 431.428 3.10156 432.388 2.66992 cv
432.388 3.24561 li
431.788 3.66602 431.356 4.25391 431.092 4.99805 cv
430.828 5.75391 430.696 6.80957 430.696 8.16602 cv
430.696 9.53369 430.828 10.5898 431.092 11.334 cv
431.356 12.0776 431.788 12.6538 432.388 13.0737 cv
432.388 13.6499 li
432.388 13.6499 li
cp
ef
439.216 7.90186 mo
439.216 11.166 li
440.176 11.166 li
440.176 11.79 li
438.136 11.79 li
438.136 11.1177 li
437.896 11.4058 437.62 11.6221 437.309 11.7539 cv
436.996 11.874 436.624 11.9458 436.216 11.9458 cv
435.521 11.9458 434.968 11.7656 434.561 11.4058 cv
434.152 11.0459 433.96 10.542 433.96 9.91797 cv
433.96 9.28174 434.188 8.79004 434.656 8.42969 cv
435.112 8.06982 435.772 7.88965 436.624 7.88965 cv
438.136 7.88965 li
438.136 7.45801 li
438.136 6.98975 437.992 6.62988 437.704 6.36572 cv
437.416 6.10156 437.008 5.96973 436.492 5.96973 cv
436.061 5.96973 435.725 6.07764 435.473 6.26953 cv
435.208 6.46191 435.052 6.75 434.992 7.13379 cv
434.44 7.13379 li
434.44 5.87402 li
434.813 5.71777 435.172 5.59766 435.532 5.51367 cv
435.88 5.44189 436.229 5.39355 436.564 5.39355 cv
437.428 5.39355 438.076 5.60986 438.532 6.04199 cv
438.988 6.47363 439.216 7.08594 439.216 7.90186 cv
439.216 7.90186 li
cp
438.136 9.83398 mo
438.136 8.51367 li
436.744 8.51367 li
436.204 8.51367 435.809 8.63379 435.544 8.86182 cv
435.28 9.10156 435.16 9.44971 435.16 9.91797 cv
435.16 10.3496 435.292 10.6978 435.557 10.9497 cv
435.82 11.2139 436.181 11.334 436.636 11.334 cv
437.08 11.334 437.44 11.2017 437.716 10.9258 cv
437.992 10.6499 438.136 10.29 438.136 9.83398 cv
ef
441.412 13.6499 mo
441.412 13.0737 li
442.013 12.6538 442.444 12.0776 442.708 11.334 cv
442.973 10.5898 443.104 9.53369 443.104 8.16602 cv
443.104 6.80957 442.973 5.75391 442.708 4.99805 cv
442.444 4.25391 442.013 3.66602 441.412 3.24561 cv
441.412 2.66992 li
442.36 3.10156 443.08 3.77393 443.561 4.69775 cv
444.04 5.62207 444.292 6.77393 444.292 8.16602 cv
444.292 9.55762 444.04 10.7217 443.561 11.6338 cv
443.08 12.5459 442.36 13.2178 441.412 13.6499 cv
441.412 13.6499 li
cp
ef
303.3 98.8237 mo
397.784 98.8237 li
397.784 66.48 li
303.3 66.48 li
303.3 98.8237 li
303.3 98.8237 li
cp
0 0 0 0 cmyk
f
1 lw
303.3 98.8237 mo
397.784 98.8237 li
397.784 66.48 li
303.3 66.48 li
303.3 98.8237 li
303.3 98.8237 li
cp
0 0 0 1 cmyk
@
1.5 lw
310.3 74.5737 mo
324.3 74.5737 li
0 .993988 1 0 cmyk
@
336.13 77.6797 mo
336.13 76.0195 li
336.69 76.0195 li
336.7 76.5801 336.86 76.9897 337.17 77.25 cv
337.47 77.5195 337.94 77.6499 338.56 77.6499 cv
339.14 77.6499 339.58 77.54 339.88 77.3096 cv
340.18 77.0801 340.34 76.7397 340.34 76.2998 cv
340.34 75.9497 340.24 75.6797 340.06 75.4897 cv
339.88 75.3096 339.49 75.1196 338.9 74.9399 cv
337.94 74.6499 li
337.24 74.4399 336.74 74.1797 336.46 73.8599 cv
336.18 73.5498 336.04 73.1196 336.04 72.5596 cv
336.04 71.9399 336.26 71.46 336.7 71.1196 cv
337.14 70.7798 337.75 70.6099 338.55 70.6099 cv
338.89 70.6099 339.26 70.6499 339.66 70.7197 cv
340.06 70.7998 340.49 70.8999 340.95 71.04 cv
340.95 72.5898 li
340.4 72.5898 li
340.34 72.0801 340.17 71.71 339.88 71.48 cv
339.59 71.25 339.15 71.1299 338.57 71.1299 cv
338.05 71.1299 337.66 71.2397 337.39 71.4497 cv
337.12 71.6597 336.99 71.96 336.99 72.3599 cv
336.99 72.71 337.09 72.98 337.29 73.1797 cv
337.49 73.3799 337.92 73.5801 338.58 73.7695 cv
339.48 74.04 li
340.14 74.2397 340.61 74.5 340.89 74.7998 cv
341.17 75.1099 341.32 75.5195 341.32 76.04 cv
341.32 76.75 341.09 77.2798 340.64 77.6299 cv
340.18 77.9897 339.51 78.1597 338.62 78.1597 cv
338.22 78.1597 337.81 78.1196 337.39 78.04 cv
336.97 77.9697 336.55 77.8496 336.13 77.6797 cv
336.13 77.6797 li
cp
0 0 0 1 cmyk
ef
344.28 77.5098 mo
345.13 77.5098 li
345.13 78.0298 li
342.52 78.0298 li
342.52 77.5098 li
343.38 77.5098 li
343.38 73.3599 li
342.52 73.3599 li
342.52 72.8398 li
344.28 72.8398 li
344.28 77.5098 li
344.28 77.5098 li
cp
343.13 71.23 mo
343.13 71.0801 343.18 70.9497 343.29 70.8398 cv
343.4 70.73 343.53 70.6699 343.69 70.6699 cv
343.83 70.6699 343.96 70.73 344.07 70.8398 cv
344.18 70.9497 344.24 71.0801 344.24 71.23 cv
344.24 71.3896 344.18 71.5195 344.08 71.6196 cv
343.97 71.73 343.84 71.7798 343.69 71.7798 cv
343.53 71.7798 343.4 71.73 343.29 71.6196 cv
343.18 71.5195 343.13 71.3896 343.13 71.23 cv
ef
350.46 73.8496 mo
350.63 73.4697 350.85 73.1899 351.12 72.9897 cv
351.39 72.7998 351.7 72.6997 352.06 72.6997 cv
352.6 72.6997 353.01 72.8696 353.28 73.21 cv
353.54 73.5498 353.68 74.0498 353.68 74.73 cv
353.68 77.5098 li
354.49 77.5098 li
354.49 78.0298 li
352 78.0298 li
352 77.5098 li
352.78 77.5098 li
352.78 74.8301 li
352.78 74.3096 352.7 73.9297 352.54 73.6997 cv
352.38 73.48 352.13 73.3599 351.77 73.3599 cv
351.37 73.3599 351.06 73.5195 350.85 73.8198 cv
350.64 74.1196 350.54 74.5596 350.54 75.1396 cv
350.54 77.5098 li
351.32 77.5098 li
351.32 78.0298 li
348.86 78.0298 li
348.86 77.5098 li
349.64 77.5098 li
349.64 74.7998 li
349.64 74.2798 349.56 73.9097 349.4 73.6899 cv
349.24 73.4697 348.99 73.3599 348.63 73.3599 cv
348.23 73.3599 347.92 73.5195 347.71 73.8198 cv
347.5 74.1196 347.4 74.5596 347.4 75.1396 cv
347.4 77.5098 li
348.18 77.5098 li
348.18 78.0298 li
345.69 78.0298 li
345.69 77.5098 li
346.5 77.5098 li
346.5 73.3496 li
345.64 73.3496 li
345.64 72.8398 li
347.4 72.8398 li
347.4 73.7598 li
347.56 73.4199 347.77 73.1499 348.03 72.9697 cv
348.29 72.79 348.58 72.6997 348.91 72.6997 cv
349.31 72.6997 349.64 72.7998 349.91 73 cv
350.18 73.1997 350.36 73.4897 350.46 73.8496 cv
350.46 73.8496 li
cp
ef
358.42 72.8398 mo
360.1 72.8398 li
360.1 77.5098 li
360.95 77.5098 li
360.95 78.0298 li
359.2 78.0298 li
359.2 77.1099 li
359.03 77.46 358.811 77.7197 358.551 77.8999 cv
358.29 78.0698 357.98 78.1597 357.641 78.1597 cv
357.06 78.1597 356.63 78 356.36 77.6797 cv
356.09 77.3599 355.96 76.8398 355.96 76.1396 cv
355.96 73.3599 li
355.15 73.3599 li
355.15 72.8398 li
356.86 72.8398 li
356.86 75.8599 li
356.86 76.5 356.93 76.9297 357.09 77.1597 cv
357.25 77.3999 357.52 77.5098 357.92 77.5098 cv
358.34 77.5098 358.65 77.3599 358.87 77.0498 cv
359.09 76.75 359.2 76.2998 359.2 75.7197 cv
359.2 73.3599 li
358.42 73.3599 li
358.42 72.8398 li
358.42 72.8398 li
cp
ef
363.41 77.5098 mo
364.26 77.5098 li
364.26 78.0298 li
361.65 78.0298 li
361.65 77.5098 li
362.51 77.5098 li
362.51 70.9497 li
361.65 70.9497 li
361.65 70.4297 li
363.41 70.4297 li
363.41 77.5098 li
363.41 77.5098 li
cp
ef
369.36 74.79 mo
369.36 77.5098 li
370.16 77.5098 li
370.16 78.0298 li
368.46 78.0298 li
368.46 77.4697 li
368.26 77.71 368.03 77.8896 367.77 78 cv
367.51 78.0996 367.2 78.1597 366.86 78.1597 cv
366.28 78.1597 365.82 78.0098 365.48 77.71 cv
365.141 77.4097 364.98 76.9897 364.98 76.4697 cv
364.98 75.9399 365.17 75.5298 365.561 75.23 cv
365.94 74.9297 366.49 74.7798 367.2 74.7798 cv
368.46 74.7798 li
368.46 74.4199 li
368.46 74.0298 368.34 73.73 368.1 73.5098 cv
367.86 73.29 367.52 73.1797 367.09 73.1797 cv
366.73 73.1797 366.45 73.27 366.24 73.4297 cv
366.02 73.5898 365.891 73.8301 365.84 74.1499 cv
365.381 74.1499 li
365.381 73.0996 li
365.69 72.9697 365.99 72.8696 366.29 72.7998 cv
366.58 72.7397 366.87 72.6997 367.15 72.6997 cv
367.87 72.6997 368.41 72.8799 368.79 73.2397 cv
369.17 73.5996 369.36 74.1099 369.36 74.79 cv
369.36 74.79 li
cp
368.46 76.3999 mo
368.46 75.2998 li
367.301 75.2998 li
366.85 75.2998 366.52 75.3999 366.301 75.5898 cv
366.08 75.79 365.98 76.0801 365.98 76.4697 cv
365.98 76.8301 366.09 77.1196 366.311 77.3301 cv
366.53 77.5498 366.83 77.6499 367.21 77.6499 cv
367.58 77.6499 367.881 77.54 368.11 77.3096 cv
368.34 77.0801 368.46 76.7798 368.46 76.3999 cv
ef
371.561 73.3599 mo
370.771 73.3599 li
370.771 72.8398 li
371.561 72.8398 li
371.561 71.23 li
372.46 71.23 li
372.46 72.8398 li
374.15 72.8398 li
374.15 73.3599 li
372.46 73.3599 li
372.46 76.6597 li
372.46 77.0996 372.5 77.3896 372.59 77.5098 cv
372.67 77.6299 372.83 77.6899 373.061 77.6899 cv
373.29 77.6899 373.46 77.6196 373.57 77.48 cv
373.67 77.3398 373.73 77.1196 373.74 76.8096 cv
374.42 76.8096 li
374.391 77.29 374.26 77.6299 374.03 77.8398 cv
373.8 78.0498 373.45 78.1597 372.98 78.1597 cv
372.46 78.1597 372.09 78.04 371.88 77.8198 cv
371.66 77.5996 371.561 77.21 371.561 76.6597 cv
371.561 73.3599 li
371.561 73.3599 li
cp
ef
376.681 77.5098 mo
377.53 77.5098 li
377.53 78.0298 li
374.92 78.0298 li
374.92 77.5098 li
375.78 77.5098 li
375.78 73.3599 li
374.92 73.3599 li
374.92 72.8398 li
376.681 72.8398 li
376.681 77.5098 li
376.681 77.5098 li
cp
375.53 71.23 mo
375.53 71.0801 375.58 70.9497 375.69 70.8398 cv
375.8 70.73 375.931 70.6699 376.09 70.6699 cv
376.23 70.6699 376.36 70.73 376.47 70.8398 cv
376.58 70.9497 376.641 71.0801 376.641 71.23 cv
376.641 71.3896 376.58 71.5195 376.48 71.6196 cv
376.37 71.73 376.24 71.7798 376.09 71.7798 cv
375.931 71.7798 375.8 71.73 375.69 71.6196 cv
375.58 71.5195 375.53 71.3896 375.53 71.23 cv
ef
380.69 78.1597 mo
379.931 78.1597 379.33 77.9199 378.87 77.4199 cv
378.41 76.9199 378.181 76.2598 378.181 75.4297 cv
378.181 74.6099 378.4 73.9497 378.86 73.4497 cv
379.32 72.9497 379.931 72.6997 380.69 72.6997 cv
381.45 72.6997 382.05 72.9497 382.51 73.4497 cv
382.97 73.9497 383.2 74.6099 383.2 75.4297 cv
383.2 76.2598 382.97 76.9199 382.51 77.4199 cv
382.05 77.9199 381.45 78.1597 380.69 78.1597 cv
380.69 78.1597 li
cp
380.69 77.6899 mo
381.17 77.6899 381.53 77.5 381.78 77.1196 cv
382.021 76.7397 382.15 76.1797 382.15 75.4297 cv
382.15 74.6899 382.021 74.1299 381.78 73.75 cv
381.53 73.3696 381.17 73.1797 380.69 73.1797 cv
380.21 73.1797 379.84 73.3696 379.601 73.75 cv
379.351 74.1299 379.23 74.6899 379.23 75.4297 cv
379.23 76.1797 379.351 76.7397 379.601 77.1196 cv
379.84 77.5 380.21 77.6899 380.69 77.6899 cv
ef
384.09 78.0298 mo
384.09 77.5098 li
384.9 77.5098 li
384.9 73.3599 li
384.04 73.3599 li
384.04 72.8398 li
385.8 72.8398 li
385.8 73.7598 li
385.96 73.4199 386.181 73.1499 386.44 72.9697 cv
386.7 72.79 387.01 72.6997 387.37 72.6997 cv
387.94 72.6997 388.36 72.8696 388.63 73.1899 cv
388.9 73.5195 389.04 74.0298 389.04 74.73 cv
389.04 77.5098 li
389.84 77.5098 li
389.84 78.0298 li
387.36 78.0298 li
387.36 77.5098 li
388.141 77.5098 li
388.141 75.0098 li
388.141 74.3799 388.061 73.9497 387.9 73.71 cv
387.74 73.4697 387.47 73.3496 387.08 73.3496 cv
386.66 73.3496 386.34 73.5098 386.12 73.8096 cv
385.9 74.1196 385.8 74.5596 385.8 75.1396 cv
385.8 77.5098 li
386.58 77.5098 li
386.58 78.0298 li
384.09 78.0298 li
384.09 78.0298 li
cp
ef
310.3 89.2461 mo
324.3 89.2461 li
@
335.75 92.6699 mo
335.75 92.1499 li
336.68 92.1499 li
336.68 85.8999 li
335.75 85.8999 li
335.75 85.3799 li
341.62 85.3799 li
341.62 87 li
341.02 87 li
341.02 85.98 li
337.67 85.98 li
337.67 88.4199 li
340.06 88.4199 li
340.06 87.5098 li
340.66 87.5098 li
340.66 89.9297 li
340.06 89.9297 li
340.06 89.02 li
337.67 89.02 li
337.67 92.0698 li
341.1 92.0698 li
341.1 91.0498 li
341.7 91.0498 li
341.7 92.6699 li
335.75 92.6699 li
335.75 92.6699 li
cp
ef
345.55 89.5 mo
346.64 88 li
345.94 88 li
345.94 87.48 li
347.94 87.48 li
347.94 88 li
347.25 88 li
345.86 89.9199 li
347.48 92.1499 li
348.16 92.1499 li
348.16 92.6699 li
345.76 92.6699 li
345.76 92.1499 li
346.42 92.1499 li
345.29 90.5996 li
344.16 92.1499 li
344.83 92.1499 li
344.83 92.6699 li
342.86 92.6699 li
342.86 92.1499 li
343.55 92.1499 li
344.98 90.1797 li
343.4 88 li
342.76 88 li
342.76 87.48 li
345.08 87.48 li
345.08 88 li
344.46 88 li
345.55 89.5 li
345.55 89.5 li
cp
ef
349.31 88 mo
348.45 88 li
348.45 87.48 li
350.21 87.48 li
350.21 88.29 li
350.38 87.9697 350.6 87.73 350.88 87.5698 cv
351.15 87.4199 351.49 87.3398 351.89 87.3398 cv
352.53 87.3398 353.05 87.5996 353.45 88.0996 cv
353.85 88.5996 354.06 89.2598 354.06 90.0698 cv
354.06 90.8896 353.85 91.5498 353.45 92.0498 cv
353.05 92.5498 352.53 92.7998 351.89 92.7998 cv
351.49 92.7998 351.15 92.7197 350.88 92.5796 cv
350.6 92.4297 350.38 92.1899 350.21 91.8599 cv
350.21 94.2197 li
351.06 94.2197 li
351.06 94.7397 li
348.45 94.7397 li
348.45 94.2197 li
349.31 94.2197 li
349.31 88 li
349.31 88 li
cp
350.21 89.8198 mo
350.21 90.3296 li
350.21 90.96 350.33 91.4399 350.57 91.7598 cv
350.81 92.0898 351.15 92.25 351.61 92.25 cv
352.07 92.25 352.41 92.0698 352.65 91.6997 cv
352.89 91.3398 353.01 90.79 353.01 90.0698 cv
353.01 89.3496 352.89 88.8096 352.65 88.4497 cv
352.41 88.0898 352.07 87.8999 351.61 87.8999 cv
351.15 87.8999 350.81 88.0698 350.57 88.3999 cv
350.33 88.73 350.21 89.1997 350.21 89.8198 cv
ef
359 89.6499 mo
358.98 89.0498 358.85 88.5898 358.61 88.2798 cv
358.37 87.98 358.04 87.8198 357.6 87.8198 cv
357.18 87.8198 356.86 87.98 356.62 88.29 cv
356.38 88.5996 356.24 89.0498 356.19 89.6499 cv
359 89.6499 li
359 89.6499 li
cp
360.061 90.1699 mo
356.19 90.1699 li
356.19 90.21 li
356.19 90.9097 356.32 91.4399 356.58 91.7998 cv
356.84 92.1597 357.23 92.3296 357.75 92.3296 cv
358.141 92.3296 358.46 92.23 358.721 92.02 cv
358.971 91.8198 359.15 91.5098 359.25 91.0996 cv
359.971 91.0996 li
359.83 91.6699 359.561 92.0996 359.18 92.3799 cv
358.79 92.6597 358.28 92.7998 357.66 92.7998 cv
356.9 92.7998 356.29 92.5596 355.83 92.0596 cv
355.37 91.5596 355.14 90.8999 355.14 90.0698 cv
355.14 89.25 355.36 88.5898 355.82 88.0898 cv
356.27 87.5898 356.86 87.3398 357.6 87.3398 cv
358.381 87.3398 358.99 87.5898 359.41 88.0698 cv
359.83 88.5498 360.04 89.25 360.061 90.1699 cv
ef
365.42 87.4697 mo
365.42 88.77 li
364.9 88.77 li
364.881 88.5098 364.811 88.3198 364.69 88.1899 cv
364.561 88.0698 364.37 88 364.131 88 cv
363.69 88 363.35 88.1597 363.11 88.46 cv
362.87 88.77 362.76 89.21 362.76 89.7798 cv
362.76 92.1499 li
363.801 92.1499 li
363.801 92.6699 li
361.051 92.6699 li
361.051 92.1499 li
361.86 92.1499 li
361.86 87.9897 li
361 87.9897 li
361 87.48 li
362.76 87.48 li
362.76 88.3999 li
362.93 88.04 363.15 87.7798 363.43 87.5996 cv
363.71 87.4297 364.051 87.3398 364.45 87.3398 cv
364.59 87.3398 364.75 87.3599 364.91 87.3799 cv
365.07 87.3999 365.24 87.4297 365.42 87.4697 cv
365.42 87.4697 li
cp
ef
367.561 92.1499 mo
368.41 92.1499 li
368.41 92.6699 li
365.801 92.6699 li
365.801 92.1499 li
366.66 92.1499 li
366.66 88 li
365.801 88 li
365.801 87.48 li
367.561 87.48 li
367.561 92.1499 li
367.561 92.1499 li
cp
366.41 85.8696 mo
366.41 85.7197 366.46 85.5898 366.57 85.48 cv
366.68 85.3696 366.811 85.3096 366.971 85.3096 cv
367.11 85.3096 367.24 85.3696 367.35 85.48 cv
367.46 85.5898 367.52 85.7197 367.52 85.8696 cv
367.52 86.0298 367.46 86.1597 367.36 86.2598 cv
367.25 86.3696 367.12 86.4199 366.971 86.4199 cv
366.811 86.4199 366.68 86.3696 366.57 86.2598 cv
366.46 86.1597 366.41 86.0298 366.41 85.8696 cv
ef
373.74 88.4897 mo
373.91 88.1099 374.13 87.8296 374.4 87.6299 cv
374.67 87.4399 374.98 87.3398 375.34 87.3398 cv
375.88 87.3398 376.29 87.5098 376.561 87.8496 cv
376.82 88.1899 376.96 88.6899 376.96 89.3696 cv
376.96 92.1499 li
377.771 92.1499 li
377.771 92.6699 li
375.28 92.6699 li
375.28 92.1499 li
376.061 92.1499 li
376.061 89.4697 li
376.061 88.9497 375.98 88.5698 375.82 88.3398 cv
375.66 88.1196 375.41 88 375.05 88 cv
374.65 88 374.34 88.1597 374.13 88.46 cv
373.92 88.7598 373.82 89.1997 373.82 89.7798 cv
373.82 92.1499 li
374.601 92.1499 li
374.601 92.6699 li
372.141 92.6699 li
372.141 92.1499 li
372.92 92.1499 li
372.92 89.4399 li
372.92 88.9199 372.84 88.5498 372.681 88.3296 cv
372.521 88.1099 372.271 88 371.91 88 cv
371.51 88 371.2 88.1597 370.99 88.46 cv
370.78 88.7598 370.68 89.1997 370.68 89.7798 cv
370.68 92.1499 li
371.46 92.1499 li
371.46 92.6699 li
368.971 92.6699 li
368.971 92.1499 li
369.78 92.1499 li
369.78 87.9897 li
368.92 87.9897 li
368.92 87.48 li
370.68 87.48 li
370.68 88.3999 li
370.84 88.0596 371.05 87.79 371.311 87.6099 cv
371.57 87.4297 371.86 87.3398 372.19 87.3398 cv
372.59 87.3398 372.92 87.4399 373.19 87.6396 cv
373.46 87.8398 373.641 88.1299 373.74 88.4897 cv
373.74 88.4897 li
cp
ef
382.28 89.6499 mo
382.26 89.0498 382.13 88.5898 381.891 88.2798 cv
381.65 87.98 381.32 87.8198 380.88 87.8198 cv
380.46 87.8198 380.141 87.98 379.9 88.29 cv
379.66 88.5996 379.521 89.0498 379.47 89.6499 cv
382.28 89.6499 li
382.28 89.6499 li
cp
383.34 90.1699 mo
379.47 90.1699 li
379.47 90.21 li
379.47 90.9097 379.601 91.4399 379.86 91.7998 cv
380.12 92.1597 380.51 92.3296 381.03 92.3296 cv
381.42 92.3296 381.74 92.23 382 92.02 cv
382.25 91.8198 382.431 91.5098 382.53 91.0996 cv
383.25 91.0996 li
383.11 91.6699 382.84 92.0996 382.46 92.3799 cv
382.07 92.6597 381.561 92.7998 380.94 92.7998 cv
380.181 92.7998 379.57 92.5596 379.11 92.0596 cv
378.65 91.5596 378.42 90.8999 378.42 90.0698 cv
378.42 89.25 378.641 88.5898 379.101 88.0898 cv
379.55 87.5898 380.141 87.3398 380.88 87.3398 cv
381.66 87.3398 382.271 87.5898 382.69 88.0698 cv
383.11 88.5498 383.32 89.25 383.34 90.1699 cv
ef
384.33 92.6699 mo
384.33 92.1499 li
385.141 92.1499 li
385.141 88 li
384.28 88 li
384.28 87.48 li
386.04 87.48 li
386.04 88.3999 li
386.2 88.0596 386.42 87.79 386.681 87.6099 cv
386.94 87.4297 387.25 87.3398 387.61 87.3398 cv
388.181 87.3398 388.601 87.5098 388.87 87.8296 cv
389.141 88.1597 389.28 88.6699 389.28 89.3696 cv
389.28 92.1499 li
390.08 92.1499 li
390.08 92.6699 li
387.601 92.6699 li
387.601 92.1499 li
388.38 92.1499 li
388.38 89.6499 li
388.38 89.02 388.3 88.5898 388.141 88.3496 cv
387.98 88.1099 387.71 87.9897 387.32 87.9897 cv
386.9 87.9897 386.58 88.1499 386.36 88.4497 cv
386.141 88.7598 386.04 89.1997 386.04 89.7798 cv
386.04 92.1499 li
386.82 92.1499 li
386.82 92.6699 li
384.33 92.6699 li
384.33 92.6699 li
cp
ef
391.48 88 mo
390.69 88 li
390.69 87.48 li
391.48 87.48 li
391.48 85.8696 li
392.38 85.8696 li
392.38 87.48 li
394.07 87.48 li
394.07 88 li
392.38 88 li
392.38 91.2998 li
392.38 91.7397 392.42 92.0298 392.51 92.1499 cv
392.59 92.27 392.75 92.3296 392.98 92.3296 cv
393.21 92.3296 393.38 92.2598 393.49 92.1196 cv
393.59 91.98 393.65 91.7598 393.66 91.4497 cv
394.34 91.4497 li
394.311 91.9297 394.181 92.27 393.95 92.48 cv
393.72 92.6899 393.37 92.7998 392.9 92.7998 cv
392.38 92.7998 392.01 92.6797 391.8 92.46 cv
391.58 92.2397 391.48 91.8496 391.48 91.2998 cv
391.48 88 li
391.48 88 li
cp
ef
298.3 248.127 mo
448.96 248.127 li
448.96 145.053 li
298.3 145.053 li
298.3 248.127 li
0 0 0 0 cmyk
f
gsave
298.3 248.09 mo
449 248.09 li
449 144.989 li
298.3 144.989 li
298.3 248.09 li
cp
clp
308.647 280.691 mo
309.909 258.531 li
311.171 248.26 li
312.433 234.349 li
313.694 223.678 li
314.956 217.226 li
316.218 212.793 li
317.479 208.784 li
318.742 205.081 li
320.003 201.644 li
321.265 198.674 li
322.527 196.259 li
323.789 194.284 li
325.051 192.573 li
326.313 191.003 li
327.574 189.472 li
328.836 188.135 li
330.098 186.881 li
331.359 185.737 li
332.622 184.649 li
333.883 183.562 li
335.145 182.528 li
336.407 181.485 li
337.668 180.444 li
338.931 179.417 li
340.192 178.302 li
341.454 177.098 li
342.716 175.846 li
343.978 174.536 li
345.239 173.223 li
346.501 171.916 li
347.763 170.598 li
349.025 169.286 li
350.287 167.993 li
351.548 166.721 li
352.811 165.435 li
354.072 164.146 li
355.334 162.815 li
356.596 161.493 li
357.857 160.221 li
359.119 158.993 li
360.381 157.752 li
361.643 156.461 li
362.904 155.214 li
364.166 154.067 li
365.428 153.028 li
366.69 152.13 li
367.952 151.366 li
369.214 150.749 li
370.476 150.295 li
371.737 150.092 li
372.999 150.137 li
374.261 150.334 li
375.523 150.655 li
376.785 151.086 li
378.046 151.626 li
379.309 152.25 li
380.57 152.905 li
381.832 153.608 li
383.094 154.39 li
384.355 155.245 li
385.617 156.155 li
386.879 157.086 li
388.142 158.055 li
389.403 159.065 li
390.664 160.123 li
391.926 161.241 li
393.188 162.428 li
394.45 163.704 li
395.712 165.036 li
396.974 166.435 li
398.235 167.901 li
399.497 169.414 li
400.759 170.978 li
402.021 172.641 li
403.283 174.462 li
404.544 176.362 li
405.807 178.434 li
407.068 180.704 li
408.33 183.099 li
409.592 185.793 li
410.854 188.932 li
412.115 192.438 li
413.377 196.249 li
414.64 200.239 li
415.901 204.393 li
417.162 208.641 li
418.424 213.594 li
419.687 219.13 li
420.948 224.536 li
422.21 230.888 li
423.472 238.6 li
424.733 246.737 li
425.995 259.128 li
427.257 270.831 li
0 .993988 1 0 cmyk
@
322.527 224.195 mo
323.789 215.435 li
325.051 214.663 li
326.313 213.221 li
327.574 213.852 li
328.836 208.96 li
330.098 205.475 li
331.359 204.381 li
332.622 200.783 li
333.883 195.823 li
335.145 194.541 li
336.407 191.075 li
337.668 187.762 li
338.931 185.073 li
340.192 182.993 li
341.454 180.743 li
342.716 178.19 li
343.978 176.299 li
345.239 174.399 li
346.501 172.599 li
347.763 170.794 li
349.025 169.097 li
350.287 167.462 li
351.548 165.842 li
352.811 164.347 li
354.072 162.854 li
355.334 161.465 li
356.596 160.289 li
357.857 158.875 li
359.119 157.853 li
360.381 156.741 li
361.643 155.755 li
362.904 154.832 li
364.166 154.021 li
365.428 153.132 li
366.69 152.235 li
367.952 151.425 li
369.214 150.679 li
370.476 150.182 li
371.737 149.918 li
372.999 150.099 li
374.261 150.429 li
375.523 150.884 li
376.785 151.375 li
378.046 152.003 li
379.309 152.678 li
380.57 153.334 li
381.832 153.983 li
383.094 154.616 li
384.355 155.461 li
385.617 156.271 li
386.879 157.219 li
388.142 158.187 li
389.403 159.334 li
390.664 160.28 li
391.926 161.487 li
393.188 162.7 li
394.45 163.848 li
395.712 165.254 li
396.974 166.444 li
398.235 167.893 li
399.497 168.978 li
400.759 170.722 li
402.021 172.323 li
403.283 173.677 li
404.544 175.274 li
405.807 177.11 li
407.068 179.378 li
408.33 180.458 li
409.592 182.129 li
410.854 183.758 li
412.115 185.266 li
413.377 187.692 li
414.64 190.137 li
415.901 191.579 li
417.162 194.37 li
418.424 196.216 li
419.687 198.632 li
420.948 200.041 li
422.21 202.929 li
423.472 204.169 li
424.733 206.265 li
425.995 210.9 li
427.257 212.1 li
428.52 220.21 li
429.781 224.195 li
431.042 221.024 li
432.304 224.646 li
433.566 233.325 li
434.828 229.818 li
436.09 237.136 li
0 0 0 1 cmyk
@
grestore
.5 lw
0 lc
323.41 145.053 mo
323.41 149.053 li
323.41 248.127 mo
323.41 244.127 li
0 0 0 1 cmyk
@
315.168 255.206 mo
320.176 255.206 li
320.176 255.838 li
315.168 255.838 li
315.168 255.206 li
315.168 255.206 li
cp
ef
323.584 258.134 mo
322.944 258.134 322.448 257.87 322.096 257.342 cv
321.744 256.813 321.568 256.078 321.568 255.118 cv
321.568 254.166 321.744 253.422 322.096 252.894 cv
322.448 252.366 322.944 252.094 323.584 252.094 cv
324.216 252.094 324.712 252.366 325.064 252.894 cv
325.416 253.422 325.6 254.166 325.6 255.118 cv
325.6 256.078 325.416 256.813 325.064 257.342 cv
324.712 257.87 324.216 258.134 323.584 258.134 cv
323.584 258.134 li
cp
323.584 257.758 mo
323.984 257.758 324.28 257.542 324.48 257.102 cv
324.672 256.67 324.776 256.006 324.776 255.118 cv
324.776 254.238 324.672 253.574 324.48 253.134 cv
324.28 252.702 323.984 252.478 323.584 252.478 cv
323.184 252.478 322.88 252.702 322.688 253.134 cv
322.488 253.574 322.392 254.238 322.392 255.118 cv
322.392 256.006 322.488 256.67 322.688 257.102 cv
322.88 257.542 323.184 257.758 323.584 257.758 cv
ef
326.832 257.622 mo
326.832 257.478 326.88 257.357 326.976 257.254 cv
327.072 257.158 327.2 257.102 327.352 257.102 cv
327.496 257.102 327.616 257.158 327.72 257.254 cv
327.816 257.357 327.872 257.478 327.872 257.622 cv
327.872 257.766 327.816 257.894 327.72 257.99 cv
327.616 258.086 327.496 258.134 327.352 258.134 cv
327.2 258.134 327.072 258.086 326.976 257.99 cv
326.88 257.894 326.832 257.773 326.832 257.622 cv
326.832 257.622 li
cp
ef
333.232 258.03 mo
330.576 258.03 li
330.576 257.614 li
331.512 257.614 li
331.512 256.47 li
328.968 256.47 li
328.968 256.046 li
331.52 252.094 li
332.296 252.094 li
332.296 256.054 li
333.408 256.054 li
333.408 256.47 li
332.296 256.47 li
332.296 257.614 li
333.232 257.614 li
333.232 258.03 li
333.232 258.03 li
cp
331.512 256.054 mo
331.512 252.95 li
329.52 256.054 li
331.512 256.054 li
ef
348.52 145.053 mo
348.52 149.053 li
348.52 248.127 mo
348.52 244.127 li
@
340.368 255.206 mo
345.376 255.206 li
345.376 255.838 li
340.368 255.838 li
340.368 255.206 li
340.368 255.206 li
cp
ef
348.784 258.134 mo
348.144 258.134 347.648 257.87 347.296 257.342 cv
346.944 256.813 346.768 256.078 346.768 255.118 cv
346.768 254.166 346.944 253.422 347.296 252.894 cv
347.648 252.366 348.144 252.094 348.784 252.094 cv
349.416 252.094 349.912 252.366 350.264 252.894 cv
350.616 253.422 350.8 254.166 350.8 255.118 cv
350.8 256.078 350.616 256.813 350.264 257.342 cv
349.912 257.87 349.416 258.134 348.784 258.134 cv
348.784 258.134 li
cp
348.784 257.758 mo
349.184 257.758 349.48 257.542 349.68 257.102 cv
349.872 256.67 349.976 256.006 349.976 255.118 cv
349.976 254.238 349.872 253.574 349.68 253.134 cv
349.48 252.702 349.184 252.478 348.784 252.478 cv
348.384 252.478 348.08 252.702 347.888 253.134 cv
347.688 253.574 347.592 254.238 347.592 255.118 cv
347.592 256.006 347.688 256.67 347.888 257.102 cv
348.08 257.542 348.384 257.758 348.784 257.758 cv
ef
352.272 257.622 mo
352.272 257.478 352.32 257.357 352.416 257.254 cv
352.512 257.158 352.64 257.102 352.792 257.102 cv
352.936 257.102 353.056 257.158 353.16 257.254 cv
353.256 257.357 353.312 257.478 353.312 257.622 cv
353.312 257.766 353.256 257.894 353.16 257.99 cv
353.056 258.086 352.936 258.134 352.792 258.134 cv
352.64 258.134 352.512 258.086 352.416 257.99 cv
352.32 257.894 352.272 257.773 352.272 257.622 cv
352.272 257.622 li
cp
ef
354.944 253.59 mo
354.504 253.59 li
354.504 252.55 li
354.776 252.406 355.056 252.294 355.344 252.214 cv
355.624 252.134 355.904 252.094 356.176 252.094 cv
356.784 252.094 357.264 252.246 357.616 252.534 cv
357.969 252.83 358.145 253.229 358.145 253.733 cv
358.145 254.31 357.744 254.99 356.944 255.782 cv
356.88 255.846 356.84 255.886 356.808 255.918 cv
355.336 257.39 li
357.768 257.39 li
357.768 256.67 li
358.225 256.67 li
358.225 258.03 li
354.464 258.03 li
354.464 257.605 li
356.232 255.838 li
356.616 255.454 356.896 255.094 357.064 254.766 cv
357.232 254.438 357.32 254.094 357.32 253.733 cv
357.32 253.342 357.216 253.038 357.008 252.813 cv
356.8 252.59 356.52 252.478 356.168 252.478 cv
355.792 252.478 355.504 252.574 355.304 252.758 cv
355.096 252.941 354.976 253.222 354.944 253.59 cv
354.944 253.59 li
cp
ef
373.63 145.053 mo
373.63 149.053 li
373.63 248.127 mo
373.63 244.127 li
@
370.385 258.134 mo
369.744 258.134 369.248 257.87 368.896 257.342 cv
368.544 256.813 368.368 256.078 368.368 255.118 cv
368.368 254.166 368.544 253.422 368.896 252.894 cv
369.248 252.366 369.744 252.094 370.385 252.094 cv
371.017 252.094 371.513 252.366 371.864 252.894 cv
372.216 253.422 372.4 254.166 372.4 255.118 cv
372.4 256.078 372.216 256.813 371.864 257.342 cv
371.513 257.87 371.017 258.134 370.385 258.134 cv
370.385 258.134 li
cp
370.385 257.758 mo
370.784 257.758 371.08 257.542 371.28 257.102 cv
371.473 256.67 371.576 256.006 371.576 255.118 cv
371.576 254.238 371.473 253.574 371.28 253.134 cv
371.08 252.702 370.784 252.478 370.385 252.478 cv
369.984 252.478 369.68 252.702 369.488 253.134 cv
369.288 253.574 369.192 254.238 369.192 255.118 cv
369.192 256.006 369.288 256.67 369.488 257.102 cv
369.68 257.542 369.984 257.758 370.385 257.758 cv
ef
373.632 257.622 mo
373.632 257.478 373.681 257.357 373.776 257.254 cv
373.872 257.158 374 257.102 374.152 257.102 cv
374.296 257.102 374.416 257.158 374.521 257.254 cv
374.616 257.357 374.672 257.478 374.672 257.622 cv
374.672 257.766 374.616 257.894 374.521 257.99 cv
374.416 258.086 374.296 258.134 374.152 258.134 cv
374 258.134 373.872 258.086 373.776 257.99 cv
373.681 257.894 373.632 257.773 373.632 257.622 cv
373.632 257.622 li
cp
ef
378.064 258.134 mo
377.424 258.134 376.928 257.87 376.576 257.342 cv
376.225 256.813 376.048 256.078 376.048 255.118 cv
376.048 254.166 376.225 253.422 376.576 252.894 cv
376.928 252.366 377.424 252.094 378.064 252.094 cv
378.696 252.094 379.192 252.366 379.544 252.894 cv
379.896 253.422 380.08 254.166 380.08 255.118 cv
380.08 256.078 379.896 256.813 379.544 257.342 cv
379.192 257.87 378.696 258.134 378.064 258.134 cv
378.064 258.134 li
cp
378.064 257.758 mo
378.464 257.758 378.76 257.542 378.96 257.102 cv
379.152 256.67 379.256 256.006 379.256 255.118 cv
379.256 254.238 379.152 253.574 378.96 253.134 cv
378.76 252.702 378.464 252.478 378.064 252.478 cv
377.664 252.478 377.36 252.702 377.168 253.134 cv
376.968 253.574 376.872 254.238 376.872 255.118 cv
376.872 256.006 376.968 256.67 377.168 257.102 cv
377.36 257.542 377.664 257.758 378.064 257.758 cv
ef
398.74 145.053 mo
398.74 149.053 li
398.74 248.127 mo
398.74 244.127 li
@
395.584 258.134 mo
394.944 258.134 394.448 257.87 394.097 257.342 cv
393.744 256.813 393.568 256.078 393.568 255.118 cv
393.568 254.166 393.744 253.422 394.097 252.894 cv
394.448 252.366 394.944 252.094 395.584 252.094 cv
396.216 252.094 396.712 252.366 397.064 252.894 cv
397.416 253.422 397.601 254.166 397.601 255.118 cv
397.601 256.078 397.416 256.813 397.064 257.342 cv
396.712 257.87 396.216 258.134 395.584 258.134 cv
395.584 258.134 li
cp
395.584 257.758 mo
395.984 257.758 396.28 257.542 396.48 257.102 cv
396.672 256.67 396.776 256.006 396.776 255.118 cv
396.776 254.238 396.672 253.574 396.48 253.134 cv
396.28 252.702 395.984 252.478 395.584 252.478 cv
395.185 252.478 394.88 252.702 394.688 253.134 cv
394.488 253.574 394.393 254.238 394.393 255.118 cv
394.393 256.006 394.488 256.67 394.688 257.102 cv
394.88 257.542 395.185 257.758 395.584 257.758 cv
ef
398.832 257.622 mo
398.832 257.478 398.88 257.357 398.977 257.254 cv
399.072 257.158 399.2 257.102 399.353 257.102 cv
399.496 257.102 399.616 257.158 399.72 257.254 cv
399.816 257.357 399.872 257.478 399.872 257.622 cv
399.872 257.766 399.816 257.894 399.72 257.99 cv
399.616 258.086 399.496 258.134 399.353 258.134 cv
399.2 258.134 399.072 258.086 398.977 257.99 cv
398.88 257.894 398.832 257.773 398.832 257.622 cv
398.832 257.622 li
cp
ef
401.744 253.59 mo
401.304 253.59 li
401.304 252.55 li
401.576 252.406 401.856 252.294 402.145 252.214 cv
402.424 252.134 402.704 252.094 402.977 252.094 cv
403.584 252.094 404.064 252.246 404.416 252.534 cv
404.769 252.83 404.944 253.229 404.944 253.733 cv
404.944 254.31 404.544 254.99 403.744 255.782 cv
403.681 255.846 403.641 255.886 403.608 255.918 cv
402.136 257.39 li
404.568 257.39 li
404.568 256.67 li
405.024 256.67 li
405.024 258.03 li
401.265 258.03 li
401.265 257.605 li
403.032 255.838 li
403.416 255.454 403.696 255.094 403.864 254.766 cv
404.032 254.438 404.12 254.094 404.12 253.733 cv
404.12 253.342 404.017 253.038 403.809 252.813 cv
403.601 252.59 403.32 252.478 402.968 252.478 cv
402.592 252.478 402.304 252.574 402.104 252.758 cv
401.896 252.941 401.776 253.222 401.744 253.59 cv
401.744 253.59 li
cp
ef
423.851 145.053 mo
423.851 149.053 li
423.851 248.127 mo
423.851 244.127 li
@
420.544 258.134 mo
419.904 258.134 419.408 257.87 419.057 257.342 cv
418.704 256.813 418.528 256.078 418.528 255.118 cv
418.528 254.166 418.704 253.422 419.057 252.894 cv
419.408 252.366 419.904 252.094 420.544 252.094 cv
421.176 252.094 421.672 252.366 422.024 252.894 cv
422.376 253.422 422.561 254.166 422.561 255.118 cv
422.561 256.078 422.376 256.813 422.024 257.342 cv
421.672 257.87 421.176 258.134 420.544 258.134 cv
420.544 258.134 li
cp
420.544 257.758 mo
420.944 257.758 421.24 257.542 421.44 257.102 cv
421.632 256.67 421.736 256.006 421.736 255.118 cv
421.736 254.238 421.632 253.574 421.44 253.134 cv
421.24 252.702 420.944 252.478 420.544 252.478 cv
420.145 252.478 419.84 252.702 419.648 253.134 cv
419.448 253.574 419.353 254.238 419.353 255.118 cv
419.353 256.006 419.448 256.67 419.648 257.102 cv
419.84 257.542 420.145 257.758 420.544 257.758 cv
ef
423.792 257.622 mo
423.792 257.478 423.84 257.357 423.937 257.254 cv
424.032 257.158 424.16 257.102 424.313 257.102 cv
424.456 257.102 424.576 257.158 424.681 257.254 cv
424.776 257.357 424.832 257.478 424.832 257.622 cv
424.832 257.766 424.776 257.894 424.681 257.99 cv
424.576 258.086 424.456 258.134 424.313 258.134 cv
424.16 258.134 424.032 258.086 423.937 257.99 cv
423.84 257.894 423.792 257.773 423.792 257.622 cv
423.792 257.622 li
cp
ef
430.192 258.03 mo
427.536 258.03 li
427.536 257.614 li
428.473 257.614 li
428.473 256.47 li
425.928 256.47 li
425.928 256.046 li
428.48 252.094 li
429.256 252.094 li
429.256 256.054 li
430.368 256.054 li
430.368 256.47 li
429.256 256.47 li
429.256 257.614 li
430.192 257.614 li
430.192 258.03 li
430.192 258.03 li
cp
428.473 256.054 mo
428.473 252.95 li
426.48 256.054 li
428.473 256.054 li
ef
359.227 263.769 mo
359.488 263.463 li
359.723 263.192 359.956 263.058 360.19 263.058 cv
360.299 263.058 360.424 263.094 360.559 263.157 cv
360.694 263.229 360.829 263.292 360.973 263.364 cv
361.108 263.436 361.234 263.463 361.352 263.463 cv
361.585 263.463 361.819 263.328 362.044 263.058 cv
362.225 263.211 li
361.963 263.517 li
361.729 263.787 361.495 263.922 361.262 263.922 cv
361.145 263.922 361.018 263.895 360.883 263.823 cv
360.748 263.751 360.613 263.688 360.479 263.616 cv
360.334 263.553 360.208 263.517 360.1 263.517 cv
359.857 263.517 359.623 263.651 359.407 263.922 cv
359.227 263.769 li
359.227 263.769 li
cp
ef
355.543 271.229 mo
355.48 271.229 355.453 271.193 355.453 271.113 cv
355.453 271.095 355.462 271.067 355.471 271.032 cv
355.48 270.996 355.489 270.969 355.507 270.951 cv
355.525 270.933 355.543 270.915 355.57 270.915 cv
356.146 270.915 356.479 270.734 356.569 270.366 cv
357.793 265.442 li
357.622 265.416 357.361 265.397 357.001 265.397 cv
356.938 265.397 356.911 265.361 356.911 265.281 cv
356.911 265.263 356.92 265.235 356.929 265.2 cv
356.938 265.164 356.947 265.137 356.965 265.119 cv
356.983 265.101 357.001 265.083 357.028 265.083 cv
358.585 265.083 li
358.621 265.083 358.648 265.101 358.666 265.137 cv
360.664 269.897 li
361.663 265.911 li
361.672 265.848 361.682 265.803 361.682 265.775 cv
361.682 265.523 361.447 265.397 360.988 265.397 cv
360.926 265.397 360.898 265.361 360.898 265.281 cv
360.916 265.209 360.934 265.155 360.943 265.128 cv
360.952 265.101 360.988 265.083 361.051 265.083 cv
362.977 265.083 li
363.031 265.083 363.067 265.128 363.067 265.2 cv
363.059 265.218 363.049 265.245 363.04 265.281 cv
363.031 265.316 363.021 265.353 363.004 265.371 cv
362.986 265.389 362.969 265.397 362.95 265.397 cv
362.374 265.397 362.041 265.587 361.951 265.947 cv
360.655 271.148 li
360.637 271.203 360.602 271.229 360.565 271.229 cv
360.457 271.229 li
360.412 271.229 360.385 271.212 360.376 271.167 cv
358.081 265.722 li
358.063 265.668 li
358.045 265.659 358.045 265.649 358.045 265.641 cv
356.857 270.401 li
356.848 270.42 356.839 270.447 356.839 270.465 cv
356.839 270.482 356.83 270.51 356.83 270.537 cv
356.83 270.699 356.893 270.798 357.028 270.843 cv
357.163 270.896 357.334 270.915 357.532 270.915 cv
357.586 270.915 357.622 270.96 357.622 271.032 cv
357.596 271.122 357.577 271.176 357.568 271.193 cv
357.551 271.221 357.523 271.229 357.469 271.229 cv
355.543 271.229 li
355.543 271.229 li
cp
ef
363.523 269.813 mo
363.523 269.724 363.555 269.648 363.631 269.572 cv
363.706 269.503 363.788 269.466 363.877 269.466 cv
363.945 269.466 364.002 269.49 364.053 269.535 cv
364.097 269.579 364.122 269.636 364.122 269.698 cv
364.122 269.793 364.084 269.875 364.009 269.944 cv
363.934 270.02 363.852 270.052 363.763 270.052 cv
363.693 270.052 363.637 270.032 363.593 269.982 cv
363.543 269.938 363.523 269.881 363.523 269.813 cv
363.523 269.813 li
cp
362.812 273.176 mo
362.812 273.101 362.824 273.019 362.861 272.931 cv
363.372 271.576 li
363.423 271.425 363.454 271.299 363.454 271.198 cv
363.454 271.072 363.404 271.009 363.315 271.009 cv
363.152 271.009 363.014 271.098 362.906 271.268 cv
362.793 271.443 362.717 271.633 362.666 271.841 cv
362.654 271.866 362.642 271.879 362.616 271.879 cv
362.541 271.879 li
362.503 271.879 362.49 271.859 362.49 271.821 cv
362.49 271.803 li
362.553 271.551 362.66 271.33 362.799 271.135 cv
362.938 270.946 363.113 270.846 363.328 270.846 cv
363.479 270.846 363.605 270.896 363.706 270.996 cv
363.807 271.098 363.863 271.217 363.863 271.368 cv
363.863 271.45 363.845 271.532 363.813 271.614 cv
363.303 272.969 li
363.24 273.107 363.215 273.232 363.215 273.347 cv
363.215 273.473 363.259 273.535 363.359 273.535 cv
363.523 273.535 363.656 273.447 363.77 273.271 cv
363.877 273.095 363.952 272.905 364.002 272.704 cv
364.009 272.679 364.027 272.666 364.053 272.666 cv
364.129 272.666 li
364.141 272.666 364.153 272.672 364.166 272.685 cv
364.179 272.697 364.186 272.71 364.186 272.723 cv
364.186 272.729 364.179 272.735 364.179 272.741 cv
364.115 272.98 364.015 273.201 363.877 273.396 cv
363.731 273.599 363.555 273.692 363.348 273.692 cv
363.195 273.692 363.07 273.643 362.969 273.548 cv
362.861 273.447 362.812 273.327 362.812 273.176 cv
ef
365.944 273.291 mo
365.944 273.272 365.944 273.255 365.953 273.255 cv
369.085 264.588 li
369.094 264.552 369.112 264.524 369.148 264.507 cv
369.176 264.489 369.211 264.479 369.247 264.479 cv
369.301 264.479 369.338 264.498 369.373 264.534 cv
369.409 264.57 369.428 264.605 369.428 264.66 cv
369.428 264.695 li
366.295 273.363 li
366.26 273.435 366.196 273.471 366.124 273.471 cv
366.07 273.471 366.034 273.453 365.998 273.417 cv
365.963 273.381 365.944 273.336 365.944 273.291 cv
365.944 273.291 li
cp
ef
370.424 271.229 mo
370.36 271.229 370.333 271.193 370.333 271.113 cv
370.333 271.095 370.342 271.067 370.352 271.032 cv
370.36 270.996 370.369 270.969 370.387 270.951 cv
370.405 270.933 370.424 270.915 370.45 270.915 cv
371.026 270.915 371.359 270.734 371.449 270.366 cv
372.673 265.442 li
372.502 265.416 372.241 265.397 371.881 265.397 cv
371.818 265.397 371.791 265.361 371.791 265.281 cv
371.791 265.263 371.8 265.235 371.81 265.2 cv
371.818 265.164 371.827 265.137 371.845 265.119 cv
371.863 265.101 371.881 265.083 371.908 265.083 cv
373.465 265.083 li
373.501 265.083 373.528 265.101 373.546 265.137 cv
375.544 269.897 li
376.543 265.911 li
376.552 265.848 376.562 265.803 376.562 265.775 cv
376.562 265.523 376.327 265.397 375.868 265.397 cv
375.806 265.397 375.778 265.361 375.778 265.281 cv
375.796 265.209 375.814 265.155 375.823 265.128 cv
375.832 265.101 375.868 265.083 375.932 265.083 cv
377.857 265.083 li
377.911 265.083 377.947 265.128 377.947 265.2 cv
377.938 265.218 377.929 265.245 377.92 265.281 cv
377.911 265.316 377.902 265.353 377.884 265.371 cv
377.866 265.389 377.849 265.397 377.83 265.397 cv
377.254 265.397 376.921 265.587 376.831 265.947 cv
375.535 271.148 li
375.518 271.203 375.481 271.229 375.445 271.229 cv
375.337 271.229 li
375.292 271.229 375.266 271.212 375.256 271.167 cv
372.961 265.722 li
372.943 265.668 li
372.925 265.659 372.925 265.649 372.925 265.641 cv
371.737 270.401 li
371.729 270.42 371.719 270.447 371.719 270.465 cv
371.719 270.482 371.71 270.51 371.71 270.537 cv
371.71 270.699 371.773 270.798 371.908 270.843 cv
372.043 270.896 372.214 270.915 372.412 270.915 cv
372.466 270.915 372.502 270.96 372.502 271.032 cv
372.476 271.122 372.457 271.176 372.448 271.193 cv
372.431 271.221 372.403 271.229 372.35 271.229 cv
370.424 271.229 li
370.424 271.229 li
cp
ef
378.403 269.813 mo
378.403 269.724 378.435 269.648 378.511 269.572 cv
378.586 269.503 378.668 269.466 378.756 269.466 cv
378.825 269.466 378.882 269.49 378.933 269.535 cv
378.977 269.579 379.002 269.636 379.002 269.698 cv
379.002 269.793 378.964 269.875 378.889 269.944 cv
378.813 270.02 378.731 270.052 378.643 270.052 cv
378.573 270.052 378.517 270.032 378.473 269.982 cv
378.423 269.938 378.403 269.881 378.403 269.813 cv
378.403 269.813 li
cp
377.691 273.176 mo
377.691 273.101 377.704 273.019 377.742 272.931 cv
378.252 271.576 li
378.303 271.425 378.334 271.299 378.334 271.198 cv
378.334 271.072 378.284 271.009 378.195 271.009 cv
378.032 271.009 377.894 271.098 377.786 271.268 cv
377.673 271.443 377.597 271.633 377.547 271.841 cv
377.534 271.866 377.521 271.879 377.496 271.879 cv
377.421 271.879 li
377.383 271.879 377.37 271.859 377.37 271.821 cv
377.37 271.803 li
377.434 271.551 377.54 271.33 377.679 271.135 cv
377.817 270.946 377.994 270.846 378.208 270.846 cv
378.359 270.846 378.485 270.896 378.586 270.996 cv
378.687 271.098 378.744 271.217 378.744 271.368 cv
378.744 271.45 378.725 271.532 378.693 271.614 cv
378.183 272.969 li
378.12 273.107 378.095 273.232 378.095 273.347 cv
378.095 273.473 378.139 273.535 378.239 273.535 cv
378.403 273.535 378.536 273.447 378.649 273.271 cv
378.756 273.095 378.832 272.905 378.882 272.704 cv
378.889 272.679 378.907 272.666 378.933 272.666 cv
379.009 272.666 li
379.021 272.666 379.033 272.672 379.046 272.685 cv
379.059 272.697 379.065 272.71 379.065 272.723 cv
379.065 272.729 379.059 272.735 379.059 272.741 cv
378.996 272.98 378.895 273.201 378.756 273.396 cv
378.611 273.599 378.435 273.692 378.228 273.692 cv
378.076 273.692 377.95 273.643 377.849 273.548 cv
377.742 273.447 377.691 273.327 377.691 273.176 cv
ef
383.11 273.453 mo
382.769 273.183 382.48 272.886 382.246 272.544 cv
382.003 272.202 381.806 271.833 381.652 271.455 cv
381.499 271.077 381.382 270.672 381.311 270.249 cv
381.229 269.835 381.193 269.412 381.193 268.979 cv
381.193 268.548 381.229 268.125 381.311 267.702 cv
381.382 267.288 381.499 266.883 381.661 266.486 cv
381.814 266.1 382.013 265.73 382.255 265.389 cv
382.498 265.047 382.786 264.75 383.11 264.498 cv
383.11 264.489 383.119 264.479 383.155 264.479 cv
383.236 264.479 li
383.254 264.479 383.263 264.489 383.281 264.507 cv
383.299 264.524 383.309 264.543 383.309 264.561 cv
383.309 264.588 383.299 264.605 383.29 264.615 cv
382.993 264.902 382.75 265.218 382.552 265.542 cv
382.354 265.866 382.201 266.217 382.084 266.586 cv
381.967 266.964 381.886 267.342 381.832 267.738 cv
381.778 268.134 381.751 268.548 381.751 268.979 cv
381.751 270.888 382.255 272.328 383.281 273.317 cv
383.299 273.336 383.309 273.354 383.309 273.39 cv
383.309 273.408 383.299 273.426 383.281 273.443 cv
383.263 273.462 383.254 273.471 383.236 273.471 cv
383.155 273.471 li
383.119 273.471 383.11 273.462 383.11 273.453 cv
383.11 273.453 li
cp
ef
384.373 271.077 mo
384.373 271.041 384.373 271.014 384.382 270.996 cv
385.058 268.313 li
385.093 268.151 385.12 267.999 385.12 267.873 cv
385.12 267.621 385.03 267.485 384.859 267.485 cv
384.67 267.485 384.526 267.603 384.437 267.828 cv
384.347 268.053 384.256 268.332 384.175 268.674 cv
384.175 268.691 384.166 268.71 384.148 268.719 cv
384.13 268.728 384.112 268.728 384.104 268.728 cv
383.995 268.728 li
383.978 268.728 383.959 268.719 383.941 268.701 cv
383.923 268.683 383.923 268.656 383.923 268.638 cv
383.986 268.377 384.049 268.151 384.112 267.972 cv
384.166 267.792 384.266 267.63 384.392 267.477 cv
384.518 267.333 384.67 267.252 384.868 267.252 cv
385.075 267.252 385.255 267.314 385.417 267.432 cv
385.57 267.558 385.669 267.711 385.705 267.909 cv
385.85 267.711 386.021 267.558 386.218 267.432 cv
386.416 267.314 386.632 267.252 386.866 267.252 cv
387.056 267.252 387.227 267.314 387.37 267.423 cv
387.515 267.531 387.586 267.684 387.586 267.873 cv
387.586 268.025 387.532 268.161 387.442 268.269 cv
387.343 268.386 387.217 268.439 387.064 268.439 cv
386.965 268.439 386.884 268.413 386.821 268.35 cv
386.749 268.296 386.723 268.215 386.723 268.116 cv
386.723 267.99 386.768 267.873 386.866 267.765 cv
386.956 267.657 387.073 267.603 387.199 267.603 cv
387.101 267.531 386.983 267.485 386.849 267.485 cv
386.587 267.485 386.362 267.585 386.173 267.765 cv
385.984 267.945 385.813 268.179 385.66 268.458 cv
385.021 271.032 li
385.003 271.122 384.958 271.185 384.886 271.239 cv
384.814 271.293 384.733 271.32 384.644 271.32 cv
384.571 271.32 384.508 271.293 384.454 271.257 cv
384.4 271.221 384.373 271.158 384.373 271.077 cv
384.373 271.077 li
cp
ef
388.345 273.471 mo
388.291 273.471 388.265 273.443 388.265 273.39 cv
388.265 273.363 388.265 273.345 388.282 273.336 cv
389.309 272.328 389.821 270.888 389.821 268.979 cv
389.821 267.072 389.309 265.623 388.3 264.633 cv
388.273 264.624 388.265 264.597 388.265 264.561 cv
388.265 264.543 388.273 264.524 388.291 264.507 cv
388.31 264.489 388.327 264.479 388.345 264.479 cv
388.426 264.479 li
388.444 264.479 388.453 264.489 388.472 264.498 cv
388.903 264.84 389.263 265.254 389.551 265.74 cv
389.839 266.226 390.046 266.748 390.182 267.297 cv
390.308 267.846 390.379 268.404 390.379 268.979 cv
390.379 269.412 390.343 269.826 390.271 270.24 cv
390.199 270.654 390.082 271.05 389.929 271.445 cv
389.768 271.842 389.569 272.202 389.335 272.544 cv
389.092 272.886 388.804 273.183 388.472 273.453 cv
388.453 273.462 388.444 273.471 388.426 273.471 cv
388.345 273.471 li
388.345 273.471 li
cp
ef
448.96 248.127 mo
444.96 248.127 li
298.3 248.127 mo
302.3 248.127 li
@
277.536 251.31 mo
277.536 250.894 li
278.552 250.894 li
278.552 246.046 li
277.376 246.806 li
277.376 246.294 li
278.8 245.374 li
279.336 245.374 li
279.336 250.894 li
280.352 250.894 li
280.352 251.31 li
277.536 251.31 li
277.536 251.31 li
cp
ef
283.984 251.414 mo
283.344 251.414 282.848 251.149 282.496 250.622 cv
282.144 250.094 281.968 249.357 281.968 248.397 cv
281.968 247.445 282.144 246.702 282.496 246.174 cv
282.848 245.646 283.344 245.374 283.984 245.374 cv
284.616 245.374 285.112 245.646 285.464 246.174 cv
285.816 246.702 286 247.445 286 248.397 cv
286 249.357 285.816 250.094 285.464 250.622 cv
285.112 251.149 284.616 251.414 283.984 251.414 cv
283.984 251.414 li
cp
283.984 251.038 mo
284.384 251.038 284.68 250.822 284.88 250.382 cv
285.072 249.95 285.176 249.286 285.176 248.397 cv
285.176 247.518 285.072 246.854 284.88 246.414 cv
284.68 245.981 284.384 245.758 283.984 245.758 cv
283.584 245.758 283.28 245.981 283.088 246.414 cv
282.888 246.854 282.792 247.518 282.792 248.397 cv
282.792 249.286 282.888 249.95 283.088 250.382 cv
283.28 250.822 283.584 251.038 283.984 251.038 cv
ef
286.727 245.517 mo
288.126 245.517 li
288.126 245.941 li
286.727 245.941 li
286.727 245.517 li
286.727 245.517 li
cp
ef
291.559 243.428 mo
289.962 247.229 li
289.554 247.229 li
291.077 243.596 li
289.19 243.596 li
289.19 244.1 li
288.871 244.1 li
288.871 243.147 li
291.559 243.147 li
291.559 243.428 li
291.559 243.428 li
cp
ef
448.96 230.948 mo
444.96 230.948 li
298.3 230.948 mo
302.3 230.948 li
@
277.536 234.03 mo
277.536 233.614 li
278.552 233.614 li
278.552 228.766 li
277.376 229.525 li
277.376 229.014 li
278.8 228.094 li
279.336 228.094 li
279.336 233.614 li
280.352 233.614 li
280.352 234.03 li
277.536 234.03 li
277.536 234.03 li
cp
ef
283.984 234.134 mo
283.344 234.134 282.848 233.87 282.496 233.342 cv
282.144 232.813 281.968 232.078 281.968 231.118 cv
281.968 230.166 282.144 229.422 282.496 228.894 cv
282.848 228.366 283.344 228.094 283.984 228.094 cv
284.616 228.094 285.112 228.366 285.464 228.894 cv
285.816 229.422 286 230.166 286 231.118 cv
286 232.078 285.816 232.813 285.464 233.342 cv
285.112 233.87 284.616 234.134 283.984 234.134 cv
283.984 234.134 li
cp
283.984 233.758 mo
284.384 233.758 284.68 233.542 284.88 233.102 cv
285.072 232.67 285.176 232.006 285.176 231.118 cv
285.176 230.238 285.072 229.574 284.88 229.134 cv
284.68 228.702 284.384 228.478 283.984 228.478 cv
283.584 228.478 283.28 228.702 283.088 229.134 cv
282.888 229.574 282.792 230.238 282.792 231.118 cv
282.792 232.006 282.888 232.67 283.088 233.102 cv
283.28 233.542 283.584 233.758 283.984 233.758 cv
ef
286.727 228.477 mo
288.126 228.477 li
288.126 228.901 li
286.727 228.901 li
286.727 228.477 li
286.727 228.477 li
cp
ef
289.341 227.944 mo
289.464 227.81 289.604 227.703 289.761 227.637 cv
289.918 227.569 290.091 227.535 290.293 227.535 cv
290.696 227.535 291.021 227.658 291.256 227.905 cv
291.491 228.151 291.609 228.481 291.609 228.901 cv
291.609 229.316 291.48 229.646 291.228 229.893 cv
290.971 230.14 290.635 230.263 290.209 230.263 cv
289.75 230.263 289.392 230.095 289.145 229.753 cv
288.898 229.411 288.775 228.919 288.775 228.28 cv
288.775 227.569 288.921 227.015 289.212 226.623 cv
289.503 226.23 289.918 226.034 290.456 226.034 cv
290.601 226.034 290.752 226.052 290.909 226.074 cv
291.066 226.102 291.228 226.141 291.396 226.197 cv
291.396 226.869 li
291.088 226.869 li
291.066 226.689 290.993 226.55 290.875 226.449 cv
290.758 226.354 290.601 226.304 290.399 226.304 cv
290.041 226.304 289.778 226.438 289.604 226.707 cv
289.431 226.976 289.341 227.39 289.341 227.944 cv
289.341 227.944 li
cp
290.231 229.999 mo
290.489 229.999 290.685 229.91 290.825 229.72 cv
290.959 229.529 291.032 229.26 291.032 228.901 cv
291.032 228.549 290.959 228.28 290.825 228.09 cv
290.685 227.899 290.489 227.805 290.231 227.805 cv
289.968 227.805 289.767 227.899 289.632 228.078 cv
289.498 228.264 289.431 228.526 289.431 228.868 cv
289.431 229.232 289.498 229.512 289.638 229.708 cv
289.772 229.904 289.974 229.999 290.231 229.999 cv
ef
448.96 213.769 mo
444.96 213.769 li
298.3 213.769 mo
302.3 213.769 li
@
277.536 216.75 mo
277.536 216.334 li
278.552 216.334 li
278.552 211.485 li
277.376 212.246 li
277.376 211.733 li
278.8 210.813 li
279.336 210.813 li
279.336 216.334 li
280.352 216.334 li
280.352 216.75 li
277.536 216.75 li
277.536 216.75 li
cp
ef
283.984 216.854 mo
283.344 216.854 282.848 216.59 282.496 216.062 cv
282.144 215.534 281.968 214.798 281.968 213.838 cv
281.968 212.886 282.144 212.142 282.496 211.614 cv
282.848 211.086 283.344 210.813 283.984 210.813 cv
284.616 210.813 285.112 211.086 285.464 211.614 cv
285.816 212.142 286 212.886 286 213.838 cv
286 214.798 285.816 215.534 285.464 216.062 cv
285.112 216.59 284.616 216.854 283.984 216.854 cv
283.984 216.854 li
cp
283.984 216.478 mo
284.384 216.478 284.68 216.262 284.88 215.822 cv
285.072 215.39 285.176 214.726 285.176 213.838 cv
285.176 212.958 285.072 212.294 284.88 211.854 cv
284.68 211.422 284.384 211.198 283.984 211.198 cv
283.584 211.198 283.28 211.422 283.088 211.854 cv
282.888 212.294 282.792 212.958 282.792 213.838 cv
282.792 214.726 282.888 215.39 283.088 215.822 cv
283.28 216.262 283.584 216.478 283.984 216.478 cv
ef
286.727 211.196 mo
288.126 211.196 li
288.126 211.622 li
286.727 211.622 li
286.727 211.196 li
286.727 211.196 li
cp
ef
291.217 208.827 mo
291.217 209.275 li
289.347 209.275 li
289.347 210.445 li
289.436 210.379 289.548 210.334 289.677 210.3 cv
289.8 210.267 289.946 210.25 290.103 210.25 cv
290.54 210.25 290.887 210.373 291.144 210.619 cv
291.402 210.866 291.531 211.196 291.531 211.616 cv
291.531 212.053 291.402 212.389 291.144 212.624 cv
290.887 212.865 290.522 212.982 290.058 212.982 cv
289.867 212.982 289.677 212.96 289.481 212.915 cv
289.279 212.876 289.078 212.809 288.876 212.714 cv
288.876 211.919 li
289.184 211.919 li
289.201 212.182 289.285 212.384 289.431 212.518 cv
289.576 212.652 289.789 212.72 290.058 212.72 cv
290.343 212.72 290.562 212.624 290.719 212.434 cv
290.875 212.243 290.954 211.975 290.954 211.616 cv
290.954 211.264 290.875 210.994 290.724 210.805 cv
290.567 210.614 290.349 210.519 290.058 210.519 cv
289.89 210.519 289.744 210.552 289.621 210.608 cv
289.498 210.664 289.386 210.754 289.291 210.877 cv
289.055 210.877 li
289.055 208.827 li
291.217 208.827 li
291.217 208.827 li
cp
ef
448.96 196.59 mo
444.96 196.59 li
298.3 196.59 mo
302.3 196.59 li
@
277.536 199.71 mo
277.536 199.294 li
278.552 199.294 li
278.552 194.446 li
277.376 195.206 li
277.376 194.694 li
278.8 193.774 li
279.336 193.774 li
279.336 199.294 li
280.352 199.294 li
280.352 199.71 li
277.536 199.71 li
277.536 199.71 li
cp
ef
283.984 199.813 mo
283.344 199.813 282.848 199.55 282.496 199.021 cv
282.144 198.494 281.968 197.758 281.968 196.798 cv
281.968 195.846 282.144 195.102 282.496 194.573 cv
282.848 194.046 283.344 193.774 283.984 193.774 cv
284.616 193.774 285.112 194.046 285.464 194.573 cv
285.816 195.102 286 195.846 286 196.798 cv
286 197.758 285.816 198.494 285.464 199.021 cv
285.112 199.55 284.616 199.813 283.984 199.813 cv
283.984 199.813 li
cp
283.984 199.438 mo
284.384 199.438 284.68 199.222 284.88 198.782 cv
285.072 198.35 285.176 197.686 285.176 196.798 cv
285.176 195.918 285.072 195.254 284.88 194.813 cv
284.68 194.382 284.384 194.157 283.984 194.157 cv
283.584 194.157 283.28 194.382 283.088 194.813 cv
282.888 195.254 282.792 195.918 282.792 196.798 cv
282.792 197.686 282.888 198.35 283.088 198.782 cv
283.28 199.222 283.584 199.438 283.984 199.438 cv
ef
286.727 193.916 mo
288.126 193.916 li
288.126 194.342 li
286.727 194.342 li
286.727 193.916 li
286.727 193.916 li
cp
ef
291.559 195.63 mo
289.699 195.63 li
289.699 195.339 li
290.354 195.339 li
290.354 194.538 li
288.574 194.538 li
288.574 194.241 li
290.36 191.475 li
290.903 191.475 li
290.903 194.247 li
291.682 194.247 li
291.682 194.538 li
290.903 194.538 li
290.903 195.339 li
291.559 195.339 li
291.559 195.63 li
291.559 195.63 li
cp
290.354 194.247 mo
290.354 192.073 li
288.96 194.247 li
290.354 194.247 li
ef
448.96 179.411 mo
444.96 179.411 li
298.3 179.411 mo
302.3 179.411 li
@
277.536 182.67 mo
277.536 182.254 li
278.552 182.254 li
278.552 177.405 li
277.376 178.166 li
277.376 177.653 li
278.8 176.733 li
279.336 176.733 li
279.336 182.254 li
280.352 182.254 li
280.352 182.67 li
277.536 182.67 li
277.536 182.67 li
cp
ef
283.984 182.774 mo
283.344 182.774 282.848 182.51 282.496 181.981 cv
282.144 181.454 281.968 180.718 281.968 179.758 cv
281.968 178.806 282.144 178.062 282.496 177.534 cv
282.848 177.006 283.344 176.733 283.984 176.733 cv
284.616 176.733 285.112 177.006 285.464 177.534 cv
285.816 178.062 286 178.806 286 179.758 cv
286 180.718 285.816 181.454 285.464 181.981 cv
285.112 182.51 284.616 182.774 283.984 182.774 cv
283.984 182.774 li
cp
283.984 182.397 mo
284.384 182.397 284.68 182.182 284.88 181.741 cv
285.072 181.31 285.176 180.646 285.176 179.758 cv
285.176 178.878 285.072 178.214 284.88 177.774 cv
284.68 177.342 284.384 177.118 283.984 177.118 cv
283.584 177.118 283.28 177.342 283.088 177.774 cv
282.888 178.214 282.792 178.878 282.792 179.758 cv
282.792 180.646 282.888 181.31 283.088 181.741 cv
283.28 182.182 283.584 182.397 283.984 182.397 cv
ef
286.727 176.876 mo
288.126 176.876 li
288.126 177.302 li
286.727 177.302 li
286.727 176.876 li
286.727 176.876 li
cp
ef
288.943 174.681 mo
289.156 174.603 289.358 174.541 289.554 174.496 cv
289.75 174.457 289.935 174.435 290.108 174.435 cv
290.506 174.435 290.819 174.524 291.043 174.692 cv
291.268 174.866 291.379 175.106 291.379 175.409 cv
291.379 175.655 291.301 175.862 291.144 176.024 cv
290.987 176.192 290.769 176.306 290.489 176.36 cv
290.825 176.411 291.083 176.534 291.268 176.73 cv
291.452 176.927 291.547 177.179 291.547 177.487 cv
291.547 177.867 291.418 178.159 291.161 178.36 cv
290.903 178.562 290.54 178.663 290.058 178.663 cv
289.845 178.663 289.632 178.64 289.431 178.595 cv
289.229 178.556 289.027 178.489 288.826 178.394 cv
288.826 177.599 li
289.134 177.599 li
289.15 177.867 289.24 178.063 289.397 178.198 cv
289.554 178.332 289.778 178.399 290.069 178.399 cv
290.349 178.399 290.567 178.321 290.73 178.159 cv
290.887 177.996 290.971 177.772 290.971 177.492 cv
290.971 177.173 290.887 176.933 290.719 176.765 cv
290.551 176.602 290.31 176.518 289.991 176.518 cv
289.733 176.518 li
289.733 176.237 li
289.867 176.237 li
290.187 176.237 290.427 176.177 290.584 176.042 cv
290.741 175.907 290.825 175.712 290.825 175.442 cv
290.825 175.208 290.758 175.022 290.629 174.894 cv
290.495 174.771 290.31 174.704 290.063 174.704 cv
289.817 174.704 289.621 174.765 289.487 174.883 cv
289.352 175 289.274 175.174 289.251 175.397 cv
288.943 175.397 li
288.943 174.681 li
288.943 174.681 li
cp
ef
448.96 162.231 mo
444.96 162.231 li
298.3 162.231 mo
302.3 162.231 li
@
277.536 165.39 mo
277.536 164.974 li
278.552 164.974 li
278.552 160.126 li
277.376 160.886 li
277.376 160.374 li
278.8 159.454 li
279.336 159.454 li
279.336 164.974 li
280.352 164.974 li
280.352 165.39 li
277.536 165.39 li
277.536 165.39 li
cp
ef
283.984 165.493 mo
283.344 165.493 282.848 165.229 282.496 164.702 cv
282.144 164.174 281.968 163.438 281.968 162.478 cv
281.968 161.526 282.144 160.782 282.496 160.254 cv
282.848 159.726 283.344 159.454 283.984 159.454 cv
284.616 159.454 285.112 159.726 285.464 160.254 cv
285.816 160.782 286 161.526 286 162.478 cv
286 163.438 285.816 164.174 285.464 164.702 cv
285.112 165.229 284.616 165.493 283.984 165.493 cv
283.984 165.493 li
cp
283.984 165.118 mo
284.384 165.118 284.68 164.901 284.88 164.462 cv
285.072 164.03 285.176 163.366 285.176 162.478 cv
285.176 161.598 285.072 160.934 284.88 160.493 cv
284.68 160.062 284.384 159.838 283.984 159.838 cv
283.584 159.838 283.28 160.062 283.088 160.493 cv
282.888 160.934 282.792 161.598 282.792 162.478 cv
282.792 163.366 282.888 164.03 283.088 164.462 cv
283.28 164.901 283.584 165.118 283.984 165.118 cv
ef
286.727 159.597 mo
288.126 159.597 li
288.126 160.022 li
286.727 160.022 li
286.727 159.597 li
286.727 159.597 li
cp
ef
289.117 158.202 mo
288.809 158.202 li
288.809 157.474 li
289 157.373 289.195 157.294 289.397 157.239 cv
289.593 157.183 289.789 157.155 289.979 157.155 cv
290.405 157.155 290.741 157.261 290.987 157.462 cv
291.234 157.67 291.357 157.95 291.357 158.303 cv
291.357 158.706 291.077 159.182 290.517 159.736 cv
290.472 159.781 290.444 159.81 290.422 159.831 cv
289.392 160.862 li
291.094 160.862 li
291.094 160.358 li
291.413 160.358 li
291.413 161.31 li
288.781 161.31 li
288.781 161.013 li
290.019 159.775 li
290.288 159.507 290.483 159.255 290.601 159.024 cv
290.719 158.796 290.78 158.555 290.78 158.303 cv
290.78 158.028 290.708 157.815 290.562 157.659 cv
290.416 157.502 290.22 157.423 289.974 157.423 cv
289.71 157.423 289.509 157.491 289.369 157.62 cv
289.224 157.748 289.139 157.944 289.117 158.202 cv
289.117 158.202 li
cp
ef
448.96 145.053 mo
444.96 145.053 li
298.3 145.053 mo
302.3 145.053 li
@
277.536 148.11 mo
277.536 147.694 li
278.552 147.694 li
278.552 142.846 li
277.376 143.606 li
277.376 143.094 li
278.8 142.174 li
279.336 142.174 li
279.336 147.694 li
280.352 147.694 li
280.352 148.11 li
277.536 148.11 li
277.536 148.11 li
cp
ef
283.984 148.214 mo
283.344 148.214 282.848 147.95 282.496 147.422 cv
282.144 146.894 281.968 146.157 281.968 145.198 cv
281.968 144.246 282.144 143.502 282.496 142.974 cv
282.848 142.446 283.344 142.174 283.984 142.174 cv
284.616 142.174 285.112 142.446 285.464 142.974 cv
285.816 143.502 286 144.246 286 145.198 cv
286 146.157 285.816 146.894 285.464 147.422 cv
285.112 147.95 284.616 148.214 283.984 148.214 cv
283.984 148.214 li
cp
283.984 147.838 mo
284.384 147.838 284.68 147.622 284.88 147.182 cv
285.072 146.75 285.176 146.086 285.176 145.198 cv
285.176 144.317 285.072 143.654 284.88 143.214 cv
284.68 142.782 284.384 142.558 283.984 142.558 cv
283.584 142.558 283.28 142.782 283.088 143.214 cv
282.888 143.654 282.792 144.317 282.792 145.198 cv
282.792 146.086 282.888 146.75 283.088 147.182 cv
283.28 147.622 283.584 147.838 283.984 147.838 cv
ef
286.727 142.556 mo
288.126 142.556 li
288.126 142.982 li
286.727 142.982 li
286.727 142.556 li
286.727 142.556 li
cp
ef
289.195 144.27 mo
289.195 143.979 li
289.907 143.979 li
289.907 140.585 li
289.083 141.117 li
289.083 140.759 li
290.08 140.115 li
290.456 140.115 li
290.456 143.979 li
291.167 143.979 li
291.167 144.27 li
289.195 144.27 li
289.195 144.27 li
cp
ef
448.96 145.839 mo
446.96 145.839 li
298.3 145.839 mo
300.3 145.839 li
448.96 146.718 mo
446.96 146.718 li
298.3 146.718 mo
300.3 146.718 li
448.96 147.714 mo
446.96 147.714 li
298.3 147.714 mo
300.3 147.714 li
448.96 148.864 mo
446.96 148.864 li
298.3 148.864 mo
300.3 148.864 li
448.96 150.225 mo
446.96 150.225 li
298.3 150.225 mo
300.3 150.225 li
448.96 151.889 mo
446.96 151.889 li
298.3 151.889 mo
300.3 151.889 li
448.96 154.036 mo
446.96 154.036 li
298.3 154.036 mo
300.3 154.036 li
448.96 157.062 mo
446.96 157.062 li
298.3 157.062 mo
300.3 157.062 li
448.96 163.018 mo
446.96 163.018 li
298.3 163.018 mo
300.3 163.018 li
448.96 163.897 mo
446.96 163.897 li
298.3 163.897 mo
300.3 163.897 li
448.96 164.893 mo
446.96 164.893 li
298.3 164.893 mo
300.3 164.893 li
448.96 166.043 mo
446.96 166.043 li
298.3 166.043 mo
300.3 166.043 li
448.96 167.403 mo
446.96 167.403 li
298.3 167.403 mo
300.3 167.403 li
448.96 169.067 mo
446.96 169.067 li
298.3 169.067 mo
300.3 169.067 li
448.96 171.215 mo
446.96 171.215 li
298.3 171.215 mo
300.3 171.215 li
448.96 174.239 mo
446.96 174.239 li
298.3 174.239 mo
300.3 174.239 li
448.96 180.196 mo
446.96 180.196 li
298.3 180.196 mo
300.3 180.196 li
448.96 181.075 mo
446.96 181.075 li
298.3 181.075 mo
300.3 181.075 li
448.96 182.071 mo
446.96 182.071 li
298.3 182.071 mo
300.3 182.071 li
448.96 183.222 mo
446.96 183.222 li
298.3 183.222 mo
300.3 183.222 li
448.96 184.582 mo
446.96 184.582 li
298.3 184.582 mo
300.3 184.582 li
448.96 186.247 mo
446.96 186.247 li
298.3 186.247 mo
300.3 186.247 li
448.96 188.394 mo
446.96 188.394 li
298.3 188.394 mo
300.3 188.394 li
448.96 191.419 mo
446.96 191.419 li
298.3 191.419 mo
300.3 191.419 li
448.96 197.376 mo
446.96 197.376 li
298.3 197.376 mo
300.3 197.376 li
448.96 198.255 mo
446.96 198.255 li
298.3 198.255 mo
300.3 198.255 li
448.96 199.251 mo
446.96 199.251 li
298.3 199.251 mo
300.3 199.251 li
448.96 200.4 mo
446.96 200.4 li
298.3 200.4 mo
300.3 200.4 li
448.96 201.761 mo
446.96 201.761 li
298.3 201.761 mo
300.3 201.761 li
448.96 203.426 mo
446.96 203.426 li
298.3 203.426 mo
300.3 203.426 li
448.96 205.573 mo
446.96 205.573 li
298.3 205.573 mo
300.3 205.573 li
448.96 208.598 mo
446.96 208.598 li
298.3 208.598 mo
300.3 208.598 li
448.96 214.555 mo
446.96 214.555 li
298.3 214.555 mo
300.3 214.555 li
448.96 215.434 mo
446.96 215.434 li
298.3 215.434 mo
300.3 215.434 li
448.96 216.43 mo
446.96 216.43 li
298.3 216.43 mo
300.3 216.43 li
448.96 217.58 mo
446.96 217.58 li
298.3 217.58 mo
300.3 217.58 li
448.96 218.939 mo
446.96 218.939 li
298.3 218.939 mo
300.3 218.939 li
448.96 220.604 mo
446.96 220.604 li
298.3 220.604 mo
300.3 220.604 li
448.96 222.751 mo
446.96 222.751 li
298.3 222.751 mo
300.3 222.751 li
448.96 225.776 mo
446.96 225.776 li
298.3 225.776 mo
300.3 225.776 li
448.96 231.733 mo
446.96 231.733 li
298.3 231.733 mo
300.3 231.733 li
448.96 232.613 mo
446.96 232.613 li
298.3 232.613 mo
300.3 232.613 li
448.96 233.608 mo
446.96 233.608 li
298.3 233.608 mo
300.3 233.608 li
448.96 234.759 mo
446.96 234.759 li
298.3 234.759 mo
300.3 234.759 li
448.96 236.119 mo
446.96 236.119 li
298.3 236.119 mo
300.3 236.119 li
448.96 237.784 mo
446.96 237.784 li
298.3 237.784 mo
300.3 237.784 li
448.96 239.93 mo
446.96 239.93 li
298.3 239.93 mo
300.3 239.93 li
448.96 242.955 mo
446.96 242.955 li
298.3 242.955 mo
300.3 242.955 li
@
1.5 lw
2 lc
298.3 248.127 mo
298.3 145.053 li
298.3 248.127 mo
448.96 248.127 li
448.96 248.127 mo
448.96 145.053 li
298.3 145.053 mo
448.96 145.053 li
@
431.428 158.85 mo
430.468 158.418 429.748 157.745 429.269 156.834 cv
428.788 155.922 428.548 154.758 428.548 153.366 cv
428.548 151.974 428.788 150.821 429.269 149.897 cv
429.748 148.974 430.468 148.302 431.428 147.87 cv
431.428 148.446 li
430.828 148.866 430.396 149.454 430.132 150.198 cv
429.868 150.954 429.736 152.01 429.736 153.366 cv
429.736 154.733 429.868 155.79 430.132 156.534 cv
430.396 157.278 430.828 157.854 431.428 158.274 cv
431.428 158.85 li
431.428 158.85 li
cp
ef
434.86 154.182 mo
434.86 154.938 435.004 155.514 435.292 155.897 cv
435.58 156.294 435.988 156.485 436.54 156.485 cv
437.092 156.485 437.5 156.271 437.788 155.825 cv
438.076 155.394 438.22 154.733 438.22 153.87 cv
438.22 153.006 438.076 152.358 437.788 151.926 cv
437.5 151.493 437.092 151.266 436.54 151.266 cv
435.988 151.266 435.58 151.47 435.292 151.866 cv
435.004 152.262 434.86 152.825 434.86 153.569 cv
434.86 154.182 li
434.86 154.182 li
cp
433.78 156.366 mo
433.78 148.493 li
432.748 148.493 li
432.748 147.87 li
434.86 147.87 li
434.86 151.733 li
435.064 151.35 435.328 151.062 435.664 150.87 cv
435.988 150.69 436.396 150.594 436.876 150.594 cv
437.645 150.594 438.269 150.905 438.748 151.506 cv
439.229 152.106 439.48 152.897 439.48 153.87 cv
439.48 154.854 439.229 155.646 438.748 156.245 cv
438.269 156.846 437.645 157.146 436.876 157.146 cv
436.396 157.146 435.988 157.05 435.664 156.882 cv
435.328 156.702 435.064 156.414 434.86 156.018 cv
434.86 156.989 li
432.748 156.989 li
432.748 156.366 li
433.78 156.366 li
ef
440.933 158.85 mo
440.933 158.274 li
441.532 157.854 441.964 157.278 442.229 156.534 cv
442.492 155.79 442.624 154.733 442.624 153.366 cv
442.624 152.01 442.492 150.954 442.229 150.198 cv
441.964 149.454 441.532 148.866 440.933 148.446 cv
440.933 147.87 li
441.88 148.302 442.601 148.974 443.08 149.897 cv
443.561 150.821 443.813 151.974 443.813 153.366 cv
443.813 154.758 443.561 155.922 443.08 156.834 cv
442.601 157.745 441.88 158.418 440.933 158.85 cv
440.933 158.85 li
cp
ef
326.388 243.127 mo
420.872 243.127 li
420.872 210.783 li
326.388 210.783 li
326.388 243.127 li
326.388 243.127 li
cp
0 0 0 0 cmyk
f
1 lw
326.388 243.127 mo
420.872 243.127 li
420.872 210.783 li
326.388 210.783 li
326.388 243.127 li
326.388 243.127 li
cp
0 0 0 1 cmyk
@
1.5 lw
333.388 218.877 mo
347.388 218.877 li
0 .993988 1 0 cmyk
@
359.41 221.92 mo
359.41 220.26 li
359.971 220.26 li
359.98 220.82 360.141 221.229 360.45 221.49 cv
360.75 221.76 361.221 221.89 361.84 221.89 cv
362.42 221.89 362.86 221.78 363.16 221.55 cv
363.46 221.32 363.62 220.979 363.62 220.54 cv
363.62 220.189 363.52 219.92 363.34 219.729 cv
363.16 219.55 362.77 219.359 362.18 219.18 cv
361.221 218.89 li
360.52 218.68 360.02 218.42 359.74 218.1 cv
359.46 217.79 359.32 217.359 359.32 216.8 cv
359.32 216.18 359.54 215.7 359.98 215.359 cv
360.42 215.02 361.03 214.85 361.83 214.85 cv
362.17 214.85 362.54 214.89 362.94 214.96 cv
363.34 215.04 363.77 215.14 364.23 215.28 cv
364.23 216.83 li
363.68 216.83 li
363.62 216.32 363.45 215.95 363.16 215.72 cv
362.87 215.49 362.43 215.37 361.85 215.37 cv
361.33 215.37 360.94 215.479 360.67 215.689 cv
360.4 215.899 360.27 216.2 360.27 216.6 cv
360.27 216.95 360.37 217.22 360.57 217.42 cv
360.77 217.62 361.2 217.82 361.86 218.01 cv
362.76 218.28 li
363.42 218.479 363.891 218.74 364.17 219.04 cv
364.45 219.35 364.6 219.76 364.6 220.28 cv
364.6 220.99 364.37 221.52 363.92 221.87 cv
363.46 222.229 362.79 222.399 361.9 222.399 cv
361.5 222.399 361.09 222.359 360.67 222.28 cv
360.25 222.21 359.83 222.09 359.41 221.92 cv
359.41 221.92 li
cp
0 0 0 1 cmyk
ef
367.32 221.75 mo
368.17 221.75 li
368.17 222.27 li
365.561 222.27 li
365.561 221.75 li
366.42 221.75 li
366.42 217.6 li
365.561 217.6 li
365.561 217.08 li
367.32 217.08 li
367.32 221.75 li
367.32 221.75 li
cp
366.17 215.47 mo
366.17 215.32 366.221 215.189 366.33 215.08 cv
366.44 214.97 366.57 214.91 366.73 214.91 cv
366.87 214.91 367 214.97 367.11 215.08 cv
367.221 215.189 367.28 215.32 367.28 215.47 cv
367.28 215.63 367.221 215.76 367.12 215.859 cv
367.01 215.97 366.881 216.02 366.73 216.02 cv
366.57 216.02 366.44 215.97 366.33 215.859 cv
366.221 215.76 366.17 215.63 366.17 215.47 cv
ef
373.5 218.09 mo
373.67 217.71 373.891 217.43 374.16 217.229 cv
374.431 217.04 374.74 216.939 375.101 216.939 cv
375.641 216.939 376.05 217.109 376.32 217.45 cv
376.58 217.79 376.72 218.29 376.72 218.97 cv
376.72 221.75 li
377.53 221.75 li
377.53 222.27 li
375.04 222.27 li
375.04 221.75 li
375.82 221.75 li
375.82 219.07 li
375.82 218.55 375.74 218.17 375.58 217.939 cv
375.42 217.72 375.17 217.6 374.811 217.6 cv
374.41 217.6 374.101 217.76 373.891 218.06 cv
373.681 218.359 373.58 218.8 373.58 219.38 cv
373.58 221.75 li
374.36 221.75 li
374.36 222.27 li
371.9 222.27 li
371.9 221.75 li
372.681 221.75 li
372.681 219.04 li
372.681 218.52 372.601 218.149 372.44 217.93 cv
372.28 217.71 372.03 217.6 371.67 217.6 cv
371.271 217.6 370.96 217.76 370.75 218.06 cv
370.54 218.359 370.44 218.8 370.44 219.38 cv
370.44 221.75 li
371.22 221.75 li
371.22 222.27 li
368.73 222.27 li
368.73 221.75 li
369.54 221.75 li
369.54 217.59 li
368.68 217.59 li
368.68 217.08 li
370.44 217.08 li
370.44 218 li
370.6 217.66 370.811 217.39 371.07 217.21 cv
371.33 217.03 371.62 216.939 371.95 216.939 cv
372.351 216.939 372.681 217.04 372.95 217.24 cv
373.22 217.439 373.4 217.729 373.5 218.09 cv
373.5 218.09 li
cp
ef
381.46 217.08 mo
383.141 217.08 li
383.141 221.75 li
383.99 221.75 li
383.99 222.27 li
382.24 222.27 li
382.24 221.35 li
382.07 221.7 381.851 221.96 381.59 222.14 cv
381.33 222.31 381.021 222.399 380.681 222.399 cv
380.101 222.399 379.67 222.24 379.4 221.92 cv
379.13 221.6 379 221.08 379 220.38 cv
379 217.6 li
378.19 217.6 li
378.19 217.08 li
379.9 217.08 li
379.9 220.1 li
379.9 220.74 379.97 221.17 380.13 221.399 cv
380.29 221.64 380.561 221.75 380.96 221.75 cv
381.38 221.75 381.69 221.6 381.91 221.29 cv
382.13 220.99 382.24 220.54 382.24 219.96 cv
382.24 217.6 li
381.46 217.6 li
381.46 217.08 li
381.46 217.08 li
cp
ef
386.45 221.75 mo
387.3 221.75 li
387.3 222.27 li
384.69 222.27 li
384.69 221.75 li
385.55 221.75 li
385.55 215.189 li
384.69 215.189 li
384.69 214.67 li
386.45 214.67 li
386.45 221.75 li
386.45 221.75 li
cp
ef
392.4 219.03 mo
392.4 221.75 li
393.2 221.75 li
393.2 222.27 li
391.5 222.27 li
391.5 221.71 li
391.3 221.95 391.07 222.13 390.811 222.24 cv
390.55 222.34 390.24 222.399 389.9 222.399 cv
389.32 222.399 388.86 222.25 388.521 221.95 cv
388.181 221.649 388.021 221.229 388.021 220.71 cv
388.021 220.18 388.21 219.77 388.601 219.47 cv
388.98 219.17 389.53 219.02 390.24 219.02 cv
391.5 219.02 li
391.5 218.66 li
391.5 218.27 391.38 217.97 391.141 217.75 cv
390.9 217.53 390.561 217.42 390.13 217.42 cv
389.771 217.42 389.49 217.51 389.28 217.67 cv
389.061 217.83 388.931 218.07 388.88 218.39 cv
388.42 218.39 li
388.42 217.34 li
388.73 217.21 389.03 217.109 389.33 217.04 cv
389.62 216.979 389.91 216.939 390.19 216.939 cv
390.91 216.939 391.45 217.12 391.83 217.479 cv
392.21 217.84 392.4 218.35 392.4 219.03 cv
392.4 219.03 li
cp
391.5 220.64 mo
391.5 219.54 li
390.34 219.54 li
389.891 219.54 389.561 219.64 389.34 219.83 cv
389.12 220.03 389.021 220.32 389.021 220.71 cv
389.021 221.07 389.13 221.359 389.351 221.57 cv
389.57 221.79 389.87 221.89 390.25 221.89 cv
390.62 221.89 390.92 221.78 391.15 221.55 cv
391.38 221.32 391.5 221.02 391.5 220.64 cv
ef
394.601 217.6 mo
393.811 217.6 li
393.811 217.08 li
394.601 217.08 li
394.601 215.47 li
395.5 215.47 li
395.5 217.08 li
397.19 217.08 li
397.19 217.6 li
395.5 217.6 li
395.5 220.899 li
395.5 221.34 395.54 221.63 395.63 221.75 cv
395.71 221.87 395.87 221.93 396.101 221.93 cv
396.33 221.93 396.5 221.859 396.61 221.72 cv
396.71 221.58 396.771 221.359 396.78 221.05 cv
397.46 221.05 li
397.431 221.53 397.3 221.87 397.07 222.08 cv
396.84 222.29 396.49 222.399 396.021 222.399 cv
395.5 222.399 395.13 222.28 394.92 222.06 cv
394.7 221.84 394.601 221.45 394.601 220.899 cv
394.601 217.6 li
394.601 217.6 li
cp
ef
399.72 221.75 mo
400.57 221.75 li
400.57 222.27 li
397.96 222.27 li
397.96 221.75 li
398.82 221.75 li
398.82 217.6 li
397.96 217.6 li
397.96 217.08 li
399.72 217.08 li
399.72 221.75 li
399.72 221.75 li
cp
398.57 215.47 mo
398.57 215.32 398.62 215.189 398.73 215.08 cv
398.84 214.97 398.97 214.91 399.13 214.91 cv
399.271 214.91 399.4 214.97 399.51 215.08 cv
399.62 215.189 399.681 215.32 399.681 215.47 cv
399.681 215.63 399.62 215.76 399.521 215.859 cv
399.41 215.97 399.28 216.02 399.13 216.02 cv
398.97 216.02 398.84 215.97 398.73 215.859 cv
398.62 215.76 398.57 215.63 398.57 215.47 cv
ef
403.73 222.399 mo
402.97 222.399 402.37 222.16 401.91 221.66 cv
401.45 221.16 401.22 220.5 401.22 219.67 cv
401.22 218.85 401.44 218.189 401.9 217.689 cv
402.36 217.189 402.97 216.939 403.73 216.939 cv
404.49 216.939 405.09 217.189 405.55 217.689 cv
406.01 218.189 406.24 218.85 406.24 219.67 cv
406.24 220.5 406.01 221.16 405.55 221.66 cv
405.09 222.16 404.49 222.399 403.73 222.399 cv
403.73 222.399 li
cp
403.73 221.93 mo
404.21 221.93 404.57 221.74 404.82 221.359 cv
405.061 220.979 405.19 220.42 405.19 219.67 cv
405.19 218.93 405.061 218.37 404.82 217.99 cv
404.57 217.609 404.21 217.42 403.73 217.42 cv
403.25 217.42 402.88 217.609 402.641 217.99 cv
402.391 218.37 402.271 218.93 402.271 219.67 cv
402.271 220.42 402.391 220.979 402.641 221.359 cv
402.88 221.74 403.25 221.93 403.73 221.93 cv
ef
407.13 222.27 mo
407.13 221.75 li
407.94 221.75 li
407.94 217.6 li
407.08 217.6 li
407.08 217.08 li
408.84 217.08 li
408.84 218 li
409 217.66 409.22 217.39 409.48 217.21 cv
409.74 217.03 410.05 216.939 410.41 216.939 cv
410.98 216.939 411.4 217.109 411.67 217.43 cv
411.94 217.76 412.08 218.27 412.08 218.97 cv
412.08 221.75 li
412.88 221.75 li
412.88 222.27 li
410.4 222.27 li
410.4 221.75 li
411.181 221.75 li
411.181 219.25 li
411.181 218.62 411.101 218.189 410.94 217.95 cv
410.78 217.71 410.51 217.59 410.12 217.59 cv
409.7 217.59 409.38 217.75 409.16 218.05 cv
408.94 218.359 408.84 218.8 408.84 219.38 cv
408.84 221.75 li
409.62 221.75 li
409.62 222.27 li
407.13 222.27 li
407.13 222.27 li
cp
ef
333.388 233.549 mo
347.388 233.549 li
@
359.03 237.149 mo
359.03 236.63 li
359.96 236.63 li
359.96 230.38 li
359.03 230.38 li
359.03 229.859 li
364.9 229.859 li
364.9 231.479 li
364.301 231.479 li
364.301 230.46 li
360.95 230.46 li
360.95 232.899 li
363.34 232.899 li
363.34 231.99 li
363.94 231.99 li
363.94 234.41 li
363.34 234.41 li
363.34 233.5 li
360.95 233.5 li
360.95 236.55 li
364.381 236.55 li
364.381 235.53 li
364.98 235.53 li
364.98 237.149 li
359.03 237.149 li
359.03 237.149 li
cp
ef
368.59 233.979 mo
369.68 232.479 li
368.98 232.479 li
368.98 231.96 li
370.98 231.96 li
370.98 232.479 li
370.29 232.479 li
368.9 234.399 li
370.52 236.63 li
371.2 236.63 li
371.2 237.149 li
368.801 237.149 li
368.801 236.63 li
369.46 236.63 li
368.33 235.08 li
367.2 236.63 li
367.87 236.63 li
367.87 237.149 li
365.9 237.149 li
365.9 236.63 li
366.59 236.63 li
368.02 234.66 li
366.44 232.479 li
365.801 232.479 li
365.801 231.96 li
368.12 231.96 li
368.12 232.479 li
367.5 232.479 li
368.59 233.979 li
368.59 233.979 li
cp
ef
372.59 232.479 mo
371.73 232.479 li
371.73 231.96 li
373.49 231.96 li
373.49 232.77 li
373.66 232.45 373.88 232.21 374.16 232.05 cv
374.431 231.899 374.771 231.82 375.17 231.82 cv
375.811 231.82 376.33 232.08 376.73 232.58 cv
377.13 233.08 377.34 233.74 377.34 234.55 cv
377.34 235.37 377.13 236.03 376.73 236.53 cv
376.33 237.03 375.811 237.28 375.17 237.28 cv
374.771 237.28 374.431 237.2 374.16 237.06 cv
373.88 236.91 373.66 236.67 373.49 236.34 cv
373.49 238.7 li
374.34 238.7 li
374.34 239.22 li
371.73 239.22 li
371.73 238.7 li
372.59 238.7 li
372.59 232.479 li
372.59 232.479 li
cp
373.49 234.3 mo
373.49 234.81 li
373.49 235.439 373.61 235.92 373.851 236.24 cv
374.09 236.57 374.431 236.729 374.891 236.729 cv
375.351 236.729 375.69 236.55 375.931 236.18 cv
376.17 235.82 376.29 235.27 376.29 234.55 cv
376.29 233.83 376.17 233.29 375.931 232.93 cv
375.69 232.57 375.351 232.38 374.891 232.38 cv
374.431 232.38 374.09 232.55 373.851 232.88 cv
373.61 233.21 373.49 233.68 373.49 234.3 cv
ef
382.04 234.13 mo
382.021 233.53 381.891 233.07 381.65 232.76 cv
381.41 232.46 381.08 232.3 380.641 232.3 cv
380.22 232.3 379.9 232.46 379.66 232.77 cv
379.42 233.08 379.28 233.53 379.23 234.13 cv
382.04 234.13 li
382.04 234.13 li
cp
383.101 234.649 mo
379.23 234.649 li
379.23 234.689 li
379.23 235.39 379.36 235.92 379.62 236.28 cv
379.88 236.64 380.271 236.81 380.79 236.81 cv
381.181 236.81 381.5 236.71 381.76 236.5 cv
382.01 236.3 382.19 235.99 382.29 235.58 cv
383.01 235.58 li
382.87 236.149 382.601 236.58 382.22 236.859 cv
381.83 237.14 381.32 237.28 380.7 237.28 cv
379.94 237.28 379.33 237.04 378.87 236.54 cv
378.41 236.04 378.181 235.38 378.181 234.55 cv
378.181 233.729 378.4 233.07 378.86 232.57 cv
379.311 232.07 379.9 231.82 380.641 231.82 cv
381.42 231.82 382.03 232.07 382.45 232.55 cv
382.87 233.03 383.08 233.729 383.101 234.649 cv
ef
388.46 231.95 mo
388.46 233.25 li
387.94 233.25 li
387.92 232.99 387.851 232.8 387.73 232.67 cv
387.601 232.55 387.41 232.479 387.17 232.479 cv
386.73 232.479 386.391 232.64 386.15 232.939 cv
385.91 233.25 385.8 233.689 385.8 234.26 cv
385.8 236.63 li
386.84 236.63 li
386.84 237.149 li
384.09 237.149 li
384.09 236.63 li
384.9 236.63 li
384.9 232.47 li
384.04 232.47 li
384.04 231.96 li
385.8 231.96 li
385.8 232.88 li
385.97 232.52 386.19 232.26 386.47 232.08 cv
386.75 231.91 387.09 231.82 387.49 231.82 cv
387.63 231.82 387.79 231.84 387.95 231.859 cv
388.11 231.88 388.28 231.91 388.46 231.95 cv
388.46 231.95 li
cp
ef
390.601 236.63 mo
391.45 236.63 li
391.45 237.149 li
388.84 237.149 li
388.84 236.63 li
389.7 236.63 li
389.7 232.479 li
388.84 232.479 li
388.84 231.96 li
390.601 231.96 li
390.601 236.63 li
390.601 236.63 li
cp
389.45 230.35 mo
389.45 230.2 389.5 230.07 389.61 229.96 cv
389.72 229.85 389.851 229.79 390.01 229.79 cv
390.15 229.79 390.28 229.85 390.391 229.96 cv
390.5 230.07 390.561 230.2 390.561 230.35 cv
390.561 230.51 390.5 230.64 390.4 230.74 cv
390.29 230.85 390.16 230.899 390.01 230.899 cv
389.851 230.899 389.72 230.85 389.61 230.74 cv
389.5 230.64 389.45 230.51 389.45 230.35 cv
ef
396.78 232.97 mo
396.95 232.59 397.17 232.31 397.44 232.109 cv
397.71 231.92 398.021 231.82 398.38 231.82 cv
398.92 231.82 399.33 231.99 399.601 232.33 cv
399.86 232.67 400 233.17 400 233.85 cv
400 236.63 li
400.811 236.63 li
400.811 237.149 li
398.32 237.149 li
398.32 236.63 li
399.101 236.63 li
399.101 233.95 li
399.101 233.43 399.021 233.05 398.86 232.82 cv
398.7 232.6 398.45 232.479 398.09 232.479 cv
397.69 232.479 397.38 232.64 397.17 232.939 cv
396.96 233.24 396.86 233.68 396.86 234.26 cv
396.86 236.63 li
397.641 236.63 li
397.641 237.149 li
395.181 237.149 li
395.181 236.63 li
395.96 236.63 li
395.96 233.92 li
395.96 233.399 395.88 233.03 395.72 232.81 cv
395.561 232.59 395.311 232.479 394.95 232.479 cv
394.55 232.479 394.24 232.64 394.03 232.939 cv
393.82 233.24 393.72 233.68 393.72 234.26 cv
393.72 236.63 li
394.5 236.63 li
394.5 237.149 li
392.01 237.149 li
392.01 236.63 li
392.82 236.63 li
392.82 232.47 li
391.96 232.47 li
391.96 231.96 li
393.72 231.96 li
393.72 232.88 li
393.88 232.54 394.09 232.27 394.351 232.09 cv
394.61 231.91 394.9 231.82 395.23 231.82 cv
395.63 231.82 395.96 231.92 396.23 232.12 cv
396.5 232.32 396.681 232.609 396.78 232.97 cv
396.78 232.97 li
cp
ef
405.561 234.13 mo
405.54 233.53 405.41 233.07 405.17 232.76 cv
404.931 232.46 404.601 232.3 404.16 232.3 cv
403.74 232.3 403.42 232.46 403.181 232.77 cv
402.94 233.08 402.8 233.53 402.75 234.13 cv
405.561 234.13 li
405.561 234.13 li
cp
406.62 234.649 mo
402.75 234.649 li
402.75 234.689 li
402.75 235.39 402.88 235.92 403.141 236.28 cv
403.4 236.64 403.79 236.81 404.311 236.81 cv
404.7 236.81 405.021 236.71 405.28 236.5 cv
405.53 236.3 405.71 235.99 405.811 235.58 cv
406.53 235.58 li
406.391 236.149 406.12 236.58 405.74 236.859 cv
405.351 237.14 404.84 237.28 404.22 237.28 cv
403.46 237.28 402.851 237.04 402.391 236.54 cv
401.931 236.04 401.7 235.38 401.7 234.55 cv
401.7 233.729 401.92 233.07 402.38 232.57 cv
402.83 232.07 403.42 231.82 404.16 231.82 cv
404.94 231.82 405.55 232.07 405.97 232.55 cv
406.391 233.03 406.601 233.729 406.62 234.649 cv
ef
407.37 237.149 mo
407.37 236.63 li
408.181 236.63 li
408.181 232.479 li
407.32 232.479 li
407.32 231.96 li
409.08 231.96 li
409.08 232.88 li
409.24 232.54 409.46 232.27 409.72 232.09 cv
409.98 231.91 410.29 231.82 410.65 231.82 cv
411.22 231.82 411.641 231.99 411.91 232.31 cv
412.181 232.64 412.32 233.149 412.32 233.85 cv
412.32 236.63 li
413.12 236.63 li
413.12 237.149 li
410.641 237.149 li
410.641 236.63 li
411.42 236.63 li
411.42 234.13 li
411.42 233.5 411.34 233.07 411.181 232.83 cv
411.021 232.59 410.75 232.47 410.36 232.47 cv
409.94 232.47 409.62 232.63 409.4 232.93 cv
409.181 233.24 409.08 233.68 409.08 234.26 cv
409.08 236.63 li
409.86 236.63 li
409.86 237.149 li
407.37 237.149 li
407.37 237.149 li
cp
ef
414.521 232.479 mo
413.73 232.479 li
413.73 231.96 li
414.521 231.96 li
414.521 230.35 li
415.42 230.35 li
415.42 231.96 li
417.11 231.96 li
417.11 232.479 li
415.42 232.479 li
415.42 235.78 li
415.42 236.22 415.46 236.51 415.55 236.63 cv
415.63 236.75 415.79 236.81 416.021 236.81 cv
416.25 236.81 416.42 236.74 416.53 236.6 cv
416.63 236.46 416.69 236.24 416.7 235.93 cv
417.38 235.93 li
417.351 236.41 417.22 236.75 416.99 236.96 cv
416.76 237.17 416.41 237.28 415.94 237.28 cv
415.42 237.28 415.05 237.16 414.84 236.939 cv
414.62 236.72 414.521 236.33 414.521 235.78 cv
414.521 232.479 li
414.521 232.479 li
cp
ef
298.3 392.43 mo
448.96 392.43 li
448.96 289.355 li
298.3 289.355 li
298.3 392.43 li
0 0 0 0 cmyk
f
gsave
298.3 392.43 mo
449 392.43 li
449 289.33 li
298.3 289.33 li
298.3 392.43 li
cp
clp
310.414 352.862 mo
311.449 330.883 li
312.484 321.867 li
313.52 316.63 li
314.555 313.156 li
315.59 310.605 li
316.625 308.744 li
317.66 307.357 li
318.695 306.355 li
319.73 305.822 li
320.765 305.824 li
321.8 306.243 li
324.905 308.031 li
326.976 308.766 li
328.011 308.967 li
329.045 309.048 li
330.081 308.975 li
333.186 308.393 li
334.221 308.328 li
335.256 308.376 li
336.291 308.636 li
338.361 309.707 li
342.501 312.286 li
344.572 313.978 li
346.642 316.199 li
349.747 319.563 li
350.782 320.555 li
351.817 321.328 li
352.852 321.817 li
353.887 322.129 li
354.922 322.274 li
355.958 322.187 li
359.063 321.451 li
361.133 321.283 li
364.238 321 li
365.273 320.942 li
366.309 321.048 li
367.344 321.34 li
369.413 322.298 li
370.448 322.909 li
371.483 323.664 li
373.554 325.646 li
376.659 328.999 li
378.729 330.852 li
380.799 332.251 li
382.869 333.315 li
388.044 335.912 li
393.22 338.807 li
395.29 340.261 li
398.396 342.485 li
400.465 343.83 li
402.535 345.444 li
413.921 355.259 li
420.131 361.024 li
423.237 363.88 li
425.308 365.461 li
427.377 366.624 li
431.518 368.683 li
436.693 371.571 li
437.729 372.277 li
438.763 373.288 li
439.798 374.708 li
440.833 377.641 li
441.868 384.309 li
441.868 384.309 li
0 .993988 1 0 cmyk
@
310.855 351.457 mo
313.366 349.243 li
315.877 337.092 li
318.388 317.038 li
320.899 311.825 li
323.41 321.213 li
325.921 323.6 li
328.432 335.624 li
330.943 339.942 li
333.454 331.406 li
335.965 322.904 li
338.476 318.296 li
340.987 312.473 li
343.498 306.906 li
346.009 309.141 li
348.52 306.972 li
351.031 310.99 li
353.542 311.459 li
356.053 313.826 li
358.564 317.675 li
361.075 317.987 li
363.586 318.634 li
366.098 320.329 li
368.608 318.516 li
371.119 318.274 li
373.63 319.685 li
376.142 323.105 li
378.652 326.82 li
381.163 328.094 li
383.674 332.898 li
386.186 332.614 li
388.696 327.536 li
391.207 326.781 li
393.718 329.81 li
396.229 329.26 li
398.74 334.209 li
401.251 337.702 li
403.762 340.378 li
406.273 343.112 li
408.784 344.839 li
411.295 345.282 li
413.807 344.335 li
416.317 342.203 li
418.828 343.436 li
421.339 344.89 li
423.851 345.383 li
426.361 350.92 li
428.872 351.825 li
431.383 358.185 li
433.895 367.477 li
436.405 370.02 li
438.916 373.412 li
441.427 378.025 li
443.938 381.961 li
446.449 383.376 li
0 0 0 1 cmyk
@
grestore
.5 lw
0 lc
298.3 289.355 mo
298.3 293.355 li
298.3 392.43 mo
298.3 388.43 li
0 0 0 1 cmyk
@
295.056 402.27 mo
295.056 401.854 li
296.072 401.854 li
296.072 397.006 li
294.896 397.766 li
294.896 397.254 li
296.32 396.334 li
296.856 396.334 li
296.856 401.854 li
297.872 401.854 li
297.872 402.27 li
295.056 402.27 li
295.056 402.27 li
cp
ef
301.504 402.374 mo
300.864 402.374 300.368 402.109 300.016 401.582 cv
299.664 401.054 299.488 400.317 299.488 399.357 cv
299.488 398.406 299.664 397.662 300.016 397.134 cv
300.368 396.605 300.864 396.334 301.504 396.334 cv
302.136 396.334 302.632 396.605 302.984 397.134 cv
303.336 397.662 303.52 398.406 303.52 399.357 cv
303.52 400.317 303.336 401.054 302.984 401.582 cv
302.632 402.109 302.136 402.374 301.504 402.374 cv
301.504 402.374 li
cp
301.504 401.998 mo
301.904 401.998 302.2 401.782 302.4 401.342 cv
302.592 400.91 302.696 400.246 302.696 399.357 cv
302.696 398.478 302.592 397.813 302.4 397.374 cv
302.2 396.941 301.904 396.718 301.504 396.718 cv
301.104 396.718 300.8 396.941 300.608 397.374 cv
300.408 397.813 300.312 398.478 300.312 399.357 cv
300.312 400.246 300.408 400.91 300.608 401.342 cv
300.8 401.782 301.104 401.998 301.504 401.998 cv
ef
323.41 289.355 mo
323.41 293.355 li
323.41 392.43 mo
323.41 388.43 li
@
320.256 402.27 mo
320.256 401.854 li
321.272 401.854 li
321.272 397.006 li
320.096 397.766 li
320.096 397.254 li
321.52 396.334 li
322.056 396.334 li
322.056 401.854 li
323.072 401.854 li
323.072 402.27 li
320.256 402.27 li
320.256 402.27 li
cp
ef
328.184 396.438 mo
328.184 397.078 li
325.512 397.078 li
325.512 398.75 li
325.64 398.654 325.8 398.59 325.984 398.542 cv
326.16 398.494 326.368 398.47 326.592 398.47 cv
327.216 398.47 327.712 398.646 328.08 398.998 cv
328.448 399.35 328.632 399.822 328.632 400.422 cv
328.632 401.046 328.448 401.525 328.08 401.861 cv
327.712 402.206 327.192 402.374 326.528 402.374 cv
326.256 402.374 325.984 402.342 325.704 402.277 cv
325.416 402.222 325.128 402.126 324.84 401.99 cv
324.84 400.854 li
325.28 400.854 li
325.304 401.229 325.424 401.518 325.632 401.71 cv
325.84 401.901 326.144 401.998 326.528 401.998 cv
326.936 401.998 327.248 401.861 327.472 401.59 cv
327.696 401.317 327.808 400.934 327.808 400.422 cv
327.808 399.918 327.696 399.534 327.48 399.262 cv
327.256 398.99 326.944 398.854 326.528 398.854 cv
326.288 398.854 326.08 398.901 325.904 398.981 cv
325.728 399.062 325.568 399.189 325.432 399.366 cv
325.096 399.366 li
325.096 396.438 li
328.184 396.438 li
328.184 396.438 li
cp
ef
348.52 289.355 mo
348.52 293.355 li
348.52 392.43 mo
348.52 388.43 li
@
345.104 397.83 mo
344.664 397.83 li
344.664 396.79 li
344.936 396.646 345.216 396.534 345.504 396.454 cv
345.784 396.374 346.064 396.334 346.336 396.334 cv
346.944 396.334 347.424 396.485 347.776 396.773 cv
348.128 397.069 348.304 397.47 348.304 397.974 cv
348.304 398.55 347.904 399.229 347.104 400.021 cv
347.04 400.086 347 400.126 346.968 400.158 cv
345.496 401.63 li
347.928 401.63 li
347.928 400.91 li
348.384 400.91 li
348.384 402.27 li
344.624 402.27 li
344.624 401.846 li
346.392 400.078 li
346.776 399.693 347.056 399.334 347.224 399.006 cv
347.392 398.678 347.48 398.334 347.48 397.974 cv
347.48 397.582 347.376 397.277 347.168 397.054 cv
346.96 396.83 346.68 396.718 346.328 396.718 cv
345.952 396.718 345.664 396.813 345.464 396.998 cv
345.256 397.182 345.136 397.462 345.104 397.83 cv
345.104 397.83 li
cp
ef
351.664 402.374 mo
351.024 402.374 350.528 402.109 350.176 401.582 cv
349.824 401.054 349.648 400.317 349.648 399.357 cv
349.648 398.406 349.824 397.662 350.176 397.134 cv
350.528 396.605 351.024 396.334 351.664 396.334 cv
352.296 396.334 352.792 396.605 353.144 397.134 cv
353.496 397.662 353.68 398.406 353.68 399.357 cv
353.68 400.317 353.496 401.054 353.144 401.582 cv
352.792 402.109 352.296 402.374 351.664 402.374 cv
351.664 402.374 li
cp
351.664 401.998 mo
352.064 401.998 352.36 401.782 352.56 401.342 cv
352.752 400.91 352.856 400.246 352.856 399.357 cv
352.856 398.478 352.752 397.813 352.56 397.374 cv
352.36 396.941 352.064 396.718 351.664 396.718 cv
351.264 396.718 350.96 396.941 350.768 397.374 cv
350.568 397.813 350.472 398.478 350.472 399.357 cv
350.472 400.246 350.568 400.91 350.768 401.342 cv
350.96 401.782 351.264 401.998 351.664 401.998 cv
ef
373.63 289.355 mo
373.63 293.355 li
373.63 392.43 mo
373.63 388.43 li
@
370.064 397.83 mo
369.624 397.83 li
369.624 396.79 li
369.896 396.646 370.176 396.534 370.465 396.454 cv
370.744 396.374 371.024 396.334 371.296 396.334 cv
371.904 396.334 372.384 396.485 372.736 396.773 cv
373.088 397.069 373.265 397.47 373.265 397.974 cv
373.265 398.55 372.864 399.229 372.064 400.021 cv
372 400.086 371.96 400.126 371.928 400.158 cv
370.456 401.63 li
372.888 401.63 li
372.888 400.91 li
373.344 400.91 li
373.344 402.27 li
369.584 402.27 li
369.584 401.846 li
371.353 400.078 li
371.736 399.693 372.017 399.334 372.185 399.006 cv
372.353 398.678 372.44 398.334 372.44 397.974 cv
372.44 397.582 372.336 397.277 372.128 397.054 cv
371.92 396.83 371.641 396.718 371.288 396.718 cv
370.912 396.718 370.624 396.813 370.424 396.998 cv
370.217 397.182 370.096 397.462 370.064 397.83 cv
370.064 397.83 li
cp
ef
378.344 396.438 mo
378.344 397.078 li
375.672 397.078 li
375.672 398.75 li
375.8 398.654 375.96 398.59 376.145 398.542 cv
376.32 398.494 376.528 398.47 376.752 398.47 cv
377.376 398.47 377.872 398.646 378.24 398.998 cv
378.608 399.35 378.792 399.822 378.792 400.422 cv
378.792 401.046 378.608 401.525 378.24 401.861 cv
377.872 402.206 377.353 402.374 376.688 402.374 cv
376.416 402.374 376.145 402.342 375.864 402.277 cv
375.576 402.222 375.288 402.126 375 401.99 cv
375 400.854 li
375.44 400.854 li
375.464 401.229 375.584 401.518 375.792 401.71 cv
376 401.901 376.304 401.998 376.688 401.998 cv
377.097 401.998 377.408 401.861 377.632 401.59 cv
377.856 401.317 377.968 400.934 377.968 400.422 cv
377.968 399.918 377.856 399.534 377.641 399.262 cv
377.416 398.99 377.104 398.854 376.688 398.854 cv
376.448 398.854 376.24 398.901 376.064 398.981 cv
375.888 399.062 375.729 399.189 375.592 399.366 cv
375.256 399.366 li
375.256 396.438 li
378.344 396.438 li
378.344 396.438 li
cp
ef
398.74 289.355 mo
398.74 293.355 li
398.74 392.43 mo
398.74 388.43 li
@
395.017 396.686 mo
395.32 396.574 395.608 396.485 395.888 396.422 cv
396.168 396.366 396.433 396.334 396.681 396.334 cv
397.248 396.334 397.696 396.462 398.017 396.702 cv
398.336 396.95 398.496 397.294 398.496 397.726 cv
398.496 398.078 398.384 398.374 398.16 398.605 cv
397.937 398.846 397.624 399.006 397.225 399.086 cv
397.704 399.158 398.072 399.334 398.336 399.614 cv
398.601 399.894 398.736 400.254 398.736 400.693 cv
398.736 401.238 398.552 401.654 398.185 401.941 cv
397.816 402.229 397.296 402.374 396.608 402.374 cv
396.304 402.374 396 402.342 395.712 402.277 cv
395.424 402.222 395.136 402.126 394.849 401.99 cv
394.849 400.854 li
395.288 400.854 li
395.313 401.238 395.44 401.518 395.664 401.71 cv
395.888 401.901 396.208 401.998 396.624 401.998 cv
397.024 401.998 397.336 401.886 397.568 401.654 cv
397.792 401.422 397.912 401.102 397.912 400.702 cv
397.912 400.246 397.792 399.901 397.552 399.662 cv
397.313 399.43 396.968 399.31 396.513 399.31 cv
396.145 399.31 li
396.145 398.91 li
396.336 398.91 li
396.792 398.91 397.136 398.822 397.36 398.63 cv
397.584 398.438 397.704 398.158 397.704 397.773 cv
397.704 397.438 397.608 397.174 397.424 396.99 cv
397.232 396.813 396.968 396.718 396.616 396.718 cv
396.265 396.718 395.984 396.806 395.792 396.974 cv
395.601 397.142 395.488 397.39 395.456 397.71 cv
395.017 397.71 li
395.017 396.686 li
395.017 396.686 li
cp
ef
401.824 402.374 mo
401.185 402.374 400.688 402.109 400.336 401.582 cv
399.984 401.054 399.809 400.317 399.809 399.357 cv
399.809 398.406 399.984 397.662 400.336 397.134 cv
400.688 396.605 401.185 396.334 401.824 396.334 cv
402.456 396.334 402.952 396.605 403.304 397.134 cv
403.656 397.662 403.84 398.406 403.84 399.357 cv
403.84 400.317 403.656 401.054 403.304 401.582 cv
402.952 402.109 402.456 402.374 401.824 402.374 cv
401.824 402.374 li
cp
401.824 401.998 mo
402.225 401.998 402.521 401.782 402.72 401.342 cv
402.912 400.91 403.017 400.246 403.017 399.357 cv
403.017 398.478 402.912 397.813 402.72 397.374 cv
402.521 396.941 402.225 396.718 401.824 396.718 cv
401.424 396.718 401.12 396.941 400.928 397.374 cv
400.729 397.813 400.632 398.478 400.632 399.357 cv
400.632 400.246 400.729 400.91 400.928 401.342 cv
401.12 401.782 401.424 401.998 401.824 401.998 cv
ef
423.851 289.355 mo
423.851 293.355 li
423.851 392.43 mo
423.851 388.43 li
@
420.216 396.686 mo
420.521 396.574 420.809 396.485 421.088 396.422 cv
421.368 396.366 421.632 396.334 421.88 396.334 cv
422.448 396.334 422.896 396.462 423.216 396.702 cv
423.536 396.95 423.696 397.294 423.696 397.726 cv
423.696 398.078 423.584 398.374 423.36 398.605 cv
423.136 398.846 422.824 399.006 422.424 399.086 cv
422.904 399.158 423.272 399.334 423.536 399.614 cv
423.8 399.894 423.937 400.254 423.937 400.693 cv
423.937 401.238 423.752 401.654 423.384 401.941 cv
423.017 402.229 422.496 402.374 421.809 402.374 cv
421.504 402.374 421.2 402.342 420.912 402.277 cv
420.624 402.222 420.336 402.126 420.048 401.99 cv
420.048 400.854 li
420.488 400.854 li
420.513 401.238 420.641 401.518 420.864 401.71 cv
421.088 401.901 421.408 401.998 421.824 401.998 cv
422.225 401.998 422.536 401.886 422.769 401.654 cv
422.992 401.422 423.112 401.102 423.112 400.702 cv
423.112 400.246 422.992 399.901 422.752 399.662 cv
422.513 399.43 422.168 399.31 421.712 399.31 cv
421.344 399.31 li
421.344 398.91 li
421.536 398.91 li
421.992 398.91 422.336 398.822 422.561 398.63 cv
422.784 398.438 422.904 398.158 422.904 397.773 cv
422.904 397.438 422.809 397.174 422.624 396.99 cv
422.433 396.813 422.168 396.718 421.816 396.718 cv
421.464 396.718 421.185 396.806 420.992 396.974 cv
420.8 397.142 420.688 397.39 420.656 397.71 cv
420.216 397.71 li
420.216 396.686 li
420.216 396.686 li
cp
ef
428.504 396.438 mo
428.504 397.078 li
425.832 397.078 li
425.832 398.75 li
425.96 398.654 426.12 398.59 426.304 398.542 cv
426.48 398.494 426.688 398.47 426.912 398.47 cv
427.536 398.47 428.032 398.646 428.4 398.998 cv
428.769 399.35 428.952 399.822 428.952 400.422 cv
428.952 401.046 428.769 401.525 428.4 401.861 cv
428.032 402.206 427.513 402.374 426.849 402.374 cv
426.576 402.374 426.304 402.342 426.024 402.277 cv
425.736 402.222 425.448 402.126 425.16 401.99 cv
425.16 400.854 li
425.601 400.854 li
425.624 401.229 425.744 401.518 425.952 401.71 cv
426.16 401.901 426.464 401.998 426.849 401.998 cv
427.256 401.998 427.568 401.861 427.792 401.59 cv
428.017 401.317 428.128 400.934 428.128 400.422 cv
428.128 399.918 428.017 399.534 427.8 399.262 cv
427.576 398.99 427.265 398.854 426.849 398.854 cv
426.608 398.854 426.4 398.901 426.225 398.981 cv
426.048 399.062 425.888 399.189 425.752 399.366 cv
425.416 399.366 li
425.416 396.438 li
428.504 396.438 li
428.504 396.438 li
cp
ef
448.96 289.355 mo
448.96 293.355 li
448.96 392.43 mo
448.96 388.43 li
@
448.672 402.27 mo
446.017 402.27 li
446.017 401.854 li
446.952 401.854 li
446.952 400.71 li
444.408 400.71 li
444.408 400.286 li
446.96 396.334 li
447.736 396.334 li
447.736 400.294 li
448.849 400.294 li
448.849 400.71 li
447.736 400.71 li
447.736 401.854 li
448.672 401.854 li
448.672 402.27 li
448.672 402.27 li
cp
446.952 400.294 mo
446.952 397.189 li
444.96 400.294 li
446.952 400.294 li
ef
451.984 402.374 mo
451.344 402.374 450.849 402.109 450.496 401.582 cv
450.145 401.054 449.968 400.317 449.968 399.357 cv
449.968 398.406 450.145 397.662 450.496 397.134 cv
450.849 396.605 451.344 396.334 451.984 396.334 cv
452.616 396.334 453.112 396.605 453.464 397.134 cv
453.816 397.662 454 398.406 454 399.357 cv
454 400.317 453.816 401.054 453.464 401.582 cv
453.112 402.109 452.616 402.374 451.984 402.374 cv
451.984 402.374 li
cp
451.984 401.998 mo
452.384 401.998 452.681 401.782 452.88 401.342 cv
453.072 400.91 453.176 400.246 453.176 399.357 cv
453.176 398.478 453.072 397.813 452.88 397.374 cv
452.681 396.941 452.384 396.718 451.984 396.718 cv
451.584 396.718 451.28 396.941 451.088 397.374 cv
450.888 397.813 450.792 398.478 450.792 399.357 cv
450.792 400.246 450.888 400.91 451.088 401.342 cv
451.28 401.782 451.584 401.998 451.984 401.998 cv
ef
364.463 409.59 mo
364.463 410.76 li
363.994 410.76 li
363.977 410.525 363.913 410.354 363.805 410.238 cv
363.688 410.13 363.518 410.066 363.301 410.066 cv
362.905 410.066 362.6 410.211 362.383 410.48 cv
362.167 410.76 362.068 411.156 362.068 411.669 cv
362.068 413.802 li
363.004 413.802 li
363.004 414.27 li
360.529 414.27 li
360.529 413.802 li
361.258 413.802 li
361.258 410.058 li
360.484 410.058 li
360.484 409.599 li
362.068 409.599 li
362.068 410.427 li
362.221 410.103 362.419 409.869 362.672 409.707 cv
362.924 409.554 363.229 409.473 363.59 409.473 cv
363.715 409.473 363.859 409.491 364.004 409.509 cv
364.146 409.526 364.301 409.554 364.463 409.59 cv
364.463 409.59 li
cp
ef
370.231 415.665 mo
369.512 415.341 368.971 414.837 368.611 414.152 cv
368.251 413.469 368.071 412.596 368.071 411.552 cv
368.071 410.508 368.251 409.644 368.611 408.951 cv
368.971 408.258 369.512 407.754 370.231 407.43 cv
370.231 407.861 li
369.781 408.177 369.457 408.618 369.26 409.176 cv
369.061 409.743 368.963 410.535 368.963 411.552 cv
368.963 412.578 369.061 413.37 369.26 413.928 cv
369.457 414.485 369.781 414.918 370.231 415.232 cv
370.231 415.665 li
370.231 415.665 li
cp
ef
375.347 412.866 mo
375.229 413.37 375.013 413.748 374.689 414 cv
374.365 414.261 373.942 414.387 373.429 414.387 cv
372.745 414.387 372.205 414.171 371.791 413.721 cv
371.377 413.271 371.17 412.677 371.17 411.93 cv
371.17 411.191 371.377 410.598 371.791 410.147 cv
372.205 409.698 372.745 409.473 373.429 409.473 cv
373.717 409.473 374.015 409.509 374.312 409.581 cv
374.6 409.652 374.896 409.752 375.193 409.887 cv
375.193 411.084 li
374.726 411.084 li
374.662 410.679 374.527 410.382 374.32 410.192 cv
374.113 410.004 373.816 409.905 373.438 409.905 cv
372.997 409.905 372.664 410.076 372.448 410.418 cv
372.224 410.76 372.115 411.264 372.115 411.93 cv
372.115 412.614 372.224 413.118 372.448 413.46 cv
372.664 413.802 372.997 413.964 373.438 413.964 cv
373.78 413.964 374.06 413.874 374.267 413.693 cv
374.474 413.514 374.617 413.234 374.698 412.866 cv
375.347 412.866 li
375.347 412.866 li
cp
ef
380.422 410.508 mo
380.575 410.166 380.773 409.914 381.017 409.733 cv
381.259 409.563 381.538 409.473 381.862 409.473 cv
382.349 409.473 382.717 409.626 382.96 409.932 cv
383.194 410.238 383.32 410.688 383.32 411.3 cv
383.32 413.802 li
384.049 413.802 li
384.049 414.27 li
381.809 414.27 li
381.809 413.802 li
382.51 413.802 li
382.51 411.39 li
382.51 410.922 382.438 410.58 382.294 410.373 cv
382.15 410.175 381.925 410.066 381.602 410.066 cv
381.241 410.066 380.962 410.211 380.773 410.48 cv
380.584 410.751 380.494 411.146 380.494 411.669 cv
380.494 413.802 li
381.196 413.802 li
381.196 414.27 li
378.982 414.27 li
378.982 413.802 li
379.685 413.802 li
379.685 411.363 li
379.685 410.895 379.612 410.562 379.468 410.364 cv
379.324 410.166 379.1 410.066 378.775 410.066 cv
378.415 410.066 378.136 410.211 377.947 410.48 cv
377.758 410.751 377.668 411.146 377.668 411.669 cv
377.668 413.802 li
378.37 413.802 li
378.37 414.27 li
376.129 414.27 li
376.129 413.802 li
376.858 413.802 li
376.858 410.058 li
376.084 410.058 li
376.084 409.599 li
377.668 409.599 li
377.668 410.427 li
377.813 410.121 378.001 409.878 378.235 409.716 cv
378.469 409.554 378.73 409.473 379.027 409.473 cv
379.388 409.473 379.685 409.563 379.927 409.743 cv
380.17 409.923 380.332 410.184 380.422 410.508 cv
380.422 410.508 li
cp
ef
385.039 415.665 mo
385.039 415.232 li
385.489 414.918 385.813 414.485 386.011 413.928 cv
386.209 413.37 386.309 412.578 386.309 411.552 cv
386.309 410.535 386.209 409.743 386.011 409.176 cv
385.813 408.618 385.489 408.177 385.039 407.861 cv
385.039 407.43 li
385.75 407.754 386.29 408.258 386.65 408.951 cv
387.01 409.644 387.199 410.508 387.199 411.552 cv
387.199 412.596 387.01 413.469 386.65 414.152 cv
386.29 414.837 385.75 415.341 385.039 415.665 cv
385.039 415.665 li
cp
ef
448.96 392.43 mo
444.96 392.43 li
298.3 392.43 mo
302.3 392.43 li
@
280.384 395.414 mo
279.744 395.414 279.248 395.149 278.896 394.622 cv
278.544 394.094 278.368 393.357 278.368 392.397 cv
278.368 391.446 278.544 390.702 278.896 390.174 cv
279.248 389.646 279.744 389.374 280.384 389.374 cv
281.016 389.374 281.512 389.646 281.864 390.174 cv
282.216 390.702 282.4 391.446 282.4 392.397 cv
282.4 393.357 282.216 394.094 281.864 394.622 cv
281.512 395.149 281.016 395.414 280.384 395.414 cv
280.384 395.414 li
cp
280.384 395.038 mo
280.784 395.038 281.08 394.822 281.28 394.382 cv
281.472 393.95 281.576 393.286 281.576 392.397 cv
281.576 391.518 281.472 390.854 281.28 390.414 cv
281.08 389.981 280.784 389.758 280.384 389.758 cv
279.984 389.758 279.68 389.981 279.488 390.414 cv
279.288 390.854 279.192 391.518 279.192 392.397 cv
279.192 393.286 279.288 393.95 279.488 394.382 cv
279.68 394.822 279.984 395.038 280.384 395.038 cv
ef
283.632 394.901 mo
283.632 394.758 283.68 394.638 283.776 394.534 cv
283.872 394.438 284 394.382 284.152 394.382 cv
284.296 394.382 284.416 394.438 284.52 394.534 cv
284.616 394.638 284.672 394.758 284.672 394.901 cv
284.672 395.046 284.616 395.174 284.52 395.27 cv
284.416 395.366 284.296 395.414 284.152 395.414 cv
284 395.414 283.872 395.366 283.776 395.27 cv
283.68 395.174 283.632 395.054 283.632 394.901 cv
283.632 394.901 li
cp
ef
288.064 395.414 mo
287.424 395.414 286.928 395.149 286.576 394.622 cv
286.224 394.094 286.048 393.357 286.048 392.397 cv
286.048 391.446 286.224 390.702 286.576 390.174 cv
286.928 389.646 287.424 389.374 288.064 389.374 cv
288.696 389.374 289.192 389.646 289.544 390.174 cv
289.896 390.702 290.08 391.446 290.08 392.397 cv
290.08 393.357 289.896 394.094 289.544 394.622 cv
289.192 395.149 288.696 395.414 288.064 395.414 cv
288.064 395.414 li
cp
288.064 395.038 mo
288.464 395.038 288.76 394.822 288.96 394.382 cv
289.152 393.95 289.256 393.286 289.256 392.397 cv
289.256 391.518 289.152 390.854 288.96 390.414 cv
288.76 389.981 288.464 389.758 288.064 389.758 cv
287.664 389.758 287.36 389.981 287.168 390.414 cv
286.968 390.854 286.872 391.518 286.872 392.397 cv
286.872 393.286 286.968 393.95 287.168 394.382 cv
287.36 394.822 287.664 395.038 288.064 395.038 cv
ef
291.584 390.87 mo
291.144 390.87 li
291.144 389.83 li
291.416 389.686 291.696 389.574 291.984 389.494 cv
292.264 389.414 292.544 389.374 292.816 389.374 cv
293.424 389.374 293.904 389.525 294.256 389.813 cv
294.608 390.109 294.784 390.51 294.784 391.014 cv
294.784 391.59 294.384 392.27 293.584 393.062 cv
293.52 393.126 293.48 393.166 293.448 393.198 cv
291.976 394.67 li
294.408 394.67 li
294.408 393.95 li
294.864 393.95 li
294.864 395.31 li
291.104 395.31 li
291.104 394.886 li
292.872 393.118 li
293.256 392.733 293.536 392.374 293.704 392.046 cv
293.872 391.718 293.96 391.374 293.96 391.014 cv
293.96 390.622 293.856 390.317 293.648 390.094 cv
293.44 389.87 293.16 389.758 292.808 389.758 cv
292.432 389.758 292.144 389.854 291.944 390.038 cv
291.736 390.222 291.616 390.502 291.584 390.87 cv
291.584 390.87 li
cp
ef
448.96 375.251 mo
444.96 375.251 li
298.3 375.251 mo
302.3 375.251 li
@
279.904 378.374 mo
279.264 378.374 278.768 378.109 278.416 377.582 cv
278.064 377.054 277.888 376.317 277.888 375.357 cv
277.888 374.406 278.064 373.662 278.416 373.134 cv
278.768 372.605 279.264 372.334 279.904 372.334 cv
280.536 372.334 281.032 372.605 281.384 373.134 cv
281.736 373.662 281.92 374.406 281.92 375.357 cv
281.92 376.317 281.736 377.054 281.384 377.582 cv
281.032 378.109 280.536 378.374 279.904 378.374 cv
279.904 378.374 li
cp
279.904 377.998 mo
280.304 377.998 280.6 377.782 280.8 377.342 cv
280.992 376.91 281.096 376.246 281.096 375.357 cv
281.096 374.478 280.992 373.813 280.8 373.374 cv
280.6 372.941 280.304 372.718 279.904 372.718 cv
279.504 372.718 279.2 372.941 279.008 373.374 cv
278.808 373.813 278.712 374.478 278.712 375.357 cv
278.712 376.246 278.808 376.91 279.008 377.342 cv
279.2 377.782 279.504 377.998 279.904 377.998 cv
ef
283.152 377.861 mo
283.152 377.718 283.2 377.598 283.296 377.494 cv
283.392 377.397 283.52 377.342 283.672 377.342 cv
283.816 377.342 283.936 377.397 284.04 377.494 cv
284.136 377.598 284.192 377.718 284.192 377.861 cv
284.192 378.006 284.136 378.134 284.04 378.229 cv
283.936 378.326 283.816 378.374 283.672 378.374 cv
283.52 378.374 283.392 378.326 283.296 378.229 cv
283.2 378.134 283.152 378.014 283.152 377.861 cv
283.152 377.861 li
cp
ef
287.584 378.374 mo
286.944 378.374 286.448 378.109 286.096 377.582 cv
285.744 377.054 285.568 376.317 285.568 375.357 cv
285.568 374.406 285.744 373.662 286.096 373.134 cv
286.448 372.605 286.944 372.334 287.584 372.334 cv
288.216 372.334 288.712 372.605 289.064 373.134 cv
289.416 373.662 289.6 374.406 289.6 375.357 cv
289.6 376.317 289.416 377.054 289.064 377.582 cv
288.712 378.109 288.216 378.374 287.584 378.374 cv
287.584 378.374 li
cp
287.584 377.998 mo
287.984 377.998 288.28 377.782 288.48 377.342 cv
288.672 376.91 288.776 376.246 288.776 375.357 cv
288.776 374.478 288.672 373.813 288.48 373.374 cv
288.28 372.941 287.984 372.718 287.584 372.718 cv
287.184 372.718 286.88 372.941 286.688 373.374 cv
286.488 373.813 286.392 374.478 286.392 375.357 cv
286.392 376.246 286.488 376.91 286.688 377.342 cv
286.88 377.782 287.184 377.998 287.584 377.998 cv
ef
294.592 378.27 mo
291.936 378.27 li
291.936 377.854 li
292.872 377.854 li
292.872 376.71 li
290.328 376.71 li
290.328 376.286 li
292.88 372.334 li
293.656 372.334 li
293.656 376.294 li
294.768 376.294 li
294.768 376.71 li
293.656 376.71 li
293.656 377.854 li
294.592 377.854 li
294.592 378.27 li
294.592 378.27 li
cp
292.872 376.294 mo
292.872 373.189 li
290.88 376.294 li
292.872 376.294 li
ef
448.96 358.072 mo
444.96 358.072 li
298.3 358.072 mo
302.3 358.072 li
@
280.144 361.094 mo
279.504 361.094 279.008 360.83 278.656 360.302 cv
278.304 359.773 278.128 359.038 278.128 358.078 cv
278.128 357.126 278.304 356.382 278.656 355.854 cv
279.008 355.326 279.504 355.054 280.144 355.054 cv
280.776 355.054 281.272 355.326 281.624 355.854 cv
281.976 356.382 282.16 357.126 282.16 358.078 cv
282.16 359.038 281.976 359.773 281.624 360.302 cv
281.272 360.83 280.776 361.094 280.144 361.094 cv
280.144 361.094 li
cp
280.144 360.718 mo
280.544 360.718 280.84 360.502 281.04 360.062 cv
281.232 359.63 281.336 358.966 281.336 358.078 cv
281.336 357.198 281.232 356.534 281.04 356.094 cv
280.84 355.662 280.544 355.438 280.144 355.438 cv
279.744 355.438 279.44 355.662 279.248 356.094 cv
279.048 356.534 278.952 357.198 278.952 358.078 cv
278.952 358.966 279.048 359.63 279.248 360.062 cv
279.44 360.502 279.744 360.718 280.144 360.718 cv
ef
283.392 360.582 mo
283.392 360.438 283.44 360.317 283.536 360.214 cv
283.632 360.118 283.76 360.062 283.912 360.062 cv
284.056 360.062 284.176 360.118 284.28 360.214 cv
284.376 360.317 284.432 360.438 284.432 360.582 cv
284.432 360.726 284.376 360.854 284.28 360.95 cv
284.176 361.046 284.056 361.094 283.912 361.094 cv
283.76 361.094 283.632 361.046 283.536 360.95 cv
283.44 360.854 283.392 360.733 283.392 360.582 cv
283.392 360.582 li
cp
ef
287.584 361.094 mo
286.944 361.094 286.448 360.83 286.096 360.302 cv
285.744 359.773 285.568 359.038 285.568 358.078 cv
285.568 357.126 285.744 356.382 286.096 355.854 cv
286.448 355.326 286.944 355.054 287.584 355.054 cv
288.216 355.054 288.712 355.326 289.064 355.854 cv
289.416 356.382 289.6 357.126 289.6 358.078 cv
289.6 359.038 289.416 359.773 289.064 360.302 cv
288.712 360.83 288.216 361.094 287.584 361.094 cv
287.584 361.094 li
cp
287.584 360.718 mo
287.984 360.718 288.28 360.502 288.48 360.062 cv
288.672 359.63 288.776 358.966 288.776 358.078 cv
288.776 357.198 288.672 356.534 288.48 356.094 cv
288.28 355.662 287.984 355.438 287.584 355.438 cv
287.184 355.438 286.88 355.662 286.688 356.094 cv
286.488 356.534 286.392 357.198 286.392 358.078 cv
286.392 358.966 286.488 359.63 286.688 360.062 cv
286.88 360.502 287.184 360.718 287.584 360.718 cv
ef
291.664 357.782 mo
291.84 357.59 292.04 357.438 292.264 357.342 cv
292.488 357.246 292.736 357.198 293.024 357.198 cv
293.6 357.198 294.064 357.374 294.4 357.726 cv
294.736 358.078 294.904 358.55 294.904 359.149 cv
294.904 359.742 294.72 360.214 294.36 360.565 cv
293.992 360.918 293.512 361.094 292.904 361.094 cv
292.248 361.094 291.736 360.854 291.384 360.366 cv
291.032 359.878 290.856 359.174 290.856 358.262 cv
290.856 357.246 291.064 356.454 291.48 355.894 cv
291.896 355.334 292.488 355.054 293.256 355.054 cv
293.464 355.054 293.68 355.078 293.904 355.109 cv
294.128 355.149 294.36 355.206 294.6 355.286 cv
294.6 356.246 li
294.16 356.246 li
294.128 355.99 294.024 355.79 293.856 355.646 cv
293.688 355.51 293.464 355.438 293.176 355.438 cv
292.664 355.438 292.288 355.63 292.04 356.014 cv
291.792 356.397 291.664 356.99 291.664 357.782 cv
291.664 357.782 li
cp
292.936 360.718 mo
293.304 360.718 293.584 360.59 293.784 360.317 cv
293.976 360.046 294.08 359.662 294.08 359.149 cv
294.08 358.646 293.976 358.262 293.784 357.99 cv
293.584 357.718 293.304 357.582 292.936 357.582 cv
292.56 357.582 292.272 357.718 292.08 357.974 cv
291.888 358.238 291.792 358.614 291.792 359.102 cv
291.792 359.622 291.888 360.021 292.088 360.302 cv
292.28 360.582 292.568 360.718 292.936 360.718 cv
ef
448.96 340.893 mo
444.96 340.893 li
298.3 340.893 mo
302.3 340.893 li
@
280.144 343.813 mo
279.504 343.813 279.008 343.55 278.656 343.021 cv
278.304 342.494 278.128 341.758 278.128 340.798 cv
278.128 339.846 278.304 339.102 278.656 338.574 cv
279.008 338.046 279.504 337.773 280.144 337.773 cv
280.776 337.773 281.272 338.046 281.624 338.574 cv
281.976 339.102 282.16 339.846 282.16 340.798 cv
282.16 341.758 281.976 342.494 281.624 343.021 cv
281.272 343.55 280.776 343.813 280.144 343.813 cv
280.144 343.813 li
cp
280.144 343.438 mo
280.544 343.438 280.84 343.222 281.04 342.782 cv
281.232 342.35 281.336 341.686 281.336 340.798 cv
281.336 339.918 281.232 339.254 281.04 338.813 cv
280.84 338.382 280.544 338.158 280.144 338.158 cv
279.744 338.158 279.44 338.382 279.248 338.813 cv
279.048 339.254 278.952 339.918 278.952 340.798 cv
278.952 341.686 279.048 342.35 279.248 342.782 cv
279.44 343.222 279.744 343.438 280.144 343.438 cv
ef
283.392 343.302 mo
283.392 343.158 283.44 343.038 283.536 342.934 cv
283.632 342.838 283.76 342.782 283.912 342.782 cv
284.056 342.782 284.176 342.838 284.28 342.934 cv
284.376 343.038 284.432 343.158 284.432 343.302 cv
284.432 343.446 284.376 343.574 284.28 343.67 cv
284.176 343.766 284.056 343.813 283.912 343.813 cv
283.76 343.813 283.632 343.766 283.536 343.67 cv
283.44 343.574 283.392 343.454 283.392 343.302 cv
283.392 343.302 li
cp
ef
287.824 343.813 mo
287.184 343.813 286.688 343.55 286.336 343.021 cv
285.984 342.494 285.808 341.758 285.808 340.798 cv
285.808 339.846 285.984 339.102 286.336 338.574 cv
286.688 338.046 287.184 337.773 287.824 337.773 cv
288.456 337.773 288.952 338.046 289.304 338.574 cv
289.656 339.102 289.84 339.846 289.84 340.798 cv
289.84 341.758 289.656 342.494 289.304 343.021 cv
288.952 343.55 288.456 343.813 287.824 343.813 cv
287.824 343.813 li
cp
287.824 343.438 mo
288.224 343.438 288.52 343.222 288.72 342.782 cv
288.912 342.35 289.016 341.686 289.016 340.798 cv
289.016 339.918 288.912 339.254 288.72 338.813 cv
288.52 338.382 288.224 338.158 287.824 338.158 cv
287.424 338.158 287.12 338.382 286.928 338.813 cv
286.728 339.254 286.632 339.918 286.632 340.798 cv
286.632 341.686 286.728 342.35 286.928 342.782 cv
287.12 343.222 287.424 343.438 287.824 343.438 cv
ef
293.888 339.286 mo
293.888 338.934 293.792 338.654 293.616 338.454 cv
293.432 338.262 293.184 338.158 292.864 338.158 cv
292.544 338.158 292.288 338.262 292.112 338.454 cv
291.928 338.654 291.84 338.934 291.84 339.286 cv
291.84 339.646 291.928 339.926 292.112 340.118 cv
292.288 340.317 292.544 340.414 292.864 340.414 cv
293.184 340.414 293.432 340.317 293.616 340.118 cv
293.792 339.926 293.888 339.646 293.888 339.286 cv
293.888 339.286 li
cp
293.464 340.605 mo
293.904 340.67 294.248 340.83 294.496 341.094 cv
294.744 341.366 294.872 341.702 294.872 342.118 cv
294.872 342.662 294.696 343.086 294.352 343.374 cv
294 343.67 293.504 343.813 292.864 343.813 cv
292.216 343.813 291.72 343.67 291.376 343.374 cv
291.024 343.086 290.856 342.662 290.856 342.118 cv
290.856 341.702 290.976 341.366 291.224 341.094 cv
291.472 340.83 291.816 340.67 292.264 340.605 cv
291.864 340.542 291.568 340.39 291.36 340.158 cv
291.152 339.934 291.048 339.638 291.048 339.286 cv
291.048 338.822 291.208 338.454 291.528 338.182 cv
291.848 337.91 292.296 337.773 292.864 337.773 cv
293.424 337.773 293.872 337.91 294.192 338.182 cv
294.512 338.454 294.68 338.822 294.68 339.286 cv
294.68 339.638 294.568 339.934 294.36 340.158 cv
294.152 340.39 293.848 340.542 293.464 340.605 cv
294.048 342.118 mo
294.048 341.702 293.944 341.382 293.736 341.149 cv
293.528 340.918 293.232 340.798 292.864 340.798 cv
292.488 340.798 292.2 340.918 291.992 341.149 cv
291.784 341.382 291.68 341.702 291.68 342.118 cv
291.68 342.534 291.784 342.861 291.992 343.094 cv
292.2 343.326 292.488 343.438 292.864 343.438 cv
293.232 343.438 293.528 343.326 293.736 343.094 cv
293.944 342.861 294.048 342.534 294.048 342.118 cv
ef
448.96 323.714 mo
444.96 323.714 li
298.3 323.714 mo
302.3 323.714 li
@
280.144 326.773 mo
279.504 326.773 279.008 326.51 278.656 325.981 cv
278.304 325.454 278.128 324.718 278.128 323.758 cv
278.128 322.806 278.304 322.062 278.656 321.534 cv
279.008 321.006 279.504 320.733 280.144 320.733 cv
280.776 320.733 281.272 321.006 281.624 321.534 cv
281.976 322.062 282.16 322.806 282.16 323.758 cv
282.16 324.718 281.976 325.454 281.624 325.981 cv
281.272 326.51 280.776 326.773 280.144 326.773 cv
280.144 326.773 li
cp
280.144 326.397 mo
280.544 326.397 280.84 326.182 281.04 325.742 cv
281.232 325.31 281.336 324.646 281.336 323.758 cv
281.336 322.878 281.232 322.214 281.04 321.773 cv
280.84 321.342 280.544 321.118 280.144 321.118 cv
279.744 321.118 279.44 321.342 279.248 321.773 cv
279.048 322.214 278.952 322.878 278.952 323.758 cv
278.952 324.646 279.048 325.31 279.248 325.742 cv
279.44 326.182 279.744 326.397 280.144 326.397 cv
ef
283.392 326.262 mo
283.392 326.118 283.44 325.998 283.536 325.894 cv
283.632 325.798 283.76 325.742 283.912 325.742 cv
284.056 325.742 284.176 325.798 284.28 325.894 cv
284.376 325.998 284.432 326.118 284.432 326.262 cv
284.432 326.406 284.376 326.534 284.28 326.63 cv
284.176 326.726 284.056 326.773 283.912 326.773 cv
283.76 326.773 283.632 326.726 283.536 326.63 cv
283.44 326.534 283.392 326.414 283.392 326.262 cv
283.392 326.262 li
cp
ef
286.416 326.67 mo
286.416 326.254 li
287.432 326.254 li
287.432 321.406 li
286.256 322.166 li
286.256 321.654 li
287.68 320.733 li
288.216 320.733 li
288.216 326.254 li
289.232 326.254 li
289.232 326.67 li
286.416 326.67 li
286.416 326.67 li
cp
ef
292.864 326.773 mo
292.224 326.773 291.728 326.51 291.376 325.981 cv
291.024 325.454 290.848 324.718 290.848 323.758 cv
290.848 322.806 291.024 322.062 291.376 321.534 cv
291.728 321.006 292.224 320.733 292.864 320.733 cv
293.496 320.733 293.992 321.006 294.344 321.534 cv
294.696 322.062 294.88 322.806 294.88 323.758 cv
294.88 324.718 294.696 325.454 294.344 325.981 cv
293.992 326.51 293.496 326.773 292.864 326.773 cv
292.864 326.773 li
cp
292.864 326.397 mo
293.264 326.397 293.56 326.182 293.76 325.742 cv
293.952 325.31 294.056 324.646 294.056 323.758 cv
294.056 322.878 293.952 322.214 293.76 321.773 cv
293.56 321.342 293.264 321.118 292.864 321.118 cv
292.464 321.118 292.16 321.342 291.968 321.773 cv
291.768 322.214 291.672 322.878 291.672 323.758 cv
291.672 324.646 291.768 325.31 291.968 325.742 cv
292.16 326.182 292.464 326.397 292.864 326.397 cv
ef
448.96 306.535 mo
444.96 306.535 li
298.3 306.535 mo
302.3 306.535 li
@
280.384 309.494 mo
279.744 309.494 279.248 309.229 278.896 308.702 cv
278.544 308.174 278.368 307.438 278.368 306.478 cv
278.368 305.525 278.544 304.782 278.896 304.254 cv
279.248 303.726 279.744 303.454 280.384 303.454 cv
281.016 303.454 281.512 303.726 281.864 304.254 cv
282.216 304.782 282.4 305.525 282.4 306.478 cv
282.4 307.438 282.216 308.174 281.864 308.702 cv
281.512 309.229 281.016 309.494 280.384 309.494 cv
280.384 309.494 li
cp
280.384 309.118 mo
280.784 309.118 281.08 308.901 281.28 308.462 cv
281.472 308.03 281.576 307.366 281.576 306.478 cv
281.576 305.598 281.472 304.934 281.28 304.494 cv
281.08 304.062 280.784 303.838 280.384 303.838 cv
279.984 303.838 279.68 304.062 279.488 304.494 cv
279.288 304.934 279.192 305.598 279.192 306.478 cv
279.192 307.366 279.288 308.03 279.488 308.462 cv
279.68 308.901 279.984 309.118 280.384 309.118 cv
ef
283.632 308.981 mo
283.632 308.838 283.68 308.718 283.776 308.614 cv
283.872 308.518 284 308.462 284.152 308.462 cv
284.296 308.462 284.416 308.518 284.52 308.614 cv
284.616 308.718 284.672 308.838 284.672 308.981 cv
284.672 309.126 284.616 309.254 284.52 309.35 cv
284.416 309.445 284.296 309.494 284.152 309.494 cv
284 309.494 283.872 309.445 283.776 309.35 cv
283.68 309.254 283.632 309.134 283.632 308.981 cv
283.632 308.981 li
cp
ef
286.656 309.39 mo
286.656 308.974 li
287.672 308.974 li
287.672 304.126 li
286.496 304.886 li
286.496 304.374 li
287.92 303.454 li
288.456 303.454 li
288.456 308.974 li
289.472 308.974 li
289.472 309.39 li
286.656 309.39 li
286.656 309.39 li
cp
ef
291.584 304.95 mo
291.144 304.95 li
291.144 303.91 li
291.416 303.766 291.696 303.654 291.984 303.574 cv
292.264 303.494 292.544 303.454 292.816 303.454 cv
293.424 303.454 293.904 303.605 294.256 303.894 cv
294.608 304.189 294.784 304.59 294.784 305.094 cv
294.784 305.67 294.384 306.35 293.584 307.142 cv
293.52 307.206 293.48 307.246 293.448 307.277 cv
291.976 308.75 li
294.408 308.75 li
294.408 308.03 li
294.864 308.03 li
294.864 309.39 li
291.104 309.39 li
291.104 308.966 li
292.872 307.198 li
293.256 306.813 293.536 306.454 293.704 306.126 cv
293.872 305.798 293.96 305.454 293.96 305.094 cv
293.96 304.702 293.856 304.397 293.648 304.174 cv
293.44 303.95 293.16 303.838 292.808 303.838 cv
292.432 303.838 292.144 303.934 291.944 304.118 cv
291.736 304.302 291.616 304.582 291.584 304.95 cv
291.584 304.95 li
cp
ef
448.96 289.355 mo
444.96 289.355 li
298.3 289.355 mo
302.3 289.355 li
@
279.904 292.454 mo
279.264 292.454 278.768 292.189 278.416 291.662 cv
278.064 291.134 277.888 290.397 277.888 289.438 cv
277.888 288.485 278.064 287.742 278.416 287.214 cv
278.768 286.686 279.264 286.414 279.904 286.414 cv
280.536 286.414 281.032 286.686 281.384 287.214 cv
281.736 287.742 281.92 288.485 281.92 289.438 cv
281.92 290.397 281.736 291.134 281.384 291.662 cv
281.032 292.189 280.536 292.454 279.904 292.454 cv
279.904 292.454 li
cp
279.904 292.078 mo
280.304 292.078 280.6 291.861 280.8 291.422 cv
280.992 290.99 281.096 290.326 281.096 289.438 cv
281.096 288.558 280.992 287.894 280.8 287.454 cv
280.6 287.021 280.304 286.798 279.904 286.798 cv
279.504 286.798 279.2 287.021 279.008 287.454 cv
278.808 287.894 278.712 288.558 278.712 289.438 cv
278.712 290.326 278.808 290.99 279.008 291.422 cv
279.2 291.861 279.504 292.078 279.904 292.078 cv
ef
283.152 291.941 mo
283.152 291.798 283.2 291.678 283.296 291.574 cv
283.392 291.478 283.52 291.422 283.672 291.422 cv
283.816 291.422 283.936 291.478 284.04 291.574 cv
284.136 291.678 284.192 291.798 284.192 291.941 cv
284.192 292.086 284.136 292.214 284.04 292.31 cv
283.936 292.406 283.816 292.454 283.672 292.454 cv
283.52 292.454 283.392 292.406 283.296 292.31 cv
283.2 292.214 283.152 292.094 283.152 291.941 cv
283.152 291.941 li
cp
ef
286.176 292.35 mo
286.176 291.934 li
287.192 291.934 li
287.192 287.086 li
286.016 287.846 li
286.016 287.334 li
287.44 286.414 li
287.976 286.414 li
287.976 291.934 li
288.992 291.934 li
288.992 292.35 li
286.176 292.35 li
286.176 292.35 li
cp
ef
294.592 292.35 mo
291.936 292.35 li
291.936 291.934 li
292.872 291.934 li
292.872 290.79 li
290.328 290.79 li
290.328 290.366 li
292.88 286.414 li
293.656 286.414 li
293.656 290.374 li
294.768 290.374 li
294.768 290.79 li
293.656 290.79 li
293.656 291.934 li
294.592 291.934 li
294.592 292.35 li
294.592 292.35 li
cp
292.872 290.374 mo
292.872 287.27 li
290.88 290.374 li
292.872 290.374 li
ef
1.5 lw
2 lc
298.3 392.43 mo
298.3 289.355 li
298.3 392.43 mo
448.96 392.43 li
448.96 392.43 mo
448.96 289.355 li
298.3 289.355 mo
448.96 289.355 li
@
432.628 301.41 mo
431.668 300.978 430.948 300.306 430.468 299.394 cv
429.988 298.481 429.748 297.317 429.748 295.926 cv
429.748 294.534 429.988 293.382 430.468 292.458 cv
430.948 291.534 431.668 290.861 432.628 290.43 cv
432.628 291.006 li
432.028 291.426 431.597 292.014 431.332 292.758 cv
431.068 293.514 430.937 294.57 430.937 295.926 cv
430.937 297.294 431.068 298.35 431.332 299.094 cv
431.597 299.838 432.028 300.414 432.628 300.834 cv
432.628 301.41 li
432.628 301.41 li
cp
ef
439.769 297.678 mo
439.612 298.35 439.324 298.854 438.893 299.189 cv
438.46 299.538 437.896 299.706 437.212 299.706 cv
436.3 299.706 435.58 299.418 435.028 298.817 cv
434.477 298.218 434.2 297.426 434.2 296.43 cv
434.2 295.445 434.477 294.654 435.028 294.054 cv
435.58 293.454 436.3 293.154 437.212 293.154 cv
437.597 293.154 437.992 293.202 438.388 293.298 cv
438.772 293.394 439.168 293.525 439.564 293.706 cv
439.564 295.302 li
438.94 295.302 li
438.856 294.762 438.676 294.366 438.4 294.114 cv
438.124 293.861 437.729 293.729 437.225 293.729 cv
436.636 293.729 436.192 293.958 435.904 294.414 cv
435.604 294.87 435.46 295.542 435.46 296.43 cv
435.46 297.342 435.604 298.014 435.904 298.47 cv
436.192 298.926 436.636 299.142 437.225 299.142 cv
437.681 299.142 438.052 299.021 438.328 298.782 cv
438.604 298.542 438.796 298.17 438.904 297.678 cv
439.769 297.678 li
439.769 297.678 li
cp
ef
441.172 301.41 mo
441.172 300.834 li
441.772 300.414 442.204 299.838 442.468 299.094 cv
442.732 298.35 442.864 297.294 442.864 295.926 cv
442.864 294.57 442.732 293.514 442.468 292.758 cv
442.204 292.014 441.772 291.426 441.172 291.006 cv
441.172 290.43 li
442.12 290.861 442.84 291.534 443.32 292.458 cv
443.8 293.382 444.052 294.534 444.052 295.926 cv
444.052 297.317 443.8 298.481 443.32 299.394 cv
442.84 300.306 442.12 300.978 441.172 301.41 cv
441.172 301.41 li
cp
ef
303.3 387.43 mo
397.784 387.43 li
397.784 355.086 li
303.3 355.086 li
303.3 387.43 li
303.3 387.43 li
cp
0 0 0 0 cmyk
f
1 lw
303.3 387.43 mo
397.784 387.43 li
397.784 355.086 li
303.3 355.086 li
303.3 387.43 li
303.3 387.43 li
cp
0 0 0 1 cmyk
@
1.5 lw
310.3 363.18 mo
324.3 363.18 li
0 .993988 1 0 cmyk
@
336.13 366.399 mo
336.13 364.74 li
336.69 364.74 li
336.7 365.3 336.86 365.71 337.17 365.97 cv
337.47 366.24 337.94 366.37 338.56 366.37 cv
339.14 366.37 339.58 366.26 339.88 366.03 cv
340.18 365.8 340.34 365.46 340.34 365.02 cv
340.34 364.67 340.24 364.399 340.06 364.21 cv
339.88 364.03 339.49 363.84 338.9 363.66 cv
337.94 363.37 li
337.24 363.16 336.74 362.899 336.46 362.58 cv
336.18 362.27 336.04 361.84 336.04 361.28 cv
336.04 360.66 336.26 360.18 336.7 359.84 cv
337.14 359.5 337.75 359.33 338.55 359.33 cv
338.89 359.33 339.26 359.37 339.66 359.439 cv
340.06 359.52 340.49 359.62 340.95 359.76 cv
340.95 361.31 li
340.4 361.31 li
340.34 360.8 340.17 360.43 339.88 360.2 cv
339.59 359.97 339.15 359.85 338.57 359.85 cv
338.05 359.85 337.66 359.96 337.39 360.17 cv
337.12 360.38 336.99 360.68 336.99 361.08 cv
336.99 361.43 337.09 361.7 337.29 361.899 cv
337.49 362.1 337.92 362.3 338.58 362.49 cv
339.48 362.76 li
340.14 362.96 340.61 363.22 340.89 363.52 cv
341.17 363.83 341.32 364.24 341.32 364.76 cv
341.32 365.47 341.09 366 340.64 366.35 cv
340.18 366.71 339.51 366.88 338.62 366.88 cv
338.22 366.88 337.81 366.84 337.39 366.76 cv
336.97 366.689 336.55 366.57 336.13 366.399 cv
336.13 366.399 li
cp
0 0 0 1 cmyk
ef
344.28 366.229 mo
345.13 366.229 li
345.13 366.75 li
342.52 366.75 li
342.52 366.229 li
343.38 366.229 li
343.38 362.08 li
342.52 362.08 li
342.52 361.56 li
344.28 361.56 li
344.28 366.229 li
344.28 366.229 li
cp
343.13 359.95 mo
343.13 359.8 343.18 359.67 343.29 359.56 cv
343.4 359.45 343.53 359.39 343.69 359.39 cv
343.83 359.39 343.96 359.45 344.07 359.56 cv
344.18 359.67 344.24 359.8 344.24 359.95 cv
344.24 360.109 344.18 360.24 344.08 360.34 cv
343.97 360.45 343.84 360.5 343.69 360.5 cv
343.53 360.5 343.4 360.45 343.29 360.34 cv
343.18 360.24 343.13 360.109 343.13 359.95 cv
ef
350.46 362.569 mo
350.63 362.189 350.85 361.91 351.12 361.71 cv
351.39 361.52 351.7 361.42 352.06 361.42 cv
352.6 361.42 353.01 361.59 353.28 361.93 cv
353.54 362.27 353.68 362.77 353.68 363.45 cv
353.68 366.229 li
354.49 366.229 li
354.49 366.75 li
352 366.75 li
352 366.229 li
352.78 366.229 li
352.78 363.55 li
352.78 363.03 352.7 362.649 352.54 362.42 cv
352.38 362.2 352.13 362.08 351.77 362.08 cv
351.37 362.08 351.06 362.24 350.85 362.54 cv
350.64 362.84 350.54 363.28 350.54 363.859 cv
350.54 366.229 li
351.32 366.229 li
351.32 366.75 li
348.86 366.75 li
348.86 366.229 li
349.64 366.229 li
349.64 363.52 li
349.64 363 349.56 362.63 349.4 362.41 cv
349.24 362.189 348.99 362.08 348.63 362.08 cv
348.23 362.08 347.92 362.24 347.71 362.54 cv
347.5 362.84 347.4 363.28 347.4 363.859 cv
347.4 366.229 li
348.18 366.229 li
348.18 366.75 li
345.69 366.75 li
345.69 366.229 li
346.5 366.229 li
346.5 362.07 li
345.64 362.07 li
345.64 361.56 li
347.4 361.56 li
347.4 362.479 li
347.56 362.14 347.77 361.87 348.03 361.689 cv
348.29 361.51 348.58 361.42 348.91 361.42 cv
349.31 361.42 349.64 361.52 349.91 361.72 cv
350.18 361.92 350.36 362.21 350.46 362.569 cv
350.46 362.569 li
cp
ef
358.42 361.56 mo
360.1 361.56 li
360.1 366.229 li
360.95 366.229 li
360.95 366.75 li
359.2 366.75 li
359.2 365.83 li
359.03 366.18 358.811 366.439 358.551 366.62 cv
358.29 366.79 357.98 366.88 357.641 366.88 cv
357.06 366.88 356.63 366.72 356.36 366.399 cv
356.09 366.08 355.96 365.56 355.96 364.859 cv
355.96 362.08 li
355.15 362.08 li
355.15 361.56 li
356.86 361.56 li
356.86 364.58 li
356.86 365.22 356.93 365.649 357.09 365.88 cv
357.25 366.12 357.52 366.229 357.92 366.229 cv
358.34 366.229 358.65 366.08 358.87 365.77 cv
359.09 365.47 359.2 365.02 359.2 364.439 cv
359.2 362.08 li
358.42 362.08 li
358.42 361.56 li
358.42 361.56 li
cp
ef
363.41 366.229 mo
364.26 366.229 li
364.26 366.75 li
361.65 366.75 li
361.65 366.229 li
362.51 366.229 li
362.51 359.67 li
361.65 359.67 li
361.65 359.149 li
363.41 359.149 li
363.41 366.229 li
363.41 366.229 li
cp
ef
369.36 363.51 mo
369.36 366.229 li
370.16 366.229 li
370.16 366.75 li
368.46 366.75 li
368.46 366.189 li
368.26 366.43 368.03 366.609 367.77 366.72 cv
367.51 366.82 367.2 366.88 366.86 366.88 cv
366.28 366.88 365.82 366.729 365.48 366.43 cv
365.141 366.13 364.98 365.71 364.98 365.189 cv
364.98 364.66 365.17 364.25 365.561 363.95 cv
365.94 363.649 366.49 363.5 367.2 363.5 cv
368.46 363.5 li
368.46 363.14 li
368.46 362.75 368.34 362.45 368.1 362.229 cv
367.86 362.01 367.52 361.899 367.09 361.899 cv
366.73 361.899 366.45 361.99 366.24 362.149 cv
366.02 362.31 365.891 362.55 365.84 362.87 cv
365.381 362.87 li
365.381 361.819 li
365.69 361.689 365.99 361.59 366.29 361.52 cv
366.58 361.46 366.87 361.42 367.15 361.42 cv
367.87 361.42 368.41 361.6 368.79 361.96 cv
369.17 362.32 369.36 362.83 369.36 363.51 cv
369.36 363.51 li
cp
368.46 365.12 mo
368.46 364.02 li
367.301 364.02 li
366.85 364.02 366.52 364.12 366.301 364.31 cv
366.08 364.51 365.98 364.8 365.98 365.189 cv
365.98 365.55 366.09 365.84 366.311 366.05 cv
366.53 366.27 366.83 366.37 367.21 366.37 cv
367.58 366.37 367.881 366.26 368.11 366.03 cv
368.34 365.8 368.46 365.5 368.46 365.12 cv
ef
371.561 362.08 mo
370.771 362.08 li
370.771 361.56 li
371.561 361.56 li
371.561 359.95 li
372.46 359.95 li
372.46 361.56 li
374.15 361.56 li
374.15 362.08 li
372.46 362.08 li
372.46 365.38 li
372.46 365.82 372.5 366.109 372.59 366.229 cv
372.67 366.35 372.83 366.41 373.061 366.41 cv
373.29 366.41 373.46 366.34 373.57 366.2 cv
373.67 366.06 373.73 365.84 373.74 365.53 cv
374.42 365.53 li
374.391 366.01 374.26 366.35 374.03 366.56 cv
373.8 366.77 373.45 366.88 372.98 366.88 cv
372.46 366.88 372.09 366.76 371.88 366.54 cv
371.66 366.319 371.561 365.93 371.561 365.38 cv
371.561 362.08 li
371.561 362.08 li
cp
ef
376.681 366.229 mo
377.53 366.229 li
377.53 366.75 li
374.92 366.75 li
374.92 366.229 li
375.78 366.229 li
375.78 362.08 li
374.92 362.08 li
374.92 361.56 li
376.681 361.56 li
376.681 366.229 li
376.681 366.229 li
cp
375.53 359.95 mo
375.53 359.8 375.58 359.67 375.69 359.56 cv
375.8 359.45 375.931 359.39 376.09 359.39 cv
376.23 359.39 376.36 359.45 376.47 359.56 cv
376.58 359.67 376.641 359.8 376.641 359.95 cv
376.641 360.109 376.58 360.24 376.48 360.34 cv
376.37 360.45 376.24 360.5 376.09 360.5 cv
375.931 360.5 375.8 360.45 375.69 360.34 cv
375.58 360.24 375.53 360.109 375.53 359.95 cv
ef
380.69 366.88 mo
379.931 366.88 379.33 366.64 378.87 366.14 cv
378.41 365.64 378.181 364.979 378.181 364.149 cv
378.181 363.33 378.4 362.67 378.86 362.17 cv
379.32 361.67 379.931 361.42 380.69 361.42 cv
381.45 361.42 382.05 361.67 382.51 362.17 cv
382.97 362.67 383.2 363.33 383.2 364.149 cv
383.2 364.979 382.97 365.64 382.51 366.14 cv
382.05 366.64 381.45 366.88 380.69 366.88 cv
380.69 366.88 li
cp
380.69 366.41 mo
381.17 366.41 381.53 366.22 381.78 365.84 cv
382.021 365.46 382.15 364.899 382.15 364.149 cv
382.15 363.41 382.021 362.85 381.78 362.47 cv
381.53 362.09 381.17 361.899 380.69 361.899 cv
380.21 361.899 379.84 362.09 379.601 362.47 cv
379.351 362.85 379.23 363.41 379.23 364.149 cv
379.23 364.899 379.351 365.46 379.601 365.84 cv
379.84 366.22 380.21 366.41 380.69 366.41 cv
ef
384.09 366.75 mo
384.09 366.229 li
384.9 366.229 li
384.9 362.08 li
384.04 362.08 li
384.04 361.56 li
385.8 361.56 li
385.8 362.479 li
385.96 362.14 386.181 361.87 386.44 361.689 cv
386.7 361.51 387.01 361.42 387.37 361.42 cv
387.94 361.42 388.36 361.59 388.63 361.91 cv
388.9 362.24 389.04 362.75 389.04 363.45 cv
389.04 366.229 li
389.84 366.229 li
389.84 366.75 li
387.36 366.75 li
387.36 366.229 li
388.141 366.229 li
388.141 363.729 li
388.141 363.1 388.061 362.67 387.9 362.43 cv
387.74 362.189 387.47 362.07 387.08 362.07 cv
386.66 362.07 386.34 362.229 386.12 362.53 cv
385.9 362.84 385.8 363.28 385.8 363.859 cv
385.8 366.229 li
386.58 366.229 li
386.58 366.75 li
384.09 366.75 li
384.09 366.75 li
cp
ef
310.3 377.852 mo
324.3 377.852 li
@
335.75 381.39 mo
335.75 380.87 li
336.68 380.87 li
336.68 374.62 li
335.75 374.62 li
335.75 374.1 li
341.62 374.1 li
341.62 375.72 li
341.02 375.72 li
341.02 374.7 li
337.67 374.7 li
337.67 377.14 li
340.06 377.14 li
340.06 376.229 li
340.66 376.229 li
340.66 378.649 li
340.06 378.649 li
340.06 377.74 li
337.67 377.74 li
337.67 380.79 li
341.1 380.79 li
341.1 379.77 li
341.7 379.77 li
341.7 381.39 li
335.75 381.39 li
335.75 381.39 li
cp
ef
345.55 378.22 mo
346.64 376.72 li
345.94 376.72 li
345.94 376.2 li
347.94 376.2 li
347.94 376.72 li
347.25 376.72 li
345.86 378.64 li
347.48 380.87 li
348.16 380.87 li
348.16 381.39 li
345.76 381.39 li
345.76 380.87 li
346.42 380.87 li
345.29 379.32 li
344.16 380.87 li
344.83 380.87 li
344.83 381.39 li
342.86 381.39 li
342.86 380.87 li
343.55 380.87 li
344.98 378.899 li
343.4 376.72 li
342.76 376.72 li
342.76 376.2 li
345.08 376.2 li
345.08 376.72 li
344.46 376.72 li
345.55 378.22 li
345.55 378.22 li
cp
ef
349.31 376.72 mo
348.45 376.72 li
348.45 376.2 li
350.21 376.2 li
350.21 377.01 li
350.38 376.689 350.6 376.45 350.88 376.29 cv
351.15 376.14 351.49 376.06 351.89 376.06 cv
352.53 376.06 353.05 376.32 353.45 376.819 cv
353.85 377.32 354.06 377.979 354.06 378.79 cv
354.06 379.609 353.85 380.27 353.45 380.77 cv
353.05 381.27 352.53 381.52 351.89 381.52 cv
351.49 381.52 351.15 381.439 350.88 381.3 cv
350.6 381.149 350.38 380.91 350.21 380.58 cv
350.21 382.939 li
351.06 382.939 li
351.06 383.46 li
348.45 383.46 li
348.45 382.939 li
349.31 382.939 li
349.31 376.72 li
349.31 376.72 li
cp
350.21 378.54 mo
350.21 379.05 li
350.21 379.68 350.33 380.16 350.57 380.479 cv
350.81 380.81 351.15 380.97 351.61 380.97 cv
352.07 380.97 352.41 380.79 352.65 380.42 cv
352.89 380.06 353.01 379.51 353.01 378.79 cv
353.01 378.07 352.89 377.53 352.65 377.17 cv
352.41 376.81 352.07 376.62 351.61 376.62 cv
351.15 376.62 350.81 376.79 350.57 377.12 cv
350.33 377.45 350.21 377.92 350.21 378.54 cv
ef
359 378.37 mo
358.98 377.77 358.85 377.31 358.61 377 cv
358.37 376.7 358.04 376.54 357.6 376.54 cv
357.18 376.54 356.86 376.7 356.62 377.01 cv
356.38 377.32 356.24 377.77 356.19 378.37 cv
359 378.37 li
359 378.37 li
cp
360.061 378.89 mo
356.19 378.89 li
356.19 378.93 li
356.19 379.63 356.32 380.16 356.58 380.52 cv
356.84 380.88 357.23 381.05 357.75 381.05 cv
358.141 381.05 358.46 380.95 358.721 380.74 cv
358.971 380.54 359.15 380.229 359.25 379.819 cv
359.971 379.819 li
359.83 380.39 359.561 380.82 359.18 381.1 cv
358.79 381.38 358.28 381.52 357.66 381.52 cv
356.9 381.52 356.29 381.28 355.83 380.78 cv
355.37 380.28 355.14 379.62 355.14 378.79 cv
355.14 377.97 355.36 377.31 355.82 376.81 cv
356.27 376.31 356.86 376.06 357.6 376.06 cv
358.381 376.06 358.99 376.31 359.41 376.79 cv
359.83 377.27 360.04 377.97 360.061 378.89 cv
ef
365.42 376.189 mo
365.42 377.49 li
364.9 377.49 li
364.881 377.229 364.811 377.04 364.69 376.91 cv
364.561 376.79 364.37 376.72 364.131 376.72 cv
363.69 376.72 363.35 376.88 363.11 377.18 cv
362.87 377.49 362.76 377.93 362.76 378.5 cv
362.76 380.87 li
363.801 380.87 li
363.801 381.39 li
361.051 381.39 li
361.051 380.87 li
361.86 380.87 li
361.86 376.71 li
361 376.71 li
361 376.2 li
362.76 376.2 li
362.76 377.12 li
362.93 376.76 363.15 376.5 363.43 376.32 cv
363.71 376.149 364.051 376.06 364.45 376.06 cv
364.59 376.06 364.75 376.08 364.91 376.1 cv
365.07 376.12 365.24 376.149 365.42 376.189 cv
365.42 376.189 li
cp
ef
367.561 380.87 mo
368.41 380.87 li
368.41 381.39 li
365.801 381.39 li
365.801 380.87 li
366.66 380.87 li
366.66 376.72 li
365.801 376.72 li
365.801 376.2 li
367.561 376.2 li
367.561 380.87 li
367.561 380.87 li
cp
366.41 374.59 mo
366.41 374.439 366.46 374.31 366.57 374.2 cv
366.68 374.09 366.811 374.03 366.971 374.03 cv
367.11 374.03 367.24 374.09 367.35 374.2 cv
367.46 374.31 367.52 374.439 367.52 374.59 cv
367.52 374.75 367.46 374.88 367.36 374.979 cv
367.25 375.09 367.12 375.14 366.971 375.14 cv
366.811 375.14 366.68 375.09 366.57 374.979 cv
366.46 374.88 366.41 374.75 366.41 374.59 cv
ef
373.74 377.21 mo
373.91 376.83 374.13 376.55 374.4 376.35 cv
374.67 376.16 374.98 376.06 375.34 376.06 cv
375.88 376.06 376.29 376.229 376.561 376.57 cv
376.82 376.91 376.96 377.41 376.96 378.09 cv
376.96 380.87 li
377.771 380.87 li
377.771 381.39 li
375.28 381.39 li
375.28 380.87 li
376.061 380.87 li
376.061 378.189 li
376.061 377.67 375.98 377.29 375.82 377.06 cv
375.66 376.84 375.41 376.72 375.05 376.72 cv
374.65 376.72 374.34 376.88 374.13 377.18 cv
373.92 377.479 373.82 377.92 373.82 378.5 cv
373.82 380.87 li
374.601 380.87 li
374.601 381.39 li
372.141 381.39 li
372.141 380.87 li
372.92 380.87 li
372.92 378.16 li
372.92 377.64 372.84 377.27 372.681 377.05 cv
372.521 376.83 372.271 376.72 371.91 376.72 cv
371.51 376.72 371.2 376.88 370.99 377.18 cv
370.78 377.479 370.68 377.92 370.68 378.5 cv
370.68 380.87 li
371.46 380.87 li
371.46 381.39 li
368.971 381.39 li
368.971 380.87 li
369.78 380.87 li
369.78 376.71 li
368.92 376.71 li
368.92 376.2 li
370.68 376.2 li
370.68 377.12 li
370.84 376.78 371.05 376.51 371.311 376.33 cv
371.57 376.149 371.86 376.06 372.19 376.06 cv
372.59 376.06 372.92 376.16 373.19 376.359 cv
373.46 376.56 373.641 376.85 373.74 377.21 cv
373.74 377.21 li
cp
ef
382.28 378.37 mo
382.26 377.77 382.13 377.31 381.891 377 cv
381.65 376.7 381.32 376.54 380.88 376.54 cv
380.46 376.54 380.141 376.7 379.9 377.01 cv
379.66 377.32 379.521 377.77 379.47 378.37 cv
382.28 378.37 li
382.28 378.37 li
cp
383.34 378.89 mo
379.47 378.89 li
379.47 378.93 li
379.47 379.63 379.601 380.16 379.86 380.52 cv
380.12 380.88 380.51 381.05 381.03 381.05 cv
381.42 381.05 381.74 380.95 382 380.74 cv
382.25 380.54 382.431 380.229 382.53 379.819 cv
383.25 379.819 li
383.11 380.39 382.84 380.82 382.46 381.1 cv
382.07 381.38 381.561 381.52 380.94 381.52 cv
380.181 381.52 379.57 381.28 379.11 380.78 cv
378.65 380.28 378.42 379.62 378.42 378.79 cv
378.42 377.97 378.641 377.31 379.101 376.81 cv
379.55 376.31 380.141 376.06 380.88 376.06 cv
381.66 376.06 382.271 376.31 382.69 376.79 cv
383.11 377.27 383.32 377.97 383.34 378.89 cv
ef
384.33 381.39 mo
384.33 380.87 li
385.141 380.87 li
385.141 376.72 li
384.28 376.72 li
384.28 376.2 li
386.04 376.2 li
386.04 377.12 li
386.2 376.78 386.42 376.51 386.681 376.33 cv
386.94 376.149 387.25 376.06 387.61 376.06 cv
388.181 376.06 388.601 376.229 388.87 376.55 cv
389.141 376.88 389.28 377.39 389.28 378.09 cv
389.28 380.87 li
390.08 380.87 li
390.08 381.39 li
387.601 381.39 li
387.601 380.87 li
388.38 380.87 li
388.38 378.37 li
388.38 377.74 388.3 377.31 388.141 377.07 cv
387.98 376.83 387.71 376.71 387.32 376.71 cv
386.9 376.71 386.58 376.87 386.36 377.17 cv
386.141 377.479 386.04 377.92 386.04 378.5 cv
386.04 380.87 li
386.82 380.87 li
386.82 381.39 li
384.33 381.39 li
384.33 381.39 li
cp
ef
391.48 376.72 mo
390.69 376.72 li
390.69 376.2 li
391.48 376.2 li
391.48 374.59 li
392.38 374.59 li
392.38 376.2 li
394.07 376.2 li
394.07 376.72 li
392.38 376.72 li
392.38 380.02 li
392.38 380.46 392.42 380.75 392.51 380.87 cv
392.59 380.99 392.75 381.05 392.98 381.05 cv
393.21 381.05 393.38 380.979 393.49 380.84 cv
393.59 380.7 393.65 380.479 393.66 380.17 cv
394.34 380.17 li
394.311 380.649 394.181 380.99 393.95 381.2 cv
393.72 381.41 393.37 381.52 392.9 381.52 cv
392.38 381.52 392.01 381.399 391.8 381.18 cv
391.58 380.96 391.48 380.569 391.48 380.02 cv
391.48 376.72 li
391.48 376.72 li
cp
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 68 /D putdup 70 /F putdup 80 /P putdup 84 /T putdup 97 /a putdup 98 /b putdup 101 /e putdup 105 /i putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putdup 119 /w putdup 121 /y putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings19 dict dup begin/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/D <1C60D8A8C9B64FADC8BE4593403BE5D574FAA91D24903C73A9847FBCFF2CCAE7B82F347344B6D75D9DA8CFD564A5192C31CC0F81E85BFE65DA0E98609881F08E27947C3AA06FD0D02C1BFBD8926D8C270B5E2950C4A34E562381A9DCE503FFFA3F4060AB2DBCCA9D5531B6> |-/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E9CFE2CD6B50437205F942FF37E122B69D17C7AA691A603207160811AFB791> |-/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED19B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43C2B5E88E6AFB64C1CBC51F> |-/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB53E56E1831B0550D2FE4055F5> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2BAF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB99E3> |-/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65DBD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58AEC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC68163F56BACA6337> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IUYDGA+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/IUYDGA+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D /.notdef /F 9{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]IUYDGA+MyriadPro-Regular nfIUYDGA+MyriadPro-Regular*1 [4.48965e-10 -10 -10 -4.48966e-10 0 0 ]msf270.5 103.79 mo(Density FFT Power \(arb\))[-6.69971 -5.01025 -5.5498 -3.95996 -2.33984 -3.3999 -4.70996 -2.11963 -4.87012 -4.87012 -4.96973 -2.12012 -5.06982 -5.42041 -7.25977 -5.00977 -3.27002 -2.12012 -2.83984 -4.81982 -3.31006 -5.66016 0 ]ysh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginIUYDGA+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-systemdict /gcheck known {setglobal} if end {end} ifendIUYDGA+MyriadPro-Regular /Encoding getdup 99 /c putdup 108 /l putdup 117 /u putpop%ADOEndSubsetFont
/IUYDGA+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 26{/.notdef}rp /D /.notdef /F 9{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u /.notdef /w /.notdef /y 134{/.notdef}rp]IUYDGA+MyriadPro-Regular nfIUYDGA+MyriadPro-Regular*1 [4.48965e-10 -10 -10 -4.48966e-10 0 0 ]msf270.5 245.729 mo(Density Fluctuation PDF)[-6.69971 -5.01025 -5.5498 -3.95996 -2.33984 -3.3999 -4.70996 -2.11963 -4.7002 -2.35986 -5.50977 -4.60986 -3.31006 -5.51025 -4.77979 -3.31006 -2.33984 -5.48975 -5.55029 -2.11963 -5.31982 -6.66016 0 ]ysh260.576 351.33 mo
260.271 351.068 li
260 350.834 259.865 350.601 259.865 350.366 cv
259.865 350.258 259.901 350.133 259.965 349.998 cv
260.036 349.862 260.1 349.728 260.172 349.584 cv
260.243 349.448 260.271 349.322 260.271 349.205 cv
260.271 348.972 260.136 348.737 259.865 348.513 cv
260.019 348.332 li
260.324 348.594 li
260.595 348.828 260.729 349.062 260.729 349.295 cv
260.729 349.412 260.702 349.539 260.631 349.674 cv
260.559 349.809 260.495 349.943 260.424 350.078 cv
260.36 350.223 260.324 350.349 260.324 350.457 cv
260.324 350.699 260.459 350.934 260.729 351.149 cv
260.576 351.33 li
260.576 351.33 li
cp
0 0 0 1 cmyk
ef
268.037 355.014 mo
268.037 355.077 268.001 355.104 267.921 355.104 cv
267.902 355.104 267.875 355.095 267.84 355.085 cv
267.804 355.077 267.776 355.067 267.759 355.05 cv
267.74 355.031 267.723 355.014 267.723 354.986 cv
267.723 354.411 267.542 354.077 267.174 353.987 cv
262.25 352.764 li
262.224 352.935 262.205 353.195 262.205 353.556 cv
262.205 353.618 262.169 353.646 262.089 353.646 cv
262.07 353.646 262.043 353.636 262.008 353.628 cv
261.972 353.618 261.944 353.609 261.927 353.591 cv
261.908 353.573 261.891 353.556 261.891 353.528 cv
261.891 351.972 li
261.891 351.936 261.908 351.908 261.944 351.891 cv
266.705 349.893 li
262.719 348.894 li
262.655 348.885 262.61 348.875 262.583 348.875 cv
262.331 348.875 262.205 349.109 262.205 349.568 cv
262.205 349.631 262.169 349.658 262.089 349.658 cv
262.017 349.641 261.963 349.623 261.936 349.613 cv
261.908 349.604 261.891 349.568 261.891 349.506 cv
261.891 347.58 li
261.891 347.525 261.936 347.489 262.008 347.489 cv
262.025 347.498 262.053 347.508 262.089 347.517 cv
262.124 347.525 262.16 347.535 262.179 347.553 cv
262.196 347.57 262.205 347.588 262.205 347.606 cv
262.205 348.183 262.395 348.516 262.755 348.605 cv
267.956 349.901 li
268.011 349.92 268.037 349.955 268.037 349.991 cv
268.037 350.1 li
268.037 350.145 268.02 350.172 267.975 350.181 cv
262.529 352.476 li
262.476 352.494 li
262.467 352.512 262.457 352.512 262.448 352.512 cv
267.209 353.699 li
267.228 353.708 267.255 353.718 267.272 353.718 cv
267.29 353.718 267.317 353.727 267.345 353.727 cv
267.507 353.727 267.605 353.663 267.65 353.528 cv
267.704 353.394 267.723 353.223 267.723 353.024 cv
267.723 352.971 267.768 352.935 267.84 352.935 cv
267.93 352.961 267.983 352.979 268.001 352.988 cv
268.028 353.006 268.037 353.033 268.037 353.087 cv
268.037 355.014 li
268.037 355.014 li
cp
ef
266.62 347.033 mo
266.531 347.033 266.456 347.002 266.38 346.926 cv
266.311 346.851 266.273 346.769 266.273 346.68 cv
266.273 346.611 266.298 346.555 266.343 346.504 cv
266.387 346.46 266.443 346.435 266.506 346.435 cv
266.601 346.435 266.683 346.473 266.752 346.548 cv
266.827 346.623 266.859 346.705 266.859 346.794 cv
266.859 346.863 266.84 346.92 266.79 346.964 cv
266.746 347.014 266.688 347.033 266.62 347.033 cv
266.62 347.033 li
cp
269.983 347.745 mo
269.908 347.745 269.826 347.732 269.738 347.695 cv
268.384 347.185 li
268.232 347.134 268.106 347.103 268.006 347.103 cv
267.88 347.103 267.816 347.152 267.816 347.241 cv
267.816 347.404 267.905 347.543 268.075 347.65 cv
268.251 347.764 268.44 347.84 268.648 347.891 cv
268.674 347.902 268.687 347.915 268.687 347.94 cv
268.687 348.016 li
268.687 348.054 268.667 348.066 268.629 348.066 cv
268.61 348.066 li
268.358 348.004 268.138 347.896 267.942 347.758 cv
267.754 347.619 267.653 347.443 267.653 347.229 cv
267.653 347.077 267.703 346.951 267.804 346.851 cv
267.905 346.75 268.024 346.693 268.176 346.693 cv
268.258 346.693 268.34 346.712 268.422 346.743 cv
269.776 347.254 li
269.915 347.316 270.04 347.342 270.154 347.342 cv
270.28 347.342 270.343 347.298 270.343 347.197 cv
270.343 347.033 270.255 346.9 270.078 346.787 cv
269.902 346.68 269.713 346.604 269.512 346.555 cv
269.486 346.548 269.474 346.529 269.474 346.504 cv
269.474 346.428 li
269.474 346.416 269.479 346.403 269.492 346.391 cv
269.505 346.378 269.518 346.371 269.53 346.371 cv
269.536 346.371 269.543 346.378 269.549 346.378 cv
269.788 346.441 270.009 346.542 270.204 346.68 cv
270.406 346.825 270.5 347.002 270.5 347.209 cv
270.5 347.361 270.45 347.486 270.355 347.588 cv
270.255 347.695 270.135 347.745 269.983 347.745 cv
ef
270.099 344.612 mo
270.08 344.612 270.063 344.612 270.063 344.604 cv
261.396 341.472 li
261.359 341.463 261.332 341.444 261.314 341.408 cv
261.297 341.381 261.287 341.346 261.287 341.31 cv
261.287 341.256 261.306 341.219 261.342 341.184 cv
261.378 341.147 261.413 341.129 261.468 341.129 cv
261.503 341.129 li
270.171 344.262 li
270.242 344.297 270.278 344.36 270.278 344.433 cv
270.278 344.486 270.261 344.522 270.225 344.559 cv
270.188 344.594 270.144 344.612 270.099 344.612 cv
270.099 344.612 li
cp
ef
268.037 340.133 mo
268.037 340.196 268.001 340.224 267.921 340.224 cv
267.902 340.224 267.875 340.215 267.84 340.205 cv
267.804 340.196 267.776 340.188 267.759 340.17 cv
267.74 340.151 267.723 340.133 267.723 340.106 cv
267.723 339.53 267.542 339.197 267.174 339.107 cv
262.25 337.884 li
262.224 338.055 262.205 338.315 262.205 338.676 cv
262.205 338.738 262.169 338.766 262.089 338.766 cv
262.07 338.766 262.043 338.757 262.008 338.747 cv
261.972 338.738 261.944 338.729 261.927 338.712 cv
261.908 338.693 261.891 338.676 261.891 338.648 cv
261.891 337.092 li
261.891 337.056 261.908 337.028 261.944 337.011 cv
266.705 335.013 li
262.719 334.014 li
262.655 334.005 262.61 333.995 262.583 333.995 cv
262.331 333.995 262.205 334.229 262.205 334.688 cv
262.205 334.751 262.169 334.778 262.089 334.778 cv
262.017 334.761 261.963 334.742 261.936 334.733 cv
261.908 334.725 261.891 334.688 261.891 334.625 cv
261.891 332.699 li
261.891 332.646 261.936 332.609 262.008 332.609 cv
262.025 332.618 262.053 332.628 262.089 332.637 cv
262.124 332.646 262.16 332.654 262.179 332.673 cv
262.196 332.69 262.205 332.708 262.205 332.727 cv
262.205 333.303 262.395 333.636 262.755 333.726 cv
267.956 335.021 li
268.011 335.039 268.037 335.075 268.037 335.111 cv
268.037 335.22 li
268.037 335.265 268.02 335.291 267.975 335.301 cv
262.529 337.596 li
262.476 337.613 li
262.467 337.632 262.457 337.632 262.448 337.632 cv
267.209 338.819 li
267.228 338.828 267.255 338.838 267.272 338.838 cv
267.29 338.838 267.317 338.847 267.345 338.847 cv
267.507 338.847 267.605 338.783 267.65 338.648 cv
267.704 338.514 267.723 338.343 267.723 338.145 cv
267.723 338.091 267.768 338.055 267.84 338.055 cv
267.93 338.081 267.983 338.1 268.001 338.108 cv
268.028 338.126 268.037 338.153 268.037 338.207 cv
268.037 340.133 li
268.037 340.133 li
cp
ef
266.62 332.153 mo
266.531 332.153 266.456 332.122 266.38 332.046 cv
266.311 331.971 266.273 331.889 266.273 331.801 cv
266.273 331.731 266.298 331.675 266.343 331.624 cv
266.387 331.58 266.443 331.555 266.506 331.555 cv
266.601 331.555 266.683 331.593 266.752 331.668 cv
266.827 331.743 266.859 331.825 266.859 331.914 cv
266.859 331.983 266.84 332.04 266.79 332.084 cv
266.746 332.134 266.688 332.153 266.62 332.153 cv
266.62 332.153 li
cp
269.983 332.865 mo
269.908 332.865 269.826 332.853 269.738 332.814 cv
268.384 332.305 li
268.232 332.254 268.106 332.223 268.006 332.223 cv
267.88 332.223 267.816 332.272 267.816 332.361 cv
267.816 332.524 267.905 332.663 268.075 332.771 cv
268.251 332.884 268.44 332.96 268.648 333.01 cv
268.674 333.022 268.687 333.035 268.687 333.061 cv
268.687 333.136 li
268.687 333.174 268.667 333.187 268.629 333.187 cv
268.61 333.187 li
268.358 333.123 268.138 333.017 267.942 332.878 cv
267.754 332.739 267.653 332.563 267.653 332.349 cv
267.653 332.197 267.703 332.071 267.804 331.971 cv
267.905 331.87 268.024 331.813 268.176 331.813 cv
268.258 331.813 268.34 331.832 268.422 331.863 cv
269.776 332.374 li
269.915 332.437 270.04 332.462 270.154 332.462 cv
270.28 332.462 270.343 332.418 270.343 332.317 cv
270.343 332.153 270.255 332.021 270.078 331.907 cv
269.902 331.801 269.713 331.725 269.512 331.675 cv
269.486 331.668 269.474 331.649 269.474 331.624 cv
269.474 331.548 li
269.474 331.536 269.479 331.523 269.492 331.511 cv
269.505 331.498 269.518 331.491 269.53 331.491 cv
269.536 331.491 269.543 331.498 269.549 331.498 cv
269.788 331.561 270.009 331.662 270.204 331.801 cv
270.406 331.945 270.5 332.122 270.5 332.329 cv
270.5 332.48 270.45 332.606 270.355 332.708 cv
270.255 332.814 270.135 332.865 269.983 332.865 cv
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IUYDGA+MyriadPro-Regular*1 uf/IUYDGA+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.2%%For: (Troy Carter) ()%%Title: (statistics.eps)%%CreationDate: 6/4/12 10:35 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6kB\U<cnMsg^cd3bCbVh5F?:/,F#_H'#&J@>!>B)-]Kc,D[n<>-h+\RFrFYfW1XBH*X&Yuo-'_G-1g9)Og\#1UUX8gL/Y%u'%4e*-R3@sIKYUh2rBQUG'dHEZ-Bk\=J8SL2_6<t=Tb(?.LFEjM/W=?T]mD2r/;eu%&`D3J_l`Z##J#_o*EV0F*<5Wp><ibh9\Bq8,%^+?He3pcrI4oWoG<pT7(lD!f'CfPhJ.[S%j\(,<E]rU;ieX&n7eYmS9hpk"p'[m+!MUG.+fPK)6L>Qp/hHF%4FY&hc#_LZV^^Q=C%n$I>S?#'o8NAEi);;_D.a*i>sHQh9")hS1<"#(8e\`3/8Ts_LJ@3M1?"\FB^fpnYaAF`0N,RM3KJs]QTYm8(SfcTjdK4_%['PGMZ%3o07>mgC%/M+HVGOB2\H11[R,hq_=Ucl`E6$996A-tq\jps*UU$0Z>b)@WX1'uI8B$S+5k4u\7rnQ3'epKDgF;6;borURY<Ab1D%%+JPS9!r\oj/r$Jtn%.=CifbRW'(ED0DmTd-f_^q7(!.\^s$ZIB<k,1'4rOO]XA3PerEfqJ*!-Pq;>!_[f4V5M0;mVqql4^)YY<0S%U9Z78B;Mi2jeT*j"]CWdaG*,`0gLWY-Z'aU_,bgP3>f=`(sLH8o:suFA'!b<G'hKF3PYV]UE9X=ZtB,@kPnIKU!J?WUWj>TN[l0?%m0H&TplY]gq?/-]=.;`7$/1YtYQhTOJ0EXClC\L6cufXajI^DMcN"hYJ:Fk`T@kcEl8jA0MnE#TnZOM(;d%,<Z:plk.ekoM/"=L]%fe!-FB!GApMm]kD8qjaRlW?[/Z&Yu^OPjKIV<_4k^YpQk.Mf9iZ&!<6Mtj)M`&a.j5-7ei=a[hZ_<7'jI>;9*nYQ"WM"E.1ae-as%.#OX!$i>UL=:>#EHV0o=O73hK@#sdjqopQUho.e<-iUt(i?u'%ksSaq*oSL?)uj@rp'G/*C/Xh/$i>XM=Jo'51-RmX3MeI,,,Gp$%dPkmd.J=I"MAq80R.E&l2<[9+L&JnbCl+/pm59;]7h#E,/aOQ$@7h:20(of?nJCnZN^%tjbcq:8Ynm$D5NsRo/tmB`n.?l-!Q:N"%%j*Tb+/M$LU3,F;Tfo=+,N][n$CA3Fa,AO,s0*",NcQQ@%c=.sVGFIHpkcC,Iq/L,:$B4aM06%HTd])?/j#;<'E[B6cGQ/R34C'n%PZ&t`E4On:9'K*UUK".1.GYPV4sIXX'R-XtU!qTWqt)oI7kpp)8\(7L3Md1%TgJ`Ur\^OC^(ZBEBf.2pe&g[!b2&TV:&`&>9ci;W%DN6KMZ8iDN&Z6ngD,Q#Hb44S4BtO"3;&%)9r(FGlaSnaDI:E2Ps3PlH5P$Q,(Q,4B/M[:RJ%6QtD>pC31l_Lc1_*`"s71I3`;E:.%'ajTBq3V'g78"q1@fE5(b%:G(r(I%r`]pKLEU<1YN[t(QJ'l$X5=m:RC8I^-*V5^Lj\#;T?K6Mc-#bNYDu;6'?WH)]na/q?.9%e0%Y+T/Qpg:0l+VaO5OsHEkj9^):hj/:ba+S&Q0/"+4ppO;!m7TI""asUt+XZh!I1,QM*)ui*hNnQJGm]-%:GG>1U6l3Hj-td"iBNaH%/RmHK)IdIT&*u*m'VHTZpcl_9?uio&o6mDQmqF2mqb#aVPfpo#8tNJ"p-!2."7%2o,<aU,I;-6hj>@/h1A8NM2gNI1GF=Klm0026%$u\_gr`:rC[pt)B2ltXGo/_RQ=L##B'N<_(XNB=1*(Q\HXsPbJeaXO=2/A7A'q\B_ELb._-/Qhm5),e&8_Qhg6[Zd,_GZE@6FHJ]%UEbOnK=;+F#mDhZbYbd,.H*8?078OO/T8ABGm3*`muoqDb?9E=N#Wj<!kY8h\SPIH7/<&>-VsQi`/ODENjmE.''D4)QQ1@)ZnLOB%dR\Z.jO/nb#FZm@&84,@DhOHI3E[%6:Z`6IV%^h'NL7l.R#N)`#3h+BgZ=gOT(>b3')NsAcrTsdPN.bV.%bR?7-09h'BE&G/cGth%"1f_b;&aL=Vg[*[>aDb#G]O9W20#N=Anjm\CZ*NcR\fKk"j+h?h)$<%S.iGNdhJWDhfb>!L:PUa(:&m"=jBB>e)7jhZ)"snNjl"N%X`D6t6B7sc_f'W"&Q;V#B^;Os39\=9WRs]RWCC`k_$sO^W>OIqg9O)<=1B8,C$*C^'XlcrFMt+9ac"4P>[BF5X]E=7^K&9CTG)`e%db-Z6['uQ0&;&_QoA>3/#i3>:k=h:OS2qk%Hjn';2siPP8%!#)64%.l#R/@O*MdH*$;qAq)W1J3oO:D:F5@]:6OG:_G,8.j;(ZR0%/<s+.1LX-uUD1e;UKGB`'p_kHK.LS6hI#UGPeV2@kqCHqKgOblS(VTcI/gs'9W\*GjD?Lm<9d1=Rp(_k9/-sZ(!R@i2fPnA.F%71%aYQ=H&=\ZJK[Q8jRN`gUPEJZ^B&h-P]2]C'Z33Lco+0<d"F`f"qM9K'*'8_bCZT3cMFHZp(?!cZ(f=&/ZI+QTX=*$lX*14UF5(*d%]opbV!gd>'nKRI.U=XDis%uC"g"TY9B%?>s]rC1G\d(]aeh%cdMf)RHlV=UjLpr`4oZE*Q)tbAUj3)\4[U=E7cu5%MeOi7Zn51sK%5I^Af95F==3cYVY*r*2"LGA^8US!3/`8d`/*>rdXj'npbKq;H4NU^&r-NmTf.Bcl;)Q"Z->g!t3Ub[F[ferC1Z/8eQX^"8>EJ0*H%k!:_l^fOL7]sma_M1pqU:lC/)gRoH66##G_E#PB&D=bLW>*H]1n)ht%AD2of9mP3fgV$R6TD3I9p3>D1e)MX]pV<bC`F`s\T&dQ'%Z%`3,Ful;ua<@fuU30EpO)g\/*j$8[*PUWmH#CC]Gh_)a=a<AaX*/rd]#@k1S3n&@^K6BiUs-4^i^3#@qCUiJdjMWufMfL7%(9j7%EAE#"/1GM&C0LcAd?ACZ/%igg;jk>]]LMcc.>"-3oc:Pb)O2%9)fpm5*p%c%R!g5:.H[b^1ZaA;_MErJE;T%<W+)1P=/_I"qI=X0%D18t<JOQUd)O3*BY.S$[7m>e2O".8?oe,KB@fQ6W!nSoq'mHduTpV(A]%#/HAd+"P[*35d4CTQ?_V:f4Nj?Okc=7;=6c`H1D8N#!%0T,pSJGY5Z65]:seYK;>RI+pYc:]"6.opqk)SlB&F'^WDs5:j&bka-M:AN]qWRgV$,=Cd9m7*q*EiN;$D1JTg.!M*5`=c8!W2F@<%Ccj:\7@X=q/M$XgPA.X0+.71<:?=Nql:07oc"6^@_N6Li+3N]HUMKBb3CKYBr-`;h/9.j#QYFV.5,2C=UJutLY'=pmKuZ'7C;dU^%[USe3UVF\-<+8n_2VO,aEP*TOH\B&H9%b+31i-6b><d"XRA\0iJJMrRAig@-OAr.<J#9C[p7(lPWp%qRga5s%pksJ'`9upG!iq2=%<YRo"a5SbpTpe;X7!rgPggWf=i2J.`%j1f8`'t<.ZW'k[SBmU>k"6sJE@kYBNlfO&>"Q+GpGPF]d%qKFpKD\qf&iET8K!B4,;$I_%219QbD)(.*i?M9KB\O5BP]5I`jX>3D#Hd2:^K<'9RFUL8,7Au8.%Ue;bY4)RjpP1f"h+1^$p05o`\9;s`d4HAc$>.[ZY4`<e&iZB%4J.Oh[.d7t'l6jTE2u"Z.-bVZZ8B.JS:gE0H_a*PRo\$6+m-g\oPHD(`TNL5?&Y2YAZY+N"1d1YJ;gF\bu<Zt;a&$k)dXRTk9s'_%D1V"e0#q#LV)(V?F4e0$Vk<8:ZW_cOAe,^m14u`3r=*iG0^d8h/_+N0CWS^Mre@D+oXnJ8XEoDD)CT+NMK!KdC*(AL`8fd!JrH@Q%P&B;Z6\f]S(V.\?%@]qW[[C;r,Mp9l.WIUA4;?1rX4TDbZj'8u7d4F1=#:h0BWo(gB78Q22/JB9/ZY[%:J.>-O^a+I[D6%IF'1.G%+ETZ6ZM6>8).sRaKUe)s`A=Z/Eg48p(>^NEFemt6iE4HpEllI><3!#sTHO8qqFl'nfGYngXh47C/rc_]BW&H91ThJ;\1)?eY4\4Q%BBOIY4#6r`rFj)U[*3=LG:EcD"d*#=dgP<q:!7C6XhC66Dn\r<PZ=bRjg,<Z:RV1i\,Z5H/oM\K@LnS7U?-P=GL"QR`QgD[D<g^U%2.sTtX7JWL);iQ"bJmrB%6]AT4nCJr$l](VqkM[Ile0KPYPM<&\*%;mok's(:\pK,%j#A@[77j_C/m(OC2GqDA53?R<kXVUjjc\c%CZCC(X\pIIAZE.MY;Z<-D`.O9<6[Jrr@2No`Z&iX2a`u;IC3L/[:-`%Us1i4SYi5Ye#:_Bc%e%p>.6lbFt@bt7bnPCAOrj3C"8n[%23\ssFmIS=O%(d$#6Z!*9F^3Vkmn]G(A=K[W8Xn^bhKAPC()lRC(Dc?rQN%rhploKXT_\hOo94F>!5gMFT;!%+.n20TNA6SE!KX&%ia@:0[l]4gj#rSZB28?+CB$)#'QmWtrcb\31b8+2Ii@^upX!%_)QCdWG'`iU"uOkH2t6]g[9jl]n-?-nKlRCrB@uEX-gR><gR6&G%[8usiHj/qQeuC<H_0G:ZeUbOW7H7k`6f%P*$sJYbJbb4%U=!^5]@c_([p!QXnoQSVN7ljUEi+IOd]N[ERDq2]6Pp\39H*"WBUe(L%=\]@jc+f^g+9p4%Rbo"?hKr6`U?,ge6SKgL@c0t0OleuupEk!LYm3P>F9,.7NXS7og6AqQC;41"8:EhS_.RE5#8RVWneMum>JB8L%B9Wkdb*4a[[!^cRY5:\bI9Pm"<][Xqa8:9WCL#=,f@FQ:l(^;"<57>7=PfnWnQi9iOPbBo>-1sQ!^T8D8ouKQ3Ga1EHc,;QFZ9@]%m'I^=R9C?^$XK%>%Rp'Kjf1QCDQJOfi$$pS8^p_M?0gGJgU6OoaGs>g4g5Hbd;#)s([3j"X*Y0ZF<_#(cIY-rNN5;"7d*.^MG2%-%@SY2KXVsFAC(#K$1X5VTaNEG%708T8U]Msk7MSE5ItU3a6pUrE0PFKkp#c-u#!2TTp:b.M]hWuX"#\JZ('gf-TQs8XS:3C\Wo9&<%Wu97k-raVPcXj+^Gi9a!Ks"uZNRja@Q:-FH1.^@'1tj%2YbVP,\HTYEEr"nqXj_U<d(aCX..+T<C&A#h5D'!Sm@'`4/j@Zhc<<S[%[+jmT]DM!i:+/R['>=Nf5WYIMr<>t4&'%e'q<`4T*&Q*oAiK/4:^+k4&Z-)tAb)&b*WL;^n_WMYS$1;hEr3%0X4+I5CQs?SKn!*L%h=443[An(O&Q3MRI+/:_GZFtdR;JF)!?,hIqHYoeIrXNh!.67u*X)OC*INSL/^TE(UM]kVN]8U0hqhoR2tls^L#0'6)8>BX>"5jl%7n2gGR$;(Yrs"E<nj<5\9aNW`M,eL]b4c,?3@I_Y)Zi/"0=P8hJoN.Z;7#Bh^u`*-M*@D^Z&$P<p:j=NZBUlQ9!5Q?Q[cdeqt=e7%W<)k0%ZErcRu)"F]8Ht>iQKP^[mA^fHr`e_9;=cf%?+<-VGdE9=/ShJ'k-S:bXs:)fEVA5r!9K[@Lo.1Wl*EG.3?d)<50C2A12NP%r!%;iWsI\5OC1Wb&AttW.(BPBcd&1:h<%'eG6*0jJKG-djYmnP*>X@uEVSKa#hPdFp*)nn#Hri]a7W7Gm*[un,s?g^S,F0sN3aun%c/AIDe?cX"fK(f\8?Zt3-T%!#E`NR='auoYZq1J^#b&)[^dp+MKkX"^'^-daU=d]i`JU?48"iH5$s0%Y6DoMj)?(Ql"+N1b5?mOR%+hq#KOgK(>+!/IqKeNeO>Gp2ULMN:4&sgDu!.jbgTl*n2A_"DqBWW3ee[1F(J42*rkR<2U?hsX-b_eA<2dk2:%sU]R&@4-N0Q3K5%.TY;R<Vr/H6Yg7NO,m$so`i5q[TI1m/7AJQL)EOqOi!/;8-aRhrV9gNerWnY)//?r_4N=bS+$$MP[JYC^)M]>*U#UI!oe;-qusFi%l<=YfZMOS),lWkbn@qPKFgFj1';e,[cM^KeZW%&<T\"RDM,p6L?$G8n^Xi6]eE86rs2tK`\4_"(nX][5?Xj\-/[tU10NA!nO/`tc%V>o@[0`*Ob+QQD(cII[J60J-[g-+1DDg%Y6$X0+T=/.sN:2QBZs7Zf;Z$2>NC(J8PKQLU,hqjeI@9EHrp!;?MJ!16e&=3@%-4!-f%Hf+_hJ,^UsJGiNTpAYHj7lk\D)>7eSP(3M(m#rIO^ROo4k?'R+S<-d9/@`5,NG@cD_sRs/d=M(/?sn>/\%pVAB%?o`Y;l)*epM:p%fLZVRXUb<iesEkk!8NR/`qt95o8i8W84'$!q=!rjZid(or%if;pmE-%XWdT5T<Yb2R/UH1B]j#Fk(LAnqHssf%,-Bll%p7:?F\a*%oGbKY)WAtKNF!D'2Z;#>`:+YJG1HA#&2)S(KBc[IeJp7Y&rb0Ce28F2A/.=V<,I*nWum>j=f70N##6hfd45XYd^T`IWRpNL%6DQJ%_fQDH6'K2H>o0J6STOpR1po&Y&rK[k74r^qq$T9mV.RKsWr>#]p:aX/?)NIiQu-.d>$%7&g)au.XOD)3^>u93jVs84$2g+QT^[E&%pR+J<XBmS":0rPacJB!mS0m-/<:aW8`d$W,gn!C((XBo#(rfr@qh&5<X5Uo0f#kC$ZQ$&i0IlQf(cN"J\DW0pKf?*:oW#FC+SAg2%2X'eMDq.mr?/ossPsg>>AQ`BWo3Yg#(%7TB4B4()f28g$l?%?Mh.k2B;H_.REurShg)#-c27@,5cq0+pjh,OY<NX>WT%IM]b5VkY%EV6;WJW>AbY('Fj%BMinf@gE<"M\,Ps8>JWW`o8feKg_j`;+1:St2-"CXj2QS]cjf=;,gkgcJ'_RqfRgrrao?W\GfOmqR^mVu^.L%"cjc(!G<'+I=`fK3aKr+?8OC:h_b4)WbO0leNq+Q/])Lk^Lkl]qsA^iT1ZHA++p3WQ-2Y!dq5\Fdo@NkCt#0Y1at=d/LsJ0fj(bD%,qLt'd#o/V**]`Yqqt*'U:Jn?2?0T'hQolXAC&Ch*cmT4<;l(s@8:QtSY'eIJ+#>9WY"1d3]2^(cPlXIeT=OXWG&;n^dEgGb\\cW%^><T;:D<ns!#n-V/W8U[3^frFXYo[Zd;W?%1>\&F^A?8^,W/"#-7`[i:14aO.9-r!^>Aq>$U;_b]1ItBd=Egc_\N\SmTa%=G>J`e%U#56V*m\kqG,oc7da2adeNS&mEZCKn\!^j'_+F]6cgb>LeMR6]r-gUi*-B%6`4n!Z7^0G0gc#^m[6(cLE-9#>F?b]47_12t^)="6%G($[:`?Fqogo*/ehdQ+q]r+a-f$/]I(bQJA_?XMu47q`9'-I:-!M0`5mH&*#O;11V\C(=5Ld^=HJm(E+(qgk]#Er[6SFpj1g4b"K%S);+aeV#F\2G?o%K.`+E5H^.QqOgo,pUaFm37\#D^c(KYiI;8k)Hs:dHM'aUP\7n%PKpu;fS0a[\9rH;5!l^qpR:$K/M\Dg+sU9h%6hng'@raF2WW=nc:@'alO708/$u)KnH%/W=^dL:uoq#l03-)IMrUa;-Z!dam?DZ3IX3kB!duru&[GH/KWIlL9-b)#.]CQ4l#N&OO%K%e9^)\n;D)"@6l3T/%=a;]6clb2O^fHV..\5Qj1SOOQ"F6ei(VLr27fkEDACs6t#94S!De$c5OloKQ_%f^:VKo6r_iHk8RG5:Ir%lnKR\9ChO]m5s.kFiJM6`_aTf>1Mj\G]V0'dg]OupDnTJLV@rCrPg,Zd.)G:WqkH)Y7I&ho#-iaj6@>P!7`YFj9`NNnWko.JCER6%N("HC>IE');m0ie4#EgL\,+Kc[bj1,+SRqWO<Xkp?)Lcmp$InSJ?/s)"fUb5?aX2\7'>5Am.C:4]+JBB_#)+bO8Z%ZC\?+F=R6J-%7J<nm1E`VZ5]=\Uporm>n9?)#KhBdcl`gX[YhH#/1dG'!RZRI4]s75^^BX"`Ie0<tNfr49029ZrO"MT@5!,'EM0HABK2o7\ZM67g%)QHo=nIDFs*e*u"0(m!`mZ"J&n@CVD3E:*2@]7epj/HlF8(A@Sb#Y"6q,]G,BO!u)Jo\FMY#_Q67F,]aZFTfG:o-qIR6G?h.T+)'%80%JY(9?<Zf"F@Z2$Vd5(SG?<Mh9Wf/5?=m#mI0QZRoV],"1a<.qmTflY#!7XVT1;3q62S`!N*!qTe#_6P0KGh?Q3ra(SZQdn`;d%[er\r'qc%Pa3E#J.U<em+4h,r?)u["&!>E6nM.<&T\2*`5TY(E[9D<&nJ\OYD:SUgV!)/LEaa$WLA_>#pBp]%n,3am%a;GEE4faO%k>q>pku#WU8'RX3VMEn3]%6;ob3ftZWh4NDIDa*A]XJ.1HE5eImoWY\4K=gHdacSh4pPFpkkb@V'o21FDa3!9O/faJilWmNLt06>%I!JpnW/-U#''XO^Ys3X-@m*'aL42D]V"rU;7^W"X-W,O:eTSRbn'Wto1RF"^87IUB\V`HMcDp*[NJ0eD:cQd:L2gZb15V=6q>HF9%ZmCfQ=oGC@$sL$kD)M)Tfk;s72+&m,c$pY6ZUXDs;&_JEN^OmP4+H]V/PPA*Xj(-)qoU@Urj0#>9A<X=2'0XbmUAL'ieO32)PJ#X%/JsH\Z4q<CXiQgb/o41!ejrHGA$5<URr,H5L[*O]>TD7jd?_uc?(NQKkG\*A#cTsN,iUQ9ZN\()!^>#70gQI3c9qoFs4-IfoA9HR%lu;R[(&4gO5+9:Z]NZt++i7Dr^./rIS<Ycu[F]>)LO+ED7)4C-2Z\)%]1gjgn"B9,M*r-$'0I0-b&uC)MW[Nq&QT>`#,L+#.Bp*.%`R'BIa0Qh<lGInB'(%8nl_BtaAfKEe?a)DV'SAg6cU&L#\!A/Gk:_bjqjL]'+QHq3M(SBXQe9#tb6XNSEAFft3KWd#UhlR)ai8sS%iu<9J/oP)+$DhrppM4^;@^B6a([e_jVc%!q,5W77bBo_@<+b59'TFBH^,@2*PC#HUr+s6FfCsA40jM>L,`ck:Od'f9$(9&M(]gg0%MXbba0D1A,\^HhMIJUN$(Go:<hIjUl2c?iE:@=H"eBOo.hFjU\MY;@#RrA+5pZ,`F;"&=:HQ0`JQ-R'`;slg*$`3aCh,S#B^KD4O%o=6c3+tl[A24tfR>d(%nOuL_aOd)0[,)KM"&ppH`=ZMXmWN2/+o;`U_%gl%t>27gh-$b(!$@p3-SoeI8hcoqoFsn%N?0XqO<_Cf_%ej@JU.@o^=]@-E4hD>)bD$fms]+XSP;8:^en)*aY>M>d4;(a:p9fg+[d9CnZ4;J#Iojs7^im\sWhG\E:-S6ES_o1,DAD%q.!`\Dh%>dh=r551XT4tdpAH!dr7buaRN[4A`gIEp]AGlc`*CqXEJh19H3*r:dRG@pop[BJb_.pHf.LBBK.M=m=Ci;kdI\9N(EU,mfK'EV=G%],)rNm&;M^L!"=NW@b<G\H*Epn$P;STZ`L==!gi0dT>P50'r$"mbE.mq72fK=)U'q8nV[.=2*9'd'JuP!gGrYUFQ"U17n[tYiK$A%5,o.,Vp`g-!f`8HP4GCWdaoplT\[;6:t,Ns"I_Iceec#Mep>Z2Gj>k3UqF;6P8t^65XSB^Ck&]oW-A@!gQpRQ]fT%:I[=/T?(\V.%?)U`Q:t,Ns3i[tu"V79Z`Mff9gE&WK?A(r6lH05:IBe=Y?.rOIC4'@"!o6#kDEN9WS;O,qR$Ji/.Q3u'Lkh`'Q(;G-_6/gjFmnF]%95:Wq"F@G)o#-(8V.,IVk1"MLh?40JB'no45re^)caa/6?PmNJG;[V[k\7*&k6WsZ4\YltPO<j!*YQ?OdEg/[kb7p%<2j\(>_-5K%2tp%>0J7OQQcId[="g3miC8(Ch16WD(9d!VX6XXg6,VJ?DtZ?kH4t),FM32G$boTo"V79f`312`=!U$u;.j8)P?6)%5^tFl*>L\e%5%]MHl>+6G..Gm+a`[2j/UES%-1LNtm>E@=:1HBZi<AjUGV(#&#Z0S:VlX3_$b(c[I5dh4hFVIE!I^0l%\ZJXX(@\#XY($*9q^]U%Cdcj#6b+Tff]3=be'6OkF89taJ8Y(NQ=d7?QXi@roMl.Ckki973rp7W8qf?Hhl\(SK_!7&/cnb,Wksr6[ku'TPJ$#Jmkb3Z*@iL3%TV.K)IJ%ZXSmY_n?<Sj#g/VQ+Z)O9V+OJ=\ctmf4o58IWJ0%)u5U01coTK9oEEPA!48SfcZW[:%5e!qXNpNV_B`.b66d2%(pNflI%5*Z?0&S\BGk'1WCA8/OnOmCn1pU?DI#gJ[hn9WdjAiO[S4=/iQH/l8*T9#B$qb?$_8!_6F;$DHa/KA&4.pc$C_GU7c9:gm40$fHm%ETEJKolaItXmKJ?4adnpMdHS,;q$MI8.(\BM\2#Z+4A$Vc>h(oW@D.CIa[X[2^/=Eb:o)hcUTkCSoA`kfq_F2Jqd&3KU\%P[b&tQ%iRa6ak7ek`INn^4QA]'fT*b7M\L4SY^P/T?qc1[8P@BS5iT^)`dc9^b?$O(iQbB!Y#VXjIh;d`m&,MGq4]FS9=(A!(.NNjuI9RBn%bKgp,VjHE%q8.\1`G-F`j@a66]NpSVGJ=ZTh4L^nmAoo>_7^Z(V#FM--%8+,WYirj@XC#$mcPhZ]q$bOe>`8>5qB77*;ju0Wl,uF%_e_jck?cK,&f^/o(RCu<eER4,nUX0alGi*jM*e+i6FGFrAiFImR["s6"f<jlP;Ap:HbF8N\s"#5'J!8>\N;RW/DZXOdSM8iMM6/S%==dtm'Ca^eQbE)2D':emKkGtL.'F2#r8=&>GHSQ[#?,PQNj\QfbTUn[A@_lcomO`FZS#jYRr<;.^kFO;G1OrTb.>&)X_aT*pgiR[%fOjji/-i2(Y!t>o*I"1!h5rW_Kh=Mg!")cN!%V$O$KiHq_(e,j*`p%*^A7ic:$FRJ?XI,G1kGAsCPfb+<42hXp6==XUNI&g[q-fQ%6Hfd9\QfJ19sD=iX-iS`9"<+J.*O#Hk4%RE<4R>uZQq&')hGaM:S;7di!C*1%WrF5oYh$Ci=/aJ3PY4kMZ/DZGsbI$87&t*H9O*a%MeblgSpY$q^?/c52%6Or*iMNhnL.MQp_g2hg4K+t7p11la<nK`+jAD:*f>pRWtts!s&%mp.;MQRNgRHpPK(WF)].X8YR"+X.Sm7)%2E#P`$,pbP/U%aho]7`MXGR>#+/mR8q7tteAY4l8!2g#b-(Htr80nc7@%.=hG-B6MkAlf8<,YF,POF=T603lb=FTQ(dPq[$YQa-j%Eg1ttO#rReeE?#[f^&WX@*qG//):T$cUK>jS.'mt-+ASVJ#&#Q*[i>X8c$9e.9Ze*k3S?GI2ILujFd,dbfO/fG8;q17r79X%ulVX%lP.EOr4p?:*]JO$6_#GWjQVWE&c/:sAIS.:j+jm'g;EU%KZ*FnL@q@;.3h1=a6rB>^3eK)k:Dh#-ms@_QLHLZg]a@`5Ma`T"6IS.%Bjf%c(Yn6"`aq9;m&DGh),WP@afZ)'d<fOj'V/bkb1M\Z9+qNP2UrIJ-=#d]Q$:?$-U%qNd-]nHd>e?8?"d;g]Q$K=<H5WD-(Xh@%FDY5E4:9HC:t3lQ>Luc2r`u9@NO/9J<]@b?Ff4ctflnk0AWFu@/^n%:1])5rB_9&gq0+7J3a*$M+Z@3Q6$DG_h8<fZYAWGV(oU>E%*e\h/[aNNh`o&nqGfS`Q3koZOm&fa0QtK>5Men_AYra.RDphF35.aCWc0#=Z.N!ckpDM/@i<o@+a%8WG\Lu&kj_@51)A^C<P>!4j%*Wq9A%!`c0*p!jpT3V]URS"?)"=5h0Y[Edd`(YD/VB7o]H$\o@Kpe]/.:sY7j_&*p^9jKHNUp47<\"Bf]'Xh^-<HhemP10*]BdhD%6n7SY.Id,`GK&jqb$G):an.2R[tRg-Q6$o6XNe5A5>!mK#Ge04]men"Pi9l4\TE"Z(4C"q3HtR`#LN'Xak*e"*96Wp7rXD[2o59_%*im"[c_iLkn[if$eeB!gM&Wc?Pjs!$[,jhgmjgW3F/.A)^M]30^9>NDk=.1]7[oWO/@*7T0S?JLa2Ct-gcg'7+fBO#qSlK=g9LV/%ZQ"3TLXt9Hn)<QUT!'3A3nUUL!d*XA@89_2LMJ;nP>%5$*[CKc(Q-@.l\@td;.og60/T7]0Bp8\"Rj'LWeCb6l,@er@NlElK$$&)%0GY7*ICjoiAu:E_fFpY>dF#M`g5ik&)Jo(pXI\+iO=Y+O=V;$]'*_q7U^0k13#hA_]an;>=q2%X(=]Sa0MhXjA.nRo,p9ts*H$X\%`]"Y^)bPb%TF/KKlXiQGp?/1NM!"`N+'\jApMZ-qEU+_=AR_Bpo+[]WX)ncpDs,jA=D8n\(4K?Id(fRXAGVV.@\"Q]EgZC`55od^%6RXu5Z$]!qNEDtkN$jZ!CI/WB&^)fbBkG>#,6!!u(NGL-g=YVP]X5,O&0sU%)b]rin<rI!L1Dl_'Ls$8Uk+,;JUm86=gZ7cil[3g%P4&Kuqr[1rZYQ6W!=jBHrt/iLDc#+O!%9dsR60K:WKnC&J!A5:9F!qs7LpL5Z.^!>N&k)M`$8T0i/$!0F7Q&PUquIkDm,]@*3QZ]%I3";,LsPfDqE!*#A'dB/-t[()(ctZ5?]4nL5c6!rAHi[%).^2(0=Vn8'CHpqc/<^7Z@0D(T7tSt-[-)ljtC+!g</Sok7P>^ZZIT0%p#gEYmjM*a!"4i.NnCrm'EF66@H\7K[WC*=e9Uhp80,=9)e4X7$MS.<9\g%@?<j`d`PT).Pf:AWpXpa5Sl(3rb:2$jXM*=NqmNRP%"gN88nLAA!Lq!6'97V7;2!-H=JTNXSNAt])*_.e'F0sr@`](W&eVUMM>n\UQ,j*N*M[qUB4/i54KE>7>dTCf",MKQo[XF.U8#MT\%=#7$6Ql6/IF3M7n2E-GYD:'``)P8B+lcW1fFf:DH!VOoT0Qg7Q%ZL[(CB<5#79g]Jj%8$4c`GN5>emJ3aFj69B[E!%7\`$h-=&oh%`[9,Im[b'2V<++V*uEp<k90Ys],s.\Chu1!FGPDsA:O/r&G7b!RuHO+*bXK'`$XZAOiWj3J0k,ZK\4]rIUl+o`>6(Y#*+TKc?WH]%S%>7Da?Tm]F&dl`qjqTL!BmdD)cOk!><2@C/i5ImabGDIfpeYH+5GA)+oAlq?2rT"!*>VJRXJ+uVhQ)DNi-[]fo"Td)XYb["bO0l%9W3A@hT*&<FQ66>eUTY!Rk@`Yg-SH.G6JEDDSg)sWs_DujtpR[eRZ[DqeI8PrM0+i"iD8iC^m'm?iT!-(4*o,Z*>bVHg@&V$gKjU%=EWSI/liD7RGI_$%#Er3G7Y@&]E<<-]l<#d&O!7i^FaQT0]GE6EbjlK$eJjtf@jpJf4#E=,!7aa('0PQ!MAhAffWh`_sgVlCGG;B%-m<0C73K9EhdE`DV5HBnk9l6`/DZnB&_Zl;.er7342nN),8gh,<lM>V$0#O-Xe&^.I(-h`C[^Y4?78r9_A9U#04&O[1oYG@QZAH>%a3KManRTs;g7=j=ZL1s"4m'%oc.W-6mAD`O4cs^:i\9i?oU*0dcj`q+Pj1%W'<U,!@q1lcG_AI7gat'QiaOnA+Bgc#Nl9V&2Wc1L%Dgf+>[jDe>:Q4*H8Pnsf$Tj'#NJf"cA/1"u4>*N%il]P_$qRh^f'2@8l_aMV>-&7X'n'fZ\T5*#<[J]+U$-lEkRtTIFI%lZR<%Mm%S#Ae4kcCZbb`Y?VT0[+%$dP&*B*%:\6"ek24Au`\Ig2H$>B#lJ3r]ULT5;?#Ep3EWkcEHhZfKL/B@,><"fK\?o?X))<c%IL3r]UL%jQ(UId.q>$dCr;?6YG;<m$%-T`!,r$gGlsn3s4dr!(m89]n"VBNSDJoJ*3?i+t,Grq,;3dI43d^?YP6cn(GiOHc`tQp`<'$&CV>8%id#+\/=Y%XB!s.T?P8t!IQY(s5+fj7mDJMYT/1+*5iu>0r])3)1D'N(5>@B:'I`Qm>ia$4V68WMSht/!!aYD&`pBT@UPFBtl+hd!%#b>*$fF1ZLASo`X.?Vp#*3Xss4YAe,k.9kjCpMfk><uNVqj?_.EQ!+/6`"n/=jjfj\):IV4LHIH`apsI<7;E>jIdAo6+10<]h'6"%$UI+u@ko-Yl)ZgX3%dN136AP=n?O`s+C%i=?1Rdg;A^bgS7)h(nqm"m_B^1R1OJ$k4l)ns9X9Re.GK&jb`J:UD:pICBn>ij[)"_G%@Y-_VkM\fH-U)g'2UBQ(O)NPe[.6sdCNq2B3*kc'Hf0,Hp;!;,(m3o7j2^`c`pJ<fT#^$*6en.%5!^6^,D%q9)9@gDn&E?mfEB0O%b`QhVf?>W1jOdB4->C\NojS8cNCgmQN+2?/NS+EKoQWs^7OOAt1a[PrO>"6/N;8KG%%4sR/76[m>BhuTj"bMX8#0?/X.;KKga7A#%qd9M"p'08]nioh*fkeHq0f7NhT"GA6"'^2ij_,A*m*uqe0:IhmPk,_8M[-jQZ81Dq%J.fOEtqcgm#NG_i:qn*Cj]KRgk^7In6E1b%MPEN`HUmJP/&/4aYu8o9(&QM\(q>^`P%/(t,<\"(9]nfPMn$al)j;C'7dG;36ofH&:$n#?hY37Z;q+0c,Tc.`=Bs\U+dkIdH[i?j%N_ef)I2)uh^cAS,a9(BXj(p+]-\AoR2,Qc]#:8.;0ctl8MoZ`JFp16JZA=HLQ=Q'VD@W0K),*Vj,pHjif_<5+&K,k./[j^uO0`Sg%JCB7*aWiR4oDS-1R3OK62'qCu]-DP=>/5rQhg%g>%;j[P$mq[iNf;I:+u0B(+u5j"q0Cg/R6\kSgkS2\9U)./]1X@.E0bd0eX/JK%5gJqok6?c7EY@!L`se^*ggF[=Q+VO9$]mCfi7tP(F6BXVT&)_<M[/?>N/tMjk[D9/$ff[UE9fi@Cr*B%FlSa'-pV*EOShs__'PM1%5%1oC)al7,nHsj$3S@&S*F&2%8$4i';5)4')([k]`\0MLSI]A*Mt)b9H0<)iHN%$NI(4/Y2P5@VHBOjU,B!'qr:Am!mnfQ$+3rjn%>;G4#SI[[Q7*rL*_tiYRii_D`o&6Z/)7bR^SFYY&*dD<egq<7;4L-s0S.FdI(\:h]ftHXo+gW4!gmGe9JbMQ!;dqH<1;KJPBM=kI%liXpS"0>V8\cJ+fOOs)C-V,a44+enfi?dmD-dQ;-EJq_rG%T%)-`o'G[+J!o,0`M;SitC"G2!*@BZDngi`iHY0e>O)r<Z$ho`YoE%]9s._j`/K<Q#W_!"Q,Z\o&Gt)nTrE#C\#VDi,hk8DnP;B[:*N6]:$uZ^ndN@B?LFF]omOc'LPqPFu'ph]^`@_hPY(5DR7%p3>-Sl%BkRh1di+p0,J/i;CuPc/7n.69iPP0dj.HPQ2:%62?h;K4rAC4+eAn1AA>G(jWOZQ869B818B#aacUc#Uk)kd`fk]W/JTgDGo??(n%!V&0,2:*Zpqi*V/+@a?>V)NI#MeX)%1>L)8HJDEWXB$mnNZNNpK211AT*7B=<&df+=YedIOpX/@]Q0`G3:AYZk*ZQHG=7B]O.83F%Ngug>lu,MucHkADSr/ALYSLd]/Fgir6"9bKnA\aJ0&u7[>'T<7eL8Cc>Sho;%Nm!&"'>M?$6SEUH-#LM`<FS(FA--OY_;%\3\RN(%$o*$6H*?7lRiNn;:AVD?KOkt,ruP.g@5!_+4^?oJY=4LX/EJ(tcek(6.JcmiMAM)`6rjiM`CR:VnI$u]^VgMuY9L#Kq(-tV_j\P8%lL74W1:LUNArJW0?WND:`6!I6*6lI.bU[PPDJ'j'8nD5`=at"^A%b"TT'R5>>IsV#b-4h(O+,2gcRDY_jAKh*T\2bs(?M)qp["75%(/_brihb?5:jM[s54?.jNQ@=0-#2U)(D`[(lf.E6C!R2LolG9=f4rnf"mjMfg$M.G!4C_)pU'+S@2Jmbgq7n5Xni%R("Rd$j81f<%oE6(X>g-N$OZ2Nk@CK(d?ZqAXMJJ*"-f9.qhQS'"hW\Le^8KS`k/-@p,X@:$iQIS\+E$PPl%g8J0eU',Fu&26W.)#3nQTm$4P7"%%Ds'T8B1-mBe/ips<S'%rj;p2K^;k!/or)KK4]gL>4_*qo).!/\MtP><PFNYiTjt#!]P`mR)nLPs\?hHS=gB3q8FJo[r/Dr0I=4:\%R5qI4)]sd'i"A&rrf+\eD;8\I62KbfQJ0h;W'Thh#tjhE2_bH%(ZG<`Gmm(gCWt9)!]ji22n*Ta\*:kbEL6aZFDg[Mf-oEJflV,B%FQ:]&R5CDY/LD<lc9%N@/XHt/A\Qi>DO_B/HT%F-e9\:NFD`$h-934p=>o!F4c8jQVK5t>EF4'`-(E1DVDOXbHY$aACc_<uf6M#X%H0:.11Rg#T3EJ"KdoeTc)nC'nX.hC]e%$?kO=a!_O)-j9PUrlcF3:A$bGB9j0k\LB3k+W8c@h]l2P"&NCk[(nflV,BF=oQu1M5*1%9<lUEl,HP9:>'`,\TAK_/3l+a>:uI:Nn"QkFDd\J1Uh](CcXM/A%ss2*nbXQX!M:_3S/(.HNVIOB!5-Fe%(IEkK:lqflYdWi_(dc%p1;B_3qmor-TS'JVR$iOE$`1R\YdWKF6eqL$mI@&'Tni(!_Co:fD6`640d49(W.mlN8sDST1f6%V_q5=pbZ#UfY*2ggfHGS]9q&q%F^$K-e[]rA_<<`LAm5Y,P),k,]l7JFiIeB8SiJq$-JI!X6hfh^CgD8=qqWk`mL!-!PX]h?+AtMD3=nf1L)Eh*ps:H/>f1g3Lu]l\%.q>1`*B7\"UUuSW5qnASZKrC`9pr>"`f%P(_ZY)'"($$b$5,(bq3jAX],5b>?,/k>3Ll[(dku@#/5FNLmXh>cH!GDL@75+XC[PFP%MU%.J-HoI.^#j4n,]L5Nm\\Y'!Hu;"(]1T&>TM*Ec_>bGT@:Ak>h725cK.(Yhhtq0KH-IPkI1,(_S+M[jtgA,F6L1/f==gklihOg%RlH"3V3/CS`b]Q$[YYE,P7,=NSi:K=(-plad>9Vjin4a2FY5T"H4Pbm""/9flqRdR(&s*b"M:@`cTe&X:aGdbAf_&##MB@t+S0R_%9-L)GS&=MHq>o?=`8l43m)!qCP/*2\?j\tZ;`MRhl(g'&ZNUHd_!XmtrS<9h,hDs4N*T'`T(quj&a7AE(]SAp7lN95)G$9!CmQLu%0AD/EPMPuu\$Q:pg?9%3)g^_Ms"0X)6@Zt:SKlTpVHhI=#/fd&h-bKp87\)cp2;u*q=!1.O,7#p$*tB(?(I1d1]&U%[%6H!X1$8[%YT9>f6^-n;"T`U7A=-eZ(OWD`0n_<K7#!-7n5J+]kF,b'1U@p%R[W-Ie`1PW$g*GpHGc:"o?m5k]*U934DqZulDD4No8,SIb*uB>%*B2dLT$JK$5:"kjG9QFpS;FXPh/F2&<:eqdT:$A)n<@O)@EaQD_%UV'"kS$pp$BNQM7)?[A@J@]Aj/*SjBdeiI,ruJZ^c)*g'JJ<%o&"LWg6jOtQF&tpjm7i3^O4@]gHf%(8UgQXk*eQej]R!KB,]7_jr2J$](S'jY&Q&fHf'4hE5Elt>I)]<BuSlVR/E,shRnJbm(C'*%'6e-V1Ve0"kHs&N.\X,N!)a[WM<U>Mh<-StI-LH&i19I3&"BpA9De'e*:"G&U'cF8D]7*#No:p_Dfn<rdWqA=LA>P+b5pkQS+7oN%E@n'$pXtt7^i9js:I`tf7oPCDCi7if^@f_S=Pqp!!'X(2SI8g_"5]8dq\&fB:p78PE[0DqY'U;9r6F^9SE"?Vn!8:TG(mt+i2GQ!%8V<j9PU5Q7k]`EMGD.,#O[LdLJ8'F#P1u=hO7X`.ka!5'A)D+%Bt_4tm?p5%PO8+K/P'ZgHTp6)_Qmf<>]9D+p.iI,-l^Tio?On"%Gn6Cfm<V6ffY(YShf$n+IrXQK]q8PU!aQQP?><e3l^k(iTkIdp.9p'QC/7Ri07Gglo&6shXe2G.USj-"\@<gkcaYLM6JtS['<"aT%KbFuifu9eGDs>paBIJadogq,JW:UgCTY&=t)c*+WNEGVtN*JBlnBubNO&eAopA3BF&N?AV.*__FGtMAq7^\q2nDkN-Lj8I(rZ.fk%oC0A/eM&%%Z\q&ojkJ7h/ZPG%n!KN]'Ud"S_s'"%7)Zf0U+2F:ceCi*L+^9M8NIN/=V#g,c/fRi'$dm7p(aWJ>D@MXTX4I,DRYu:%74RLjbgD+sX6,1WX8&=-'@bJ_3Pr<Z2mWXI,X%C3?@lYSK_21k,[7=hA>QDS:9Q"f9(Uc1kr>S"&3in!9?VBp&,'r.T(J[YGMm]B%b"M6*].pqN65(L'IGiA'o!7\).m:j`FDn7/C@-$Y-Frqf*`Ip$s)GCHA$C1!_(<DS)o]s\2u[#iK!&=EkH`6OQWfnB5$"8q\W)sY%aJF+WF03QDH3",:1cjoi"ZYY[c<rY_Jb-k#c!&9(]<hXYa6]9b`6ku`2sJAtcTsE^[5,KWnsd9'A0:s7_,hG5/]qg=f?Ju(>lh3X%Nl'r[)OaeN/?89;Fe..,3!5*\rWkZ@Ao)W0G]"Qp5>WPl\WU(Pp%R5g80lZ=%f7tRNn)mOEt6E5):=c,fkoU/*!GcNXe*s3^iRq'%5g/p_Q4r*FpB.=6NkP$rAGj+6p3^SfZ&(MmR@tGTY-d,HH02.GpPVbofYecu6a<o,4HiTX?>#9`A"G3;dnn79+`/K1fXAXYAJSZM%n'HMbg8%l%G,b,Z!H^>%@tH6s3tC+-J<'Mh-d2W#RKLVf^ZQ<PX,4r9e8nb/Rii*c6e.1W!;bQ73]7@b]P6ogX"[BdTEdVMEWH&Y%X?=TZnVqk_F6&usJ3e5V4m0nafC$>@l;G>FDe,@,;EiEce@Ao.2^YOYVb?hP_3N"KQh!0/fY;MW+,u:UHNRU$9DNfHmbb^B%s\SG%qKFUSS,E9.BeJLgN@H&K%G+61M=4-C)0\!'oi=<C/S=T6)p8+[^PObW4RVm3ibYPBme-2<g)SCm1@On*AY2liHi<lKmcJIH'Y2h6%p9UHEh!5b)^N/I`rClLdKecmmH)c5i[X<#d$Uk0-liqUFn+E/$PAAm!rL=j9^X^Z@;e=[0rVX:iH[k,[p\O^Cl8S;D+REE!rsjbF%FKaT3*NJ_Af?aI@XAF"j4_HtQqY<c;pVrcg8!DfqkATQ(rn,`pqUr;*NSNeX_[0;NHi<lO:5.hPYM]+kNd9FGkC9PiAG>V>hs35S%I=0N#lXt.TH)mRX8Z`Z`lfYsPN'`rY]mfqg.TDJRI]oA^H4&=a5-HLlmp#a\H*>]RlfZ#XK6D_cp\O](\G"-;Sa]rMY:MBNC;PpT%&(&rGjUhikpX&EAf.XZ#cZ64]_.^!\qFu5Whh7nPGi$J"HesD:<kk'.3NbNChMroA5eCk8h!=.<Z.6qQ2oK[HHi<lgo.]XpRI+<F%,N['*1"r'N'Kl>-oNo<&H>FYsqYB%62kU!B`bj-0H6;%oLZt24f/_XPa'3PU92B_W_s"d_A$=n`ehC%XlfXUNnb>K7Q*]B6kK7,N%Xa[TgV$1p]/F/QWh<X7mk#aD)B=c^@UpaJCmPO\.9qI()E?F)>d4E>?I^@kN(GlNOB?ujd]meEW_m>lORIBgTM;cOXIK[e5me,V^%D!ne/;*?i7]mfr"SVRM4LO9!tVsTFPF3AiL^XXu^gsSqPkIl=CcRUBSf?[(pdTc\4[!T%@J#f4%[/$]ip%,rK0,+lR)Ofo,;^TGo%>3%.#p%,rKDi?mr4<`;M<^05FEMe*]VXS#k\C]&J,fp*_i9]/Pp\G'HD`R^.If@=fUSCTUckq`<BMdi.*11"Kg$rJRG*rjc]O.jR%S=s4:o25#V)t30.M^4e0_G=H-$k!:&XD!L)D07_`[ZZ0:#oG*feV/1/d1_tSmiZpj'RRNqMrmcHY]5a@[9o9Kb18n9<5Es^]u8H(%[24Z`-C,kn#`>]GmsR[RS%nQOorT<!Z*AatQagdZFbFf2G=F"\:9=hf_t-!(r^s)6,j_,g.H+t?j@)')IfBsS>E)G;nlXIsX8V1?%E8CPA(N+ml9=T9(*"'GY2_j8TGo[]mhA/k?kNCTDiT3BI#d<gdMXYp347Digj\2lXfNIYP`V*"Sg)Ib>Z2R@5)-qiP!TnR.Umgti%e%HFnIHTbWrZe_[*5+L>dahWVkh5(c_=HbjFC@J]SAZ1I[HP?!0;#uW^+F3'njL:70\KH$?HJ:je?_t.P-8+r7>7R-*D4X=Xu_5q%$ct'hpG&62.$?(8.@)J,ffaq&"UD:<WISHikA(EdA,%:]DEPsd]ouF4m-@2<Q2#3*6XJFX.YYcl:jK5b#eQu^hu1OWll0Q>7Mre?%T5nC>4*_AmQ'Vd$8N[g32n9`Fc(C(XD'U.IQ<elS=8'>I^<Lo'V/)t$1$h*KZsA^12boT..^O/J)7QH`;G#&"P4>(`/3AY5c5050%mIgZ)Ce%BK\K4<`hsNp6Ihn`UeK9e@1qc(O8tb$G&m("NH72s5<\krnlXa`-.+0>m;^kA[)LT0`MTLp?/bjM\6`0NCk%c,7hNjN#%msuV"dM_ThQ"#]#qqYA.2tl5FhYYGkK#l,AJebB+;YW&eINBr>$.&a+Ep`0_(Gb9iOT4_gp%*sRIQ`5t)!DCQX^'Y/5^L3fC]Y<o%UZt`sP<UOobQh&)rd(%uf[#oq_"[]Ho*;1fn_b8h/D:^l]:5js%%q"-(%uN"Bi_]0hVCs0]p#L)arV5Cc=1%)lMhpBK+!h>Pddh@%nFLI/eS*lp\;3-@B9a`C=p6Rk;'=Qq<M9WNoLK(<F:(B^G+-7gEfq8Gpj#T&?)<1;3I?iDa-U-g]R'h#?eec%V[3?brY@857k"hb%?9+6O)#3HGWg'K#/?aK/=0=%mA`^BiAQ"5nH[BY$\FS<'\%P9m=.-61NrD.EjB@gV(dHBmF`"UnZdQ?5mFO9ACgIGH\eR7*?:fuO%1-2MTp@e6WGjAq'Z.E8]0fiXKZIdiF$;$HbU?:2!o/aeArp<_thi@Ej3%f+[,5$7<DpQjt^+XWe>?0hCl3_6W%IMaNBe`'#2uL>5%Y]mi'"TIfAjL."OT1<+?<.<A/bG46Vr).fs59*;!a$3GPQ`oj/d496'PI:)'F8W`HRB;tp>2#]_$.WilL+QkXBntp:VXuqZrpb6(%O;ZiN%A5Su/;%S$g_G$Bn?"22Dfs1'#6t#+qD\2O33[tJI&_ggb%c<>4a3)n33Kn87s1jW6VKMOH):Yug?b8'8O4i]--E+X*O3<4%\Wp!5D7Ll?j^3_6)mI5\V1c!$)oNrhAGY,!G]8%,)HP0ZiPFZ"7:3X)(S;0Q8\4e]Bs2NX<nK6%4nrV6"@OUeMTh4ni^AZK-.%Sn%ib=>V@&!4%+.m-XjdY!f,g7M2b^lRi@Z7Ah_8g.(IcaZ;-tr'I@Hqb_p-Zh6Gtd$cOaM4LO8%R<h=UKPjYj'8"PWF_Fb]_k]^n[(%*9IJi&<eW:\=)G4:4sf*-"8#Eog&XP'*cUP4;[_'6uO901!j'A?\R&t]-8SoEt*"6%Y_i%mUiZtqN\8-gGdpi=*eY%*1UN'fc6E:%CEbVq]@SdE6m&>rp.:FGIrY3M8`S,RrOKDEP:7MgF9H:?<1l;#U6p/.-0E%sr&]kRg-%R\FrkL&I+6R%jhAC_Hej<5[PCbY>Mc2u%@d3:ch`TKAZgR0(+#3"kY:mbSohWQF=!d)Lm^>B@CKj2?jQ22F^aHYY?<ij&e4XlfNQR]^ejr=(ISh@,&`NA,;liDdLL+2bD7u+A%96d%i,//1AFtC=IoD*C\:M%jJ]KU@O:M7^oIP72HJWGdWiUpaOK_ttP/$5'P)p*MiYf=Z-qj"Z":Sl6l^8QW)1BhWDp]9uT[*lR;%*j"dM?O0B,EZ*nm.qFt8+GDY_[+D2DQ^2gGb!1r&Ej>8"^FDE3QM8[nim(=`"+G9)s1?sfPZhOIq+OD[aaMkA#s62Did_19]%AY`%ReNHMX.*J0:isCEpV-3b_oQKYBCFiY>ck0)bP1[`:Z<W$'Q$CE4-+QVMPr?ek,^WmAE#$MfY=4[3kb'anhPG&GLd;=0$FfdmB40b%fGZA4*"ubXgNF)@m&"]EhF6NP6$tgoEG$*>N\5k=NFq-"(-A,so(Mq2o#RsQ'=L-dou!WS@qg.2o.,;jP(*Op*;X+h\cgSNgn/>k%Vrk8#8m9muXOm]>Sok,RHSZgU2Xf9EhW;f#O5]]6bM-*NSRSq2gtTAB\buh'G<1)a]?3ceD_Zb<Z#Kn7:mO`BkPYc4MuC`G8kGsO%gEhs([IXACm7(s$;e8RI;eiLboV5r?-^AGEgMS#ZhF6q::XO/m[#o%J^VXZXW*@m8HnSAQU)Z!pkeJOD)Vs%:%5raWL=P*):o'FJ%i43YGk4d@r&!U_kZ;?k\G4`(@99sqNCX;>@8+!G7f$3S,<-]&%_tbSVZ^F+'3Y9u:S$75o+15Qf`ZVnG/J\_$/+(AT3k*P08A@p%%@4(FqcM'i:gGG#j\f6Mf3Xgtu>p?"2Jk0+t0<=36+nImQU>pQZ_4PmCCUm#@;",\l2Q`G<<U/p/PDQC9j>Pf)1,;@Pih/Ai.F$aa%)965Q8Nfpp@4jIP_]FaP][%E6T5'JDjD&9JS'>0TfS(b\,^NSk8c(qH#MDZGjBfm*+$">E&4oKZ'DaN!>*'r-a7:NG#ELQJGR+gX%i5&l%n<*tcTi*Y/dSeDRGdFdm8[ZkdnSJ<-Dpq)NXOD/-3*`/TS?WaPNnZOg9i8QVplZs0rDFRkbj!g+;l-:iYPG6lhm(W/6hULL%,IXh_Z!Bp?@IYF\$o4I&Fq8d$l-;J>5pgT##OIr"cHY>15)d<XV#6ZEr=%a^Cu-gk![[.cIN=_h0<72#O.S)%oYkULpqGF1$OkO(%+e4t;;`Kd<]I05+:Tr/uR^,aHLuT=kO?KQPT$h0ASrXTomQ+$L7*/d$3VX-a=tUM[`IA/.^A2#M&e-r&R<W98\^`R7B!EeQh)\2t%ORc095":OqZ+3sOBs;Cg1U?Sh8T(%d&Zael%m[IVNl[.#dY3?t")Q)-$qs;eWC2n&o`P+@7$9dj?Z`+nEPAZ;p>[tBIsoomaW!A(%$u=#X4P5/&^7YOX3V!Rcf5nOg:q&,2F.09.6"[_7!iYs9osO_*e,IJ%!r.\c#n1Ssq7g`QCpn1QaI_2s79qq_)WkY21riu4nC[MB%UKTl$',R%+a3I?HbM>U/T\k8*[?m:e.-.X)mH`iM'cI_pRLclio93f#li>fF4>r%@9aMNcpnlXi1\'*cg*DJn"kR6Mqs5Y7Tuk5g%9&X6+HcCtFQRr,q"p`e`>k2('O;=Y_YJT*e51pZoo!S(Q8ngA\U)lsNelGE;Q,-CJ0Dg($o7#4q0DD'p:=lto)m-JL+-oRSX(Ah^%[@Oq!1A!LXc9Ir*N."4j4Q7(TEh)%-XU5X&c[S_I;k;M[H#bR,jRUOU;$NH,n9o_+&&6i6@si)6'3B[DpPY*c4mH00*pq,rTucI@%45scARS*MD0j(p<RqmCFS2NPH>C&hM,jZ4pSs_ALR(pjbXs1#*#0"pD;o9d:i*1M`peQKYQW-0_"6J,GpFiVQFM(3@4;?%X?`ZHR%YHE@>#7<n_Dj?XpHs8,M3@ch&F>p=WSIKjJg3i#DX0l-Q\#R1Fpbh+O[$%B[,MS1s[L\4M5g?nFJdU4(XOrIo`.LZ!k:un+>$]ul%B=j1AX+Mi8][srGHPc8nGV\Wa@K+f.p\$3%3Ul06"TRW"ZPD>HH/Mi,mp@,\1@/DfrnW,Q_iC2c?QJoum*!l\:PPG.+ts7n](W#7%F5NR&N"Fgfc6sI7ocW(qcbrBb&q:L>&DON;0T>)dR9R[J)p7CTq&PBY?<0-&gPH02FJ5(/0\2\1CtBBK-K<T'P0L:dmE*ZJimN#'%oKf=@IOA@55#StrYdM0fkGOkNC]ACu(Fk]Kfn@^S:bsF)8D3Ct=l*hb))II<pq.5`+k$=?ji@%Y]Y+4d_Ruq6'R-1u1kUsU_>)i^%C"ZGb"h-WZpA%bIQ[s407/D\*4s>ulqi.1@`^m2_:60C-s+9:j,BM0d&_tp-?`R2M"\=A9a(*j7\<TtFKa2)@0hY-Gq7$hXAu7j^%ks$_?WJo`oK12C&E.)3G8U&97UKA[gR,D'?m"M00l%S$H7'c$9=1Fm[^o(aAT&.CXM,<JE)C0R7P$n'(C67B)IeQe#3+3uI6Vi0k%6s(*S6n$pDT/dMMpMZ12Z$mr@CZ;Bf(*[Q2Il^VcO.;Aj6sr:5rC(g!`fiYod_@Pb?7G&4^DIQYTbrk%1+$Mg7QQqm,se_RpL'.,%p9o)589PS!:9Y<R*j\Zt\e041@jTQV<s*HKJP^I"-<;M2!AfI"RRg+)&bZEl%NNR4aCO*t9hn<9<6!CnFsH%%"//iTD?rOrb0bb(%-ca1TS)=`$j.<R$U2XV=41RD1H6?O$E`NX59R8P2`e+%srfftL2_g2BZ[m3H)IPD_Sb#sB2,W0n[5['e<"9m7;;Z6sPKS]o!Qn<!%@c!@=Oc?0TEQBc$_UW#G4Y5=PAQDN_AJ^]eo(j6=G4/Y@f*oM=T"Q=1Q>u2\8I:UN@M"7rUR3-mB$rJmCF3QMYpm:."<_8(lJ%;$%[8'3^jKY?jT971SYbu:Y(DGRJpU4&Seq>l\er`Xl!e8E9$SNL>0U2_F@UGX-UhA`oam%T"M]>uA8Q0:Cb?flQQs&g</_(#?`jfl>%-/3gM%85H4QeTCCM0cSa]'M:pLKiZFlbg`jcJ$`M.D)Vj`QRhU*Vk!HqWdV`G;gLrU63uehK`'\.@ls]?R,A"0EYnEQdrGhko?UV%AqmnoS.4UETdZ>lZJ7F*LC5*5HbO;l@r_US[pjTMX2MEB1E#Kt`Z7E!fhY&"<b-pif'<"aG6T8+XC7%cQ$&8(CIK9t*-aVl5K@<4%P]/>O.'SnqkX9]-o="+(7saRh8qhV;cOt(J>hg=Jah%G%^3;NSZ^UGOVO=N%isC3T9Rt<jLa()C,WS^L><A>&bC-k<18<(>PAIkE%*RrR4bCM[:@e(q`ZT)m<W\e@J#8r!\Z_;(402`aln@$qA=YX'te&1iEL7OiRqfN")Y?h@3m&9LKobpL.ilM@Lq=nH`bgXPEm>EMX%&4t_oAb^nC@,.Q['mqB%NgkYV"^[EK$W8uk<QU0?nIHjIBhPr$@Oeqi1]R7H%UbZ+PF#WlS+:SF>9Sc8&C$9BgYLae3I`7A5dSW@%e;S*^+Z%o9?@TAc1<mdC8N=5.'8=?Vm05Y[8JP`_HApP2Ms%/#?945sB;#<o];m48`SrR`b.@9$"dVM6qS6lr;(VT.`,.iM(m)Li%UtTI@88PIOa'D'1+I/q=r/,Lg,CFqI2/DrKprV>B<;IKb09[FX^qqis.WEL6c^J?^UqgIKLIXm?d%^Rpd_Kp!1&1F=A8UM`\,]@S%.pNJ?<HO^S5V\GGBmF>*mhJ4?>oV0;&kkC3Si;tD(a:k%c^e%E2d&DeIKKk[:%O4Jc,30,aFVjs,S3E9`")F06khAURC5=>2"LAY%M\J]3.r`NL7UOH(`ec5SEjQn@'b5DF.3_J;3>/flfil=h?hTXpbRB+98[_QOA3c?+:DT2$p](!1hNf\)`nMDfle4j3HKp!V4iJ.I%Imd\rUo-Lp,I'+jUA/*u7%gZ7+K8#^C]&>blE06Z0IPF*/T[&FKeeJ?g!Vs96Tf`E++e[)97V'FI34U*",`Y+dV;1Jg0*:H3B73O%>N6XqX-shCKBf/C[$KPQ&`9XFHb%W<&S=&<)G)`;(q[:&.H%-[<re-2J'9>goG02d9$E_.lRAX<#@?S4Ue(2X5e/*E;$P+r[bC5C%"PmufdcQOqIU[t]/;^Ola[;T'<O3^_5V.Q`<`im1Bg"37`/)6mn2a]?gq:8+)R-Q%462b31%-)n&mgle7)Y5TA+mQA9o=?u1H=l8%o)L<[)c)I%F/-9L9ilDIHC2`OIH#(!cSei*LWq(`@cd0t\8/mS\B-H=aVDhoNY\*OEaOuISd=7g+jJW30:is-@?E:Jf.IgCF]&qu%(/u^+o]03LH]+HI`[0XB)!NFT#B-LZL.#j7WMP&H3%V2%TL?lJm)>uo7/4rXEF*!kM<H:F6u?uc$C]5u7IbTJ4;n..D'%U9:j=Jg%.o<./VMn6U]%&m.aU]Xh'?eYG(]a9hho$?Q.1g!A@lZ"=ZgrYN=G@h)pB.!<:e^Hs.iH6r$g,PIR.tS>m_Z:0NSOQ6nK;7gE0R;`%#=S/*VQ>i[7f[)$&%]^jj+1lhYZplg&,'Pa>':p5j-<D:o338a.!=QIR^227dZ-T=&D0WUE/Ji`ZL\.+0C\/8[I(Ga"B+r`SM3lE%b,lPeT02Pg".a2+9q4hHB8COACYS_W[WC#9mJND0.pGbCiTC1l8b&$sZ@/"DSh@=^ZVJ^`E\\KA67`!8._k\+<'&fq>ah+=/jA1o%B.h5d(8U_3A]$?gSuqL`!Uk3WO#Du@$L6PcWNl>BYC5IbLJ,n_IJjSPAlk_KWRB8bH&!EHE;(ms7O"UWV-(<3g<S7Di;B;spdh7Q%,#/l&AN5VJK!sR.0SK3ojMtg/,"f@thdkc:65fi!0!Bb;U#;NMpei>hI%TA9h[@F_$YN&7dW:U^F"^`>PeNIYq'a!XZS2&UX$1?*%7a"@d%RM`%/1');gDn7In3]*mot%'.#uk5kT*b_D'4?1]$g1GaU@Cs`ei`q.YY9&Qk.L82F&sn=[!8EF5/+;Gprmf0N1:K@F%YS9%8dRM5`93YRq4(>lS9Nq3:<@lY.1&HAcRG:..4*!E4dL.]qZ$:j8/!g+XN?&*c<Lc^NS\BQq9a#6PG.YG-GM3kfBmm^dVC\B)ZL4<%S_ESFd2mtm_O:=5EIV=o99!,Qh?YLni=J#e!D,%nboAIkb<r$cT_,DUIdJ^nCfX3t_VLN!@MY=)2DI#iD?\>#2X(.>jCe&t1Ha*J%`,P)VG>4>H.H+Aqj6(aHZ"6;>IJ3Pe,P>7)jF53;I3^YtlYULQjceMaK:PBC^SU=7r(:$OpW?4@pNS?UmONK_Q-K5=NL7Q0'*VfJ%j6;ZRI:Q-=+f;&_rk9]C.=h?"gINkq?,6F[i5[lR2p\/KbDnCo*Bda#3Z#L<@^)U>EALDfZ5oc??2B#Gk;0ru8>WbhE;MugFc%\>%/p^2FpC&M-MpXn\^l9N#Vld8rdDU_aR4[rgr9qT]o&=!0GgR_U<X&f4a)Zu>4Vh8^&(Xc5-`**#f/EDVSYYoi201)KO"+ke",j;6%3jKaUk)_5?)-4hj3sjXbC)5I6(%[ZuB6%!3PTB;CZ9ZW10dYJoAlQJ[=06+ZJ[CQGd$WR0[\#;j`:,<Q.Oo($BmO/*Fh,gN"OnA7%I+7]L/Su9aV4D5,IOQ:M%bof')9IR)kdS1Q[-]i4T]^5RO5;fkhn$G@\@!-1:>b'=@$/Utc*_$[H?oIspmF51k-+@C?hAHJ_SbXp%E&-D0GjX'9XB2^l,Zr+]m3l[/7#`6$p3&`m>qf9T3;ll`\=mQ8!Qd!O0u7?oEDfTl!l.DIqrA\8g:%TXa:%UJ^TQ$F[hE3"Zk`-3%g<Rb&2p5'F?WG3g;ApVIB-*f@Tl@L9?8_TM`fE9OkeK8B=.OfEj6=bi8<,U0gc0Q"+HFN[q,R9nr-4<rh^j!_5%IR2kK6hAZM37'%XjVR'Iml8ThC@[Cf)MDb!'tA2V`YnM%RJQ%DFqPC;!_ojica_RZkFYhVA8*mhUtY9OPMFOL%LWfpE1E#9,JVpN1&'#4'@`+<Lg+g%ZOW1/QsGKA>VeS<l$8H:KsP@N4NTe]/^j8fAo\k8r)D\*1FYQVi6Se6=Q/.A1lc+F5MQ8b&EUtC)TPJ\dq$O=?dLsdQL=JJ_3E((%9eZ)CkV3OTI`/&/IPoo<<T^lMa^VX#:^6Sa>nIuehqHB^lJ!K1q_2lZ-je+EE#phBK0s3nGB9&Dmj,`de^OnYDW'U9,fMm0mM\,Z%-Q1qu[K]ZB],-dAa_?EO,?hIVWRsSNNYMa'muZ5%ANLkd[nGgqe_"V[m]t@oAP;&cY%`ZOc"<*Z+P&K?3#cQu=ktCg(S4jUHG,<f%Z"46hZ<rU_I!.4W/M%dm<41hM-46/NF59Kjh!U&35`9>:FFEB$DPjse>pfK?BdVH?Ld^a<Ribs[f?6!HgL.WO2I;5h-*[rLjNteX%+"_-NDQJ=pR+n9]pOWuE5ds%AKf->V:guKE\J#D5C8PiEk&-;q[m>jVK*]e(,"Ng=`cek=.gZ1p.g`qs/gnJqbgN(6bDqMe9#`+X%iq$a7Mb+D/pF!fNg/jc-?o:QnU)"qHZ2;U3!ckj?aEBQ4@"[kRgg3&]\EsS2YTo5Wn^)V!Vr(@,L]>@V)^$*>a#AQbJMZ3ae(48Y%T@I'i!hJb457W(_h7JNO=E5`dJtJ[p8_):5j%)`H^`aEbBn@>V4r%#$#+g#A,DBp5-86PR1Sri5[Ok^p^8t$7m<Hu)g`+TFX0ZLW%oFqq@3-]F2-os\OUI9-='36)B)RpP]No=NWdQ/;sN>&W)q4T*Leg?u06(#fGKCu0$1&8)BR70#i$fsj5:c,E(9.fOh1_jG-GH\fO%a=cIqRib;:h82sXeZ8T`9o<KuEV%8P[H>lRl<#,!ldbEGbbB5r4;O/8\G:Os5,[->X_bTGTf?1c13!JaeB&h\939JX@"<*7EOG>h%?E,3ne;_0.Om'Vk5p^tuqa)3R6Z7m!S"gGZ.>.9cL=IK+DpQi$9]_&IgIEIHM$(6.?<FEY]&I6ojhLnie<Y-SR3]M4g._C-&hUDm%ii6RJ;e[7-a]?@t:Ni@T6#cDV^sEc'Js.hmd`&oA('G9a0*bB'P:[&8^)Y4gUD#3b:;.^(:aTHZ*4$X+kL)dT+q_*b-73%;FDK:+%]hif7MhDDo,so>FB@]L<s!>P/S/)DE^.X.QCO`3g,Y[tc&[Kr?R262.QO*WkWsnth<uKp/iHco0.tKA8G29_:(lCeVjK^KWG-QYq%;J:G7gIKdYNF#-ae,KRG%mP,]=Hp1sUoNoO`R:Nj:lNm5Mt-:63u!+bjElMWZSlK?g=>&Pn/<(u*Zn\VQbmNH>5&3cY(pM;NUR"W%iDCS]*a\obQ]Md(_uI2qLPG<]'N"Q1#n-tcrW>@pi6-$eqE$58iT'FFP7XnW.i0@3:MYP)LIGKE/(q!DrXOdr!+4!6(,(dR.BP)h%S%gdX@!SX_q>gj<n@t(9F]m<QJeCN<2BS(^.1q\7X5Uf\Wgq@L@Q#e%fsIJgJ40s:el<#KKX</n&i?RR,ur-B,qYT%<L$r=ACJ)Z%-ASFfQBjB;X,/%MP?"QJK6fO]:X#\9;8=qE/Z:.u-UGGIVF-c=<cV?*Pi^>.:'%S%*FR7NbLfJ'?coD5S1*T'V?gm=f+f-)*=s>>%3C#jJTpF.fBG/Kf,q[;CJ,g*K>]5A&/C7:H/kXKDVM_0U<_a$#%XK:6Bi,L6=\_O]WWMW]C0Jhr=JRBrL_uFG.@h+t;@?$hM^fDI%Bd$,V"G-q8^mBR0\gl/a0s+"k!"dYeU=6:1143*,*b%\hU8qukVa5AXY^2>CMM0MgBEU&lCKMhg!q];j8Wf5P,uQ(feSG^$!Y;WC%.$HD'9LY[eP,QiUH<NT1$A^C0#So]RZ`G_D<H\\]Zl9'=$3H0EUd:?Q+u1\XM[l7IMA/KFcnP%%-3N>!T%8T8i>s;Iac'(B"\XAB%3hSq:,YM8K#b^F@94WTo(_!;D'U+%l"\GWI,c)4n6s@aq!"LN3p-f#*TXC<6\IOup,b-+DPW>H;@MV"j<RQaI&seW0'*pAp+3:HW%b9UIj!?"a,9;F<#!t>PF$m[>Ij\-eW#,<fM^p]L'AJ(NnE2b6'KQ)TqZ]^2L.%O9O>)$93B1\L>/$q;^&[EqXD,)BGcia3'>V4p%%A!rY61gkW$"lWI%ZoQJ5+oq_WTi6gKKBH(lTEkfqW[U1m5S9A*aIl-.@g-(+&;le!8sHFm!1OY\>t%1G&=J&[ZP(!Q!7>j%":QVR%N0L;8XJ$%6!6RUF\L\ah!1/rcNKaIEOEu^`<^IW9E"[R8L`n:#7KbFr;BeIGaD$s)0iW\31+gXW]<k`OFWeC*>d%kK%,T(fYTC0f%ZkFhr0pgE]RA>YO/;msj_$FQhH8*Qp9&;G;#%bB%9Hb)"7>f$*:*utCPQI[CE/^_,m!sj:?3DOi,*X"'#Vm>I!E(79ZnWjYjA9t!%@qck!6U`<$OYT4r%$eg"+?:_Z;itfs@!_mPO>8!&Mpra3E(P[8!\`"k'F?1OWTF?"!`B+ETTBmS:fs-e$X$@SMbG@i8<?n]^o.NK%R4`,P>,G,qb<[q;H([inBP4#4-d#0cT%,8>TOChdf1;=&;@T#:;-o>P*,J5Cckq@hogF2Kn,r#G=X@W>JLXVI;e:Zs.nC#NVe8l%%J1:Pm+YY`\49\5P6u>;n!gI7rBH#&Z"7UW*8mm1t"u[];,-QdeKD#a3Tq^U]R7oV?"1m\!#+-0gEZ*M*3g*UB;o[0\%A:]GPm4T1%R@+XD[#6,AI%:TnPUQs>?)T-,_ush*4fDUpHU'kHX@u.UJn8=GAS.ZI?;D-2*e6#"a=*A9Z4\\:^l3qDpLc?uHo*OW!m2qF""FCL%"OI-1!D"`F?K@LO5T-M1qPqP]!G,M/6(+T".P2;_(MILG'q(<.)BE*3P6J>T:o8c+Ud^/u";QFnEf<h&q\<X4.,uX]8'/m8M"Lq8%Tel!BeJ)J@Fl6MBOboZa1/MD\#e5Fd"62a#1<P=u;8^Y<\O?'$(4kW+ePp!XYY<N5GmAc"'D%e/R3)Zs!G[R^HqiR2=e^t]N;4\p%VG$,e5oBqM/Q5J:BGk5c=pCck(r/Tr*H!:KkoqR.Ol4c3;.=+:aB]5U]acU:EY'^`9VqD-7OO9&!M(kl1O9G!LPh)$.3d._i&;!(%ko$Ec.V;K[CdUj+.Qr*Dg3tU%(stW>W?QbQq0Pr&-+&=<=VFq8%^dgQa\65fnEE?+2Pt.C09[[T/e"5jb,>u0fJ82816>W'O)Yc\%Es>anL,/A6"J,?p>)n.;`Iq8,h(e>hF(GJc3F1ZV$?:s-SuArhXGdiZs"UQomnP)3%jB"TLS,;`a6")u/>ABM13<7J?3]6g"T]Y&%AO&\AMCL?TJ=+]TM;3VJ&I=4]M_p-6L<Lm\1;aP([0UrC\:Js$i:T?nBr!;XkBK-abu.>9b@O6W[%d&)=m!5O?l?9b4$f!3&TKk9%ROU("(A]V_o[PMcWsBRHU*`^Cd3=G#"lf+<]SuVH"KJ3&,+8->Xgc<-'LFd\PS713Gl+j&:!3%HEl=at]$s/=0bAG(@h^YFDir88%8=:[-1?(o0"p`<c7?a6QA55KQSQ0o]3F/CR!L0?j./l8=:SqU+9[O[nB15s8A^pTD25(>`%!7iO.$,0Hha">c,,M3%@jPN.BaNF@%Od0XTlBjlq,UH*1bM38#[XuZE,W[g"16G64Yq.Ep)2Z:%<]",oH4gh;NJWRn;PjEpjNUQf:A@dc=W'n_ke't1)"F7-4<.P%o&asq%11*?aaoJ,fa%NJ<kn5BT=eTaHT8o5ZTOhdo4f@j+oY3tcbQK&TAn6MHKucjlXU3B$?7CZt.$[>X/snF`e2RH!Q(_Bhoh%"H#O5FM%ANHfeB,+aIOP'[FNQd,C@l&&?9H#G(aTATAE_-L)6nQ)`reQF[a#HC_q"t__)''WXo:/Q\8V2f?fH9_s>(8)e<F_W".fuP#P9tBW%,h<9@M\KJ%k)'@!W4\i`K?R-JA:l?U=Xd10c<<aNbd_A&<,lAM0$B&Bghg5lJU]uCbo6'9!^hufl_QIZ@uIUj/52hE?S1sZ"#=#1%LlO>^j!`pUI"m*(g7e,"*fe4W\%b816Pcr[%:Nd:+H[O1V)&-FJ;>!RI6pZTV,><C6C(fd7Y=*qU"*okTFseGMY9Xf5q!R_(!&i!%4[hUQetO.lbCI<u"&nGbUgkd/9Yu]J@)jsDYR&RB7A,K;_JV%bPsA,uru]D?A_3(bee7k3r.c9G*Y^q=kVY3DBELCR)MUEK!=FR$%NWB[gs,OM^N7a9%l4+/dHQ<8Y;%HP=7F=_r#*J0i'K)J9k/BDKhS2:Eo*YF*H'dFg"bJe/=_Pc`2%eMMi]2,JLC6-T!0-CSB^EpM%6m$pW3akrc5$*)lX)Sqp%9`b`cl6U*i#4/521<V;$=0[:8PMN_(Qk0<"LGF?:$+s_%E(H5h1P=2TcC39m;4W:$Z3JppR00o_IcW\%IVdhU\nof)Q,LqD<D#Cf^CEZ$%.\Q\'pjm0Pb_sI\:fiKmt57;IJs#Gf/UKg+Sl![[@nU3#X"(m*I,!aZ>VCEbrn[)Cae(O-^!8h%rj[F+SV]8?F6()71ED'*^Qq$XJUI[N][_%ZPO;/-%(Wmf3#h%.g7XLe;h2Q0Zr'^=BYmpd($oeF\#guoG;+)@]_+5t[gkfa%'i>A%&XSATPQYXCLgZ3DQi"+-^-9/eF7FbW"o$J\OOpo=WgD06!OT9X1go7Lg=.t3O`(;D[nWN^CNjl_^Xc!O&.-1R!8l8$VXNLS\U\h.%(DQZ@"^fd47mPlfc;i?)'JKB!X&\,]>^H8CkctPVfa*kD)m8)['(9c,[k<$t#&oXBD]ENE$A6DK^WUo%mXA8F2XEoB0K7s`"*Bs!%S'5;:#%5<."T-]Cf3[l[]R4d[7=k;AK66'`iZ@_q3e%D/:$aK@DK@F;!t5"4NnqO9+hV!h"5I5P,DXEE8\!]GJ/SDo\k^ee$!]SA%HfJXD(GUcY)Lhb@H$/Z-8JC6J"74^TqQ3;X<>MKJK/WdpWFPk[mgjdJrsqOuY^aF1/@30s5q;Zc7p"h\YONQci%6P5c!V[>o817K%k06@i9BY';SHgfbb3As?T'YcF]kX"QIkSse-jRLia"@Bh:l!\#$=,nYm%_P)E/pKb/]+WbPI1LV!X#A@V_7=Wh#O`'K?PH!Tn>si%;j,s]MYrr;(7@)X&;]2I:'4]j):TM7YuqA51-oogiR%<.Rd`QR)TOr^d(YglJ?IVKY_d?/7`_IlC3oQ!'+STR_iZ.8ke+Ek@dL?T%^]Tf`G>>E"6"EpVlM3n<A'53WAC*RUZ?bZc5B]\oJ2_0Nl!7LZ!6Bu1G%%j8D&i,o-0)iG%Lrs!<660t_(*XR!WOSKF>N`0:_<-3%dt0bX;o[gsd.c^Lq[3<#DO0k_Z="nSk/t]C@lN`';)_:GgcsPkL!C:Sa=pG/R$rU1HfIl?rdoi`MJi_^Z,oO2Qs6PDRsf#P[n2.1%2Wd)elTJf@r?k:`d*K/6@rAG9E-0bYHPMoiS7+\V_Se6WWaP!JYu68&<=W5"bq]BA@X%:\>9I?&,YZIuTOa?te/.7XE+Lq?E,K9%%ZnH7IJmIq.="]1?[ql-_DTgY,^A6A,J=a<?ikJ'T4-J<1=@g7VKqtfa/5P:UUi)^cT"4Tffs/$$W$.)fYK_J+N1?F(</ZY^n9aM<%P8,/:T#kpR_NQZ0m/kA2G"cbk+Co(p<#;uTE+B/eE,Cdaor8t>*"?K?6J1h[OpSs'dcR[CElaso9GJtp@jT+sM<6g112oQ'-EAa,%e!O$Y/(;lfcX-Kpkt/:&D%=Gcgh\bNV=9\R'+QqsC!1)@[(W3hpWL&'2LZ!<rb<V(O;FpPbS.t0n(92Q]Mj6r?m^\r*.F(-ar`>V%0`(0^e?Gmda^6nEq@cLR4T@H3l$pXahXp1_QJ.J^nqO\[4u)B25A@oi,P\N^)UP_#"uJ.nTU5Nl)K;5+'$hIMA#<ZG,1GiQN[5,o%E2]lH\7rao63AF?@i]8-l`kIJiuQ>9cIa&L@A`EUg@gP\#.t(?E"JQt+G;asSWn8?(-*t,[29K$j63reHWD2(`j.e9nZh^JP1Gf3%9T9l4f/-f<dRVTHCG"`(24M'-l+[NXk*`X<e0$KD""3sapY,7--[6POfZh?X+ON0h63Kb,`+8OP=UIqJDrWnQah?kBpZ9/Wm^p4%%<F%kqeq/soR]XP=X3HrrlO/nNJ1p0n,nl!3lb3Jq2CiAh`!NuCn`l8mEfOC93S1FbU.7TF9lrta\Ps=3Jl"<NR]<E/^`Q6E*'PB!%0cik(YD/GRS</ZNX%U;dSj_AZF7dMZf=kR;;HM7]T4pb>cBPB2JI+F7.IehUQAkDG=;1^j@Tu"84Os_BN[63>[-g6tT>KX[CS<&,%h'OIj8jgM!h:=;kRja`q6JC?E9+gu;DCT-L2<6ku31'j(IE1aI(RrLU.IMBb4*L+L*^FFV-/_[iV/?1RTPJf=hh_bfrn+ce+u(eB%R;u8'fj[V:;MR$`->ZnSB->X2U?dCHEl"_r"irfa&5qs(6[5&G/EgC@d[L#LHBfQ00jo%+,g?39^splHA)e,1;e@C,4O<u\r@B]2%eEJ3<((PuJPGa+?I]=?CDNpV%eCOb<*3J*k0lGH/%"odmXDVAH;P@<9Y2L`k>YEhO8pe;tWK.d0EoNZ=2+4:2;W#pQUt<>GcW-mS%9+'i*38Zb[G[;9T;a`_CI$Qf'jkpc9Li][cO]nX)F7q&C(Bb@Ik%C$#hrg)hfDD8%+4u29=i94'A)A0Q2;n@C?$OEh,>Z6N(puXh%pN.qP&NTfRJAZ3-'+nI3rPVF()_D0P`6A=\2<[?;d5'oTb<Vs?JC?igO)^q+d#F?B:+H=BKs3A%=$b$&)_D/_<WGFDVpt<-9;+F!%"bW*C:(+m2iWaR0#2Nr1kd1Bs>4=EAo0uBH4"UVgQ30ki?DLHMh9ItG7a9?Al#J&s]DCTi&'pYQ%sj*[HB&-A3[M3_dkg>ccd8=$%8C0a%XW=5W4i?^[$k7N6"?d_<SaF^p@<[$P#/*9R?GC%)*qD,R:=%:[(J(9Eal$:aSXs:$HAX%qNWd#rAT[Vb4i?^[$k7N6,^Q$U%12c.UH;G8/&MkQW])$'*HX@W`TVcBHk=EsHgfO"b/9b:,4"NVdgZeXhqhl\=mPunX*2-.m`"%%X*W$VR_toj,[3;=BH6G$U%)ob5%0or6Po6bOA9l9th4r-DuoV3Pap)kQDAs"8-)9qOsFRg+IUc5Y,!^CBe+MpZ4?751JOMai&iWX;uJ9LR1B&m-Mg0*bu_ci739sg_p%!CE;u1QSkkq1`0e=I#gS1`9@/hQ\DO+iKkaBr/LPl!*A.[Jk\&?MrP:/2b\eIE/c5Mud4:Ofk2^@1YAEJK&^LeC"S_fJ9&t!c#=W%@VoePCR@Z]G3T$Q2#Sko05#M.pNajL3"]QBO`tpCJ:ZJ7?7dueJX&TnYZjSgGS>J',=W[``35Nds8@iR9lK!,7CSGTF.upl;%Wb\%$XF.(!qB9$G2dTGj+Vs/,+X$_J`cWq?-IKsQNLX2+>(c["3+\b/iskG%&!f(*OqmIO6A"&ZE)T[mA,&?PpPe$nX6_3$0%tXrJnm#%(M#e71'+GVaE3la8S_mML@?kdq9H]cd-rZJ<8Y50]W_Hu4sT?4TRJbn>q@<Fg)ATi&8lWB%aG]JP&%\<N/,$=KqkLaSmWH@,cnu?%O^h%>I!"fN/,$H^?445k3_+ZT(A"df$,(f.<.Nm%gD:8#[7Wu8kn8"4MWJc]e'j$A':Xfe&8]M&MK^V"M^rL_]jmHH%*ho2Z2?2j%,=hV5Q=T+7^1"91#(LPnqUXEpL5ftGm-QF+2_9CCZ@Bb)0@01ZNr@4\Er@nt'Y"@V#3t4U&]8A4H<q3T;VN9J]DGM;F[3WLZ0k[E%8Io)<f^qh'\8"F$1UY!7F]8;CC%+#'#(s[#+f2e5?@]e9D6VKQP8<8=EIQrs+kIZC'r\Y(ep:LKlHig[>#$[YJaTf*>eiC7#2-R%%8??-Kkn<0$F:F2?@\F3jF>XN)D8#V>,tf[s?/(6je(8as_gl!!s0"RWTiWUU$/>tRFm0ZIEZqdVXDS)29m',e<tI.K(=e*C%&Q]o%.bh*t5J$RSV7Zbuj+8)K%ZZRU4eQ=LVdd<V2=@=?BL6VDb@@&+#0G1#d`^88O?9.S&.ToWb2;1f&&r-Q(qq66mZQ*f@TMRpRo,nU%mL;e]+c*+`5='b;qU(g7aNobo6MPf/CG>2S#7-mAL0PaG%7Y%lYK^LKj";7R#qYqi0cqaG7qe,t`BE6)(Y?/k9YVG[c#4<Mg'Ao)%l/A@e=%'*>5$V_)1.QkoF'FMARWsGnpd0n[K,6OZ_\5GBo2taE:ApA4F4)$;DXDX)-kKEl'O2tc99Pcaij)Qb:%jY)YnNhH].j-b%;EV"%#k]FTMjHsa0BVQu7t`=]E9\Xh!3&XPAq>P#BGd4hAMsYA8r!st#0AA->VNs-Ro`N"0fcV/_?t+bHBL3qecpNi2$24V]HcEI%oKl2I)0384f7YY',BJLTRG_(o7:Y\n[+7EaGut4n1#p*(C0\@&T3_']firdd;jUh3/""?/pt%*;Knb!4&A9`e5C7tR]+9Qn*k1O;%F9M':rr?bh-"TAqYr4VCV3DR_Gl?c*OOIi!*,W&,YlK:kTmm(V(Qo)4>MP*B[53=TQ&^4E?A;+Cc:^jr$fGk5Eee&BlQb5,i`]a+%NRc$Y41Q`kO*9B1NVUVU'Pc70CN-^fqJPfsQu0)PS1OcoPp]GA<8Q`.EZ'K]OIQ7Rdi'9'ghqiOc%%IgY/lF+10+$_Uk4L`\G2'e%)5rBJSKD]RQj.XeGEll_0Z"UP+-ciGZX+_6`%0gTKK$5"5dA,.?=OaC(bn([bA(4#5S9Q1LjS=ec3(P,%:C:.EQhXTCR;U9TGpZX%8Gk*\:s&8*S<17$9tCRnK/@9)0#)1udj@FdY&&a7D#4MVjf+JX,BH^O/c`,^L="=H?udgU[+V8tX\#W8K?_E,1C*]7guS&^f9i1'%'`$F+RM6#d?QrcYeA:REltO#7O'.;a]'!&1g's%"ERaWHr)!\0=tVrp>9IUs/2BV:/*'j]VI17370biZJT+P6Lhu@B6%83gB*.YB%E2ZS2Ld\8u.?AeT3$Lb^_@%\:4Q4;]XV]h8"[nrV4C_)?%4j?9N!.]V>u9W4*0>Iq=AC/!S\.9HAmk#_[1`\Sg>!Y3.[<XVXj'fW%/qM1nLDJO`F;(a1m-id%p"<h8o]a-gU\.f1P.bV=?4G'.CD8Sj24+/0lh1)ZK9;>i$;2&1YfTjmK+La/gGlT@Z!Ub!+sN,Q9>u4Z%?2]XuWP0KPRi/4ZOE(9ufpGk)drqi3bE7`bKA9k9LY==l<*$(VX(L\*(5\r0e$N-^2p$T)*<i5>pHdnO?A>EBU_&a[>.`Sc$?!ID%IRT//#ijHnR*"P[bcHbLbjmSce1c#?m<:B6&8A=H0St$#+Z3oN,\rp=kb$]&@D,uq$BC>?We_UQf;I_@nenh9/+'oY]2l?<gb,_U%F1!89Rd!YtqM^4fc`?TJ$c,H%ZGrmSpY9>l=?"\SZk?t,)?mGs;^H%$3[6ITSPAnpm?$5V;#f09i>&l,S->+S)qQS/8!eUOFOJWM%^&CcTSW$U%^2FRZpO2r."gSY'+eS2*@3IRsj$,JY"pHm$'N)%cMM=.40\&4<#G[9ZlTdkT#eL?BDM'f@/DpLc!,c$(,.2C\#E])q%2:loj-2QQ]YVjdp9gFj>76h,9&^saZi-IdqWMWUsJrA/+gmiC@`S!\K[\K`9.?I5J04SHG)D8S!a+S60\Fbd6B+N[S#BAPhK=pJ<%?FoPe[Rdr6VRK[30Jt"P\4RYp.5dM`9;WK+?5Qld*nQu89P'Q)!_fI$+o@1"$"AIlBk"\[qa"q!R.`?b.m9P`VEM%c9M4/_$DApl%*PjmkQbfgkFb!<9C`L!_6VaV4)bim>r&Tq[M*j1e,c-5gk(!VWQQC1=NLhDCBFY.5"#H7FT4AclmCC>38nt8&^R]3$W*K(PKPZQl%^T'Qj;W$72**_WE(jlA.CKELG3-FFg+4tBa:t.pjRW5_F^h(kfAW@Y0WobWr"'1Ve?;1>5]qg1GJFch(Z5T,Haf/6m\=L*tE:XV1%$-pdQLh*A$]*Y\g3FpC;Os\N:;Rr@>U4`KQp*AKE+bnAFcai*U$ercB"$\a.4Cj1eK*.e,p(jP$0iP\`5"j$Lf`UYp9@/p-_N:_u%Z9\,/.mdh]%GCZWC9E8lp75;G9PkZR$&CmAd#^'ETE:8D<"[?ZF6]h@?7rRqa^QjG%S;,5(OQ:i4<@*ab.(9,L^PgbEoAK$/q%7'%fgB,=SbA]1>I4]Rd.6&1TY.ai@^`beV>bIQENPnXs,m!jm1c<?D'[u2/`G![PA!VKEc6bP)e<`8ehnZt4,GmEWjA87)l0QbJ%"JS%qV5=\7*E5]/ducQ^6uZN2F"KIelD;'!\"jShHX<93$fR^P,C'P/s*tj92/#i8MiibU^9H;p7gMP/9JMqMu7NOq'HQ,m=c?2X58]C%BcIjjCRl@!4ug%F3uVXc[Fn-=<4nZ]S?m7IYQ%_(7m=NJ@tT>#U73bN2qnd^]=shV.,q[b;c[@gdF;"erBom/]F9U^3]&.2KbIUP%f-BS.d?jPDD9KIeE3&"_pDeakc1!K#j?"+2#Gdf)YMe2T/)e.`Y@rmm[at;q-4d:&7-711=Ii/"r3LIY55XZVfshqSO?kO:2@TGr%6(7d)J+s)uLS)rNZka6%=-5RWeLBoHnJJ]K5)<5riF%8;pa#Cg.(krKdg29>+.sf\^?D+O`]Jj#;S:p0I(_efl7;M1:0<qRJp+]j%&VIA1M.3>PEiFQ<,Nk:BRRrR1bO33VdWg=hqb&_EX4$5)H0![pdL`-COR0Ot+]0.2:o_g*`Z(_TIt+oh(&HE)kE=<t8WO_L.lU?1%e#-]V4#1j/_368IjN^kJn0BK8)-bAh+Bq:8B3$85:-OY0YC=>7(%j&c-'B1WAArmAcL(l*)S7rMJ5@Is`7AfR@dAB@aHq$Z7[6B&%F'AA[%8t.!Ca<78<_WkF3-!V$X"O<_#CU9JX&mD`dNSnkb'iP9i2caS$Z'L=e#a)0&BOl;J"-P=Tanms4c=*<Y%`O%SmM#N20l`C%Y)Fm?2X5A(&P-*DbLcma<,@[m245Y-DQ"qQ=8<SjiGWY:II-O/$BiJh#oBYIl%4D.cIZ]Y4gbP.q3S]/1$JK=EA.6<qsXcp%mQb,%=_S9g"EiYTNlklcjKCBGqmk7R-TQpd-/`2F(:e.W,<U\^KJ%eX&V"ec31Ku5<S9q^KZs?[""V$#rNmV-b7lj0$24`qOY!h[gSBg+%5dl(r9VY9m3n6WPGA.(3BN=bF>M^Q+Fmu&=2s+RfEbLto>5]CkOKi?E3?U_gFbeI&V#[,Kd!]8$\]V'n[ZL^mll>b#*L_0fNB#mh%p2+Ho`1_@sLh--s*Ot.j!mZ7\j>6-McN/#0^5E8kj5MDchs%Ul!WBK67#qmF[)nH)cJqha90H`QHC58Vb5s*4&lg;<0+qY[_kAR*%*)I5U1/QES&s1nW@l$-t^?54Y#?`QN>2P7n[mP4UT>l><r-Ko4L`_L"G3==H<[rEsRGWf,MuepKApD&*4&-qT^d4Jq@4#Z`bp4[g%6BA_dn/E*[(Z6f"8)8aSJ]dodqfIm5a#/_!cIoml!5?=*l"0K\(r+g7mtaII5T/9;ba*s/)"Q^M]mcSXI%4C^3agrNEAT,=EO^)s%Xn)i:?)F#Yh99\^!>:1'_f,H`k&f$_(]`GrJ8l7i_'RaM#pM#c(dL+O;3+[E>U`tMiVG\#f0!a62H-kP39;.6AeVAg5H!,ba+X?1%e.QZ.%c5.KAud-/C@so*[&,VYBX<`iENV@fa!'^e1nWs2@m&(;n_h4C>SXGcgeUdSOSWsQq?E4G6e),IqD;>FrA[k9aK<Ag\=]h]%3JYYc.UI2+SZCa%LYK?hY&lkQ<KW^0G-22Bj`Au<pZ#M$bf@8oA^lMOc0)X;(GS#!M3o_0osg?$gs/oj;u:u,cW.Zl:8'hr<Kkq&%Oa95nFjWFckJL]H-+Wo`WZl=)nemJSoGI7@Xub:s>]mEo\S>lV6iDJ:MTdHWF4E!0c;hotT<%6rcX$6(=1&ZQ,T6im,?#n#CH<[s%7@d0KFl(GE]qPFFH^q-kYagFD3*.tg5J#qAUQ_9=.`Z%gfgn!aqZc;S:&2[Ca?KNTrr2#qBuk"/<'='#kd"]Qp`e:GducS&=b_;V%qh#/]T4uMghZVRE:FAr]>em=O.`KuO-#\T)$hN(!J>EL;#M/qZjE.-`Oil>@%BCQ)6fG3*7FFlF]Ko(+>/-0*"`BJ-Kk',`5_0M#%a+aX)H%[B?%!dZL.iKjm8Qb6J;@Ako<CYb+`D#ZH36)#]!`STd1+F`S/&1HO%Q&1s<R1,J3We;HCpAQ]>JdEthJn2l&dX[?W$@0c%Zl.lN+_M0MY)q8C=)Dq8ea];-W>ZbqZU@ikQ?^C95cO^LWQbc@J/A>DUC<\s/kQs2AVocSp^#]OTb`p]?rd^:f,r9@6m!c>*:f4i%_)[a-,QV@V<"KTf,E/g[E<&RPlT3]C*#Ott[7C>_`O3ag%+RSA+O:8'[2&qGLBq]6mK^rr%mgFU3.5BAj<<lmY3$H@>VbA%+ZbOr%5:?.ToWK6eo<M?8^0SE+.%==9b\X@cl5u!:V!-00;\"e/@6uNF(MFh0Se*4`m`jOJSFCpR1nUBk3(r:tP>1]OV>AE5H@rfdE-aG*%(&BbnON%D1-^e*A\S8t:2(L]Rk"%+K0p$?3XGX>P9W/?G3GuWqU<1WJG49!@f&=o&W<jB)qP`)oK%QEW-Go4$Z6"7[$j]5DMjSqQ%7*Gj-'q(WRbbu[Bj-WGf7tV5T2B)shMMG5djGXh?Y4Cl;Is04pWAV<WS89d0gqmJlRNnC$i;V9;9!Ynfd)/[;Uuo$o'Eb)'%W0=a%AMhs]B,t='3qA+J=]p&NadKPFT0&&uZF@K*=Z]Bt%&-^b),8BcD(=^KIRRc-\$adN2K9T4,V\8pKkal(fUlI@p"<PFUC3,=@\]EO%/q^lV&9E>Lh`cF=m))UIHNrT>Y6D>\\p+DoC81@7,u-YHI"-TWq(;R'#F>lq/u;B(>:7[[8$O&N"[mXW,UgAnX/U5c9H88i+@Y:a%jKlZ+UIg"0[fgtBcbDcn.!m0%%Isl)]/RYf2^uC)8ID*:^\'N>l"7KF>8WUT@2(M?QqRCQ3a>lEjo4&.n._hhqh4\-#qK$O0cf"o%#=?an2WX`8pKND+:o_f?h`F6W^HYro$@Q[,V&/K]2I(5h;"W)BkI=2Um3<VlL`XGAWb9&'Lr<lFRFEIEWU9Rg`,4[=:?D+8$E`R"%RjPtr.=6:%(\u-V5$B]a[%S9j($%bV9r3_@PrUY#lZSf,amWo)+kC6Q@8cW16?:A/8_5f.M>u6t+51[NiAkU>K0fb+UiSE$%ni("%RV^`t+&d='Qe1eV`7.\?oHLdY3Q9epopkj=Oh>MDqr$8`\Bd=ibPaW!QSDM$<(pSoRS9J:2cP%IX8IjpaDYjrIr+]F$:8:+P>/-]%[8$/:cM@>'YGXQPMYh\2OJk^uL)@/XrV#1hjPPA.IoF&>]V4boh8iF.PEs$0%_OcW2a8,kN<$LP/\k.+0CZS0=.gTk!8)Bb1I)Jc%H)liuKQRJA>J-a"<2Sr-ZQOk/S`+!ARo&3QO!!n7$pYSs\`O[Ej_Q.B6QFh>c8V\?3Ra+gGk'W8?:m",!hP(HG,?K[fAY]00(I&+%aK!IS(4J*Loc5R9*qM2i:g<RD80I0:_r)/TW9e$lDY9hsHn(aFBG+("k=>UnaAinh.ET?D04Ia^<W"%PabVoq`.\us@796&h0+<?%?&^Cl)XT+o*+VXj#Z98R)^'LmZe&D!=YrG+OH=eY7f_`g)3'!;7(1nDm!QMe3?*_V7UM=ADtkr[GXhm'A:%1s9.hsUTml'W+$/LC%\OZD[FF9+UC)j45f#IG!r;_P:bABY-HjA.]Z:cZW%LG=I.]5b5Rs&N!nV!5joHKfqf27I-gM`si9LjEqCDg\U6soJ(09!U9,86ss%!Y+L`_!J=;<:RI?dr-a>4o\$I>MT=.-YUTWlgO=qh4V$_egQ3&?`hP:qgC6-nXca9aG6fV]hTH93\g+@di(/Q*B(5=R^c%lf0.e]%;^2'$qB'dngTA9)Fe(OTKd/u?24M-^Ji5lKF;asV7_D'\JgZQU8h4Wp(A'0S(YnY=^^%=e`]ne^0u`5f?!.p=r`j8HU&SXIdBbs.%5:!pHl\=JBUO9aS'(Qu!LMkd.]U2U/PmV8tJ1%:@b*bXLo(3d,<%=hhH(d8tlh5"7U?9Fb=t19:TUX8NUScCtRMU$[WDl]`Z4LY`%$JhY+0rL=0ASS:?#I26"gPqL58u/O^:g3El:aW$cNKtB%@]>Sj_]=2r8ge?XASP)dW9$oCXj_'SM08Kd-<aHk8O]&?KNeiO:.h3!%/MH8);Q6=Df0nB,PmZ?GGql4_9#ZeMj'uU:FLuO?4@_jnQ)W_s_O[(,`d4C+Kb>gb'9j&m3m3MI68r(Sb_`/o6*:-/)mB0fUE]r4%M#BIb9[.hr1oA"$R]'=3V\<Wnd[$)[9M1ut/MH8);Q71VJb7m\epdn[DKU1YUR"OV[Ap.@6*0A!A"mOgS5b^Z9'nVO'Y.(UO-,OH%"=8J=4d/e-7a$]MYuE3O?$8ZMYPACYW-L+qQ:_=g+aH('22,qt]U2VjV4?7B/@1aC1FQ1[@R_r9$>RfDH!>D"\l&'.:+__<C7S.K%B4?JJBNZK+'kN!FON22nWF>8O,[+NuM5=*9D17ERK5T3$F*-J@5n2/]hrgk&2el[CWMNKY%G>Ialb5YDC0o,`V,@nLO8Lor`g]9'%\9fl@e8hO]eg4WU;cDmLc&4Ti<%=h@g%f/ndl'RMRMU$[WDl\]1=gfE)K_b:`LL*]'ldU5HI\M?%(\lVGql([9*M`o0gZ;[;(Ks)%P"Ps9"BF=AW'N@W?HfCF;F(b=htnZVkXNgT3OMg9a33$3i(]n8`1.TaC8k0/_`OH6bMAg12)"+A;Q2Wj^6I6\&Q@b6ctnDp<%8QG%R[d/b;U$hQ,[+NuM5=*9mDKsS2jkP*UZTOc=t19:qT%eRkXM[=7n50HeAbj>HV/f-,q\+u]L5T,9[^67F;2;`nmY?EQ-(6P[GBFD%K,u0<>0NtB;GM)fq2_#T'Zm_pOHE.HJs,tI1FYQN8@6$s'2,0R)YW1b[FUui2)"+A;Q6=tj@.Zo9q`L`0BUb^WM$[AUI'JMV0sF#%;'O;sp^ZhRN^:.\/h^hDEiG^d1XQ"og7TBB0BUb^WI,2r.$%'(>2[Hg*);DP[8\WSBc(`bk)m32RMU$[WDl^KJ";D_cI<Q>;=e6l%/X;4&=,L7Y#\jhqC8mRu]9W5;g*LF_a&<03#_CC&kn/OIl2UW\J,d"8Khe<PWco)*E!:ZSH#Y>t5PmgQ#6Q&\X8hS]rHrb)+,ro;%f4Z8(*3eG)Y6k]9?IKsrUPfe__C:Pk9jWOnBj17d]U4ugY:K0pK39I62>taH;(rQo+(YtP.5YR,#s+7nV5^Wj=-qZT_9fWOP\3)i%_,DXu)3@_g8Zm^eVo5-%,_tF%(QNJ\3BE_h!9A9KAFP;R)B;<%3'QP-QT-,"'p=[24X:@j+jjJKoPReU<9$D5Xf^7CZG_r]$mi@@%Q6.t&bbMD:IIca]moM'RQ$?_3Nri'JUREmLRNi>&68A"\04Qu%ar$=2j+0'J1)QIpRub(p$X]7AEl<O4p>$;#,Q7QH$GRa1_(oG!%:2o;01]]R6,W5@Y7?5dW?Y#@]1B9Mt2(A`"d6XrKB3&e^EpA9'-hOlGEcTBZ]U#@lYC%&koc^F1MrNc"-8<S($i0Op`;PZ_KFeHp%/k=GV)64`ULgn_tW*c5B)760%&"lOh!5TM=N']Y7#K#g\SE<1:BeS_t,/[aJElr)OD@?sd?BqeLE.lGd;3W(FdL-\?(8VQX16q+(%&)Zp=4_I;-?0bL:YKC%u9oVkq_!W3:EM<_V*%ZO:D!C2S%(7ACX/AAOkg8mQm!;2AlI<^=hCjau.e&_"Wn@%dP:2t)%>d#8@mn?o%8!6QC+n;'HBh%pYE)l$,Y(u;9N''(OI.flt&J9.%0r@jVl9UC^-UZb[j9\FAm%(_ea0PP,kE+::\5pdCc?1inctuN+p78J1&L%ao%[A$1@?$+<;-\]"+bhs%Hg6QIA?sZQp>E>aZ1,Vch9R1%W;E8u]c4C_]kVOs#jXiOE\+C7IYHRNX<$#^UZDd@lShpJ'^7Y3U9tt#3%Y!$O1WjlQE^3.X8DTq$n-]2P?hCjQ.gk6#:V^fMbUDD-5lV-#CSJpqU)CH(t9*(IK$::WI]JeAm_3$1hi*(9&29cm(f<6,_`@T9q%e-kr_:0VR0`NO0[6.c3rGPg/p=C'PY&`3j*9f9k*&gLgc92lS%9e^&]O>._5dRVW4^%=4TGb?3,a,./CJ,eDHR!>3G2KZO\LMRuh%3Qt:*qZ:8.&lSBu?_I2b"o:HeWY':/2I=;2N'mMeEUuEp&qdX)ms`rLIpB7g5qk(oBOT2cR:;<MYL"7"#\tnCg0lSh+&G+f)O.jT%4PiAT='[U0Seb7TX"U)ocs3:Y1pEpM<]-]!2^Zn2#(6A9,lF&RKWd!3B#d\A=fO,Z?_;"LDIsjJ#;f;For;C!aM>fr9Dh1$I@g9:%,YeE%ks6d)-l1C28=(E4eU$6tdG^Q:iVisD3^h-kBV"OI2D6"hG`^t8cPB.#FsF6Q3Y7O1*5%f$r6B"Ne.=+.&-SUG;K;VF5'26=%TElWAPD>aWn1q_%-DC^AFdGW?@6"K3\f%i-:`7cBcK]^46\(`X[XM[s[%?Qr=,,;TVhn7rb6u/]W2LQ$BFH!A8rNhqnIr\]X6;L@%0HJ^bP"oSoaksJ9%M8aY$h$=Bd[&9]E33IAQ2[!:)+\=PS#?7V!'@R^%)F9s-;m+5a[@W$ON=j[`2Q3FN?8l\A1Iso]MOlS*+B"X%>mRp+gku.<42WHp53955P?ii%aT5`44@+=)1*P:UB$\;?op)(B+mT![d[F0i3*2H+T@2h$\RY*l`*X-o\uNc`,Ej/qIKll@'qjNk%W]#gH9!qQ("bob)&XeJeb-EQs:,_?"0oc]NBCYK8+[19`AYsR&F;AmjGEobA=u=N4]l^B3;u'o,rVBbuFUJF;hK2$I_^ubC-p=t@%9fGK+PWmV@s+Lu*UfWsD:l*@C=VX1;CBL`#\dYWE7ZU6&7^mqcp%0UZh4e;2e+Ai@i?nusC^_4NHbQPTDE8a4OU/H3kG?kEjh_\u%;1Ka&S#qWB`Mf`jU7UtuMbDp:IJ+.oH>&KgYNA'P/fW3MKYD@9PJ_gD4rlO'J:2NCWmqo!bI!>VScBt.\cBb0$^=2368WsrSZ6]j%WW'0_Cruim,p0g4Vr7f5lQ<amntkmO?hd/.\O4r!bC3BLEl_c\7-)]-"MXBJ0Bkon;gPcB7Z8"22bi1H8*o+NRLb^ZWPWrdQ;kq$%4H$a.*HA(Uc]E;fG^fU.T4i,-=,=T34$YS&^nDasAAZ>f>%DYf0aakI&/j3mY^gh.r"Ss&?)OMe21oJ`E;*[,:J^kdf](3,DqDa?%BlER!XlGsnaFIs+0ANamM=!"On.i5>9.]WUOD:*jD-?<\i37r6TB!Z$Tu,gL/760#Kt[>Eekm@F3b$I:89)Aj!a&TJErCMA.>sCh%Q;s)`)&"LC%&bubMFkBHX1^d,P"`4%?Qo;cIJhg)c^3W<`@$mNOVL@9'>eF"`h7MU`ukL@A[OMZB5_CZLs#mp'gnfbnm[7H,,!8]%k(VfVGn=OZ@[>23M3"$3Gaj,3Ps[cu*FVqar+"^_HEMp'+#iP`]gDjGX11^kh^"K&6K!+_<ije8@+o\R$7H\U4/Or[";<fTdLKWi%4)"B1MF@+H7"Ut<X_\mP,3u7h1)r_6rIuQr!\R?1CaSO\CPS0X2ENsq$Qk@&?F>%9L=jY=9W0DV@RD&M5Gp.\dt5\@Xhh?pn#F^-%OS#tujpQhfbj>GIi=,GU#>'n+m;W4ag,q7W53)p7$#U`-k<Wu*#mO53X6hae+TBf+2i8O,7C"NV;,:QIO_\/2mGGCuV?TZ6Zu&^X%69[:g?_A[::Zu`2Oj"h3Z>8O_m!W(rDO?L1(<q6Er*+DfTC`OJZSI%-#E4<&47W6'h<T;pEIrdteRW'nUON?5,(1#Q)uWl7XIZn,%i?N/C&s8AY3G*ZZc9f9?20jIG$9r\4_6ob^%oH'lM.8MD,RGJFe1RiDAj1.6O;V7CW9_NDbH;L$oB'=Ee(pLfAZ/%?S9Ot``:E>(%!N#sK8/kg0[,.Aup&gM!fXe=5bVaq74MKMBkg5:aJC@-I&5.&df;`rnZ4m#-[>@J8$1Qm8d$[YR6)"(C&:?q]K!QbllNMuXSEgN6%:2pYG9A*0C[<HrmOJ4>[906QIp<*1lo\FI*!-/(%&K`>EL([3B;Arb;Zd\FG%`DRTQgJKH]Z^W"7K@GSQ$/k1GhJ\3jf?IH7]?(q%ZDCXN:tb]:/UCfCM^*Df[]6Za9Io^EJ/K7)iRn33gMn`tVh.Y'=8i])Dg3(@RBg&qn*$KoW7mTKer8R.H3Z$i'8h2c%/"OEMp)G_%98B6"T+.nmEj`f&d@';):flV6dP,_ILhf>bM(#`$WGUsr]guLD%8e<T^>^Z,W\XhaG>(?J8GedP?dFREB-jD-fM_Ae&!PI,S5`Bo%a^F[X?a8nb^uEbJnVX.2qM1IM=QZC3fR+mSHbU^Zo8Bc!L]"Z..dODo^=6GCg')LPGTj?[@fHHs%epHpn'io[1:h_X?\&E;WtC7V%d;O?\`M(TO^RHh``P,:6nZ_pi^sl+U9E__5g^ekpl_HG5VfblW66s7h'KEM"]AM1.4C!=k0>BiN?Da,OUQ5l!jijrPgI_Js[c6U,%p!G[.^>+e^Fkt+!pF@TQ!+'M$c^DJAS2'4cr*JYKUMU(Nh.nX3WM2,&)N^0W4O)mj6ru*eb5n),LV/t:WKo!TM_VcVotf0V1Z%n%%^MVp?XOr>P3pIDhD3>Xf4_NhiC+8>f4aj%YU35n"9/9&7<)/:5482X$T3SqA:H<pu*T*)1F?.[:<Qc'dG9=d51\7<!YjgO(s)riN%I1hj#SU^Ngje^+EI`$1HT:"^?Tj_/@\,a%9r"'g]3cU^i/P0ID[rO\!j9HMt"8p4KLb>T([;AB,]*>^<2Pm4I,,r<T=1>AtUFhfW%K59*+hR6qqi.b7RAP-WRV1VaNWnXqa6gc<LIe8RMna&e]=i.O(VrTW(g6*_P-^Ajp$XDtCp6j[Xq(EM@?Am)V?V6aO7!/ru!?eu4%lnW:i38/L>1pg68)GsLW)Vks?F^Rj00L3b85I0]VGN<U&h',qN4?f[c7TTYt<H=.h78mu(E*<U*^t&!S9"q2sp#3E.ccjoWk,WGB%8F"`YM%kQ)8ZJXNXNAr%$E;XT,5gZ>YEqF198]3i]ZL/`A$uM*Im6&M$&`Al9$G4$P*VL#9CWB*hE>93W*.PJ$cY"&?Ju8qg$D.+%=*"?@`_Ukl07%f0:.bD&LZ;6HRl3,#)7<LL)q:0g7u0G&"ULW4)e-S\8AL?!ABT&e"Z)\Lc6(p0)s/0I@pA\a/Qi9"(oM)1]i*2:%Gt/6ZgLpg5maMFWgZF%i>ZQc>1dnoE9e.kSA!87"/9Gp?_ZI4iq8Sii';g5V_aU-O2ae[7#to;@.>m-hF1FI^`]Nng1LN_j]c"9=%+Ykb/:VQkn+Yj9#;hth`+,Ye?rA[Vi2`UK+q\>RZM>d.o?3']rpTN->aSH?4?;U^DYlFN?b!G_[cFDOhYL$u&FcX+YKAt6C@iA[I%-4>>&n-(lQifcQoKa1Gm0hp*GJZhn8_+oR&b45a^`7h!4?@]e1iZT]FG\J,7@P'`Ci(cef6tAT0"#Q$RmJd`\cc!AaW//a[c::'$%J*BVm3du&71[[U[+E%C#jtOU5%>k[o(do79@iR6Dik/ClZbE+Pff(>E40:4j:jgniesR;V&R_La+VK6YmrCIk.5-4nHKY_1%`r@*%P%O7IIX_CR>J.p]]5VX]IiQ7NXCO?l$>+'=(#P./:Q@a-g2O&kSt\j($-)caB=22-(Sm_DiN@jdaA8B4GG?=2(N[ma$-prcq`%cG%\=?I81@_,^4AMMt2'Kdh*26UB'"Y!%C/-RuJsEK5EE;`4.N/sJ;VkY/irZJQ.MpfQ0'!T1.8,R*rq,6agf%fTqoPORrXU?<=DC#<%&tf?JBRKsQD`O=@)A%R#oL#YjcDh)7'tpYtD_dY`>`%*:X7T1DBe-t?Oc>Ki3AoBhW)I6!_)j5A`]D0qs!8L2dpjgR\H&Am*NGjo%K8Kk"7SUkIZ%AI_b:(+;"/9XQDeHH3b.(sl)*&j'`+U52G+]IK5@jCPd>/M(TOJLr$G_uZDh`R#`#H(Z-##'G61LWXWY`a2eHb#Z%oqSI.=&cU-r*i41.YK!]BSMQ?J5ep@hen@k`_<=/>i88MW?<ZRbFR'O>f$+l]sqWT[*9Rb-+J89S-9BHY@04u-qldmPe:8"G3T+*%Y@rAA8ekHFTL'.b<=KIb$'cb7YbS/gXqWsV6#pdD\R;Z:OXg:a:dKE)/LN8:at+qsNPq[UXHsOFI*o&[/n5_K<MF/Ha^Ei(@%!_9%O[[/1",OML&Arl\A*>,Zc)4kDn0O<3j1#GIjb"lGXNB(FCY3LSBXUrX4cV4PSRO+.*d&H:Z*#Q9(\h^bL4pQkiV%>sg=+;/`?oEQ%,Z#XILG86nX\b$OXfX].2f3MiQZ-jVC)8J+[kOK#i7qFm>LH5oPXuK#)U#5E0(RNR_U_+r?Q,tj[e\V?Xb#B%^u'0To=scK80$um%qf@mNiK5KN1=?c$&34PYVbNAK+WYO(b>cob#d3^/iB?PeQ1ZD_l!91u9Yg+4->`SX`IiQ9_\,f*.T\d84S>Wh>.83?Vn/(FBDenp%.H">7-`A7A:'r!lEF?dGh*5=feH?[uq]E*8D>Q"B';e(3qX$A;ausbAL8b>#(nUi&"M;auPe*HTT(;Zf.qk&l<F\A@>._2]B5.r/%Y1&e%]_8JWOG2C5985nunT;gdEpH@C&r)BfYQ$U`^L"p`RD?kM-"Di4jl_Y<e</N^.+;f(1@oAZg!tX8&JU4B7X3')6X>`mJ>br)%&SnUe:o7.EUdRe0nu]Vf:Ni`X>UP2Ae"_E1oDmY1pqa_Jhs*"^\u=@Qn2"n,/l&`dfl/TRZp0gR)'qm-8Zutp3(j-HmEkmiCL"6-%SM[=JffQVT5)C7P'6(ZZeG1knc+!>&W?meCHp`8gmTAO6YoCGR9[BX(.(&3OWZP\6C\4k.R]9B.rlH$UHL+#l[K-kUjQMkcp!?j\%U+^nKU*!U2ZZ;9VB:Dajbm]LJ.k@'fJV_+s-7EmsXL[pt4"g5cJ\1b;kI:hqCcuul`M+U##]&Z<9AeGdeQ8hte4j=`*1=BP^`=$K%;K[b]AE<n^&$nd3=>kYej5%*]qP>RAL@2<1d*lUqhp?*X"f@dNpnJ'YgeT7BoNGWo!^i#s?Ekd'(3]?uQG,MA[l:D1kdt9$*U90[%XEIeX_$Tba1V,ilaf-)g@g4d[R_&u4bRp+\dmFZsTsn*ePcIrV8]k%oqEi?T(-%Yd,>$%<,mdQ*KKPAB:#C]<@HksEI(`rs.,\=Y%MJnk69#9s8(A7iY6mb@6bMeAanLQmNWipNV;Ff-H8seY=4gkG47QVjKc$'76#)k3DB7)YL%hCJ)/]'nb"rM`^aF.4iH<G"-J3]S"%VUhGYG&]Vm`tYf5]j\M.9pk?mj+u5D]KBRZ/'n?tC,,Bci\4-JYO6+UFRrMbbePBn#foXrCR/gd.rTt5cF5^Zr3l&_k5M6q9i"[B%.2"^LS3*U]n2HJ</jJ%`<hIUEn#ah=]U=,sSSbt,j]VH,jdkBrUXU*.g]Y!+U1gN8U[54KS0L#Am4U0f1J4WUZ,O-P:5J@h'.03k%HJ"UjI3E>eFHl#:Qos'_cr.iK9,l?f51HW(`RTd18dh.e3n%\3\ZBNB,KhG=Y:G=upZGrXbqNm7W[qsNbd!kbZ0[5X+(;0?q.L[p%)#Ib4n*\SDaQ`7NF$RcKC:Amjeaceu-JtVqFGap#]7-E)dWL'aYI?*2SsQl?rb1Zm.i-lL]<IBWck7+PE#kS90JKgJmE"c;Ym%X4%o--;Z=HG+,3u2?HA_S+Pa4@7T@mS+7,X:`8HH8.R*GF'5DhHJ).D1n8?VA:IWG!'Y@@!i3;g\+I/`R4o3[eR=#UHLf^d=9/nbF15%SI,:fek9DMCZ)aK==SluZ/HPGrpY8PZVq@!fWYOqO/[?Uf4(Z-D*)HgM8l69brT'Ua)#rQFkCDia"+Y-c9k-7E$2S]$l?0Jm!%)2%L8<D(:\uiM,gGM*GfTftqPS'f?IA?P+PDhII7J+XkO1Shh%g'-ei.MLqR.ct_@*62UbA?2nXC41PL(c>>;hsP"#_^s`[$Bqm3YP9%J9O(nY&!sd&JI4=ST6EGb';_Tnq6SYgU=1%[af]R,YR<S`"AJdf41jsUT""V6SX^d)Kfep!7A2>gS)%kO#PR:dGQl[-b&I;g1_Tl%;qbpRnPJTr>;+M`oVSQV#9j0dj`"G;[5^0+UecBF'NspCaL:s5j7E-OZ&C0s3<gbt*KkqMdcMG:m<S=biqo-bd^/.c6Li`YrUp2*%%*3e(P^?Y+LB2udRD1?XN>1@mRW6U0-S.'f.aa['@&&TH,,%%>=WY<_ZALC"-Z]ikb`'AS<#7;88(\`Cioi^j>AGk%EQWZo*I1Ji%SA?8jFup2H!&EN@``oqhE3X[FEPIQuDknW,/ok`cQ^2?MnO,;Wg#44fGrfj$T#ho1gf!-!r/HEnB`i4i6`d-,L8.A(qLOj3;t^j)%0K\[7e.J9Lite<Z0`bgfh/eJFj'^_6B"m"4OP@C#G+<e"AC*oa7J27oAuS@h+gXI?&/;_nRWB0lG:DEZ9U[,k\Sk=h"6kPJ!hC>C%P,c=9L<6\[)NY;X$)oQSN6cQ#DIhf'_SSS;WmLtb.A%HtFIme)rg^<q#%nbaiZd(lAUMSB%dR"87mTsSd:]+k_0*--))6e*hB]/b%eqK$XE!3_ki;BaE&bVXfa8*YqBih3kXnTg!"Y>Z%;Xf@MCW`c6lR!T?3&SQt33f$>CZQ@6q[uF[$XVO2p&.tX';_o@fQNC!P^Nkt%4H0XU.\7B?'1)W@4QkhE<<-PgYM9$3#L^hebFXgW\H:K,?6Z?7D*!`?]'ENA0<paU5!N58?#<:*e+"S\@(WkDgZ`u@o>7^F[[m2b%I1Y,ES"G?i^N@,(^8gunp(g2^Pk,g2^sKlpI@,ZPW"9srF??=""Q//pUK>PL-B>?k*:_s)k\Ihe@mr:=@(K._^]_$P/YN@f*eOLH%d[+K?_c(]&aU+-bRV*-,*W8WFT'',VoO8Bh_O7IcE;=-`p4P.jqZo"CKV@*g9B2I&VA+?bE_Ogm!:La*AP?+4-Q\,YH5C(P<O>[;%lsVlU;,'ca?+MTo2hpD$emhN0H(tZ_4P=Rj#jZ`S-[_=#7+thGpV]*TbAYd!jR,G4*\>N_\r>lb^hBo?+u[K`[nkADM+i;+i5taV%LBQmN6?BL7K@:Zi&c8jd3A/XSBu7*_CGX8<pSG.`gg%DCUIaB9f;,Lk(_*UV/rhd1d#HF19%Q.%?$`tI'2MbSV11P/&T954:$u?j%6b$[cH2G/W1ne\J*7kTa[S:USh_GuZgU/>UfX:MGBs)UTe/?oW?c.?h3d%DbB&,edL32@hJ`/K``b?T%"](8iC[Ce(967qMig<[m%LbhKu[D!jTSA%a9Tof;4CR9nLf5!,?ETOKRV)$kYPg6(CRYC2bEWn5;Jsa%p$bttlXnSVXXk;*GTiF#5O6@H[.QG.(W5`)A*;WW\%-l&<cmAs6Zl3_0klP/^Uj<\'_.9IHU7tso%CuGf!;WT4+XAld$;J2hXgYC!Sm7O3-\TF+%au/Tu9P1DI8rDc4<Q]1pDe<0A-V%j8%.DmEH'n:&?[0h"HlSkqd.>6F@9rl(i>Ad%:m_aM*.9BH;%.2CjE7)ia'06:W$MD>!l'/NXVb4cogkSM4`,#+N?)8P>S55Dj9ptiW%.AITh5HHp-@S%Z.brUQH809l](Q,:megP^WiB$(bV!UaO>]kmnZ:[tM/#ecNCrT:$kB=7uPR?$PLJf!goOfS;l"W:1'cpsNPR:bh%Hmk8\YPMP(1hS*b(%01]=p:dl/1k#*0L5N/<R+OkfOh8&[$4@g,'MgKX69m/>3-/-P10ijreF\1Z8<i7!cqWuL/9D1bMU?GXUOaY%hpb9)k?=$PWKoNp[0g2Tje5\_]TINh.Ta#Xnm%Yb_5ak2_7<_u@H3_Y_3ggJ]*6e:4KQOd3[khZW@8?/Rq@f(Klp<GR'$$TWeJh^%3oE`A+H3<mZV7h^+0AWjVHXnRa0j9:bP'0Jf+qR[jU+LB15`9`>h+3XTlrYg3j&tW(8So5g14M]]Nk<X]X:g2S\GCReAQZ"hHI"<%'60[SMb^sR3,hiA=usl`nP>WG\t3J3gAUcTre?ec8:BBY5+q]9s8)E's8%4orNF!0n,M?rr;D-Cn*dFo%S]q84(:^gm;;m8A%i-G%8^M1`i]fZVh$<PT_Xcb\,brH@d0b7+0P*QKp.mjPqrIS-A#>$o_9C.-+0ld\G-<&V*M-nV7d,EA'#2a9M.OG0<&!A*L!U?bObW5>%kEN?RrYs5tA]kmA+@fk&SgK.C=am1Ol4W6;2$Q)WWk!TuKDcAI79a.a^EDlYp6R1Hb(5cj?t/b56^+(>F+D<l0/5MCp,gu9LpbYZ%QkZ?R,UVWhUo5gk+m319Gj'\".E<$E_hOgjX9YXEOlK.W4MH8f_9",>HXEkEo3*M3PIJ"s?.]%!DOVc<=alnA/pFG_<FATKl(F#m%$fN:A9O]pe/(lsSInGbGeZBW)P(VEo@)%+-L8g'H>i!]CPX#Udd=+P(%'`jupEg$F+GiZmE'Yt30'IXXHp,)2%oC9?+`MVM[\*1r%7cNu9@*U2bNt'&Tq;3iYFrs1K_pHlV*]B2$P35lpaBJ.&LmQcb5.=JCEb:X&f^eC<F0W][E\?B2=s4t9^f9l]!;jg;d$+Y16C?uB%.s<76SCWX\V_p;'L`h;$LaqZq@1!f'lYGZBIc%csld7S("h^'1hu:SsBq/ah@/MmN7[(Pn/+NT.c*pI#CZ!#lf\dC?M*KW3d2QT:%G=MA/5bdt/%#`T&E4!apo0fHL;#.-fXQ".^li)a:QJ`\-Wc(GXA7'a/_/Zj['=!jQ+;SShLBiAhF2N[>e_`sM$Bd6J!WPL4,3:LZ%'3DPVd.uWmdXJf/oe/K@s5jX+mA**k7AsC#UX*+O1RkSJ#T-u#c$\B2OD1Xc#$LRX,ub3HDdN\h;+9U]<7+hhTaHJWe!.kFBi8_5%kh<H+/I=e1hKUmbCJ2\HW*sO?NQM=n&L.1dZ08s9&WUN\NIXX;C'Zg;%k:+[0hM2l&*`YIiMpa_B0Omk<.(jq&\'3eP<cM]?8SC&%<]tO&Y%*/(o&%hS6U[+u!EF5B7;,"t_K;XFBN*]5aH\?'oMU*D!3$cMnaGG1(hZn4\A,qh>C"!g!Of;>kW`RA)5=6T!\+AS,339.%Qm@qe'D/UY^-;D5ZJd!,,cTPn/]1S`*)4iNrnBu4&9jdhRAI()SN.Zsg/p]4f6s-?QYFo<rd4+op,tc>D`.$T#\W*!CVc_E'I=L/%WG'c4ll;ql9$fRp2/*Jf,ddXr88DWJ0\%E*2sUdN+CllO\;7+qmlg15kRf0'*'U0rCtLB$36p!8Db%Cq9d@ML!nNWj@613T(q)+D%i!_\YS5YjHg'DQ:U(*UO](0i*A^?Sf`k"q\>dYJB&mg<p2@Pu<IEU`=F3)Yc*5?dl8utu]ES9do3TeBWXd?AE=>&R7VXtMcDO^#l%*hJMk?aOP>eB@94S_>"[5%Ht,pNYm:]XU&8SR%nS0uk4g/62dQY&Fa<K",\fL1OZi5*8Jin6Bb/7X'QB]0)V];tpF7Rl])QggrFc%!A9d&8V%XcVZXZuC82m'Dj+oY>Y_^kS:LdEcCZ*f';:VeIDGNT++?TC#T]eGSV0VQHSt]oG9<=(R<VP1(/.^M(n7rY3nHV'C0_=.%`CjaN)=[;R-e(c`K,)<L>stE`K6W07/`^:pLD"d>Lt!hu22pIq=u\/C;ah1gPLa8$CsoVJ18^\Z(J=u2in57iAJ-%7K7h)DE+KZD%)?`>p/I&C-C^OgpbRS:;HI82rr=%oP819EGfeZJcA6Y[A6E&HbM46km*eI`$;O\*cFrM0_bi'$7Q_&6X!\S];bXX<Tk0EaS=u)&(%50m@*aak/"#0(San"HNXE?R/%cLd35reaM(JS;&N@P%]p`P&!"3/eY08XrpfRA9A$nRdhL!C[lDR:`2AjO(JB;3O`_At#f`cE7&Z%NCSQ$d8%Wu@MNJ%.5N,RAN/]MkbG?-DG)ouBO/-9P7\hG>s]XXb[?8$PV&A.,.nDZgBW1$hmEtSah_*J,7nRnqS&4l"%k!NM*T=n%%,^k2-UU9>]ETK:6Up.9\jV3W(DXJdik25K'$Rq?X[,OqCiLq4D@Is:6G(cWJlPQ4o^'q;msKQU=&*Ce;[%;+q8*J_GhXsTEJ3"T%+,Jh;aPDI;C[ER15$&-2QPTm9(cu9OPZ+i@9^52BSM:c#Ts>REk&s7c0</7%T;%9N_$_a9'WuZ'P.(d.9jPJ/eMYm-1bT=/2:\Z#%ROT'6!Nj$0P,caGP5=C7=An/i^8*AaBOX)0%,`*^-N.s\O"Upj%52!L&=,A$>$_V.9f:!m.3miqQr]H<3b9Y(6Y/1l9^B>n<#K_=%N+<E]SNO4kjtB*;C;QeWC(B:$C6Z$/lbCn^1rrkf6qf46;3IJ)j75'NUB_jRo_$mWs6+O@W?n>(PI9LK[^HUgelH2Y$#?Td`t8_I%")b-Qc.aBMIWJ#A`cb;FqX?ul:d0^B+SrntRqPR9VP;V*VQ2H31YULS3Nk#,b<d/RAV_NtmR.0iD+^t0hp5jN7Bu/Lll(tSA<8a^%hp5oIVCXjk`oX8fjplVtTLlXF$Z4[[BNTaJUL>GA*]"=D"<HW')TFVsA"!C8/^4MX6,Y+E<Kni21#ir$f_$\3I2AqNdg'N\a:bA%%aEeo[0U*lSfJ#?!<t_$+qjlGN:^T5(V`%jU(7_ZC_Gt28r:=oKo0ggH3fj0k9`ekHijTC10l9\A@OC[Od1lES#/KU+LJ`HOkbcaO%*qpm!`+e#PDu_T-4P*R#V`4hM0hqr&1.d9=>)A'&2dT@K5gG=V8^=JqfUER1p1C3X\+?+$?E,FWXP=f),Fq=@I6IIddHbG8=/s"A%0ddB!M!_W<iGi>BN%.]9S,foK4t*iUJ9ZIsl,:X^e#LjA;qgDu"d)nCD,g#PrBQU0]rHo8^?$'`2EXbD0-+i,lNodeeuJ2\JT-eU%Uu!I0T/$'Rj&7BVpHLCDM"[u4TEq&C.5_g@92J[!TI:Vh^`4CCehq!$I6d4A@e^h\i>^ia-hPrcUW+AuogD*k>aiPF"c2K"\t[:B%Q9Ycn]^4G/*E?p02h)MAnn&B2%(N5<ikeZ2`2ZUj'cl"Ve%ajVB3m$+9>?dn8;nN*Zq67KVh?TiR24hM.M@/LaAT+.MW<?4h!e*Z%MPtT]4n:=?^-8IB5IdWr;iluT1c^e[-3LU%'\IoPBH#Fg6aN3u*0h"[!,utJ<Zh1DI9Lqee%M1f#7,Ne,>O^0#Y!j:R3>>E$l,fl%))K9k)a)-CpSB_rof"(CcEtCh^a&*:;Z&YuCHBu'E,KK?G('lkD)02eD,aaq>#U`YEoR4%G&n2LHHGQOoER1B7ZeG*<<bEBZJdVM%R;kguj"eoB%B"dKh\CoD!SlBYOP1mR`/GG3.+pDrN8$J7Y-6jAIBh.[.Ylt[V?mo%V9-lDCQ]8,@-3\2hRU&OWBg`6UQpR,V>7.V%P&'K-;<]R:+ob%SI=6:.fhMf2hq</[5f[a9OWr?`U:Ape\W2Cr]k6qrm`0$N(C_[WLL?Iqf-iFse*U+hWjGaSE(>t01[_,Hr)Q00%!&9uV"Yj#iQ7usA'/Op(=-p/!-V:iF&YGC%W?`r;\PuKu=1N>@MrAdHT<Dm_AJZ)u1[/fOE#=?S*X:#eZ2sX&OcL#)-3aLG[Vscj%(mJT=,aFrD%3Pt709Cs`0T_Q;QP[_1A,%5AYoX:*fN+GB02QE7N0oY:-u/Ab?_H=@8`Bn/8UNi[acMal?G21W57!UA/:QC/,+c27%bkb2tY1JMs'RB5Fa=TpW-?.DQCPiDd2;jB7:#*V0A]2-U/f%^Q3;R2K!,.X-kbrNq&iC,ODdPas=Sp&Hm7Y*aLsEkU`1P43"4e\6%m\bFggNe)Q!:]96!FNL.E*Q='MHg?[fkg=mQYuqrb>N(P;]cku!T/'9mMpB0ZT6d>:p!'q+3_'hf@V"u\72+RPm`WWBH*W+Eg^5\%=`1jP+P%ha`6mn(4-9K288h_$=V00@nE_Uqe)Al1Yep8=dOVit_9dM`I6]G+bPCmV/.I\:GQB(V_8QRSD/2aIa^`n+HQM54q[NB@%kG$=Inq'N$F8W`L2h(GCben?Y*RaCL2G6e.*P)0c''&7/]Rb\IMr1j?rpJ7L?k%8=5T[Zu3G>fW3LQH/]<*YT[g[0[!\"8q\G1Y_%\@J:t=WEoeq")3N.bm\\S_&46.1/#0/,KFhkQ%dQ`6"*j#2!9e%3SU;NZeNI5N.1Q8TaKpP/R!ePl?,t_?.?P)8C1GBPBGV,B`Q2%SCdc1)jb=7qc_#0HgR)u5XnJIiIllMgdo6LdH*<i91sPj1$$X4h0I#rB%#k5/,^o,Ki:hK)(E4/TEp%b8i2,&0TqY(>rU\aDqLE+%U%=@mKJqrSMaFXDGYO&gdKSRK-G>D/%KZ3;hl*m<TZLtAR*V"Ib+*5[=%r&t6<Kh"R7keqhD#%Ucg[\b7.Ne/o@]S>'6ceMS1<28%qddDg>>(-=0k8)LbaD&Zl9.Z>a$-u.DieCS7QhX95sYd72^$s,"+Y`*9lIKJE,2(GK3<c;4ohf$!,,<6V0(L`##Nl/DV'u2GjPY7%,%a0KVdrTEibt>M;5E`&0tQjfZJ(qan<8$Mk.r'^X<a]Ko*!RGAI$E))R>N5Mr4$sM&L3Oi]ob09AH-q7'n=[%)l:o-jsE88T>0f%)HBk`Lte9?@_L(jA5l09e>g>B*F]5)4KnQ>S1D)+>Jjo\*P\tTgsK[]cm!+cP8s,:>=q.3q)<[26Gno.&=!k5.EEaEl$'>c^(@)I%],_47OVRcK[DmMhAR1GZ^-bLt-!:J>'4"LEe('mf>eFIuGP\p&TU(X'I[^PoElF0mg(k"?.4V-`I-6h;$r]4X!N/bZjVtsMMdG:g%Fets4nBbt.T7CNT`?dE9J4&W$\O/-G0;)X`B=r"CMZVB7Qg*<"WKUl/EJEZ)MHg[(-<aLuH81Q_-UEl!W<#t<!!sZu.WSQ$:r[cH%M_u4enH@ntT).S)]eg<TDp\(#kE+h-nNnA3/efDUU^UCHGjcE/_"B/3EK*KVO^7Vn?Jbf0(Y_]QWW5YRAVtA:"6?4E)GNU&EuZA@%rMiFEPGV,Th121l=+V^\"R4i>2.Y"E]n]qGDG7qo/R08Q>Zc)"_\hL)IG+a/6u;.tTm3W^8-7Kma;,D"i8s8kA^fMT2Js3fC;)O.%nee>6i0KUr0)MLm!*4C8Ntc%9)ZnWeA/"i>TX<!NRb`],msjomVdbg_>DbdM=6PLAf6i9o-@cU<2&jC:XYOJ70G=hW7<R-.]Fo+4%E6O^eATWjR\&#(`bWEd<0-+d`-Q/f'Lu4pn25:6e1^j1S+<[:u-o'N-/k*M=YathobNUQU(tGoUO*[cZ7J*$)<p'&!JGDO+9=b61%#(E=sQ,m2UgUB(RXPSXiGgJ2G%BU^4<+LA9'ps5)i7%eaj[(GME,bSqZ%*t,[7%A5)^L>A=h^l;;#7i@cL*q$Gb[n)M5T"6#3]e&%Z0*m*6jf'YC'8M0Ti99P;kH]hFK;R-(dLHPRGV%C8U.>S".,9m,QHp2FkdsZSm0[ecj00DD#hf7UCH;f6]Sc-;Qkna6Y["1bs&#s%[sW76kh<-E7obc.B/*q#*mQlQA^uP_EMrBE]8AZD%Ht64#K/_?Up?fDgA<XK0@LaSX-GU^Q;)B#PC7>1iItT4Vi<B#i(MP>Mr_O0%Qq'k-.n,:lMOIomkQF$t"Ob'X#gtb]FOA]QYIUi'c]?H9HYXgG,+RFehJRM0Fa;d<jShu,01H.hfl#$/>)HG=Ws?S/'tp%H!1/`Q%kRN8)aFt%h^nrd(9A0E*RjI=5,Qr*&#NR*Fc=L%Gr+KtB1*W2<4/G:Yk99`-M,R@TE(%)[k>XA?@Cc5s6='%Yo@`ADR.5#e\IT4,%q'if8&3-QJ+Q46O-*IN=.f91`Deuk.Oac!1"IeJI3gJq$a6YNN;7#n?l:@f$GkC@S7pkj%[]'3S]EJ^^7.?J2ec8[mD'o5Nhs)o:%#ZlL&C+IIj"pDLSq._VGC8bMDfYuYN&n`Xt"n`grh*X(7P!:2]ccqJ5biG'@,<G-MUP's[1&h:7Q;=bBeUbLEca3'#6=Aq_h%*3d%5b2PEr=OZTOfBXCQiNCohTF44B%p>_*P8k85SM</^"e`8RSY;Ee*,><07gm=9G-^R$..[NDh<YZ[MCr0B4#k`aB":1Ph=qML%2_%%%N!eu_["#Ml@`!&=Ju#@/ql(B>U$]m&/08rlqmb7j"L-T0U]OhBuQj/!:qTa83@6([=D_*ktgiFjW6`d$LCqoR6&=QTNu(nl6G(G%OCj>BJPQ?=4^8=f_qo-O.0*76A7NiNnF3At)-Pgb+stEY]9c+'g#4f_7j.ms3&Ep_HP?IQAaWD<e\,lQgu7as:B:G.,.UJMbUmgs%R83k1(c?[J!-!l;_VMe=9c]n+Q_FmOB03a5#Tmp#Mg6'4C.#2XWrT*>DI:$`aDnse?GnJSm'0dmqB[d&N1Jc38C3teSbrq.j^&)j%>rK^^<a^*?+WO^X'L6ah\RU1%rQ=D.\,e9kn%cAEf6PX_c36OVKWB<J5`m(L=E,4Wh4i[FJdilRq\R],m[<<TGSg-rb2/ZVKifAN%^VK$qeV1Wid-1A8A(b_eYd&m"RC@NH\oi^,+%,nl.\fSP+a#R0\,%(PT(;V)CoNbP&GDaYArpd0XedXfo#sZH(_<J<r<DLrpKMYV%-"fT"A?Ki2&ThXf!#X\:fmjKk]k1V=ft%DF?NU:MK"2fdGBb#-&OuqZ,"BA=#^CZAp[BZR2dK]R?A:W,]3K<eA1)2R"uL>"+,$3i%]_kMLgH5oFON]5c)YcAk=i8biJ=]AS)ALF[OB`6RL-BeS2'=lKLGnBQc3<r"A3bPP),afD8CLs*?NYR3:BR)rB(e&H1.?S=ib?36%\Bf+F:uL?^1.MGX7'-nOZBlV\CsCIDXu:>X+C5s(KtId)iI@k/M2hcF_U4GfEAR[2adP:0(ksUea;bY:MnG):BE3]F&pH0?KYZGe%7tUiad?#Jj1_`*nE[LoV"">Tf".q_p!DsOj>4rsc;qg[r3uW@sU$qJ-<!b-u7g"4DZEgBZODN1\dsrq_4Btgg!IhL=P,I8*gc6OL%"sCG0P.p0aZ$7/eSAL]))?A0WDls9EoPL(u+Tq"E\3WPQLf9uZQiV=eTEUiHk%[/N0tuGn@"M%c#)KaE#=*YGk`LVoDTn0W`3Q^^%?N[kXd1X!K,[**5K.6f\CTnQ"He&s(pGG&L;Yh;JKHsnlK#H8K4M.ctUSo.gq\jjBRBHWC+"R6p5,uKO!!,E9jt\]rbh:pL-CbNF%is+>m^i<>kf+>^AeI[O])L/qc9]T-!?NtGY)?A/pBW_QD&#YQ%&NFdqaK>`g!,G(WEtmS5>Ra,32Nk*A&09WiCWJZUIHRqp^-6ng%Hk$&hK^NT)#VfSMC&=f?Jm1"R,`EI6+Ik3kq>W*nTL59p#@m(]erOE*+t+^lEM;tD9;,%tat58(,=WW8b:VD?lK$Jc@Z[kl/GdJb%ieX,<91$4`^7$qB:4T3qP`H74cjqU^\*U)c/ocI5NUS_&3qO-oniC<@P*\+8!=oJ['a_sAA&^#G*VUCZKQ^+?*Kt)pb=B./XCm`@%3(0r'*%?4&W7U+r=%:+I6XY]@Kg:uGC@fI''c)J[)"ap@Za>/XCsio]#gXf0V</*d[,p@IgdOb(HcXkg4[:s!DQDP9pn9GXn`pbE%:BX#,-g-ed=_">Eb5D"J?c#Gl\f%n/RY8Ue2_'$R/m0:U$W-6G`*%?P'l5Q]#r'3oPrePoP(b'[JUWoR''#]&X%0Ui(1@CI+YQ$f%r3m2$75TL2N.OD!E(nVYVg8u_4-!!j!8?X\i:+4!%-#pa<7X%`XX9Km=qeIf&C+d5@(>+;##FfLfaot'qj.i2r0]2h7ejF?I!mV2%oR7t2VsLUs/H"97=sWVO;2"kLl\6?oaEW9<-]XEJVs"\7O.Ki8:Y"*&jt&0phoJVI<"-=WM.C/ZM[6g>FdtdNRfroT,<h`db8g.s%iO"3iEkCre.N3%LG3KS-_It7.o0V8gF%T$8bK8-g-,+b:&6&H>(i6OI0jT4<3-UID7F`46!9'05!$/im5_`5?j<H"`1e<e7;N'V^%:19JhnMaba+>_3pGZ&D;@D=8ik!3_J%eOKE92Gb/,;a,!"CHC4=pqodgpE=X7&PO#ZD>6#UI-JIghktr'rm1HqC4OMYL/8aHX/Bf%`&FKB%PmG_;]2"V?$#KZ061L)Y-+j/(fcpH*DBn"Z,IMK[QN5`=gT/jFT0BPHsAXt&[ODnTilNA8_^2V/.(PMDO:3S;N$jN?ZR(k%AP6!5bD$gaVS2_FnGKB20dZo>Fr3iATE3]h$D\03!"3s8`f29IC,c'L\>Nu#3%_C6Ri^+D4'IS&00OtMh?>Z"5!$`00-adY9g[#n%CPn')H]MfZU#C&AVau@[F7=bkcTols_Z\*[+94bu'H/"O`dqm6H5Klo6+&3"oI1,;Q\nE`mN$h*`:q/9g_PV+$dMWl?Wr\[\DX+*%P]Z\nEc`0sKAM7!T&*.XH8s2i8/&JU(.AE\m,[akZOhiq3iRa&(LC:"l6**Zl*0[k4#5*_V1D#?4qT8R8eoU%>Vu[<r;^'bk:(i]%!]l%?p>dt6DIs';*cW=)fcj&]l)ps]/eS0acph@aqFPcE'WQ#X2a'o`qC1aJ/[qlVpL_2uG_53_pG-A_.SKJOCs!P-=c7]>p&lH*%i.s:L_gsL6*#e+.E[o/oP?tDD<RuSm1Fs<g(r72@_nOEH)h//,"#5V1#q9o;<[O>QEh&kiW5^HFXfCC+-E`(pB+l(J459-YM4mXs%RHurXCMn.Q%-Fq+bKMN7)[)=f(o\qp>,j8r('\!,3Vi3p(tISQC1mJ,HPopT[kn`PTL5%NqOdiHX9EYOdiegmf*&D8%XibG&C(/&%J-gEH[nP)<X<CRr)TkE\i`tPeHi!`-3&OK703ZcBX(]Xl[!G7[PAK\A?<YZ:5l+Eta!82a\inb@qa_HG[K*^._Fi<QbO^H/S'B:"%D#8[6rhCEVT8teu.cB]^V>pOBYj%V*CYW99qK$u,U),SH,(I]HXs$fJR=,%O?G@^`l6d3G0,=X:n^u9QjQR.jGrPhR#BDHnScE\F%IKEABOUSNKM":HAd=O<q0>:CY.p[F3oB-p,Ea8)HTFT53=li[2fDL9_Gqn[O(QGD0Z,..XHrk,tauOl\./h_<.RuP*k4RV,@E90*%Y<rqbncN<0b'd1NEJh6])_p`o?.HR,<oDK_%7YlfD6DjIKUp,7A.Whmok-+t!GS<WDDEpB+XQ0ajJWKePjc:npB;S'i7f>MZ2B(O%:b@9/He#StRuAr3.`"r5g*BC)PNsdT2_T=h07`leBU9lJB;H4Xia;3_VF3.ri5id"gEFk9N8`8BpaKLjoRcr6+aX4hHq:ER<5Fg2%qTcsB[.hEYIg#NDBoTG0Xmnm7Kk#7poSbXBmToTpce_J_*6guYR[g)nY>0\m*uC!9?+<H3mCVibeL+g5I3=%>Jp)[J\o4hTIt$oe%VG]U(PX[fkbL(mjCP#i,\AL,If*1)4?]mtK'@BkmjJgJqJdh=-IQKcdLiN3Er0nFMi`N.\[)*cF<qn)=.sru@:FeQuGO*5\5kKYs%Xll=t4QS2k0Bbq64leB4!iNOe@YLH1Y1hQdre[G>F@C[Jm'b]E%<'>.)F(Z9)Rfn"&6iP_VH_=]i-Et/;d5uo^ADV;3+'WaC](>Y%44fTA*^?QqH/uVudk61i'9Fn\\hZ9A\LqXAYi!1;HN@D^SUdl[W<uq/SI&H=SO`VrNDRDoBqLk/XFcOtZ=&7u#$oH6Nd._ua<*(e%_JL/J`0T)Mi?boDO)6hFFet[UA7>p,=NB62ruGr4V"'&EIGa+KVc@]X:2aeb$V6Kl8$0%06eT)LgI6'c:q_N7\5#=kjA^o;g!0a:%FCUF4%ef_I>%c_ql]lK'O4N\"<8LlqO"U5(k`j,6cU$0/>42prcA4YAQbN;am&LZ8B.skH$fqGN-Wg8[ehR5phUVFr$rb8%kc]&8%1DKBf.cB%4FBP^kJqHF0lI54d2]:ZmL.H-P;<[SfP1SZrTfX&r*Xm6>+j#34p/^DG02Z&VjUr:ie3p";b.k9T^S$1_\HNXgboRLZ%![`]h=R>cbr<#K5hJNIXZ$A4+@89FP!sL5L8ksaQ736k46/Oc@-8>-mk<ZP$WqaJHa/No=kR`<[I,^ek!]_aA@;:>+Ln^!J6oZ*n%HFpECigI_bjnL:A`h`/,#gB+27h_4MF(k1D3M*T#+;9ki;uNnZc\u]N2u4'E[uCATRKTdE![YmrNDN"(:Hj.P6YmeX-(c?X-g"qG%L0pY]a7c,Ll5kF=`4(ZN)-(bIR65Rbj+V/K+1R>e`F6osKmGVI%*qi2[gl5`@>G3^ODq]i"NMQ#9+,(ej.QfR-bO.Tk;?AM?JAWX%.Hf@iL[E!/9.q8dh-NDVGl2B(@gqP3pg(K)66@l]VPjoeimc>6qA3J76N+N2Glg>m(L)n\kD#)Z;#b!i1Uub[gi6aj=N>=i;A,ge%mm?(t_chUF^EFu<H_:;,Jq;B#'rY%:0R\h<DV4/):HEP%`r$CGh.+0HIE\@69NYtOipsGVAg]4G^$TuP'N."IQh`!jEPWHUXMd!_%ff?AF5EY?:"05;/29Ai&Qu"(M`*GfWKh_?!Umfd[Hq!+uZQ&q:^H_'P4T#4A.dTMibVWO&Js+B'>>o^O@3D^%4`'9<;THNOf%1JN%5hlulA-B?<*O@6bBL3Y$fnWf':`,C#6h[T!gI(bcr:0o(S2gU-hbk2(i&MH[ru$ac.lBTnCSQ@G1/Rg=9$2_.;&FC05<@e<+"m4]%KRLAI?U<]\YBWAOS,%5-_uNlJ&(d'+8[JEcoEKnDrHC(nOf_qU-*T6KP1?d"r69K=qI$SuBVRQ[O(JJM,KrfZOldA-N(\;lU$#[r%$?QdJ,;k!9XaU&>[pM]S!GUXJ6=nG2r9/g;O)B5FL`CST,n&+^YRo2;hK8:K5(NFj"8Nld3=jR-!63rbHU;tepFT#g;H%re<ST"[%Z=&mgAuL$<f35Yt;2t5hQW*C#+)3.EU=Jl_'`?4#-_P2'-e!F`0.NIomign%OXEPsk94W+JYeF\MktI8M^f,AJHMSdb8]laMrb@=%LkU']KgXjBXGVYn+07af3&F64K5iWn&+Q5I$Gh0aHZ<kj8r,kFNP\1XR_k\+$sf_6$oZU3,[.`STm/0rb\QdU927nXMAS/7O?(K)%@:TcN5I8HSSUQpUMKbCelg@-QQ=A0j4;uMgJ(Vj1,1R_d\'t$W3(dj99&OrrRcJ^8[b,=YAhB1!EC'OMdJmitdLNsDD833V%&n!Y%)hk:.6#b$3j>(2VKIY='Db\bN*]Ha5ObpJ4InO^rCe?#;QH/Hk<^5#VJE!;1;RZf0,]]/?3?*;f%@>fSGru\__",25lH"/l3YfCo%-Kc?=Dd6^qC06[GRZ6?(13-8I[;p/]rlNAm"q$$Ur7mr)XIs"n$K65:hYIuA#)L!$*'iC<lce)!P6kN$ZSge*'oM;+]_MZZopsZH%CL3\Fdtd0IqT\_RaQsCCVoP>B1JK,2aNaYA<VSB'5J6l>,Qe=#6B)Zp&?ZX$WG#,U1Wu_2AXt:*/3-o?I^eC:MDf<E>,?C3'N$q;%Lo@;9.oL.0Qk=*]\@(5A+@E6T:;WgdeV*"R'pGfjC>s_ddF0RSWYFqBAs#GmP;"`BR1(>&5!Z3N>=Q9M^QWBMCWS0]7_,?*fe$#F%Z=I;Yok:9sfLP-/Y"$70Nr.UQ"N!Qa12<Zh't%Rm9ks"t2_]r;=8<SjOl+_ns4HDk'njYu#nsAGg$ZkO"(.]!orse0U,MTLMBUj`%=lRj+:7o3brnRgBI;54/D=bp2:EXn=V9fQb]!=qjmuNM\gRk$Vn2g-u)@RXmFhSF`^-N^[I58VTB^liO\N"2jY6ap];t`q(!:uq'%i=:q:LXoe*BTa^'H:,>+s6:7(^68t3+HsVhoIkFb$l+NW-`KCaZ5S[2V?V+@IoM&#Sbktfi`1_Vf6M:2Q^gX@okLDfq?@Ah,=lR2%!O&sqr[S]5REg/3%SnMOCs=L&W<Q3Cc;KiE1rpD-<V+\)':uUnM_hNOW^[o:MQ>8<GSOn@<q"Bamir%%0'6s!eFU8]1aJ<l5PWcA%FeVUJcO<d\GS/Cf:;ld'WlT:L1S[Rf\[C>B+@E0$M(8mrMH:ISF&kuG`iFsrfgQut&6E5SF&IVp\a%"X32jjI'4)eADJHBk)0;t?%C6e2m+Bn'W.82^`0&,ZiVd$`gi+;\_RW>Ih551T0)L)/>AP<1d("6'[-IZMN%2GH*._h]4o%R@6+.GC*Je4>+@:F@;O,$1`i9R_a%Sn\gFQImr>4_RYiKN6q(836/JM@VqF^T$'b"ooi*Fe<\n1$!f%P/pYiL&.%LhC0fa$npOWM:rb95/Vao2q-GT%66o+%XJ6.)1ZPf%NkSG[.`kCV<UYb<ZO'XF/;N'1QpUStlbdLU+^C>'8LQ9re\I[]%ZPYs[;EnpC:[Ym%PW?YFEJ*bAcr6bD^eS>XN[/b[<f,ITPe>$%a'jMZGQNp%.\14=gm.g]f8@Mq+Y3<6$kdN@9O4A(W>e*h$d@Vs3,`7#n=qNP'9X.;+YH3$D?P<\YHcI<Q$9fMGa1WK7WT5[^L\(,%p6nYD0MX6_*-(aC@!?bkc`/p6R,@V!,ZJg'j]HO\[`^U&%XeHEEcG!)+*On362em,ei,-jG"Y`5[=sS9Iq,G"AILZ/ONQ[4Z&b.M%Fb&hAb,G&c7#'Lo=62hYLGt'[Cq6CgP;#iYP"<E?\`Z_cA^]&6rXLEqP9A<,,,*]X$0d41K?$JN,&TE^VOYSp>KMU5W4'8>qG,D%%$ut1mi4;9cENPY#7rDB[;`#qn9^KkX^N-W5_dZ**o3/\#$Y8@%jT[CX9V+:a)ao^<Lr?K:[m2/A(`KQ89ZL`,OMm<Ob3W>:5ih3N%j1?uA<ec&G!`_tupDOs>InY"/WHEn"6oaOF',m%U%gfFt84aP;/?9,+J$-/^d(f,USOG*nA-O!;c/:!^AoKBqO(N@[6]>O[j&06h%^a?=3?_F_sT%gJqcRSqi)r_I4@KrSVd'CdUI=Y:=B(N`&dpHI-[cS>$1kY0YY[dqWjG#%c39!]I)5da8YH)1i\7mX_S%-ZKh@af(%WtteN,'9`'<dBhJCVi.eHgGPQT:3m?q)t4;K6Wjo#W(+kR-j-+bW\`9R18K+W0-E$g@&^:,2QoViDQpqP2qQ:Q`foEidZ.!LDc&O%V474Qh68`W9i'ON5\Qs_Vms,b(Pp=fD>FaNS%-\u?6Z[)\(%)q@44V+&f0;.?4U@HP1LP@Qa?MPTl=f-55-%JA-RAuZTt(==fJAI%ZXfUG)S44pr//M`\$spPG'R0n8S#hoMq-I%_*:$Ela+?tAh]hKfscK8LV@[<<Q+Y!_\^BXr.J_f&#`l]U2"R#K.l=m!rBVs99pPK%iHocs\k5k00T?9cCB=gr,^>#1Y"6AU@Iac<e:GdXFs]S,"tDs"Fq6jFh/TSs`q1ef=39&H-7bII\HI8cl+:,>)]$!<L&_W\&)]3[%,SaX?\tg0TkV.J/Ti8pY9-(LTWM-i"0)^sqUW?FHXtUdm`5F.2jChX2UOB'\.[.`CWm)@$?D62R0kfq553X$IpDX\>Z]=\giVN(D%DdG*n1fW)%d=Rl(!qBG-9mp\h4@3V)Z4JS)2pZld+I3r&Y0n"B<E<)O_3U!]JWR6*\4S45T_4[-QnJ8bf\%5@:G'i^QO'_:6e^J,%*`@[#3\=U]!AXT][76BhC,/]?P*La#!a3q'g['0]dj;?lBNq,$6@@)!Pkk0G7K:f-M)V]pShVYJ1[4-T[:aNZJ$`j-pBU/Es4j8,%PS3$<"WE/@c,4ind/:IX39*Qggg\V=I6TDg0/$/%c`EIWLqJ4e2WkhO1haHI&5EFh6#K#2GnnB%N':dl-[V^HFN?$Kgih+*%0`&Q%hB[of&V:4-).f]ehPHAkE+``9?Vh,GjoTd7g)FQf=>O:%9F*"TAk&fA9G(o,D&)4lITqF5R3(1Y,X`t[8WoMs@Y.TL?1?1cq(QBk%\f?n_e&)PBk!Rb.geA44N>X`%*%Z*]jCSa:fC0X(JS:oJ3"8D"]tS("nTr1uQ9d9;n=&(!4aK$GUYC[`lS0?pbEs%'<6Wc]246>]%gsB/C?KG6F7XeQWrF;%H<KKU\9Xn2a9c*`6F1sj8lY4L\BXXI+)2#YA:cm7Q=8*3XLS'Zq1:0:hPH+UE".4P+3po,gBm>3u?6?>8%90<;/M?775\i[iC1.6gKI6k*]Xq7@=hk3pnHrQm@#s.^C.lZSopbrNa6=cbg=`-K&/mb=r?>S[8:'EXa\K>uMMI\bSa9\Ut:'oUV%qp(E?acsH";+bDidZbHQM39'NOr#lGWJjbZd\2NGZ7ZVZ?H=Ok1/;OV855hS8>bI%N)D.c2o(NhRd]MZ,t%540JB5dEZ(dNZ*oLP%8)FLs04^;F)5f=Qh2"HjO\Ek))5U<Pj-C4$&h>@JP2hkAOAa54S5PV_qMC@ZR?A@A8u[bJ3orr]6qNM7aU8u_<5p@mVWFpsr10g#%!MeV'G7$]tZP*d:1)2HQFAa!S1aQ6U;,SZ<nj5epQ#TDhXSG7UO\Ek))5U<P..'sG-:,b86n&HlV-M"h9o8^;PSD6(]T>u_AXno1%RnAnZacsH";+bCD@-sCDF_=S^h#c0?QkI#r$>N,r[`=Ar68rXcbc.F:5n3_$gVe0s7a6iO[8\WSFkILAC'rdqGql4_8nDaANrCfA%/]VumC0E/co28<m;'1T6:"0Toe=r=-bGBfZ*nY"<$JhY+0rL=0"gt<q2aM7ppdq2kKq),,#tg+Y@P];rDNq5a;i3=B?_S&u-W10)%i_-qO&^.#&=qRYtVP__"RMU$[WDl]HMrD<I;s6]qM`J1E.S%p#BR3Kj(0,gAUsWXH/X6ZXqY4$eVU1<k(NX>jPZ*4dA):j_6((mj%1MXI":cfu8;l6G=NLCZ)C8k0/lgfcsVP__"RMU$[WDl^3WS(!?3cq.Z`LL*]("E6_hVN+iQ5mFJr.=MNnPVUYkf@dNS>8qFQ(Sm8%6,:_.!qfbBHRk.VK8<,o.Q,]Oqt=U0m,EBhWQH7rVLV(*]n/utNMOtG8=D,YLmMm%FK*NCH#9N[e95LtJR$r<=U%c@?Hd1XV;fQ'%&+Sq=2M3VP<aO!bbGCrATuRkX2F<ba]U7<:8k!SVNG-A/2F<ba]U7<:8qf&/L/b_)&;)U\/2(VCj\er[e)Yqf2F<ba]U7<:8k!T&%1HssT#[M3:@U<7g't*H*F<T7*kYdldo@d*AW/^5=>T9A0D-kG%9;SAkWQ>fpD1jOLGqlKSQ-r<^p$Js?MAVU;%a/MBjF-NkRmO;u%N1N5F0D%TJMsKu<hlcCn=Z+Ha\>Hm<aqJdGVRifS-QeH((VRM<e;5a%A*K/=89YTdlms$N8nYRA+Bun:TYC%2<C.0ks5M[;k^`2l%,T7.tdGEa*<$mYZ:=S.f1S]<cHI40f[kjTP,P;mn@JDAS@6l/0Q-<bY-m4qcj:'pkOs^"&-#ajT%\lVA_O_t.P*M2Xf]\:*miBMU%G&4,e))ZR,8U4foGT%kU$"l:&OU%FnS-Us)gl(,ReOR;Kp,^,6\!T41nWJ>u@LBN8$/<'4`>&M1+nK%`nf#kOpVoAYp+nB_SHL8M%!J"k90SDQ?9J1PkNI(a_.;UQ5Ar6a=3M1kAgo;]Q.W`_L.0o@qnQkDX;Wt@\<>jG<D<t!EX:FE+CX]=]^uRNo&32m'a8mq3<?17Y%;]46I0R6B`EK.WA4uH2r;Aj7DNm!r1*:q9:XE+Ro:OJV8ODtU(Rp:ej?D;0D5SY:-N2./_dPVG6$luXflfFgn%@h794;7-+R8tCg%;[o)TE@R+94OdO5RBa`hkTFf-o1K3O)EMRX"W7H)$&Ok<id^<RX*3HVL<Q/Yc4dt_e^B7tWJn81GnD_?0'OVcWK*;2>/6C&(dCT9%(5pt1QlM.RRpK'RReBHO0V^d%aO*#'F`([Y"hcu=c,%rS52#D&[DF]=)apd-,-/f#SOl1jI$Ml&-?#'r!oC<YQgpM<W:Vj"+1Km(%h4DnX?WH.`kFF"TMDH6O2%:rQ6>p"c6l1f_g%l'G\Ss6"?,E`sGOK$\*!e99ONV[J_r\S@P]d5.a7g(Ag%Q<ORI*>%eCu6#(F-B,%Sd(o#`Zb&hAT=Emk.#R]h!lt<+cLHtdl-M_m]p?2AU@.cXa>D/o673>7<$CTMg-,ua3CPUe5]@Ge7gT4e_C,#0)L38]-dnE:Sh5O%WkLAIkT_4_cJ6?pA`(0Fn_#G`hp4d^m'GX^]UXimr]BB>m2&dt&/dpno65WCq>"U(.g#D0gUc![<aH=p!AA]j7>XB+_sV4+D7KrK%"CXXuo->IH#tS7#Q1Auh@_Pi!f]tn&JY1tK!YX]:5@pfHfG0mi\rm^Y"!3md)"TH(FBu\\ANQ:XGHdXP=eaAd,@2.d(F_7^\R\\L%G+&G-QDm.0'S>WYE`Qf!VJkuMaj.aLVTk8WCVtO-VN9'qUVftP%ife'Aet*\qV8JCRNPnj@_d<[0G;`s?X(oPF6sn.m\-C$5&#+O%;q\^)CY&R!T-Hu;RS!qPeE@bH&h_m_:9EQmN9amMZM^S"#7cJZp[J=>Q7jS,H0@aLe"rTM_^G4g6?D7`Z?F>)IEOL\QH&+h0\[oS%KB<:^[k'?dYZr`h!&C:d-:-g:S3"]"png2*Qam9S,6EL0QYh%/*F&UqUrS:WDLdc2CAJOc<-E7:1b]R!$W!Wh^EIMS/L+,g!)2YM%e4b;lN)MqdDZaGbMGB6j2"8+NV5Z7:rkLB=+7\?LbeQq#'3?ds!#LnDAV=<<>`;V"9^"5N](Lp]YTSfb;t9/"90Ne*-"V@s7_P@7%6:Jm<;@*nb&$8-_Z-G<%"mapkluj$K2?pVJ.=,qF!XDRqH/!H3)'IBbrOM23=S>e2a/]>C8?!oNie#[:?So">M]@/XMH8&(5KTe%%/+W95EO&>3M.Q6kEg!Qn1qb.U0\SQ#]a7K-V_1a#o/>7Y\nhMb7uQt#Q.[fjL]E<%eh\2eK>Wet!2MFKLlc4:n62]KqU3Q9#WcJ$%AuRW-H8&MJ6NMe2kbq^0#j=e4AM7OenQMfn9lF`0;\RA&]h\a+8['#mB47U4m9lp1cp\8nWl?mPVG>3ZLn@E!i1>I)(OlAI#""8k%!LCq,-bq6]!]3DGO_QD!16e>.J#@`qCmFJ_FI.h:eqi[Lgiq,PVU3iKC?V?A!0MU44=#?Q"LO.DN-N(tIaqse=,O;,=@te\I_+h[%bYlOEr9pcjYD!^sm`Qo`b`;nZkS1QUFU.CL:97NiCMR!BeH2P-[GAH4RQf=!iVXNVkcu'4cUO?,!(;)eJ:'"R1!AoooZk"<7Sae\%IO#=ca\uo/UqK)h=(NP*VUb!&$@0BH*UWpjSVc0,BXbpZ9$I_dS&c=@nR&6WK:SH$Q.l]!3B#'UW\VYn0mB-q<V)(8m&\o-Pc6e>%-SnbL9rtFjg,L>A3!r+nO;M\npU@0iI0Va`2N#4QLnCY-p[iO9fIHY]'r2ei,_d!,!oVHCM:9_;WI=j"X;$(PP&F,26S`/99e(gO%.M]gIl=O<!9bS^]!RWa#8sHT+5U"VT'?`g`6HZj0fiX?OH;jBYc28KcmW"A:RV/CQ&g<gt9Qbt39"Eo20j/N5kmm^pfK`FT#PZS2%?YF!^<7E2I+-M9Dg6Um@`Mqutdn$k*LSg1I^7&sNmt/rACGrS`B;,+M64r0f8glcl8Ic96;,_&e3PLg,Q%=.qU7mkI[nUl@*BTO^%T[cnaJXj-TmTtHVJ\;/ce2ICn$!EO6'n%<pWOl*neq]YNn%SSMD*5qel!(EgiB*89_fG0fOgj&j`n!g\ol1_I14D-jF;tWgE72E"%cA9ZiYF9cOpIY,T7Gg)jbht#\^o,uWY1u;?D!D.J"fVC]O)?,!inu*=5cO;^i:k(XAePuqG'1RY(NS6g)bY:B!SuT8co`MAf\\aF%P".o)kV=.sj%?CB;:Lun(%YK@g'$c,?O;lY?>Ir6U68m??g;A@$)C-f2I"Rt,_n::R_d88$1i3p:?![!h9&SZ7jCrqT;0AY-2#,:%<JD//mFLufEG]o\/+8RZ%'g=[H)M?`PGbh??P^ckDgFDAe4OT.Kps?0.a9l2&p\";kLuf^65Ut@`T0uK01K2&T8&]cgc*11(D;]?%c0d?cDeKc,,dlalWpQ/RRfEpUqG*,Q81'J77<6c=1c-E_YHGg7dOCY>*uYk_*?ONSGC-4+T0M\/9Jlb&[6$,043\`O%m[hSAlIm<%2g::5=V0jrC*kIK;]nl^04d$NV2/=I`T-)qPq4.4%T_A-"N8[(`bK9X9[2+/+tE10fRm7\kV;joMCVspC3-/HVOE3B#dV$9Y@%T?%Y:/J:$>`Wb>4ITm'Fe2XQSOhhM-9\Z6IaZF4X$&#qisA2A;t/sNfN:Fp39khAq.5IlE$)%-+RA_rJq*7^>PWs!483qc0&G?GWfoZ%%\tH7o<51BQG8<Ze4In`X_21CXhKXdis74'c5QU;;5a^SNF"=AoTRfXA^i*/_KP/n6j*)9[DaJi^6@)]m*^0Y?Y_ADQ$tt7;s.t$%1gu:oR+OeupMq^[c4Si';J3C$e35M5C0joFL[r[h4F@Ce<4EI*p1@SQHQ'jUB:4a`ja23%"7pc.9cnS@m^7Iamtpk6&u>EH$0[7%%#>j=5WMEe_)nB?OUqT\V1ETQ)h(nn)IA<X(b37jS>0*(EV`[mUW7sA8!LOQrOA8QS`LK/`]3'(bFn=A4k`Im4<-3JJ_A21G:1]YC%W>>)4V3[^O$3$.FV_Jfc<%lq2JRPUQCWMSb_"[&FWpU81:UVXsL')-:*OLTo!#$POfF-W&4olF"9bb@V]1m&o<4^kqG;7H7lKH(5%I8Xp[(:ZCZFT9odT[SJ+.^q8?RdX\qok6p4U";A0@L>m/aIMXl;])pNI<pBPMoAoT[))I]c-^=jFGltrR`^S^UiGoaXTkU#)!$+R%>+@+o;W=3Dj4s$$;VB@EppaAhJ"V&`Pe(s"R)B(-'`51!a>7VCa(6tgAD6=o>HNk[6D.5RT;eRinQ8BJTZ_q-U:DaaLG,<3kjHJH%7]knThP8F2jLKZh'BG/\4dK90fh8<@8[nC7APDD7^!j)On'_\,;QkI]*R9p(e=:SLMfX)lg5qoHkj^]MVNLKcRo@l0JdLF'5'Y*?%!eb[2nNG]u09Ab]h8J@^?nSA5g^2E4I<-KkqO;Xh5E`cq0CF<j,B#7'>LoLc'sF_1iM0#!h9/c88Z$CniA"Te;bkCpXTElghIT^;%*=0]m6cQ]#YIc0tV"J'L9"TZL=`rK]$'6Ca/"gO+!6ge@Z.IPO1RWCj!H;Bq0(3aWMd6T\e>ak21#O3"bA;(&loJs/MQj]fL9!F"%qbqnmQp9,Pn>A>.I4fD-^Au9ak6ZSFI=8j/_(2s7$,iuP8.I5^SSQh0%/H[M/nDhXTi1[W!\ri9SB6gn@+*[#&Kfgp:%aGU3DpS(%GR"u0BT$q4gm#F'k\8Pi$DNO:6(?U6G,0Tm(#@TNH5Z5lBIo],l,,Rgl$Y>oY5f6[YVS79]S!(rrF?>t^`CA0qKO$q>Ni,tfYqVf%%c):m`MY=ppUN;R$_7HF&H0B/HiGFW4qre8;b\2kb+U5rE0=g6iMD'OaSK!s]hE\^q1iuJ,u<8_kK6nH2#5pq"@#AD>KE3pfpQ'c%5@!:GV(T;V1R<Aem'&J>$=Uh`^>D2lFWC$?U>/'!_rjn,9S?UuI%WI0JB0goQ2gls5b0?F*L_00Z)_S$BOf6]+9"$-S<E6=.UX-M%LW3)-a08L*To7J%4e@lRU<HT?Y:V($,$W(ZX%nB3k[X1X8\qeQF?oRis(Ump!f+IaPHX-bQ-V$Wpdi3UX;`F)dX:Y((m#6-UC<PF%/Pr2s$sEGd,O#fs#j>EcZ2NU/Xln)P`VBAK`p/mBs/&CiSf7m1L!:P)+F9eIGZ_/23Wq]27-(_%.X"oYMf5rI"8^=)\:/2a*$u^i%)kbuP3>uJmTon\rHN)2rc,.qR=_DtKTmo"PXepdSC%Mk?HW4%dR!*Ag<\We%<AQ[jT.Q5S'2[#4ou7!&c-kW#'2(SD?Q%`tD4I('%DbioP(<1bnR<k8;6d:ug>+o6bR1>[/o+hsk1<kZ&a?Sb`\q0GMH@al<`fVV?5);Ym+c$d_bn0`]6JE0l#_`o^H"><$WHUZ#ORIut%9G[1YN`WdrG?B+sHMC9!OqWg49#qLCMJ2*#%d([Fo//7f0ERt'if*;%WoAt4pNuT"GCD7=D*J$VF*KnQJ7uqH0(jRI)pgsY\^EX"%4in0O`ED6M$bbPCQWTr-NgJGI7$aIRpZW.;Ei@'B`UG3%W(Y)]-(+dJ5oFd3couQUA5Pr9>09bWU3_-t\C+NW\>H2t^G6UJ&e?st%/4j;a`9OJ$>+2T#'=<g.25lY6>C!.$l$].o%ssgtl8@n,jtRDI64s(ODWg0sr_A!&cD6n@<1EZIq8=MM\_6V[Y&5T=A]bcghcRnn%j0]Sfb!M:I<V`uSM7I9Wh)Y8ARb4CUEu.&IJU"SQ_ipcuKc]IjfY6spPtjaq!$b!8`=]_RG3X$lDI/0GkX+d@ZE@T-\<IOL<d/@E%-`QFCgM+#tXb@s,l9DM\dhG=!CKAXl67''EYu)1=fh`S$)IK=frZ3i^Z%b/Y"8R`47E75uDLTB!`O($s@LkCQmiX)"$HXcdoTBTC%%UF\7@6$H:&p>$fjm)K6I+?lcg()`pEdbgVm%LSV.!%ZI:-3=.,h`!M8NJ=`PK.EY%_?bMZf0),Hp#_L;fNaPGpf/*T*aL?(Hbtg%#$X5Y/6'IF.Rg+CR<69d&\H9G`WLDsm.*f-lSPr_.c'?!SX-7+RbHrhBb4nW42;MG69Hfarp_06I5R44=-OmGC,ID99oWdGd=ZPN%@pMc>PR4<)AQ3OpOV*!8"5V-cLkM&WO]tq,T3qLi1bF4\fue$`bPFhmIoq(WI"mg4@NXGmZ$MAY)sBoZ'?$YI*XkdbFaOO,^'s[=%[1I)!aU0DLFBXK-n0,gp<R!fm2Wo2`?WhUd4g,2McAO;:B&>qK(7C,V.a$LUn1`$DCXk@**)_u58G[*ArX_GH#8;E+`V9Z.nN'p!%\Uj[rN>qHuFP'L;OBrsqg_$g[F<5@'QP*eE.d3]ZKP'*42?WYbF]Ja_N'Wc'YK42@1lQnQDm?hEg)H&n7=d=s/ciE*30`RVTo?R<%S;5#4fGhmrS59,J!f&o]#f'6()nX5X9ToNdEt,_NU3OoG5n2/.213\26[>^fb3Z_*#=IbHc4&fWP[GpnJHSUJE0_E,H9GSa3S-U8%^Oc;%HJ<A2Zotn<$1J'C=[M-9T\-I&m\;J$<OV_o\dn2(cJho$E@0#&<&`)\T![htQn8UV*QdW-Xg923cLaniL<.?I$'?;7mnG?U%Ict5#ZhSm[8jpEEY\;77S_3%UG-V__fIh\WLj$Gp(1QHTg12@M?3tW[Z1$?ge?ING@+:r)gJ1j_ck[Jg6r_]R1D=bY7TZ_Wn6N2q%\<5FgLL=_'?i7^``(i2@bsX[gYI)pR;79$*A1%"hTrFI4LMr/e!m:&</qqN1O\.<d*K<HKe9*"@2g<./n&cP)&fh6&d31<WjBU8P%("o"Db>L,/6&0f:%R%;8)Lssj:G1=UHi$s#:<BF\.DA8XfF'1f3q%P$]h_SUNPnT.Qcqj31!D8_a/>Us!f$.VAgI*/Y"(A<qM9Q&%-]`C-N5X"?XXMZS!+[Ze(L]'3mI`2n7'%G53M]]B;j`Be*W3F"_G';h:Z0]i;hBB=5@1cEK9@_8q3:(Q$<`4\gN@Y'3u$[qhgB4-%)TG)q"s0EQ(VquS(B#@DhkdA'D=_MG2"bAHmCXbWAXY\8FNs:!NR!0>jb0_m.ZF)`^"-2%5Z536$NBGKA]"sfgXoh>["\_ZL\.t/%5qrf]2"d*b:?-GfgGuM%?0%&\Aj!5][k>*J8p#fMXBgiQ:QQ[*:*/fF8CBmaYPl1\_l=p5HuKfD!N%&#PknWk'X7cYs.3m$/bJ]D%i\PF/Bgh.,f_61@]gHKlgP7^aouA(7hfdgAl,2W&oa@"?(a2GATYYt!=%M3P"42H_KBQ/&)Z.<\.MlUYq>@nl]DM4`eb7f>#Gd\!%2DNb"^G"JTm=Eg%]FC-X!9g$1lm(8iI*,9N2b<aR>No#dY^GUJig76]i2W\4O,E0O<c`!<T'1MO_J3YClm&d_bHQ%cM_lE#\6gLi%$_YI`^QE`\83]+>O4X4%E<fW;MA.rEI3D[tL(i+a>`O2"pq-!TVJ.8;DVd14^A?#+s#9C0gddpFhM%&<1qgQ8pVUI361jfE^:bbq%3Kf2GHoXWiA>FQ*9+uH<&Ap$2QY,A(HG'"Jp'tkXa>re9\+&ib'"((IPpt5/%rq8GJr/nCmJAp;n&Wa9-%q>T3p>aN)IX-5%G\!I%M3<B5!oR5Z?52Zn5&6T'i>nL!N>[`?^$Q8o:W]DX6HD@(&"u8J\ss<AQVXT(6=Xb6([UH8JUjWY'K[I`+sA%geKoRZll+gW*S550%gfKoU5#6Vtm+!C*YU9Oo!*Zu[iL2_T/O14i!nU21hf4^%a8n5;rG:Ss*59022+a<gZ`ih/e&7(b\@6L=i(6qbIA[1AoI(WhnQjG^%,l\8chlh?d.c.H@R64!g6tI4cP>_&BJ9kCW%Wmu_DoYH.RT6$2,er_$O;q&oK?T5e6:e`!CFP7\.ebA]<NM-g2baLnjF`D4G1mss%F4?[eWgk</4NI^^p8[(D:-B3r0r5Qs\*5aN$%!m[kWD&`1f):V*X?Ue:0p5h.bH/)h7Si6/+7LT@kV49PM^^uqPaucdl]!*<WhbU%agHcmK3C#&Ys:e+[obW`3g\P^r3V+<E4lop/?`0!F53D:q;aOWHrStXkGuXIfUZT@DdfBi.<26ApVB`l0[ms?+p%-YmgNYQ]u)MP%BsC7FhtITq8e[()&5_1:qhjMO4L%a?gWMZ:JL3`d#1CRdbeVI6,9`_hF$70/I"(IL>iRid`G00,P,TU1%nc4)QP6X!$;qtZj3G`/%[4!2s&Ea=d,cLO#\7QJ4+5bC%a=BZg6BD%un)C3F#bdDVd\_d#QdA!R,kR*9?Y+Wnq`D=hL/:NN*c):BR>QelViWs%?"AWrX+l'\%,`%Rp:WXk`_B@p:KXXBLT]9:mmg*a:9.]ndFWZbq?003RmRu'H\[@8r7dh6r(7n8-f>QbY#/Q@rPC+Rk$)Fi&r=_3=#NV4F>oD"Q%MoQg)iOe524_4U,1S(97A<hOu96c4_cr!aZ0A3NIABnYKrrY&UatVGs_41n2^ucm%F8^"t*'G0`:-`+Nq^I1e#47j!)JaagPdgD8%2>!HBoc9`HJXn9;j'%3@'\XMd->lb'YC_=aI4[+A&_d]TC>J:*P:U%i8$O:/pt3XEjfV/+drL,Z'7kC16?90\ZHN6`F%orH"#68$%-#KSKcBipJfRht";Smro34oh@O$gA0m;8'Jik`+3%t?JB\W97X7kr%^4]fLW%DBHN*l+c7@opF*3a0MXKW$kf#[+\TNU<i&"n]hO%:ZD!VQ_5Zid^XETNSrnu=_UakhE+Y#X$nbhI9eN55GjU;D5Y/M-34356n;MRU;!IU'J"X]&<W&1-P=dd;0=s^2@`_h#4LD6qJ</m%'O5L<I8(\4H>s>d"Cc/[97/FMVMnoG$b8CWYqe>&F4W^++*]iL]?5dc$4?pHE)i2VfV3#bi_!9QiAkQl9-a]Dj!+i_3T\QO:>%HP%bjbBq[%4VhbZ'E2f0-mBWpS-$g+I-nZ^URs-1,'Rr8X.$J,)=D*,iUkZa]u2O8&H=DH[N`\#TGq74jI-O?'=HHolOPP?c]e!tJif%3ab$\8@"_VI@.#UhEn_L+b>!0jLdL8Xr:>-^^CHYh"VEbd+/q8]%u40dGD]2Et8TE+0XM2L&@M`&f>LlgL5X,VKkQ=_*\W%6N$7R%2kA7p!Go@NlbflP#V5+,`7k\4%gQtbN@Q-.IcVe@M!&dC:/OYKQ*57#7n`eBc1Vjii.6!4,,DY]3kOSeJb(*k&PiZBNAcfI<`1A_%UE,kJ@cMN-E2C&k>4$NU-P5[M=(+5]<e>6bM=K.fFl$Ipa0+M-IXJ&U4]0Z>4t$JI6kMDn>Y+Z".92*t'r9IpJgGdn#a?<oGW(<7%L]B=]^B$_U*SPXkN`s$>`Fu2Q9ZA3PM&Gq$e8iFh;%l3L>*=V/RBDs_UDB_ocRn*Zp#q7$>rHr*Q9V-/"K]ZC^%'%qE4.bE``X[R%XFD.Ya3/G@osJ]`<H=?S,[Wf.nei:-c]DKXq$(/_Ng:tuL+$PnX(p3i`9#jk(-$%EHi^e=48%\eNMcaj9K,d)f3^paL+(GU3cb[W%rA'a@&8e#MK60.?P4)'YfWEYL&+(:.:JX`C!&C%a[+3C0Dbu(/nsmLUaYW]C;@k+`'CB1IL>l)omM;i7,k->t50HLD^hJ5IH;CYL%SE8a;"JBc:lF'fBR-M<?V;ej&)NloWA8W'#PTd<`UDDX:d`Yj2#`b"pZm??k,]+l'0od09>qSdROA*LoNXJK>Rgp0lKA$:#9$QB&%f+Tt\+Gf/1=&pbD,s!UT=+.Dl90@e,9qOE;+'tWe$N>UdOnts5UgIo;Fc)g7=$4Cn@Ap<9e$>=F+%]:!VbM-Jl-`$R!/&Gi30n0#%<B5,>#e</P'i$_W8"Mcp;,CC"3.q<`6$a@'2r<9#S2.o33bQSiMbUCGdqeMj9d4-N&10ha#j<,.<Do5&;p[M@SJdLO$4":GD0qk;%6_(#`kr`:V.`$Ec&i"/Zm2qj[.S#5ir<nESpu?Ksha2f@Nu]gg&@_oiEN;nA>Q+Ln6nL`5;N[(HcOuXs];FfS!T89jr7:,\FG6o,%18*kc,0HeMR.B>@p8qL]&>r/GUP_c\iY?C9Yu]:*]6p]^bd,pZeBN#SUeWD;*=ek9UVdih*pF_DL23_D+BJUKK"T8sKQ]iI4CWo`%_F(OJ@1k1&aFlR9S\VK<D7f_/?:ZgXC*u\+\JUnX9862EZr/?i?D)#[I6cTQm2kiS"+t-ImKGU@Br[A**Lt"%3@+Ifd!hKO6NUM5%P8hg>=Zb_([T)KPlOj/l6mLX$ol4.Or]1$BASKFpfmP#0_-:#o(pP7[UbrsDbVtN9[(&,SN\&NL<s_-hQR#DPAR`qO8R>*`.BSEU%_mJ5[D']iQ(.&ru;p+WR>oA^$Q'*[5S*+4Z*6mWT+pT2Y]/C+@IW2cj`XVY.C$<OpbHVYe4Tj1G"/>ATQ-_LHG0GC@;J9MBX^ka[%`u08pHI_4n&<:KmUijK3^Fmc1';.fdZ#.EMFWe8Z+RQJd@SH<HJo;pR3:!A$lS!m#L.^B9W5-5MP:hg6D5S(jqBSjW)Mc=\,3!cd%V>LHg-c*)E#*=1'LoPsS6IR%qEq:H1TnsB2;EX)MUBnhL5I0t-,oDp>n&EmO3P*<]ULgq-B@JsR4`\VimBmd<\gnrbS5Eb.F]-?Z%Vr;p6%+lXZ<Pej+r'Q%3h:'d(5TT\IHRMWD\;%MOb"L6QKLGmPMrM2k+ng<uaI)j^NDpBXj:EJX;@/T@D3u,l6=)!j4>&e"S#HSs%c+BqXJR!'2G)Eb&P-lY(VnaQ\Li94)$$,YM46d!CaA:H+O2nh7f%a4NDQ%U#[oL7R>8=G6Com1HngEh+_PR4B[7XqL&orp+:+Ed\%jd><Ko?C6$I]iZ%L`<Duj4rslG?B8r7P.]M=Qq$TP'i;oE_<m)2d)-f.<TWsoh_a(d3^+n5%0VY]X1M;AAa\pWf<uq\\_Gc&DVCS%N%"+5\AX_:[BBD0]TFglis"Gk*+E8EVfJ6*r0:pEKj29-]s<*KoA95uk8!Z7=_%:2r32l8PPKh++AAp2*i%7:Z%NX&1,;kkD(Ol>%_$?'bc6phJ&#JW9ZU@\LRtM/[EE@>$=WV,!Oit8PF>nJakhW?pS`Qq`ZeYbmZ^c7].Z?6ULBDF=AOpY#<"4iMe<X=bM'=gLKk?m=%#=T/FZPA"r6`jcIiZ+]s/WWGXBs28<9@2g8IUGa(;hiQ*AP7N#B*oBGi$mUHZG_%>WIMnFj)H#A"%9KaYb?3lks]4*HN_QAEsl0k%(oL3-6_o_qT@?EZ1Tk<QAL1!c:`5F,8ILa,Rk@nmOH(l)DG+=J)q2T99rFG7D'+P8@CN1hW^99%QdL\X2EI[gBrQ/k;p2Cg3eLOL%`p@e"EIk](/VC/\Q\Mne]<ZUbXCXYWU0XI,/]06n1;^IpR%)@(!oP-s6frN]n0Kq8YcK/gRa_ImIZ^(Lisq@PGX8=^\FF%D%UCnU%'X"0KZse)eDU-5`'*+0n-pr\S&ge-WG%-699BfRiB]e.@6LKPA'YS_n@T85,f1-stM(fY&&W5SVYpMsdEKbk7R&jr"8_&i,,t'i3%nL.#/IWj"a:-i^!672YgZ9q5SWpQ40VLZNfToI'lBEutP8`-9:QTZ4dFmHXV\TTN^Bkod4b1S5+k+6U(l9<Mf1ks-COI1&MQagoV%mBF9PWNDt<8qnZ-GK8!bLdDj<-H8e.JW&+A;TR"ZPVU')mo*aa$c1POmCjoLEM]Ar1C7)%"SQC:5^u-e/4=2nOaOuGWI*ViF!5Aj%[EYqk9YeZ,2AqFZpMGWZCs2bnPctE+=d(43*[9iF/la"/=PA\V'<,D<:qY!*OiaFl$dR5EIRV\D-Uq;s.N1eI@=p^bVc4k^OJ.7n%T0cCQCO3N)fh.fdE&i.-_HU88E,ELWe)l[rKImg+802=+)"5r]5h;UrB[93'_2WD80q">'O6,DX=TfW6mp'8Bg6Qr1U%E1;(3I!C%C)EHqmBQ2%:"D$R0h0KXBUa"Q[NfRX9RYX&V?`"nV#n8Pc?pZEFq(f3aDMX6Au<c8mRc,=jRt_P+_H$VMr+&cj*\B1E3m`90\f!;%c\4JJOP=C+glR:!2Dt:cZ%r.J'/Ll?a:h$e9<*giRFIgRD%]_<lm00%rR&.m,X_jD!GAC3oVS(Wfl#2B2.aR;Whq"$h2\;f-&atU%R[d11>iMUojZK^i+E^eXL+WN^qB*pi,h8l1VaL_pVAG+o"8;e$7]GPQ&>q1P,P(\QUU4#I0Tadua68@O2:5QjRWFNb,)T^!7(6k2%Gt^q4^`A2YP[(5DT9V9VgQPN^-[Fu[FfHj3''5.Lr]0+Gn=#kG4Z%.gV\A/SGJ\3!Sqc\'3gtQRS)cN,P+!4i<YGp:C8+#/857%e%E1nMteAP3o@B,cPqi3]X9MHKaHo7cJi\$U(E)8];1g<%"XFlo\oAG[A$GVqmiNQ3K&[tYt:>7Z3Y#]VlW1l7p;_UpCb_R^*),itD%m(PX)+HE&%0^=KB()rh.M4h0F/4UFDoV>CD1duEV38i2T%Xjc#\(P-W8LTI+2\1HgMISS>eJ,tf6;bsoW_$]u9>L0fFDk"fR@ZBC%Lmsulc5_+EbJ!a0o$kZjL92b-E`BZ>A?+X.^J1YaUW*n/BSn$k0%CYUF/%"@/Sg5pKiWG-IU1"!C.aPnTUL.@Rc::))R00"-FIQF%UP<2/,($tYCd?V.(9sGLSV4!n%O@:7g2"8Dk/C3(ZA9B!Gk"%a`JjSnGKfcUW6)Ec@7N,I/:o9K"BASENE2V7MPHS;+1`ZIZl6HJ%.g?c8+XVg7q1=_];\hk2NDc%\dIj2C<Ye""ijr$i0@is\2<9R-M])-T>]-OL34etqI9*a0AlUR)cBs2<RMetrL1"bp\&V.<X\O"-%bl+;CQ,QU;?(8,ZI+'o`&Vt:>4ulnHLU-\!^$i50En?Tb28#7n1J]="FL6?)RI>1+Vip%MR\jT/bMhTYq_%D^H#]M-G<(iT8,\U\%E`)%e2!:^J*ulSn3cseCpMq6s6diZ7GTo.AW=eSFhFR&kZ?5L<'#(N-W<4qk1'_DJ(CnY3M@N>,Xm=4Wj"`DLUusL7Um9&6[n=sa%L8[bkBs%FPT-J5%;1&lFF<pD@=;$m:\m2M?3[8j#C$.`64_H005!`g<8MN&=M3qgYg&,4<!Bk:#-J?r7b8aqjRk&P"Z!44,L5R[L%H\8mb1ZBmAA*1pmR`q$Gc!;t-#uN`]k0!n`G3G`.b33+*15EJB][VnNl<JAuP5-jfm(1Z6068E-VYW%o3'b%fUa)r^fC3<3'Mcgf%=`BH#5tC(d1WB!*0l*]=Vi+mF8Md1hH`s+%JqbjJU$sjJ9mM:/r'Q/N97>TCq-iF9Z.X,U?hqVJJC&djm$9A1*)Z#B2C$oO*Z(GU%1#C:9\&gZ4El?Ah.i/(FHf9F[43Uo'hnERIMp.GJbd_\G?.(sYM=0I\I5tIZS?g4sDXLsiNfS(46($#S?Z7ki)i'K#DJdNl7a/FO%bRFBIac-75cTMCsPdqBdFDe4-Huptt!M5=L6IkL*H:=u>7VgNi[$+JF[mmBuHNCfq!O;[tl(g>IPrS"B3PV%*:$IHrNLK_giXbI8%3*ZLF^',]SY,bielSZ`EU-0X1(sTo]8fTag'FuI3feKhsUF*>DUUfk'"B";I#eJ:-ben/W.&K;PpT\9nQ$ha9Lb!u3hJPr[;mh+a%B<la<2t3F+4B5qT]`MhCNt'UKkd3=MSR*7pV\+9g%\cBe6Y>danSi@b]'FcN5R)8V-[YfB%e'm%#Y9KG*(a&s`cCVe:_J_*GS,s*%6r/)A?M>aAKt"msa*8=Immm'4n'EWW'"C,uLI@-Ra5!#%U,d!&GijloiVJ]GKG;VB%aBI":&rs9h2nPRGRKr`j>C*G^EeX0NhpFh%&U"rMo1dSb-5*mk]Xn"fkatq)f_c0i?.Pq<P'^Nmj*qFNj6%X#Ih+k3)O$gX>F/d7klMuQN%!&5kN_9*D?1AK?WAA1MYKAG.`q<G%Tdc""5^8Ek@k=;R*7DAo94(KV)P5#cD5S^4&GZ[sgc5,oWJ.S`g!W"95pkZ(RQp6&^>AH0H9pb#EoKiPotOo\"P\)[E^)E!H06WC%7F&Fh:k;(`,I^.m/F&#)hpa3j$cF$bf=jmcr,'289AapXQNg3558oeq(j@tYpGTho4Kj6^8[N=G+S[^<J8l4b;03Mifeb\I"dJ0B%qN8GH(3$B1V-UW",6NWMZ9T\LdCX"#fI&,1kY=09nA&4`F6QU"IYFNn#s=K<`?n\knJL]N.RG;cBqHkp\-T"ac+F:kq5/?Q@[n#H%T_<0q3VX]*fN4'.hc5nKS;,&Wk@<"8+O4li<2f7(aLj&S`$jqj%E]W(OUfUth0UGngG/?ggJQQrcpM]4#nqA?pbls68R;h9)0QRr%5\@Ml2VA*?M2A.\iulO7NcRHFki3op&CsP&Rt7XLc[Y(J9gXs.e'iS\2M!qhiC(GarTImW&U4=/(V*F("A7l&#m=Z^4D.pJL%dZ<%DeN7=RSpqs7NY(&r!Wm2+B$LP)^#3)W/cjN)L.2>%*JHnA\_IfIUDekh$K-/o&Kk,Cf?fq#fNZ3>#5soV.iJHeH>l3Z7DQ-B!PAY%*W1B1nl/@[^nnIs$ErkhquR0#3pi*mW=Y-'(#lB&fida1D-W_jquQ@;I'2k`/+]`?a=,%_%-hYM97=S_`iK!d=+`I57"n@si/*e_%7;[&Klnk'L+CZC3A-J?[@'*/,I%?8'$V0YH-d&]/>0r>B<W6tKI[,`K7kH(?+Kn!U]"k2j&$QJ>k45\(-JGC:B3rhVR>nm_%dVSs%Z!D0H9ggQ6>1+$KG]_0nb>P=d8_:J:lY6#KnIX7MSZNohPOQpM!_9`a.?8HP7Gs+fkOgS($a_)f^4T!mOgs([r;k8%Tk[(*hZWoL%Y&/Ui"A'"hOMK=%&e@'uf5hNq>V&Soco>XlC1NriM:3V8'FRJL?@,^?,nBlSZEhV=6dho<Y,["DRVA2kTp]AaQnm6J'SB+i)Y_rU%^HeK\#+.DkMJ,$1qBkE27YoaOrrD8T,>rQ3*Y/LlqPg`I&ifR,T0T6A2Bsh+7+36A"16<j=m)+kYf).H1pTM]lFDr<hQP.ibR/\L%L0uHIT:,G`bLfN;)t-S,mRE!f+86Ynb.J61=RT@$#d+:S1>TE*^XWdOI3!e;oZn*SiS!u30WG)^)#8q@;uWONG?EK"\EPGdN7:NO%HI[)o.##Ue+?+V9%7dV6h&;P46V.`j9V%UUe#!_SXo]#HbFFo>0r%tnQEr1/KBSW4(ece))Ij-$C,VcGVNj;9lGoIj<iM,.!`bfH%*(UoH`t&33F^.niMKicNInPYIJjkralCdCBF\5K0Ubu0`F61P_JjN%(TIJ>rR;:U*B%"nU2V6l^#Hm2Z:X'l(I(=hEqkQi_g14Mh%8HP/N&4A=K>RaU8)%JR2#M#V9qMF72Bco0qqAu<_;,Nfe>L@1@b)A5;h2HY=mp:bIEAJ@/Y`J]/E!o#%5/i'J]/s@\S_:R'+7YP)%P3Y3S,+!13^L3DU;cH1:.11OI;,qb2?r?UhJT(<3Nj1f!DfU@BENj$4*$:!_J9X-9[4ImuGtUe+QD>ZM"qM_ok2Ff^f?Z2G%N4b$%+4Z45b33%`YJoLA6phnHOub06+6GYm%Rc?jUqO3?S1bo`,^<t?3.LnH'F3Q1Ls3aT\DE,<"N'ag7F8\PUcqGg.=ueR&l,@GafH%)%Sk@?W#Dh#NoIA.`hF7aEQN8[$D>%-KD];e?CT&1Wfa17r]B[,F3MhnI[9lBt?&u#@V@njh,eT#SM\rFY`b4.'LkWWa;B<j-O9]Rf%ZI`PZnWncF7Z;E>W&;jbNQpKp[-1(M`%[12;"RlYo)e/uh.)2HIZ"+<i0.i[nUZbr&>nYO>ZDk#VqLl=K#Hbr\(b]<.&//=<l=]m%NER:=*6(Ig$-_*:V$W7?kXPj!JShPY`\#mV>t-5@6E1BKTTm[nc8]mQZi4UC,//8E72*sE,pG'LI-<3co6;:VFIa20)+Ud]cS(IV%-EZ9^lN!0<ZHSe1mhh.p=goe1g;`=5-;H>3fc(LAP1O/pMs\#bF$a.,)5Sr,fp<sM&";B^`9qAe-%$jX!n?3;\,]eS()NVR`*,ir%$;cd]?inhail=1TCZ?a+NEDC:f:d3SBs:6+O57TsZn0RT/TSULiGr=0j8fo/3.E<h.SL7ASTMr+P1AQ$b8O!Ic%pB0B@NAtN'UAC%l7iL"1uFg*6RsLl]p2VH\4K4A[b[+r!+H-NA6lW9N$mJBZcu&rc8r)IqWlcrSd11jZgfSe0m_"*(W8c0$2Fj;k_i-1/Ln=jaXsFA%Jk_t2ZkhAI>W@&&*IY-;J/,0kkCg76DRX#&^Q)(DH,U2W_W4!HQ(?1B.II:hk4Hq(`WIT1D4#4YX=bA%\!_V3LmMA.Cd`JFT!C<3%;*@ECDM4P;lkZZkmehUdV*@bf&&1.aI(=>Ah<tt2oO,K5%og@a#rg4C1"l(`7lS^4W7nr#Al7;h&O*c(!'aaCLmq3`(P^rIC3CJ<%*QE/K"L<8P8:'\Z8<2K[Y/52S.#eUY*PfV4f=JtHo%J7V8\g.!njlp98&6T0Y]\f?1==c9@gn'9D2j*n]M+5T.l+alc3tnKFFKr#%0b?2FGI]DgAQrGf@eIAn*\Y^u(RcMRBM@DrL)?0"O=4^Q81sSUbn+/&LpngW5G0Z$^`+ItEd/>p/N49A7K5FM?<=(KD/qPJdf?dL%@N?Wa5-@%ZJ>_W4'g5][=uKZTdF&fQW=ji1@CW8pe05P/-C/ks!7:d(k)bp<ZA#7=C_4n1eBl4Wij<N\(Zs4.&3WXIp=a::^3E#]%4!Vc@CZO1L4:P.C6\t3DkCKX$>S="T"/;;mo'1eKi7\'PJr9<UliI:76?F>qa2*9E[ic)/G#*^TCj(e)>8`3%[;\GXjn>h]dbq?d%7*icjHQ@(0MHKC(PuflWQ:d:/>-d7(`/#dclTo@f0l@K+f22qOi[m1RS/C:gPAABl)P5!mJ=._3WAmY!Cd'M6cIa2%6r*%JLh[EO%FL-Wj?U?EjXsucgmDc#l`(7'01AC.f.[?.k?)`_[g;qQ)85@6$Q,6*e!$+lRP,lm=()aVq7kV$g-V=[=QCsJtp!,O@fj"I3R:-gU%L05IPWCfTg]50kg6h>OCXfF#tE^"$u6']HU1=LEd>!GCYL_52)VZ!7-JCPc#Pf]-uE;g&0fbCi]oO9m7hM`#4J4?N]8G4?ddDa1K%?K<p]f%*bGE^;fH1[0%%3\8LB92Pq'2'tkjW7PKVeCob9Cns%#NS*0:*h$Vt.-r/-!mB7ZZIfAqbbsi3/d^mM[0mA#&*W#kJ_Wg`%-C2:['3s*b&oL0t$UCK<7:_@G8^W/c'n_rl;H?BD<.%1t'$Ye,.BSsE5[jhO3Tq#9m?Nb`er94F$$"N7WQ+i$i&mT$l["Q@2:^CH%hQ]G2\+-++_MQ_-%dqMqG3p-W(_86A$aJMm5$F395V0LSf67<S]?uPT[rm*$Wcm,6+5.@6&DQpHnHMUV)Rf=r6IoWBn-'0a'-D+b%#hT"`rK10FY3>:uelQWfF:HBMDA4lq2jaC$MQUXda>O1[-2r'F-4PR<.FD":C@^$;n]<He%XrDCVJbXRTGL/WjaG`"bQ744U3oA-%WM(*80UA'5;pC[98h,OGdotu\[-mGX,CIjEA>;TSQ-^>;g=b[%ED#RTNRR/XoZ&-@Ze&YkZ%djM:5cC.WL^3$?cFI-\V:L>T:sOL%j@V:mAVk<(1Dj8RMB4o`&C5dgj0N3g5kePTNSiU;JG9=$.V\P0H:-6>Ns$o]#(p$!Dd%XJL"DLB"X=glTPC[*l1:LrN&_*4'L&I<%@KVF+F%H0JQ&mHONq:LE;8tYj`qZI:H+]):W49F8mi%,Co7H1Bm4gtMdkn8Fc7gQd&%iF<P]/=79@[Vme4+_FQDWNaW26JP##J"$%W%rI/8Kr+"@an95j<fCl5XOPjEiMM*YhmU2jDR<k+0PjQ`a\C5nCTfCA]U19Krg2u&pon41]ZOSGoia$bGa61\k/?Z!pL*hM!jPk%<uj+e`jJd0)m75MA-p%aEBoab;2`OM[M)Qa.5=-P[$mr#mY!DSrR$OjL?Xt"#u0fST'DQ--L9+0JQS0IR5FS?9U]-P0r:EVA$&Zk%YM/l31_&69WMttCRnUrbU,Oqd8Hi$m?#Z/dCQcYdkACnf!TfT6#kNd;bW.+!$(Y03Q.DRhVPZa"jD(Pl@Z"j+A#cPkiju3')aMV7%LNYakdQ5G_DoLBFKIC?$:h0FPfK<J0lUBbIbqmpYlaB/TpTds+k+btT[E1<![+[,T_F(VBD[NH:n%c)]#4dmDHDKN-FFA`Y/TlEc%lGV%H&Cd^Ki;IWt_;Z,4J]?Ne.VM;*8%:Z)ohFiGVSc\dkaj.<?dir(GH;;1UN3n:!S5&rUXI;rNateW9e#8dT&-lud+Io)(8c8Q%R48sU<B[3"DG?B^5)K"YO?Iso/`_l%"=uI3bJ_[ra9DqEI84RGSJ/B"$XQWhGE9A`L/lE"0=fMBq(Zc&#&J$61fR1;/Tn,!]AfJo%R.Qh/kEC4@Z!lT<(?S5gBch.,.Nhb^CXb,ALcOj=MehI^gS[3ED<A7\GnmJ:AYAYqB5mroHV>E@n[j6_^L]BE[&#j8`;S%sLm,?>%C3to,#phZ#$,M;tN/M<#m&1nSYi!a3O;&N9ZS7D3WZC:`F,S*a3ST^*kCYi;GAXq!8U&,:UM>%).ec>6^mHd?S)tb^17FntVd$SQ%lCjViLg)9&A1$t\DR7TjQ[9U)0p$]c=q9)DL2=O]F]$/I@YBQ(7J:t3GJDok7@^cfmb'KU.,1Urb\Ya5l5/0OP,:rk/@rN-OB[AD%RYYH$g5LhUVgWZf;BjF-,>:r[jhcji!6?QJ=11gBT@ZRb]=qg_G'5r!%8(e]gdZ'hX:OWWrD'f#(GU9`/"t(Pg+fYV.5AH`BltQp%j,ireCGDto6bta[`E6p*3qJu`kLhc\oPQ#1[)]G6)MAA$\KAq,Ckp'=2T*t;kIKhk61=sFSd%"gh8jBjeeTiW02CZ/aIiD:o<^5%%9,]l]BlU3"MpNmE3bUFKB$@Q&;U"bi@KVF[F,6BI>0%Ita>mn/3-1'[BE-Ed4^Q.pfg8,h:@.Pn6uBS\k;F"[kUXk.K^nCQSD4fG%Cf/-'E+@/TRi?H`!h.N'b,Ct,[A^r^Bh>DLTS7Y`NE?:a6ch[^S/G?tBAQ3uVJgdk+BbXkdhGq[XL$P?P^%#8:1]YAW>9&NC<=!O%e>+6"l2<A,O4RgPg8Gqc.>cT-(Ocd-9Vfgr%i)cq2%L17ES5Sn!.eT42\&R#"Q4>]+H!1tKu,BEEe.l1Qp`c7?"R8iP$GE,87#m_%ZB*UHf9_Y.?(0'[jm'-3CN@sV=I]kh>d[0tXElr_Xdp5kX%'57e`RN:AubmI,cd?C5,W'0qqAO;Vb'!Q/5VZUPNVHg@iU<-3b5P=%CGBPc/VV+f0eO-!=r3WAn4^&-N'q>Uo?E3$Zn4[,)hQaW6=#D`V(^Yb8T"M_*?AUuUD>U3>&rac29oU)\&Y3%Fd*rN"8??3m^=&f%FhN30+MIW[e&Fm'>d;:mlLbF$lh75Gd;NVMFAlDrl"15J&f44JpG/&"dqc5`B;m1H<"*L[[;r0(!R`>q2]'GhBG+/MT86!17lG"5%)Mg0=;]*2#XK54&>eJs#`]3"d3;9-nkHIgiLQ\J*5*(mHYboko7WX].->o(KJgbP!2(W`g5ft(2Nn41`D33@$)a+YHdf^L`*Fe.3%Qna@F;MR:cQ;(If#*dla[`*bS(YpY6dq#[g62*-oEnY<.^1X_`9<mJuR(;FF3Y8trOS62QZ=?"r-N8X9p.U+/[2=,5G]OVPi2@f6%b5efFE"d(bOd'LFk`4;Rc#]c?'&[[)!L+&c:hR\mlfS<8DH%rRDcp-NfaY!$kRug:m@)WoM<dgrS_eLn4?kG1I20BDoF%6s`i^)'%/U#ko[5@)BE,(-0:a7n"a\H/A>.*,&QtMB2?^YP.jIO-!Fcn!=]RmAp-l^_,A/'Dt+DXeiho839NKItg?co!1G,Qdka&XHRAu6Ks%rQ0_61Ycb[N+.uSC8"fZ2(^@H,rYkEe/$f(H4IV(`h&6W7Zs[F`pS=;^!lBQq_[JIHgeA/+C!8/;Is,jA)&q6SGg@=SC\p1]T-1h%/H!I/oe+$dKhj7F(C\ICKd^QiKj<mZH5A%O-HWl-OPBEs#9;].^l?ROQL%nU]I`E@K<om;([o0%Y87Va%De=C$\^=ng!9CLXA,Oe%0G]u'>+"$i\mrL=GJT3)7IQMgkYLT5?be*FFiS2R+SEbula,.$>[^!VECPkmeu3`R5E4!qGG-eN<q7j[jRt\g/AgT42SZmE^Np]8%GBRNcK"T-hn7MrM:E9Kq,VlCMEq2k!;6;/*0B+c6UB]sijI2^g>O7;'`f=I@gg^"%2!M[`)Z?WQo*[N,juG,)*CrQ\&3K9e(gF)8%i1,qhbV`RprD+[1GT!i#mt/3Z]QtAJ04`N)QmcubbtR3`DIkc%Z"u=HTVdIPbr7T$df_L[4dAm.51QB>s.q$hEe5'lSka)'kTpaq%(ZN+<3t:jpRRI\r;OX5GP?;>"G:7_&SW5I99@Q;Z78(p3UW3,5j8Lf%O4R7HBNF9"Wf2l8)+_/oi@oAE4&8[](5i]K_dk92ai".;%aF<h+&&:R>Z1[W!-_*+l1l1m?-EpjMAoC22HZOsibr>!"Q]7Q3FfLr96-5EK3tli*H&AX#Z'.<p24KYQnVrib049Q/5'nk._7c\,%nkP0]"AZ.;(#Gk@:1/9OG*qF_`G0+7*1'iD]NjXL1gWgoH4<DnEi?K'UpW0pXJNiuQXn*EUY!QEH(:&jk'u<TdMg@=K>c\N+nX"8%$*i[uO%IVtWT'@_%3W5sOND1>`MC"$'S>14Z)tfU[>CL\O8DMTjJ#u#NY]<o;_3(ZACcj1P"s3Y"Uh6ZJCGg!XOgL2o>Om*]JF;m%]gf3ss*9PEYJ^(KE-`fb-8%5-%D&'9GqhOs8u6uN,_KBg9?X";%.`lg)FM&(KE9lgf?f$hKqM*0\/(bG3rZn<!1I48Imb];.^'G!%KJL>4h"DH)T_K0)ULh>Niu+8K$[$?i]uDjK7ii8e+I?!b*&UldJS<:P&NE)M#1H.%+F7UTGMFZfelY"jI7B1%f]_uoGTNfMJ-LCG%R0"9<nJe$D44/6_1n_H:qoKLES>4CT!Z9!IL->\.IQCBs2H+*K:t`lE.>PBb^dAalmbn`e2VIEn%#%lF$+A7PkRi).=G&#5YlpdJ%o9SJ"bTl0o=kEd'g42:9'sXog-,ppC.5B2jE?6(<2?lsPoQV7_kKjDOT"O.2#.r1:#]6f(n7qJo?SBRk>Y7.0]=]*O$uKBNcD(E9%3G8Eq;Am._AMn/BJ^fDX-#bmrCk5M'JG/-q,sb1UNi#u6E7<O'<!'[GVt)2%Zs*/a,IE"Vf/b_99;arQR4em+HY(g*$"GE@#c=5h%UmFQS"7paX/($)<?1A^Q;UOM8hDN;QVu<9'BT.4k2IVR>#GBH.NbE?W'='47IuG>/ncI*<a%)XqggSSW0"t&N[kEijs7+g>>Ni+P%PsnY#6u.^IjbC^snkK%1U6jWpE]II]f8/&?)\uUWmD6a8.I?FGQ"kr@N:L#eZ/g?,-g"!d\.:>eR1jr]Vd>9ok*q`;k(V</k*s"Q%_;-kn6sb-4.t5D!9AMuZ>WY)[I_7ITS9]:]:9p)M_i@4eS351oiHgYl?J>*tB\k:+KtfF!9!,r)r)*8!A=HDA<.4qgW7n<C=%'4(%9&M=O+iE&Kl'](/GtH?+RrU[KR9,8soZg]9gL;hZCO@<\ab%21W#55D9gpo%)DB>oOk^R<cC^QKj*FQ5mB*q"#6*7;.1lL44A%K'%akaY(?0;g.k\:nJS*iP2`5)!]kEn-gL_o6_6ln#)ka/tBO1Z"#/K/Z%*("ee>ilj:2Fhjrgfofjk(_LjmfK>39n*4nrjFV$^(N(m%b@Al>98s<Pns_Yf+9'X"n?C,PfJTV/\"VQ5I\B^L9dSh!%Y(4Tr>:"99im[JfIZCqCS5Ss[DB?2:'Ig+4-fM$qI)qf$W1)[EPgE8%?5XKt9r##h/"Fe-4?kDN\rWYbjbDEGmSYk^%GuP;,X$W[?C2SO*fVE2n52^Rp>.eRf7Kp6.PJD?J[#DAGD]<Q1gm.YW)4tl&E2fi%T9J$eX!P.4kI`@7)W81_$LF%f&a6u>J.,j6]`p7.gMec*'kF'QBl&5:Lr[]c4?XlA7<9l)Ajg9BpUMF0/+t*s0`=uG].e^WHLsY6%bpIdWSRr\qA>^'/P2&:Z0@f[A[hHPu3[ZV19,AXV'&lM%CU!S3P/0DY@6a,+\-1418**@81"1F[bg[]fhlZqP]l>G=#TbGr_.1kN%Sk%c01+mYlMV#3(B](\.U>(_W8'[&@`0G`W'0/I4aJNrCG`<Mg8$p*8YF==,AWQn1#rb'YSWqG+.K4SV_]A=@q.X_D/M/%+9#U+6%:[`=,jQ$'*k;Trf4$LH>Ado%2Xf>G*=./+-mH`(cce.S%Xu"=/ah@gO5@<1%!W2PBbKlj/HMWLe='q&%a&%3]lSn2(jU^bP:HSG4%@U-V_\d=c"r7s;h4k&n`o(9-CY$%S4O?u:@T)=<YN,3`5U>K"2GC-LZEtpqI+e8ghNCss*>k9sWp#qhq%PElbLP,e;Ot.$VKCstD%j)ke14iM(OquhgD10RjJWaLo8Daf>8KN'Zm9!O%k8nb38#tJ?IpYt]h6_`st8GDgm]/^!X??0hm!&Zpe&=Q"?iE!'paUj&[;\I@Z%ZlljA8U`Z2cGb=h6UGgDNDRbuMlO>4)sRuT<Ao&rV289"IrfA``5Q:Bmh,KK6\OXG(k17+?Ve)8W6Vd954L(X`1hF4(5#B*3u^T8%?Z6^MrB]5%:%PkiK\&:7S@^&i4F`6[L$(R]]k2jFLt>#pT-2?/lnC(K288N>LEt&8R7$js2CpWg+(=jOOLq&Q0?Q!1*,^O^`t%$n%Ln:e11uTXEJRL.!S\7NdReWqG4JCo1^#S`/GV3kbGb5C@2X%O<15?8/9qjqGJ4+<FkeATN+P8+tRh)YB!!rUK8.N=sS*,SuY+R#,%B99c5X>7HO<ul>G$Ag`HdQ8J[Jp39%DUO1XnXdR`Z0Q,r4='Fq+Ub5>&P;278:$D(qctLFSHARuBn)o%e.)&c4"n[H3E;>JS?pAs%!c:bt,ZYe:EtV3W*0G2-J*(_b?l+`)#=Q9BmuT(c[\;+B$el4R3gZL<g;VS.d2N1P"-Vq#b+/FI=d123h0"1iY177^l6lush8mX@%ielI#fk?6a$kUM?;L?&-^5j399Ct(!--^Le@tSU6j3+=+aG%LJ*ClWYR+PM8V.UDm$]itUP!4fE+"j/o82AC3QZH2c91!DC8P>hu%"ffu9,1jG0mJ^sW7!NK+23F@7GYfXE_fgRLA.,Y6/7r4rD.N#pSA*;dO?6%TG:T`4[kheID0\U/Di7)em@2Ehq03oc)04Dr01pqu%'9[KDG5(Ds!:GtaE5[PkmMMP%*FcSSV`.G"Gm"$>ZftEM3?"hHVlG:I:257T7J.Y5L=;#'g4Z?.5=&++^8Z$YNAg<0i<]+,Sf,nS%!ULFt&I\>XJZ=HjX.%7Ai[A0V<"6*Q!b2i[RPT.3@O+0!:_,s9BCd>;f>`GZ"!1elOaDg*J)sp.&fmSZT)aMa<,p7CUXSp?Ce4]3%T>6We<le[-3;`dk9oUD?3@&eM<mgaD#^9$O=7Yhf>+Te'j-pfj(bkakmOpC+fu"G>8tVj8N2nT?e[BX5A,qAo(he:@Bs%:I!J5;h%2a$,>cD`H&QSrVDVii8H&.g=qVclb#R4(7pGVe&bT>2:e^6(V(#]*#Cr&AE2;!n0ePWM`:=BPUkp"R!A_>6e@2l?0[oj\P6+nOc[%1-V^!j5cWqOBE:EZ?Vu99HWq>BN^E9RfPPl&_[<0b=<$QG)K(am3'Y/B/04*QB@+ikk/Hm!G!nY4[[l>XJ:sMiFLt(c7FAI2!rZr%hWuk#5@&Vr1eg"N%SV=<?tfimZFEQFfZ(1dQ=LLcJ'*Gl"_XI/9hEh*O)l)YZ<`uN19L3I3[X>/JCtXQ\]utYT5t--@4atQRjs2B%Cc[S38mM?t"t60ZGd)3BH3'6eY_9#ge6\C\`57hN:g=V]mphnEYS0L1a=#>O[=b=H,6;>jB&uMa6"MZLVX%XRJ>(\*ZE$cMe.?,*%0$\rWVoQpVM_':hMH;hH:'n-!cHOn4(J*_)\+Mm4NOk-&lt^0P[okq;_C_8tfTO-\#'(b,/0Vh)dB3j-Qg*O.a)2RGg=`)IfhGKb%XU/AXQ41k[mTb[q!"Z5O/ch4rTOi/h)`9'D<U,YCPRlDVrO[-h^*h7$L&Ob7ik*Y74>q-o0>#\g4f:l-1^#.DgiWbr85RcooOhGf%3V1Sl!9`E=FVqL/@ePjhJ'-u&"DKekWqI/?(CDA;F&SJ3Cet8MDJWZhaWXljUt+-IZ;,qEb>YJeJ*fNmf)O-600*UoWOi2(UaL,1%eEq[uQ0CgE_k)\4fV<6+nTO9VOZ;%c%R5l+G:s&.dhs:#P]c(L&uZo0JiHl*puPQkmnES$#Ors?K(_Q5"+ZC'MJ8!Ub:6&B.kSbJ%FsWr!DD<<MfkE[8o92kd?YclKVK[ujm+q4u0ju]?%T0J[aq+HdV"Tns$O0!`PF-fMN*VoeK.fK;<(rh>5hnjB";[SmY?7lj6hUDa%@P7ID"oSO?;=rKThI>XNPI?k<_F-dEDt\8J(.f8c-$`rB;ICC2&-@:'giFV5(Jl[&,IGo9aCN7HSbiSHO4NnUF9*%MMg(X-YE2>5%'oLHJFD*^3+`=Vh[6"#?_^;'JnFPi"\5$UR<0jO6,1li)=#4ZpDlU*RH#O[]j\hs$H:=iupo%9IQB)Y^nDHeF%'ii$J!+c3B9<Eb%GT9o<fmmV^L"Y:621Yq_OTAV8d9DQ^G7$A=`VkZn9cO.$ff6!Hj?QJZ7)b7dbWmEaPc,a"Vn95Q]$&iZLgU'F<1=OL\.FbOT4=9$%@q?G-")%d@O%CCI-?ID,MB++mPmtSKqcR0;-t&Oq0hdS@!Qa'6%*0B$i!-t1+GqPP`]#YMjlm+5UVB`=pB&6oBH/@NNu*$fK5Z:E%<4mVhJa]&09D^@e1F]uJVL4Nr>Pq+cf/1K(1+romTYR'ZBf`s.`g^&nlPIZW<q9eNXQc113)<AkHoa1Oi%'u)Zdb7aR&Pl:gKTV&%PWf_nGM'<_B?X0-,ZC_g4rN;)5W7^b.Tjp.IDoC9jWmd#cAbQaOt;Of?-tlF]U7P@VIbm0T!n!C.`<-6*?8_4W[\9X'A4fRMR6Ge%`gjH0b2e.f4[OG;4qSq/i\gfJkU,gT\9Y;!iA^inb11PWH#dciZS1AdiZ5]qF5*iqBGN[IIDV8qN5\VZ_E1/pQqooSo)-+'J7D;6%c7(=,YU$o!e3]V"!C2[^EU4k%aHqnD8TE^[a^uD#iNEPQ8eK1E]Wu)tM.^,[;(46l"Pme/GBcNfO`p8\,6+@]"-G\P8[B^O,&3o#%8KeBZH:[q&A/ub]=Xl2Ibd4*X-ef&Z<%YYiS(^\Q[FC@a%7aA^`YIa\B:U2-*?E"BgFF^>A[\!hT7sUG=-koq5`<qfE*5^U7ENLd%V5>_O;Nk?Y^f\+$\,5IE[<=I'M1IU'osW_G;81dG)4HH<Z&ak&pdUJN:Wr#qNptcPb'L:@ds<LSY`e!%A?6Sk%T@EoK=,QNe:iR&%:SeO7Q"L9ij[dg5\pGudou7jN*m!.1'dtQtgZp>;goOc7L<,U]'28.o:J%csB-89t`71U\h((B7<KC\M*k+]:DL^%J/f:SWmk2B6%S6fZ],t&Pt;5pAU6;#jM8HmJ"i.id_ib\bV;HHO$+T&D9Y/U]#Waf@iP"]*l+C73eBM70A^t@3eLXA[b.c)QuG5G&5_2uRj^H5,3%&PSV!%a#_rG9q,"m)^<3P"m'ts"K^'Fr=,j?fWD/U0lEn7kiN;1u$J_Ui.%i5[)q<9egq.<>bh,*]P__BqCG=g<(*"is&AgTZlnY%dD:"BFCQiM(+6L(+RUq)`\=?i]?#Mm>3C9S+.?dsAf3Y`JBc(On"mN2;baP2?eS^;<%TTi6$YdjoOj-33n5K#.IG4WL.=q9Re4KX%<>;Xr<D1$#gF[E\99;ZC%X6I"Q<rhG0d4ff,:@IUco2pPB>(_n8M)\d_D+t/E)F#^ni\5^]D:I3#qREmI<ga\F>@%gY[%2YQ=C1D%.Csj+7$N(6U3%&@.UMV7`jl'a#Di,.k;^9Nb/L12O=-5VeI12F"5/'#c'Yu<2.8ia@H-Z?*RKGQTLq1t)=*Oa[dO)eRt!#a`^ZA*%)n+A9)l/hO5VOq@ZuPI:h$NW.3T`H.RY">d?KS+^'g+.HI^?HFZ#_c_s$[^RVpqWFab=E)r?81WB91j+'Xc-tbFA/TV2DdFVY4\[%&9fDrSZtmFaLfVc,u38_H/jaHcrA951W^S.!E2neR$oL'CT)/&`FG35PM;1u]rq6&U8j"6.X*;iD]dFL#.AQflZ"Q-AAoH?SYk=i%IGXs0`pRh&Su+X/dVeE(1<b)IHR8m\Yf#E=bf(">7c!u#!E38(hdPrp"%L>TdS<P4"nUgj#tCNZ>g6sMmX2Ee4e[-0l3^=o&&"NT%8#[`gF/h#@Y'i1D5TQkA_#`@?g87#6$\Z:3a6uQ<Z/nFNK%Xboa^&hH1a5HBE3IokemHF)4,Ju(%r-nTM%Aq,iAP..m&Zg#CJ[=9%JF6Y#\60Grkd^,Xfh5&Gc"MsU#Zj(gT\bK-YdmaV;`i5=0c'ou=*DFn+',t5nU`c&YH-Ulq>,k!oD2/taj!cXI+-'-5BbKZG8G45%HcSVn"$BZH>WaCFK8Q].+9'q$Yj$snHs%0Z[np'h`!6dapNd(ka8LR!l67V>G>L*MgojQ06#eeZ3Do4;>s/Ae_],QOeK60u#+FGS%m\*4XSpq9Y/VGE";XPY;d`:sXh#Lf%XJ#mh8B=cLn[''-%VBeURUbCgU*V-6*T)V26hMj7C=;J^N8l$3bs^`9#q%jq3kYUcmNB'?%gmYd+ikn\a=5u65+_KoZ9i8Ra`:p)k?E1PiU:kH8\UibXh70'B_LqNF#=Ir@pi1]@<4C0.5f%O([_7CS_d+h>b:m16_Cai/j$T*?%M'2gXq=^GEVmce`?H>.jnH9srSYU`_$Y4aP_c"0>1?je8@JN[Dac3$ina;>:Eoai:4]Y&F3a"X+-atSbkZmT2S>:tU^lQe(i.7@"%Ght#Zn2J\CUPc5/68[.b"Ud@0HfL@]oI5)"a&1]'/)raS'.RWu1C%qS[];qS`cjYqMfCL@g.r)npcl$R<+/EU_BGOB<ne#/e6O96%ZJ9_b=!0WgT+W!ooe&D)3dF]9>US>f7l+`jO9&2daied4,Fc'2NZR!g-_t!Yd*qp7YE(ibZY6rOE8:Ed:nMu30mJDhS!eG_'r4MV%6Xo))#<V"LcKMX#EOID]l3a[Ge\Cc8Jo)3r_$BG.[b0e;^%H&'TkK:AnJ_ut&FOuV3ILCCE!)pII88T`5,W9@\(eAYFV!h?4la=8%GjZ#g@@j1?SfhW4_AR1OMH4G$3Yba_Q7q*TRaY&QVu@ABFr[C=n0mNTrA9d!o]K%@^4bgD3Z3)^.3R7CZ)U<]*7kdXUTtsOS#>0H%^DYuq0<tDQ5AVilhLU,=MV1r1b'_idJ>-q!9H'L91UjI11V7Omk2N+alXeR#5C"#bbTNbJmF[&-Q<m.N_-;ta>@[_=>5l-4C_'\Z%=IhlbeH7"ZT5lVLVlk"g@0]LZ"V0WgQ4sQ7,7K_I3@Gbie?L;kblM2_S"1E490GE0D#/FW>(BX6a*uLuUHD<-kk9_M2qacDSQ]+V%JD>="a_M2nBN+Ts30XD_!_5K>'0[0bEq&PC)#JWI$;EN4]Nga2=/DVd/WJ&gd/7/@d^tQAi2aT=q[5Cg;YU%KZ/]K:Ga1p_M`BNF%Ql`\F!:4Z$06<ckqHH)fQL7fbUUVL%N]<mH*f?_,K>_0*I\OAC74cu3,Ecg6XKqGn(YeB;_Wl4l);.:9TM/sSSuFcVgM*?+1X=0e%6l,P5k%Z10`U*I\Z1Mm[d5Ma$3F(\#42CUa7-u!a'gscbSQ%Mg6e>i/glr/An'B.%-?*:;f",'mI&ZP-J8dZp+Ksg'C8dffh3,Ti%:8lcti%WEVg<G:ZPMKGmT!"-D.;\i6%TNm2>I!EWY8FG^l'm<.Cm?[&hDRU23jGD7Ha?e"b@WeRiW8"eYf0%`AQ(@L@[BteSB.&j%Xu+h:E_r;<ko5]^%?j.qYJlS#.D4n(e<Zt\iRFeVAJVl'U0kl&M:)3"MB#5GOcQKLq*\'uNBZ3*7na'ZG,.:NjRnZ%#?sBPV56+h%QKYtab3!<I`EWdChqhdU!BSJLfS/I#N!IgT((0#(%R$9;D:LI+l/'s:cjb[VW,@Xdr;[=Ho]1/c,-;jL//$"0fKl-5>/Q'!kYiq1%(j9BtLMnN^/,aUHGA7J95,CVW:#/:^e*kD8CIk\+*'A8V`F:5k\m86\`R;6E1k@`iqi.)(q/NA_#4fYnQe:B*KZD^i1_niJ$D/:!%/IfV'?a_ct.)SqFBMJYG>FJ4em`oD6+IuKZRS8NSBn7N6%%d@O@Ypf'<9cOrIG9ae407c/Hbt$)_j?@Vb2I)e3:0.ui&'[:@`#$-%P"9J;k$X)Nid>W+$&MPRK9u@<6ec]H=.]3kT<$'nkHcDYB1ERFW`^Ij8E-OO+EpraZ5?Sc=D/$9[W(BA@NgqehE*9QLJhW8KN19b%:@!H;hU.ec[rp`EDs=QYQhFr!a@nWM_NDR4%l%^%LirS)pES07j$f3S.j&fr6t^5oWTf=CIGBW^;]lW?VGT.FWJ_uf4gbQ"pO^fF%9c1"g3+b$h<t8A-#IN5b#WlAKJ]T,s:1.84V=K@:14/+2cP@Tq2=$Qr^/\Ka,eLNDh>Pmh7BF[%Mj=SumM#u>(T3>9')iGQR(lG!%hWjF[XPVZI%@F_.h9e]m=&.6M"h_&ASYBV?>o9rY;HTrPPEH/4>>R`J[oBurCt>e]/K`$&S%f8,q_nOf;kb2$;J$]=Z-=UuE?[>G%*%Y)`@+pjJokAnUVYD;=9-kb%RX3UQ4%I3u+-iG*RqK^^I\+]"$<PE$S#kR@Tc;Q:DFme_Jn-]E4Z$qVLu5O)>H0iT;2[AUfrdos%i[a`>,d3o/h<?i&/>PQN=K_^Vh=Y6jk9XhSnOlYBDQtmU&bc3EEq#L%&AWG$DME^rU?H%WDm9kh<M)#'+<cgY@,<fHDPrnXM0qP(%p.]Y8;f4ht;1Vtd!;Lq'bfPuZV-Ttf;E3(\31EoI1qUD/\u;3&3tG;V+`=u1W[]JR@esJ?_9Z0KE9%Le9b[.`.klONnN$4Ii#YN)%`%`;:!YIcJ;E1DCIVs#K<2cltI:?dBZ(/Y^]P2G/[VYua.J%@qG@?o#^orkoCYr)+RkLY;fPa\em!%alH;tLY9>#XY'DL/2F*&lb%il1EkYcAl/,@`Icj4cYS`Z_QuUN;3eDti`Q]OH^5s7QpAriRHLa\,U8`VqC^2gXiEFq;3q>/S;e,eL6QZeMBlB1MUDE\6<glh)?V%4E&4i05sK2=gk0$<8s(o+e*qiRiqAoqnT^=&5u>$Z(&CGhfb1hhNON!_<,hu#,8\p6apg<rE;-uT5EGJ%K'pu&+4bC`k+4/8Zo<i%mV)=?<;+o&r*\`epmdcK'J:QHJmuC<e;mi#l^*+rnuMfaS)=5;o3_F`nal3ur;H@SrQ![mG!`t#cEYChrp9#2J+rP1^\dso^]"#T%s89?ea1m-'m>jJ]O.q-tp7KW^9bM@Dk&5bEro<Ct^\t4nmB8_RouE\RIf&^Ys8D]loP\Yts5Uk/3CL=OG-SgXiTnfnY/2.Pm=Kib%]79erQ@(>V.f&J+J,\KS5QCMXAcMAthj<Bjf73Mf?iTZ>DgqRbV>U9&s5W:KVq]sErpls/Ie\]Us3m$A62C3Pk7<(8qg\J$J*?@9%qt\:)rkj3:\)6,Uhu<W<hgPOp]C5b/D#$k6rpuIpn??:Xc=?c,*X[%1@7K7pr6q#&^J&A;s-;%4O$qQ+9&rnYs6^\V1eo^q%_VN>%*T30uU/.A=UuRtWM$>WD'd5XW+pBh5TAHJ,q(fa1WW<Q`@QG<FBiBQ4WrPM=/Y<$k%cNnjNM>=s'9Nbn&M4&T9Q``Vd6+Yn>h_uk%d<DoAh^kG+,J'%:O'<_a"*c5ulSji_Kg;u'_Zi@NZoRpfAm_H6<tK]dd&'\;,V349U`jO6#C(OPHU)pFmNdUdIL)VBWuMr^cRXQ<%'6G_>o$N2J=jkQT-sNUdZa>c&_+O7B[Nc-Dn>[Uce1'=<_ZR^,)nM[ceqCe2@tZS$R1)\T1c"M#DMYAE:kj-TOM2l1g38<Y=mK!"%rrr4i8G-[hICoVgrtHsg:YfX!XZjBKD0"!n+bYn<!FDcpUtW7M>WI)[`8?V/\;Q18T;`)CS,>\@?[ZIgJ"MK)fc^HHBguUJ$%UM0%3-AP+gTcBDZ*kMNX.NmU^ikP$jn*1n*"m]a6P?g)3#S[(m5Jl#+f8eCG@V?6)"43(GD(T^&roqkDZYpT&JoHP$gNaVc[-%-8#0]*%/>&R^WK@`,:`bs?b[>PX/SiT2n.@LSE[dbr8cUmrfJ@'/!)5cji2mH?Au:m*jRWr`(H/M8%O;GaY_f_H+cTWc&HAlHWNk-N#8[@K%_Dd/EdY7^@Kt7hsp#:0]G"eY7!,R>/(L.)DmNJ0DKt_bGBp&up6jhK^+O(rNZJ^rSLjN3Fq;KmP,5#fQ'_=9I>C($N,_g$bQQZC"%P$tXl!O\-`(a]6Ghp[>%!#_Xh-r=m5+6S&pWAnTdpar6g^MBm,ha!&m+_)K`\H!NO3hWWof.TBV?<_=R5)Z2UoIrOdXh/,5_%EdP%m+go;-"X7/_%Y0\ST%&SCF^=Oi:mBG?"UDo*s%+PGk`-gQr"o-Bu+$#O1\d*ODr[:s'5_X,9C4LD=?*hfs0snkpS:pm(p2g14r38%(5q6PgXQ0uDg[s$"#0GlmtlRTO"VC1/_^Z?CXCAU"P$p@[fJl?7%,$[3+P@"I=MN9+F>(4lB#\6J/EhUrje^Hj4pH7O:SaZ&g2`[%*Pb:8C1HV"mN*I#,WgrM%"]n__/H.#6<^PG7fZErhe%,$<DK6cJB#7Pd&IS+3LaXM2$c*(1B3.A&J9Fp471)jJt3&h9@]jlj<Som%%*[:LQI)0t&A5JAOAhLS^4@+D';-C6q)d_nd?\TU>04%i^'3Fs*,Ug[dP_kCN&;gF[!DmPrSr$]r4%CY,hoT:3OE\>(UAt"YaF>k%KG`<`&Eo)JY*o\K]j8ZE;^]8&>tmZYA@?d=nS[RhO:\c#Pc?:h784sKqm6L69P'ZgCD1+*Fob!^P)fl7@X"%saf:RYH^1EfGO7]F%T[%e;YJ\n5dlePq'EFmH0Y,72E$#*+ZPZNdd,(ZQVp]P*27)q%<sN#_-D\i*'pA?iRj`4GHYQ7OU=,T_<[1@%K>?EQPJ10<3dK:6%8ahak]TRtN\u9?5T]EII3S!ClA4a2+SADrQJ>7an@hOmf:8c7]";jL**,8QgIE-T\0a.&DifJP>>,#r`N[C*45_haO&hgT$%&$E1%o^Jf5Zf@;&H9B5I:S:cFBjq,[jmH/,"2_3WP5LCIgTYal"cu@+4.46Ibp*4oYQfUl3)cHP"sf+0!m5[l"6.!a_qq(sP$D!9:Isnd%96-)n+3?EH1m*^s-hX!Q`u=eOh).moJN55G45(DtC1eik?s\4cTrLuckFi8]P0sAm"Gd%;jbm;*J2AB+kaR2i&b2MA8d=KLOpib*%l0VYGk<KBI"1cLSZ5;WZ`\PW[%eae16Hr8I^S>t(W#-r#=Xm:W3JkpWO/`]P\Pc7f?>gIA7H=4t;ee^;cmbZ@8K!:te,$Y3`N/4@%q9,Bq.PHO+p3H?,"eem<$lte\(?M*X$jJ8(:Lf;u9U7gW-(G(i!G+;9H!:Kod0k'A,a:;ceu'a%U=VEs<.hf#9MQN5*I>lVAeV:>%`9tkrIF/LH0c#-dF)(/r[@I7XJZ>t0CtdpE<bG88C@D!o'<+Qib's.<We,U2d((BpN(Xo5g[M(9'*:(sbg^%aLh87:`Jt>c<_nYP%AX"7>"8A_IVK$hDZq,k"fS_WR^7CK*"CT:r\HC?%`cX=9eb=e.M*3/_7c4fM=lI"qH:.`5JeE8-0L,[R9eHNbAa)_>JK31F1MFbj%UmkFNO&,qqSM=Xc5BYm)MAQ?8JFoDnI`(Vs[%RUu3-b[Z`s9n=\Om4eS?r:9`-aBA)ZHW!YsGZCLt;:V2p2tr's<R[,)W9(QmlbZ%:S0F>)!3nI'HM81D;L2j1^>/WE+`^)q<2?)#6K@P;UcA$)61mT5$j$B:[NdKo]pp3+H`S)b5u@O*2sIgIO?42'G2DqINg(nX3^jh%Sm=%t$=,?YjKr71"k3D=_HejGi+mGrh8m>2C>i_p?O<,.7^D+")D2je#FXCR0^Vj=1c(o=?o0D,#ZFV6pka\C^o8d-Cg5ocUl-Zt%gE+-E-O3@Q"-O$=Pu/?VjM)WaChu+pRFqZU%FOJB!6;S:JH;F#,KqATq%-bN!*BIY!-HEF&\n^u<`\o#8;9U-Qh?rbRlD1B(,0`t%f`T^-4R1-3(n;&9<T>,;5c=/n*Z+nH!4rWYJE2>;-jF,/PO&:pV0&es';31D]cCg[QpN,(MEj.0)W-C]'*\I-J%Kb)!)m2CD\.&a%-RY8.EWOmc=Y>c<`<OX"]l\&sJ3',Y71;_)(dRA_UE9\*Rn*)_5T_fZ@A5(E@/qG=K)8sV+E'gA_q6bbB.j8GAC&$@g<ZO9m[>re%0TD)_GJc8^!M%t"Qq"!bSD>lLHLer22psZt@+E]2NSTK*YIm,!/J`KH1gJT]iJ#,:,*U`n0To1/P./"=##K.oH!u4O/*M[YJ9kW4%87!,QB^:p7pVJa.<4EmE0a"#Z@15\EQmb<\%"MUrg<^:=5]XaZjDGgVO"O`HqI)]aQlcOq_\^?QKI)q+!+"Dc=\O#K=6P)M'=kB)%&4h6e5[qO/&h\;H,Ag^6:e2P]0S#6W0#m_jL)??[*9%3Mfd/lNTKft'VUA>(]J'Q#(Ij!4BH@l\_GiCqZPTLuh11562D:$-Al(.3%H=6fPLQ#OV"-OHIb0\$-?tl&N!f,K/aU<`J0sDhV"TUh3mQ5R.fKG\aKL$CaE=pS);]2t"SM7RJ_olNOKW3\7E4Q%"Vt^<e9lH;i%eb>KF0_NeOK'%cdP#l?.08oqR$Y*"X@=Y:`6_#iD]#s$+'*_`A9@o^g&np@)iH#%_1pKsZ1,d5\K+WV@j%^FrpKF:/;89,(h3uFl%@pq@P%0N7q96A&gOPDNeL2Ih.]nR=-^LsV#$Nku^:JMa3e<6>$l@b9>f]<AdMuh$,PKKhV"[JV[@&pVF-]A0nBe>i/?jjgs\J#0`%.H\0<V%Of!.!I$IY%qI4Fsd^d9.eE=@nmk+;dMT6Ro5RVX\;"Gfa!.+1n%&4!d.3aW_OB2pro9_!*";c-]E_c=lG!qhkc&<`dm-&%a^oe1eBp:6F^*N$"([R;)iIgY7WlNaj,scSm+pVJ;9C23(hYNL]6[j=P)"A'e,rX1aAQdL9R!,!%OB#_4(+4>]LpF5[0+G2<-#bk%j:3#Mebq.Aq/S^*s2EQaqc:KqR!'92fpSOo,inBCZ'jhT(S>:,I_iN?k6l`Jdrac2!Qk-MAa"M-XlnCFkDN(/jEpuFn@lJL"n]_2%Q3!e79AUIVOP5#*?hBYaqd/d`TYlMu(U+\<#4?gmk._>Oj)rTFFM=)kn;C4poB0J0p"R78s4`&!rBL8*p]'d$:[daZIeBcAj84?*%iU;9mrc]GKr:K*Cs6]^`kD-P8J,ajpoY\G8IsLqST76RET7?e'LUVd1QQQ67+Qk+Qr)^Z00E:oVIefU<N7"^~>%AI9_PrivateDataEnd
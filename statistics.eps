%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: statistics.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Troy Carter
%%CreationDate: 8/6/12
%%BoundingBox: 0 0 196 432
%%HiResBoundingBox: 0 0 195.0005 431.4776
%%CropBox: 0 0 195.0005 431.4776
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 60 128 8%%BeginData: 8518 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C457D52A8FFFF7DFF7D7D52FD32FF7D52A8FFFF52527DA8FFFF272752%527D527D527D527D527D527DFD07527D527D5252527D527DFD09527D527D%525227FFFFFF2727A8FFFF7DA87DFFFFFF27A8A8FD0FFFA8FFFFA8FD04FF%A8FD07FFA8FFFFFFA8A87DFFFF7DA852FFFFFF527DA8FD08FF52A8FD25FF%52A8527D27FF27FFFFFFA827A8FD05FFA8A8FF52FFFFFFCAFD22FF7D7D27%5252FF7DFFFFFF7D27A8FFFF277D527D7DFF52A8A8527693765252527DA8%FD1BFFA87D7DA852A852FFFFFF7D52A8FFFF527D27FFFFFFF8A8FD06FFBC%C3A87D527D52A8FD1CFF7D52FFFFFFA8FD0AFF52A8FD09FFBCC3FFFF7D52%52FD1AFFA827FFFFFF7D52A8FD06FFA8FF52FD0BFFCAFFCACAFFFF5252A8%FD18FF7DFFFFFF7D27A8FFFF7DA87D527DFF52A8FD0DFFC3CACAFFA87D27%A8FD16FF52FFFFFF7D27FFFFFF527D52FFA8FF27A8FD10FFC3C3FFFF527D%FD14FF7D52FFFFFF7DF8A8FFFF7DA87DFFFFFF27A8FD13FFBCBCA1527DFD%12FFA827FFFFFF7D27FD09FF27FD17FFCAA152FD11FFA852FFFFFF7D52A8%FD05FFA8A8FF52A8FD17FFBCCA27A8FD10FF52FFFFFF7D52FFFFFF27A852%7D7DFF52A8FD19FFC3767DFD0EFF7D7DFFFFFFF852A8FFFF527D52FFFFFF%277DFD19FFCABCA152A8FD0CFFA827FD0EFF27FD1DFFC352A8FD0BFFA852%FFFFFF52A8A8FD08FF52A8FD1CFFC3BC527DFD0BFF52FFFFFF2752A8FFFF%7DFF7D5252FF52FD20FF527DFD0AFF52FFFFFF277DA8FFFF525252A8A8FF%277DFD1FFFBC7D7DFD08FF7D27FFFFFF5252FFFFFF7DFF7DFFFFFF27A8FD%1FFFCACAA87DFD07FFA852FFFFFF277DA8FD08FF52A8FD21FFCA7D7DFD07%FF52FFFFFF7D52A8FD04FFA87D52FF52FD22FFC3C37D52FD05FFA87DFFFF%FF7DFFFFFF27A8277D5252FF52A8FD09FFA8A8A8FD06FFA8FD07FFA8FD07%FFCAFF7D52FD04FFA852FFFFFF7D277DFF7D7D27FD04FFF8A8FFFF527D52%7DA8FFFFA8277D277D527D5252277D277D7D7D527D27FD08FFCACA7D52FF%FFFFA852FFFFFF2727A8FD08FF52A8FD09FF7D52522752272727FD065227%522752A8FD07FFCABCFF7D52FFFFA827FFFFFF5252A8FD06FFA8FF52FD0E%FF7DA8FD18FF7D52FFFF52FFFFFF52F8A8FF7DFF527D527DFF52A8FD25FF%CAC3FF7D7DFF52FFFFFFA827A8FF7D7D52FFA8A8FF27A8FD09FFA827FD06%7D277DA8F852A8A852FD0DFFBCFFFFA85252FFFFFF52527DFF7DA852FD04%FF27A8FFFFC3BCFFC3FFFFFF7D52527D2727525227525227FD0552FD10FF%7D27FFFFFF7D27A8FD08FF27FD0BFF7DA87D7D52A85252FD057DA8527DFD%0EFFB6FFA852FFFFFF7D52A8FD04FFA87DA8FF52A8FD13FFA8FD11FFA8FF%FFCAC3FF52FFFFFF5252FFFF52A8277D5227FF277D7DFD04A87DA8A8A87D%A87DA87D7DA8FD047DFD04A87DA8A87DA8A87DA8FD067DFD04A87652FFFF%FF5252A8FF527D27FD04FFA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FD0EFF%A8FFA827FD0FFFA8A8A852FD0FFFA8A87DA8FD12FFFD0452FD0EFFA85252%527DFD0EFFA8A8277DA8FD12FF527D7DFD0FFFA8527DA8FD0FFFA87D7DA8%FD62FFA87DA8527D7DFFA8FD34FF52FF5252277D5252FD34FF7DFF7D527D%52A852FD36FFA8FD94FF7DFFFFFF7DFF7DA8A8FD32FF7D2752FFFF525252%A8A8FF52527D527D527D527D527D527D527D527D527D527D5252527D527D%527D5252527D527D527D527D527D527D525252FD04FF527DFFFF7DA852FF%FFFF27A8FD05FFA8FD07FFA8FD06FF76FD07FFA8FD06FFA8FFA852FD04A8%52FFFFFFA85227FD08FF52A8FD12FF7D4B9A6F7DA8FD0DFF27A827A852A8%27FD04FF527DFD08FF52FD12FF9376FFFFFFA8939AFD0CFF7DA87D527DFF%7DFFFFFF7D2727FD05FF7D7DFF52A8FD0FFFA852A1FD06FFA152FD0BFF7D%A87DA87DFF52FD04FF7D7DFFFF277D277D7DFF52A8FD0FFF76A8FD08FFCA%93FD0FFFA852FD04FF7D27FFFF527D52FFFFFF277DFD0EFF6F9AFD0AFFA1%6FFD0EFFA827FD04FF5252FD08FF27FD0EFF7D7DFD0CFFA86FFD0DFFA852%FD04FF7D27FD08FF52A8FD0CFFA16FFD0EFF9A6FFD0DFF52FD04FF7D52FD%05FFA8A8FF52FD0DFF6FFD10FF767DFD0BFFA87DFFFFFFA85252FFFF277D%527D52FF7DFD0BFFCA52A8FD11FF6FA8FD0BFF52FD04FF7D7DFFFF527D27%FFFFFF27A8FD09FFC3BC7DFD12FF9A76FD0AFF7D52FD04FF52F8FD08FF52%A8FD09FFCA52A8FD13FF9A7DFD09FFA827FD04FF5252FD08FF27FD08FFBD%CAFF52FD15FF52FD09FFA852FD04FF7D27FD06FFA8FF52A8FD07FFC3FF7D%A8FD14FFCABC52FD09FF52FD04FF2752FFFF52FF527D52FF52FD0AFF52FD%16FFC37DA8FD08FF7DFD04FF5227FFFF7D5252A8A8FF277DFD05FFB6FFFF%7D7DFD17FFA852FD07FF7D27FD04FF7D52FFFFA8FF7DFFFFFF27A8FD05FF%CAFFFF52FD18FFC37D7DFD06FFA852FD04FF7D27FD08FF52A8FD07FFA852%FD18FFBCFF27FD07FF52FD04FF5252FD08FF27FD05FFBCFFFF7DA8FD1BFF%52FD05FFA852FFFFFF7D52A8FFFF7DA87D7D7DFF7DFD04FFCAC3FFFF27FD%19FFCACAFF52A8FD05FF52FFFFFFA85252FFFF527D52A8A8FF52A8FD06FF%527DFD1AFFBCFF7DA8FD04FF7D52FD04FF7DA8FFFF7DA87DFFFFFF27A8FF%FFFFC3FF7DA8FD1BFFC3FFA87DFD04FFA827FD04FF52277DFD07FF27FD04%FFC3FFA8A8FD1EFF52A8FFFFFFA852FD04FF2727FD08FF52A8FFFFFFC3FF%52FD1CFFCAC3FF2752FD04FF52FD04FF5252FFFFA8FFA8A87DFF52FD23FF%CAC3FFFF52FFFFFFA87DFD04FF7DF8FFFF2752527D7DFF52A8FFFFC3CAFD%22FF527DFFFFA852FD04FF7D52FFFF7DA852FFFFFFF8A8FFFFBCFD20FFCA%FFFF7D7DFFFFA852FD04FF5227FD08FF52A8FD23FFB6FFFFFF52FFFFA827%FD04FF5252FD08FF52FFFFFFCAFD20FFCAFD07FF52FD04FF7D27FD05FF7D%7DFF52A8FFFFC3FFFFA8FD07FFA8FD15FFA8FD07FF52FD04FF2752FFFF27%A852A87DFF52A8A8A8A1A8A87DFD07A87DFD06A87DFD07A87DFD06A87D9A%FD06A87DFFFFFFA85227FFFF527D52FFFFFFA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA17DA87D%A87D7DA8FD15FF7D7DFF27FD04FF27A87D7DFFFF7D7D7D52FFFFFFA852FF%52A8FFFFFF527DA87DFD19FF7D7D52525227FFFF527D277D277DFFFFFD04%52FFFFFFA8F87D27A8FFFFFF52527D27FD66FF527DA8FD39FF5252FD39FF%A8A8A8FDFCFFFD12FFA8A8FFFFA8FD37FF5252FF52277D52527D527D527D%527D527D527D527D527D527D527D5252527D527D527D5252527D527D527D%527D527D527D525252FD08FFFD057DA852FD06FFA8FD07FFA8FD06FF7DFD%07FF7DFD06FFA8FFFF7DA8A87DFF52FD0EFF7DFD26FF527D277D27FF52FD%0EFF52FD26FFA87D525252FF7DFD09FFA8FFA8FFFF7DFD27FFA8FFA8A8FF%52FD08FF7D52A8527D7D52A8FD04FFC3C3FD24FF7D7DFD08FF7D527D2752%7D7DFD05FFCACAFF9AC3CAFF272727A8FD1CFF52FD0EFF52FD04FFCAA87D%FD04FFCAB5CAFF527DFD1BFF7DFD0EFF7DFFFFFFCABC5252FD04FF7DA1FF%FFFF52A8FD1AFF52FD0EFF52FFFFFFCAFF527DFD04FF52FFFFC3FFFF7DFD%0452FD16FF7DFD08FF7D52FF52527D7DFD05FF7DA852FFFF7DA8FFFFCABC%FFCA9AA1A8CA27FD15FF52FD08FF527D7D52527D52A8FFFFBCFF52FF52FF%FF7DFD0AFFBCA17DFFFFFFA8FD0FFFA87DFD0EFF7DFFFFFFC37D7DFFA87D%FF52FD0BFFCA7D52FF27527DFD0FFF52FD05FF277DFD07FF52FD04FFA8A8%FFA87D7DA8FD0CFFC39A52FFA87D7DFD0EFF7DFD05FF277DFD07FF7DFFFF%FFCA52FFFFFF5252FD0EFFA1CACAFFFF52A8FD0DFF52FD05FF5252FFA87D%A87D7DA852FFFFFFBC52FFFFFF7D52FD10FFCABCFFA87DFD0DFF7DFD05FF%F852FF7D527D27525252A8FFFFCA52FD17FFCAFF7D52FFFF7DA8FD07FFA8%52FFFFFFA8527DA8FFA8A87DA87DFF52FD04FF7DFD18FFC4C37D52527D52%52A8FD06FF7DFFFFFFA8277DFD08FF7DFFFFFF9A7DFD19FFCAFD05FFA87D%FD06FF52FD04FFA8A8FD08FF52FFFFFF6FFD1CFFC3CAFFFFFF7D7DFD05FF%7DFD08FFA87DFF7DA8A87DFFFFCAFD1DFFCAC3FD04FF52FD05FF52FD08FF%527D7D52277D52A8FD22FFCAFFFFA87DFFFFFF7D7DFD08FFA87D7D527D7D%7DFD23FFBCCAFFFF52FD04FF52FD0EFF52FD25FFCAFF52FD04FF7DFD0EFF%7DFD25FFCABC767DFFFFFF52FD08FFA8FFFFFFA8FF52FD28FF76A8FFFF7D%FD08FF5252A827527D52A8FD27FFA893FFA852FD08FF7D7D7D527DA852FD%29FF7DA8FF7DFD0EFF7DFD2AFF4BFF52FD0EFF52FD2AFFC3527DFD0EFF52%FD06FFA8FD07FFA8FD15FFA8FD07FF52FD08FF7D7DA8527D7D27FD06A87D%FD07A87DFD06A87DFD07A87DFD06A87DFD07A852FD08FF7D277D27527D7D%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87D7D7DFD0DFFA87D52A8FFFFFFA87D52A8FD%04FF7D7D52FD04FFA8527DA8FD04FFA85252FD04FFA8527DA8FD04FF52A8%52FD0CFF7D7D27A8FD04FF277D27FD04FF525227FD04FFA827527DFD04FF%525227FD04FFA8277D52FD04FF272752FD0DFFA8FD06FFA8A8FD05FFA8FF%A8FD05FFA8FD06FFA8FD08FFA8FD05FFA8FFA8FD22FF7DFD04FF7DFD34FF%27A87D5252F85252FD34FF27FF527D52522752FD15FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-08-06T12:04:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>116</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAB0AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A69+VuqanqHmDXTdevFb2&#xA;7yQxWtzfG5nR47mSGQTwm8vAjD0QQ0ccafE3HkvE4qnPmjy951vr++k0fUltLaaO2FsjXEyFZo0u&#xA;lkk4pGwUB5reTiCRJ6fB6KxxVQ84wXHk3yJ5h1Hy7MYtRmlW7We5/fhZZGigJIb7XwL1apJ3JOKo&#xA;iz8vfmIYv3/m4Fvhow0633qiknqP2q4qrHy759qtPN4pX4v9x1v0of8AK8cVd/h3z7yH/O3jjQ1H&#xA;6Ot612p+1iqw+XPzBoaecFrRqf7jbfrX4f2vDrirj5c/MHlt5wXjXp+jbetNv8r54q3D5e/MAwoZ&#xA;fNoWUqPUUafbkBqbgHl44qu/w7595H/nbxxoKD9HW9a71/axVb/hzz/x/wCUvHLl1/R1vTjy/wBb&#xA;+XFWm8ufmDvx84KN/hrptv04/wCt/NiqA1W1896bLYJL5sMrajdpZwRR6bb8yzrJITuwFEjjLt/k&#xA;qaVNBiqAXVPMF2beLT/O3rm89eK3nXTbcILiCFbj0XDHmrPC3qL8NCorXdaqov8Axd5g/wCVH/4p&#xA;9aP9Pfof639Y9NfT+senXn6f2act6Yqr+RdD1q28y65q18riG/duIa5WeNJBM5eOAIxHBCStWSNq&#xA;j4gSfhVRPmaT8xFv74aFGXtPTtmsmb6qB6xS6Eqjmwb0/VFsZOQ5cC/p/FTFUq/MDSb7Rvy28ztL&#xA;qVzq8lzOl1CbpgGjDTQgQoU4qqArtxCjfp1JVZJqmj+a78o9j5g/RkTwqrwpaRTfGa1cPIxYdcBD&#xA;KEuEg1ddEpvdF/NazsJH07zNbaldCnCG706OMkVoaPHNEtQN9xv4jIeqI/nH5OWZYcuQWPCh5XIX&#xA;8TdfE15qMvmD8xtKgtZdVOgyNdHilvcyzaRIXHVAwbVYi9Og9Sh8cJyAVe1sI6Oc5SGMeII9Yg8u&#xA;/kD9iP8A+Vgy2A/52XQNR0aMDk16kY1CzA8TNZGZ0X/KljQZNxWR6TrOkazYpf6TewahZSbJc20i&#xA;yxkjqOSEio7jFUZirsVdirsVS3W9Ct9W+oNJI8M2nXS3dvKmxDBHhkX5SQTSRk9RyqN8VY1pf5Za&#xA;N5cihl0iSb07B5r2C1mKshumtEslkLII2qLZCnXcsWPxVJVY7yb/AKFp5U+L9AV417+n0riqY/lm&#xA;Xbzl51UXKSQ29/IkdvFLdSpE0s8sr1WQfV43Zm5MsTE13YLsCqm/mXzP5s07UL6303SmvoYI7aS2&#xA;kW3uGDtKl0Xi5L8LEyW8Kcl2j9Xk4opxVL/zItdQsPy48yS3922oNLJFNGgQKI09SEGKNTy+HmrM&#xA;A1aVpU0rirPbZne3jZ1CMyglQa0qOlaL+rFVTFVk8EFxC0M8aywuKPG6hlYeBB2OAi+bKEzE3E0U&#xA;Hd6S02oW97FfXNq0NFeCJwYJUBrxeJ1dd605LRvfbImFm7Lfj1PDAwMYyvqR6gfIij8DY8mM6r5D&#xA;ivvMU19BaDRruX4ovMmj3H1e9LAD4buEx+jcDlWgl9Rf8kdcblfLZTDD4YIkfE6gjb4G/vCX6d+Y&#xA;Oq6PNcWvmNf0rYWhpNrun2s0MsC7gNqGnvWaJfhJ9aHlGaEkIMY5BLkufSZMQEpD0y5EEEH4iwz+&#xA;yvrK/tIryxnjurSdQ8FxCwkjdT0ZWUkEfLJuMrYq7FXYqoX0jx2U8ip6hRGbhWlQBuOjfqxV5byH&#xA;/QtPOhp+gK8e/wDd9MVRX5P6npGr6z5m1qwubOb9JTibhG8Ul8I/UlaL1+EYeNPTkXgjSyb8qen9&#xA;gKp95m/MaDQr++s5LP13so7aaqTKC6XCXUhHHieL/wChMkan7bsi1XlXFUo8/XXmM/lv5ok8yW1t&#xA;bLFcILEWjPKGsxLCUZySpL8uVdl/1R3VeiW0nqW8bhSgZQQrUqBT2LfrxVUxV2KuxV2Kqdzbx3Fv&#xA;LbyFhHMjI5RmjejCh4uhVlPuDXARYpnjmYyEhzHx+w7F5vqXlXUfIlu2t+VJ55y85fVdMmAaznjc&#xA;EmaRYV5wyqacp4Y2LdZEf7QrJ4BvZc2OMarKeEQxyI2HIE9wvYE9xIHQdGXeV/OOn6969sYpNP1q&#xA;xIXUtGuqLcwE/ZagJEkT9Y5UJVh3rUC116fYq7FVC+lWKynldS6IjF1WleIG/Ur298VeW8k/6Fp5&#xA;fsfoCv0enirJPyw13zHrejWt9qsFjHG1rCENs0n1gS8QzpNG8MCx0BHwrUYqmWuefNF0S5ura+ju&#xA;BJaRxTOURSGiliuJi6fEKiOKxmZu/wANFqSBirHPPur6jqH5ceZn1TTH0hLadIIBNIrGWFZoSJqq&#xA;CFrUig5DbYsN8VehW7pJBG6V4MoK1BBp8iAfwxVUxV2KuxV2KuxV2KsO83eRLjV9Wg1qz1aXTL6z&#xA;ib6tdRIJJYXUVHp1+3FJ0mhcMr7EBXAbIURK72csZYSxcBj672ly94l3+R2r3N+SvPqaw8elaqIr&#xA;bXvS9eL0WLWt9ANjdWbtQla7PG3xxHZuzGUZAiw05sM8UzCYqQ5hmGFqUb2SKO0meUkRhG5kAmgp&#xA;udgx/DFXltV/6FqrX4f0B19vTxVNvym8q3Og208U1ppCuii3lvNMeJ5WliPF4J/RtbJf3Zr9rk1S&#xA;anFU4u9V8gXl0PWt7a+vr1niCta+pLK+nyyx8GLp/uqSObhzIGzsNgxxVjXnDzXaeafyw12WOyub&#xA;ONEs+S3aKnITtDKKfER8IehrTx6EHFXpdu0bQRmJg0fEcWUgggeFKjFVTFVC9v7Gxh9a9uYrWEkL&#xA;6szrGvI9ByYgV2xVVjkjljWSNg8bgMjqQVZSKggjqDirpZYoonlldY4o1LSSMQqqqipJJ2AAxVdi&#xA;rTMqirEAVAqdtyaAffireKsR86eVLa9sraO0seBF79ZN7YkRXtpcSDiL22P2WZWP7xW2da1Dbg1n&#xA;08h13c3EY5rGSZEox9N8tv4fLb6fPZf5W8z6mdQfyz5oSO38yW8ZkguIgVttRt1oDc2wYkqy1Ali&#xA;JJjJHVSrGxwmS3pi+qTCZlWNkZWZiAKMKb8iB374q8t4r/0LVx/Z/QFO3T08Vb/Kv07vzv5murlY&#xA;pNVt5JIrqeKMxsJDcS84nY3F0ZAg4hVqFQUIUFiSqy630ryBYajb6jFLCL5ZruW1Y3ckrNLLLL9Z&#xA;4RtI3MiWaUcQp4MzAAVOKpN+Yes6X5i/KvWJ7B2ltpY7Xd0kjJExt502IDbxzKdsVZlqWjw6lpq2&#xA;Us9zbIOJ9Sznltpfh7epEUeniMVSq08h2FrdQ3K6rrMjQSLIsc2qXkkbFCGo6NIVZTTdTscVRPnH&#xA;y7da/pMdla3i2MsdxDcCdklk/uX58R6M1rItafaWQYqwPVPyl83TXDGHzCjRXzwC6CRXUKWoispr&#xA;dpraP6427SyJKEqOLqGq3HiVUXd/k7qt3LqBuPNE88N4b1oEljm5QvdBvRkrHcxK7wEj9kBgoFFp&#xA;irrv8odcnvby7i81S20t607O0UM9VE5uzwUPdsgQC6iUjjuIU6dlWpPye1Z50kfzIZlRbcGKe3mk&#xA;VzbTWs8fMfWl+EPaGgWho5Fe5VenCtN+vfFXYqxDzJ5V0me1uRq2pSw2893FcaRdE/v9Ov3JUSW0&#xA;7cuIZ2HFGHHdlNVbiK/psk7FziTqBGMIeuETZH8UR5d4F2eo91naF5jv5pbryp5nWODzHFC7RSRg&#xA;rBqNrQr9atlqzA9pYqlo28VKsbHBYrwH/QtPp9v0Bx7/AO+6fPFUw/LeC5PnrznPJFMkaXbQ+tJD&#xA;PEshM8sigM8jwPwRxT0lXYgv8RxVkFr5B0Ww1OHV3u7h2tJbu6CzNCIQbt7iV+QWNPhjN5Nx36H4&#xA;uVBRVJfzHfy/dflhrg0Oa0aB0tw0li8XH+8iCVaP4f7vjx9qdsVZu9mZNN+qWty9iwVVWe3ERdKU&#xA;Y0EqSx/EOtUOx+nBIWO5sxTEZAmImO43X+xIP2txWNylvbRNqFxI8D85Z2W3Dzrv8EgWJUC/EP7t&#xA;VOw361Aia5s5ZomUjwRAI5eqo+Y9V/6Ykb8uSR/mJ5WuvM2gLp1sITIJ0lInfglFVgDQxXMb0Zge&#xA;EkTqfAGjCTQwa8/LT8zRJMNL1eCwjqzQ/Vr+8t0LGF19R4EhZAfWKPQlthxqRiqJ1D8vvzJutXW8&#xA;GpWrLby3ktlLLeXTSxfW/rtEjIhBj4R3kMQZW6RK1K/Diq2z/Lfz+lyt8+qW8l7KsbT3n1u5Z6x2&#xA;a2pVP3QX996SlpgFccifiIHJVP8Ayf5X896Vr5utX1QX+nPA0Txtd3EtG9O2ERWGWLiCjwzVYOC/&#xA;qVbcYqzrFXYqoX1pZ3tpLZ3kazW1ypilhfo6sNx92CUQRRbMWWWOQnE1KO4LFvNGg6f5oF1oWqWc&#xA;1pJp4S80TV4HKujBePqxTkUjkRuSOjVDId6qxGREtyKbsuAeFHIJA2SJDqD7uoI699joxP05P+hY&#xA;/T5/vP8AD3H1P8r0qcsm4rM/JvkG08rSyyW99NdGe3gt5RLFaRA/Vy5Vz9Whg5MfVapfkffFUHZf&#xA;lv6Os2WoXN+txDZXN9cJaCAoCL2a4nVAxlenBrr4jT4iiH4SuKqmu+UvJmkeSdYtZYbm20VoUmvv&#xA;q0s8kypaRxqjRlmkZfTjgQbbUG/fFWO6fY6bca8mjaVrPmO4pPPBqFybqYLCbdXjErOYWQo0ts8I&#xA;LOCWXYMN8VZQfy+BIJ8x67VTUf6b7U/k98Vd/wAq+HIN/iPXagED/TfGn+R7YqtP5dxkEf4j12hD&#xA;A/6cf2zU/sYqk+uaJo+jXEcd95j8xepPFJPF6d07K3otGvAEJx5szoFXviqzyjokOu2tzNa6r5kt&#xA;NOt5I49Onnuii3VtJbRTJcRVj+wfVKdagrvQ1AVT3/lXw5Fv8R67UgA/6b4V/wAj3xVr/lXi8eP+&#xA;I9dpXl/vceteX8njirTfl3G1a+Y9d3NT/pxHVeP8nhirFtbt9H0ySSIaz5kudUia5W1tBdNykmgR&#xA;CFUhHNJTeRopCn7fSgxVklr5FN5YQTSa/wCYLczxpI0LXrJIhYBuDURWBXocVTT/AAXov+DP8Ifv&#xA;v0R9U+o/3h9b0uPH+868qd8VT7FXYqoX1jaX9nNZXkSz2lwhjngcVV0YUZWHcEdcVU7DR9L097iS&#xA;xtYrZ7uQzXLRqFMkhqSzU6kkk/Mk9ScVReKuxV2KpB5n/wAP/XNKh1TTmv7jUpn06z4x+oE9WJ5Z&#xA;S5JVVT04CT322GKpPD+Znk+wktNIgglghBit7GOJIQnoenMySRRLJ6npLHaN0Sv2QBvirI9C8zaR&#xA;rgmbTZTLHEInWQqVEkU8QljljruUYEgGnUHFU0xV2KpePL+h/XBemxha8WVrhbhkDSLK6hGdWapU&#xA;lUUGngPDFUwxV2KuxV2KuxV2KuxV2KuxVD3WnWd1Pa3E6c5bKQzWrcmHCRo2iLUBAJ4SMu/YnFUk&#xA;k/LzyhLDJBLYmSKRzIyNNMQCRKtFHP4VCXMihRsFNOmKpppOhaXpImFhCYvXKtKWd5CSiBF3csdg&#xA;v8epxVH4q7FXYq7FXYq86stb8wQ/mhNp51BZdGurgwCCRGYLJHaS3DRwyeoSJDWMt+74cUIB58sV&#xA;TPzPoPnm7v76XRtSS2tZ0tRbRvPIpjliS5WRwFjIVfUlt5CtT6npsrUDYq35wkuvJ/krXdU0Rw18&#xA;XS4iN2PVRZH9G33pwdxxSpLMWLVJJxVUi0f8yWjVm80WHIgE00lqb/8AR5irn0b8ywyBfM1gVLUk&#xA;J0phReJNR/pm+9Biq/8AQv5j/wDU0WP/AHCW/wCyzFVh0b8y/VUDzNYemVJZv0U1QwIoKfXO++Kq&#xA;d9Z+erCzmvb7zfptrZ26GSe5m0v040Rdyzu16AoHicVYtB5611pFe681Q6fpk5jWy1W+8v3NraTt&#xA;JWnCea5RAp24liOVdu1YCe9buTLTSGMTuNHpxR4v9LdsuTSPzFdQ6eabBkYAqw0kkEHoQfrmTcYh&#xA;pNG/Mss4bzNYBQ1IyNKY1XiDU/6ZtvUYqv8A0L+Y/wD1NFj/ANwlv+yzFUi8x6h+YOg2iSXGv2tx&#xA;dTfWDb2kGlDkyW0Tzu5Z71FUenH3P2iB3xVD2HmTzTqf1ZdN83WFw17DNJbuNJPAS26RyPBJ/pvN&#xA;JPTmVx8O67+FVUy/xnrv/Kl/8XfuP03+ifrteB9D1/T5f3fKvGvbliqDi0c6d+bIu7jVdFaTVZjN&#xA;b6TLEDqaolnMgktm5VQtwb1G4UZAwrXFU48zfmBPol/f2iaaLxrSO2mjMc5BcXEd03Bl9JuMhezE&#xA;cajlzaRB8NcVS38wZdZi/LjzLNrwjRRPG9qsJEgW29SDYkonIh+dKr0pXFWf28gkgjkClAyghWpU&#xA;A+PEkYqqYq7FUFrWs6doul3OqalMLeytE5zSt4dAAOrMzEKqjck0GAkAWWePHKchGIuUjQHmxLRN&#xA;CvvNs9v5m81RPFaBjLonlmSnpQJX93cXYFfVuXX4qH4YweIFasYACdFzJTlpjPEDEk7GQ326xB+y&#xA;Vc62PDzm80MM8TwzRrLDIpWSNwGVlIoQwOxByxwGE3Pl7VfJ0smp+VI3u9FJL6h5WrUKCSzTadWp&#xA;SQVJMP2XGy8WArVw8APCPh+p2AzHVZIjNMR2rjI+XEeZ7rN0GWaNrOm61plvqemzrcWVyvKKVT4G&#xA;jKw7MrAqyncHY5YDYtwskDGRieh9/wBqNwsEm8x+WLTXBbGaWSCS29ZVki4VaO5haCaM81bZleop&#xA;+0AemxVSuz8iaJocqalFJcz/AFNZ5nErJK8kslvDa+szOBVorW2WJQKDjWtTirFOaf8AQtXP9j9A&#xA;V6dvT8MVRGphm/PLSrlIJhCI1tJpTIFi9YWl9LH+6IJasfPiyuKfEChrzVVnWoea/L2nTXEF7eLB&#xA;LaiJrhWV/hWYSMjEhT8PGCRmPRVUlqAYqxPz3r9lr35feZEs45FNjcRWcy3C8KuJIJKgAlgOMoBB&#xA;owNQwBFMVegoKIo8ABt0xVvFVs00MMTzTOscUYLPI5CqoHUknYDATTKMTI0BZLB7NT5180S3s4WT&#xA;yr5dujHpkdCUvNSh+CW4atA0dq/KNBuDIC37IyI4uLyciRxDFERB8W7J6AdAPvJ9wHVnWTcV2Kux&#xA;Vgutwt5K1mbzPZrTy3qMqnzPaBjSCVyIxqMUdCO4FxxpVfj+IjIEEG72cuMozxeGI/vOLYjqOoP6&#xA;PizoEMAQag7gjoRk3Ediq2ZC8ToACWUgA1puO9N8VeVcT/0Lbx2r+gaU7f3eKojWbP8A5DjoVzbJ&#xA;In7t/rzQwKEetnciNp50bkeNAoV168aHbFWa6r5N8uatczXOoWrTzXCRxSkzTKCkKzIqhVdVUcLq&#xA;VWoPiVyGqMVSX83vSn/LnXIQysQsKSKGA4kzRNRjX4dmBxVmFtFHFbxxRqERFAVVpQbdqYqvZgql&#xA;jWigk0BJ28ANzikC2Aeeb671Xyjax/UWtNU1m+is9Ctrgs3F5q8bm5hFFJggWS59JuVOArv0qA4x&#xA;6h+PNz5zOlyGOKdmqMh39eE8/LiFXv0ZloOi2Gh6NZaPp6FLKwhSCAMasVQU5M37TN1Y9zvlrr0d&#xA;irsVdiqjeWdte2k1ndRiW2uEaKaJujI44sD8wcBAIotmLLLHISialE2GCeQr+38v65deQXu5Lizs&#xA;xXy/NcjjJ6caK89kWooc26yRvHQf3TgD7ByMCOXds26rHIETkABk9QrlVkbe4ginoOTcZQv4I57G&#xA;eGRQ6PGwKtSnT3xV5bwH/QtHDt+gKdf+KvHFUXqAsIPzx08Qwo91eRI9zIBbPJGY7O8UMVMn1lFd&#xA;eKmQJxBUJX42xVPfMvlLzHqOoX9xpuqvYxXUdssaieccZIUuUaQKuyUa4ikCJs7RAN9onFUt/MPy&#xA;/Z6J+XXmVtIWQTX0sV1IJZZJ6zmWFC37wufiCCvid8VZ/biQQRiVi8nEc2IAJPfoAPwxVCXltqc2&#xA;q2DwziHTrf1ZLtB9uVyoSJOlOA5Mzb1qF98hIEkdzk4p4445gi5mhHuA5k+/kB5EsctXg138y7uY&#xA;P61n5UtY4IQD8CalfB2uK02Lx2oiG/QSnJuMzLFXYq7FXYq7FWF+etKW7ubWDTEW18yszano+onZ&#xA;DeWCqghl/wAmeCZ42/yOXcDK7AlXf+hzBjnkwGV+nGQK/rXv7rG/vCf+VvMVr5h0K11WBGgaVStz&#xA;aSbS29xGeE9vKCBR4pAUbbt4ZY4aPvRObSb6uxScIxiYAH4gKjYhv1Yq8trJ/wBC1V/3Z+gP+G9P&#xA;FUzsPL/mFPzQnv5orK50tZfWjb9IzG8tlkgnT1TZCER8ZGYRrWU8RyYDeiKpp5n80ea9Ov76DTNJ&#xA;a+igjtpLaVbe4cM0qXTSRck+FiZLeGPku0fqh3BVTiqW/mFHrdt+XHmR9duI70GaN7ZbaMpxtvVh&#xA;ATj1ryDH7R605HFWf2784I34NGGUEI9OQHgaFh+OKsY1DVrXy9pt7rlqG1u71u7iXTra3KL600iJ&#xA;BBAshPBUHp1Zz0+I9dsrgBubu3L1WWREcZjw+HGq87JJ+1F+Q9Eu9H8sW1vqCouq3DS3uqlDyBvL&#xA;yVrif4v2gryFQfADtljiMgxV2KuxV2KuxVAa3eXVnZpc2tv9ZkWe3R4wpZhFLMkcrKF3qsbFvoyE&#xA;yQLDk6TFHJMxkeEcMvmIkj5nZj+jo2k/mLrWmqVNpr1umtxIBQpcQiKyuQOxDKsD/wCsW8cm4zKb&#xA;2VYrSaRo2lRUJaNKcmFNwKle3viry3kv/QtXKh4/oCvHvT0+mKqWrW31j899PS9YVcRvYpVVlSK2&#xA;t5ZXMZW7aivMq+p/o4Zl4qfgqSq9A1fzt5d0i4ubfUJ5IZLRYpJh6MrDhMk0oZSqnmqx2krMVqFC&#xA;mu+KsY8964Na/LzzLys7ixjtbiO2Q3aPA0qLNCRMA6gqrFjSu/j4Yqzua9s7bTZL2SYLaW8LSyTr&#xA;8YEcalmYcQa0A7DBIgCy2YscpzEYi5SIA95SaTylZzW3leG0nMdh5fuI7qKNk5tOsdnNbRKzVXiQ&#xA;06ylqGpWlN8EIgAAcmeqzTyZZTn9UpEn3siyTQ7FXYq7FXYq7FVG9W5aznW1f07lo3ED0B4uVPE0&#xA;OxofHBK62bMRiJji3je/ued/mXYavFoeieeTfSaRq3lZFutVgjoyT2kjQSX1pKUanCsCt8Nfs7dc&#xA;EboXzTnEBkkIG4WaPl0Z9HqGn32kx39vcRyafeQLNBchgI3imUMjhj2YMCDkmp5pQf8AQtlO36Bp&#xA;Wv8AxX44qjdXgvpPzx0ZvTla3js/V9ZbaQoqrDeRlWuUlWOheYGkkbb8ePXFWbah5X0HUbiW4vrR&#xA;biWdY0lLs5BSH1Ai0rTjSeQEdw7A1BOKsa/NW707Ufy78wW9vcR3JgaK3u0gdZGjkE8RMbhTVXow&#xA;+E0OKsl16XTbby9cjUYmm09oRb3EK7M0c1Iiv2l68/HIZCBE3ycvQwySzR8M1MGwe4jfz7k0JAIB&#xA;NCdh7nrk3EdirqioFdzuB3oMVdirqipFdxuR3ocVdirgQSQDUjY+x64q7FUos9Ha40G50nWymoQX&#xA;Ru4J1ZmkWS1mlkCRuWoa+iwRhkIAgbuTq8kJzuA4RUdvPhHF/srU/L/l1NE8o2vl/wBY3MNjam1j&#xA;kCcCYlBVFCAn7KUUb9sm4zAeA/6Fp4UNP0Bxp3p6dMVZcn5fWiecR5pW+m+uGd5pYfRtAro1qbUR&#xA;GYQi54KOL8TKV5KNsVUfMvkC41nUL66j1Q2aXsdsnprEzlWtkuo/V5eqvxj62rxkAcHjRvixVONV&#xA;8paNqOh3ujGNrW0v+PrG2PpuCgRUKGhC8ViQLtQAAYqlT/lzFJF6c3mLW5kqCRJeAglSGU09OmxF&#xA;RgItlGRibBpi3mEaZplzaRHV/M0shv0smeaWe1jV5A6coZZ7dI5zseIjY1G9aYWKM8s2um+YdU1u&#xA;ws/MHmBf0LNFE0z3hVZkniEqTRVjFY234N+0ByHwlSVUuvp9Ft9b0i1Ot+Y411D6yhub2eewMSQi&#xA;JnKx3dvE0i/GCzDZQCSdsVTfyno9v5isrq6g8x6vwtbqS0LwamLiNmiCliHESdC3E7dRVSylWKrF&#xA;59b0uCC5uv0trv1mPUn0owHU1DssEbzcjWKok2KCKlebKtfirirPrryOLe2lnPmHXnEKNIUS8qzc&#xA;RWijh1OKsJ0W/wBLv4dEmj1/VY5teuprdoBrCM6vCxiDpSKkqkRdar2XdiFKrKvMHlcaPo1zqR1/&#xA;XJfq6ghDf8FqzBQXf024IC1XahotTQ4qxvy9Dolz5g07R7LV/MUMuu6fJrkkxuz6aSn0K25YR0Mv&#xA;GXk4qOPw1+2MAFM5ZDIAHoK/SzRvy/JUgeZddUn9oXor+MZwsEb/AIL0f/Bf+D6zfon6p9R5c/33&#xA;pceNfUp9r3piqfYq7FXYq7FXYq7FXYq7FWLRan5un86SWaW4j8uRk/6U8LKxMMK+onJyvL1ZblPT&#xA;ZVIpFJ4iirKcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirG7/TfNh82J&#xA;f2l0h0X6qsDWZmaMiVpG9SQJ6UicgrKyvX9njQA8sVYlqa/mj5a0WTVrnUrS4Fno9pZBGeacfXxN&#xA;DHJcujJD6vNWkYsXU/ZXj1YqsmGi/mRTfzRYV/7ZLf8AZZiq19H/ADLDRhfM1gys1JD+iiOK8Sa/&#xA;72b70GKr/wBC/mP/ANTRY/8AcJb/ALLMVWHR/wAy/VVR5msDGVYs/wCijswI4in1zvU/diq/9C/m&#xA;P/1NFj/3CW/7LMVWDR/zL9VlPmawEYVSr/oo7sSeQp9c7UH34qv/AEL+Y/8A1NFj/wBwlv8AssxV&#xA;Ymj/AJllpA3mawVVakZ/RRPJeINf97Nt6jFV/wChfzH/AOposf8AuEt/2WYqk+tzfmNpMVl63mKw&#xA;aa/vVsoEOmFEAbm7SO5uzQLBEz0p1+H3xVL9N8yed9Tu9LSz8wQCy1f1Es7yfRZYCzpbpdxlYpbp&#xA;GaOS3ZmDg7EcSK1oqm3+Mte/5Uz/AIs/c/pv9FfXPsH0PX4V/u+VePLty+nFWeYqxzU/OBsPNdto&#xA;clsoguYUkF9JL6YDyGVVUKUIKh4UR25VDSxih5YqwfzT5/bW/Kk1i1vbrNdaXDqciwXJleMi+hh9&#xA;Pg0cYKszNR+X7O6ioxV6zGzMgZkMZPVGpUfPiWH44qgjqdx+lxYjTrk2/Graj+6EAbjy40LiQ+FQ&#xA;lK7ZDiN1Xxcn8vHwuPjjxfzd+L7q+23WWu6TfXU9rZ3KzzW1ROEDFUIPEgtTjUHtXGOSJNBcujy4&#xA;4iU40JcmPad+bPknUddTRLW6la9kuZrNHa3mW3aaAuKLcMohYSGKQRkN8ZVgNwcm4zMMVdirsVdi&#xA;rsVQWqaRZ6nHAlyGrbTx3MDoaMskZ2I9mUlWB6qSMVS2x8meX9JntrrT7SRTYiT6rarIzIplRIiV&#xA;ErUHCKMRovLii1CgVxVhNf8ArG+tP+lF0/554q9VxVASa9pMerfoh7gLqPofWvq9Gr6NSvKtOPVG&#xA;2rXY7Yqw7z95q0DVPJd7BYXizzXFra38KBXHK3kngZX+ID9mVCV+0Ay1AqMVZ7P6/oSehx9fifS5&#xA;1486fDypvSvXAfJlCrHFy6vIjq2s6N58stR1TVXbQ9Ca18r6m0jn0RPfWK3r3sztsWe4a1iqacQ3&#xA;vggCAAW3VZIzyylEcMTIkDuHQM6/MPVrmy8tS2mnqJNZ1lhpekRMOQNzdArzZe6Qxh5pP8hDkiGm&#xA;MiDY2IQk3ljyvoXlW18vXunS6v5eMixypcp9cWDYFZGVuT8fVXlyUHgx5bAbVbYx5fc7D16yZJMR&#xA;k4f6vH+jir3XXUpTHrnmTyPdDQZNMu/MukB+WlXFo0k+oRWj/ZhmWWNYpPQZWUObjkU4kjl1kZgG&#xA;nGx6Wc4GYrhj/SiPsJs/AJ7ofnmS71mPRdY0qbRNSuY2lskllgnjm9NVaWH1IHdVnjVwzRn9n4lL&#xA;CtJ20GJHPqyrFDsVdirsVdiryr/13D/tx/8AGmKsx80+choGr6DYPapLHrdx9V+sPOsPpuXjRAqs&#xA;D6rN6pPFTX4fnRVH3PlfRbjWRrUkLjUliSETxzTR/BG5kX4EdUrUkFqVKkqfhNMVYd558k+WdG8l&#xA;38+nWjRSxW1vZIXmnmAgWe3ULSV3BPGCNeR+KigVoMVZnrum291oc+n+uljBMFi9WgCqGcDiBVPt&#xA;fZG/fIZI3GrpytFlOPLGYjxGO9fD48ubFNC0aHzD5e88W0wVotf1PVLV2YAgiGNdMqev2fqtPo+g&#xA;TcVAeStak83a75avpjybRfL8d5fiteOpan+4Kk7/ABwraXCsP8vFXpuKuxVi3mzyLpeqw3N7BHNB&#xA;rKhLi0uLORYZRd255QSqZA8XqDePk6GqMVaqmmQMQCZAbuXHUSnGOKcv3Ylzq+G+dda613sY0qX8&#xA;2vMtvbxXEs3lW40q2ZZrqSG2ZNR1JZSqExH1WFqIoubqhQkyUVqJUmMrFtWfD4cjGxLzjuPx792V&#xA;+T/MepX82p6PrkcMHmHR5gl1HbB1hmt5hztrmESFm4SLVTVjR0cdsk0slxV2KrZYopUMcqLJG32k&#xA;YAg/MHFXllB/0LfSm36C6f8APPFURr83+MPO+l6fpxEcvlXUPW1JmHqRnhNDIqJcw+qkUpijLGJw&#xA;GINDx+1irI9f8u+Z7vzCdR03VDbWrWP1MQGSUCORmkDzLGA0bNxlVwSAeUSrXixKqsF8xeS/Nmka&#xA;Fqd/qetyXlkbFbZbMzzTKksmoxzRsBNXkYo6xhzuRT4RvyVemeZTpEOi11m7aGyimt5ZLg8QS0M6&#xA;TIrUXjxZowrbDavTrkMgBG/ePvcrRyyRmTAWRGfyMSCfgDY80v8Aywt54vIWjS3C8Lq/hOpXSHqJ&#xA;9RdryYH39Sdq5NxUf5e8o6F5fuNWuNLg9B9ZvGv70VqvrOoDcB+ypYF6fzMx74qnOKuxV2KoLVtH&#xA;07VrX6rfxerGrCSNgSjxyKCFkjdSGRxXZlNcjOAkKLkabVZMMuKBo8vIjuI5EeRYr5v0LXX1rTNQ&#xA;0GH0tXs4TDZ6s0heORa85bPUY6cjbzBBxlXkySb0H7QsggVszGOE8cp8VZAfprYj+ie8d223Jt9a&#xA;/Na8KyWXluy01LZeVzb6leCV7pqD93ayWnqLEBv+8lXfYcB1E3ETzyv5mTXYLsSWc2m6jp1wbTUd&#xA;OuDG0kMvBZV+KJpEZHjkV0YHcHxqMVTiVGdCqu0ZPR14kj5cgw/DFXllP+sb6V/6UXX/AJ54q9Nk&#xA;03T5LuG8e2ia7t+QguCi+ogeocK9KgNXfFWO655q1zTvMMllDpEt3p62PrxzxxTMZLlmZEiEiq0a&#xA;1YIpB+IcuRogJxVhHmDzl5o1fy1q1pqmiy2Nslqk0dyYJo1leO/ijVg0pAj9RDySNqt1JNBuq9Q1&#xA;jQ9L1/TRY6vaCezd0kltJqFWMbBgsiqWVlqN1NQRscjKIPNtxZpYyTHqCPgRRTBVVVCqAqqKKo2A&#xA;A7DJNTeKuxV2KuxV2KuxVIilp5WsLu7eW6m0z1RL6ABn+qo5/eMtKymIE82HxcR0FMq2xgnevudj&#xA;ctZOMQIjJVX9PFXLy4ug5X13SPzdDZ6Vq2jeeNPbisl1a2OtSRO3p3NhfH6tC7qp4N6M80UivQkI&#xA;GHQ5YDbgSiYkgiiGbyuyIWVGkI6IvEE/LkVH44WLyyv/AFjfWn/Si6f888Veq4qlF55r0Gy1WTS7&#xA;q5MV3Fam9lBSQosK8iSZAvDlxjZuFeVBWlMVYd5487+W9Z8n6raafctJcJDFPKjxyR+msd8sDq5d&#xA;VCusiEFTv0PQglV6NHJHIgkjYOjbqykEEexGKrsVdirsVdirsVdirsVdirHPOHlS98waddafDqjW&#xA;dne2r2lxbmFJUHMMFniI9ORJY2YMp5Fdh8PfIGJuwXKx5sfhmMoXLpKyCPfzBHwB81vlDzNd3tre&#xA;WWvLFaa/orrBqyoaQPyFYrmEtuIp1HJQ267qelSYzBJHcxzaaWOMZmjGY2I+0e8dWH1H/Qt9a7fo&#xA;Lr/zzyTjvVcVS298t6He3xvruzjmu2hFs0zA8jCr+oIzvuvInb3I6E4qw/z/AOUfLeleUNRvtPsI&#xA;ra7WGK29dK8jFJeRSuGJPxFpByJO+KvQsVdUff0xV2KuqK07+GKuxV1RWnfwxV2KuqPu64q7FXAg&#xA;9MVYn5k0PzF/irTPMPl5LY3FvbyWupx3UrxJc2zOrJDVEk4ujFpI5OJp8SkUeojvbb6fD3J4gdh0&#xA;o8z79h+Axb/13D/txf8AGmSanquKsZ1vyhfah5ij1i31Q2gS2FqYREXYD98rlJBInDmtxU/Cfjjj&#xA;b9niVWFar+X8GjWdraavqLXVhqEb6SDZQC2uY3luX1GN0klluAyRegsUURQ06g7kYqm/k/S7vzJo&#xA;Fvq8HmvXoo5zIoQy2D7xyNGaOtoFb7Pb5dRiqH80add6NdWsUnmXXJ3eC5uoHa40+JQ9sqKVPK0J&#xA;+JZjvTbFU10Xy1dato9jqlv5x1toL63iuYislnxKyoHFOdlG1N+6g+wxVivm7UV8t6pNb3HmbXLm&#xA;4trYzgRXOneoI24kh4zaDj6hSkfXkwoePJSyrN/8Daj/ANTfrn/B2P8A2SYqwmS+9HzRNpL+adXE&#xA;6XMFjPcC8sH4mWURwoYo7J5PULTKaU4gN8TghgqrNv8AA2o/9Tfrn/B2P/ZJirBNB1dNS8yjRYPM&#xA;uuCW4uGha6iudPliZxatcI6f6GpdPSgozLsCUpyDhsVZpe+UL60s57qTzjrSx28byu0k1hGgCKWJ&#xA;Z2tOKjbcnYYqxXyZO+v3zafF5m1u0l4XE4jM9m7sYZ1Sc0FiAq85lpzZX3+x1oqnXmzSLry55cv9&#xA;bn81eYZ47GL1DDC1iXYkhVG9pRRyIqx2UbnYYqkP+JvJ3+G/+Ve+nd/ob6v+jfr/AKsfrfVvrH1D&#xA;1K8OPq8/3vHj/c/vP8nFXr+KuxVbJDFJx9RFfgwdOQBow6MK9CMVbVVVQqgKo6AbDFVstvBKQZY1&#xA;kIDKCyg0DCjDfxHXFV4AAoNgOgxVTNvbmQymJDIaAvxHIhTUb+xGKpdqesXtrrWladb2QuI7/wBY&#xA;3Fw0jIIUhCGoAjkVmbnsGZenXFWCT/mZqlna3N0nlf65dQmSVhCJYmdhIU4JxguAzxoxjduYJkVx&#xA;xUYqynyh5svddu76Oe0FqltHEwUczSRp7mB05sE5g/VVlRuC1SRdu5VZKkMSU4Iq05UoAKcjVvvO&#xA;5xVcQGBBFQdiD0IxVZHDDH/dxqnwhfhAHwr9kbdhXbFVzokiFJFDowoysKgjwIOKrfQg4cPTXh04&#xA;0FKU49P9XbFX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>218.250000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -431.478 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 431.478 li
195 431.478 li
195 0 li
cp
clp
38.7603 111.147 mo
189.96 111.147 li
189.96 5.04248 li
38.7603 5.04248 li
38.7603 111.147 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
38.7603 111.143 mo
189.96 111.143 li
189.96 5.04248 li
38.7603 5.04248 li
38.7603 111.143 li
cp
clp
1.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
45.9922 18.4155 mo
64.9731 18.8687 li
76.0767 20.5405 li
83.9546 22.2637 li
90.0649 24.0967 li
95.0576 25.8467 li
102.936 29.1123 li
111.656 33.5068 li
114.039 34.9385 li
116.231 36.4404 li
118.26 37.4106 li
120.149 38.5444 li
121.917 39.7725 li
125.142 41.8276 li
129.363 44.8296 li
130.637 45.7065 li
131.855 46.8184 li
133.02 47.4927 li
134.138 48.3174 li
136.245 49.5654 li
137.241 50.4204 li
139.131 52.2085 li
140.029 52.7783 li
141.741 54.1094 li
142.558 54.5776 li
146.315 58.2725 li
147.009 58.5317 li
147.685 59.0015 li
148.345 59.8667 li
148.989 60.4775 li
149.619 60.8408 li
154.715 65.4688 li
155.227 65.8604 li
155.729 66.5317 li
157.183 67.7773 li
157.652 68.4307 li
158.564 69.1348 li
159.01 69.7246 li
159.448 69.8804 li
160.304 70.8467 li
161.134 71.7974 li
161.539 71.9834 li
162.333 72.8047 li
162.722 73.5005 li
163.482 73.8696 li
164.585 74.7856 li
165.296 75.6904 li
165.645 75.8564 li
165.99 76.3926 li
166.33 76.6025 li
171.547 82.0166 li
171.825 82.1143 li
172.1 82.6426 li
172.373 82.6235 li
172.91 83.0737 li
173.436 83.9863 li
173.953 84.5703 li
177.32 87.6094 li
177.546 88.0444 li
177.769 88.2114 li
177.991 87.8657 li
178.429 89.1025 li
179.703 90.1787 li
180.115 90.5088 li
180.318 90.6514 li
181.118 91.7998 li
181.314 91.7705 li
182.463 93.3193 li
182.65 93.2314 li
183.204 93.7217 li
183.566 94.4287 li
183.924 94.3984 li
185.311 96.0938 li
185.48 95.9985 li
185.814 96.5894 li
185.979 96.5127 li
186.307 96.9395 li
186.792 97.4097 li
186.951 97.7905 li
187.11 97.7998 li
187.582 98.1768 li
188.348 98.2168 li
188.5 98.3696 li
188.798 98.2964 li
188.947 98.9116 li
189.241 99.0674 li
190.388 100.649 li
190.944 100.967 li
191.354 101.67 li
191.489 101.706 li
191.625 101.542 li
191.758 101.862 li
192.024 101.831 li
192.806 102.344 li
192.934 102.705 li
193.189 102.741 li
193.441 103.013 li
193.567 102.862 li
194.062 103.409 li
194.307 103.199 li
194.428 103.177 li
194.549 103.557 li
194.789 103.208 li
195.028 104.038 li
195.381 104.301 li
195.614 104.458 li
195.73 104.5 li
195.845 104.39 li
196.074 104.686 li
196.188 104.713 li
196.301 104.867 li
196.639 104.773 li
196.75 105.101 li
196.861 104.316 li
196.972 100.956 li
197.192 105.155 li
197.627 105.432 li
197.734 105.335 li
197.842 105.519 li
197.948 105.391 li
198.161 93.5835 li
198.371 105.475 li
198.476 105.576 li
198.684 106.096 li
198.788 106.164 li
199.096 105.817 li
199.3 106.114 li
199.401 106.078 li
199.602 106.314 li
200.197 106.418 li
200.295 106.607 li
200.393 106.521 li
200.587 106.639 li
200.684 106.339 li
201.162 106.918 li
201.256 106.759 li
201.445 106.886 li
201.632 106.778 li
201.817 106.66 li
201.91 106.476 li
202.002 106.662 li
202.093 106.576 li
202.276 106.351 li
202.637 106.417 li
202.727 106.415 li
202.905 106.164 li
202.994 106.164 li
203.259 105.556 li
203.346 105.646 li
203.608 104.328 li
204.038 101.368 li
204.545 102.818 li
204.96 106.805 li
205.125 107.181 li
205.207 107.05 li
205.37 107.236 li
205.532 107.04 li
205.612 107.254 li
205.693 107.191 li
205.773 107.361 li
205.853 107.17 li
206.012 107.368 li
206.091 107.406 li
206.17 107.688 li
206.25 107.635 li
206.328 107.421 li
206.484 107.678 li
206.794 107.761 li
206.872 107.586 li
206.948 107.651 li
207.101 107.457 li
207.177 106.795 li
207.329 107.731 li
207.405 107.585 li
207.48 107.688 li
207.779 107.378 li
207.854 107.514 li
208.002 107.004 li
208.075 105.639 li
208.295 106.858 li
208.368 106.788 li
208.514 107.101 li
208.658 107.3 li
208.945 107.567 li
209.158 108.172 li
209.509 108.202 li
209.857 108.328 li
209.994 108.331 li
210.063 108.107 li
210.131 108.144 li
210.199 108.43 li
210.267 108.294 li
210.335 108.216 li
210.403 108.386 li
210.47 108.284 li
210.605 108.239 li
210.672 108.434 li
210.739 108.399 li
210.806 108.355 li
210.938 107.814 li
211.005 108.154 li
211.071 108.05 li
211.137 108.122 li
211.202 108.05 li
211.333 108.105 li
211.399 108.247 li
211.529 107.744 li
211.658 108.108 li
211.723 107.977 li
211.787 108.049 li
211.916 107.977 li
212.107 107.294 li
212.297 106.458 li
212.423 106.562 li
212.56 107.375 li
212.56 107.375 li
0 0 0 1 cmyk
@
0 lc
[6 6 ] 0 dsh
52.6914 16.9727 mo
71.6729 23.8467 li
82.7759 28.1807 li
105.978 36.6318 li
112.86 39.0386 li
115.745 40.2578 li
122.93 44.1514 li
126.849 46.6748 li
131.841 50.4224 li
139.719 56.8857 li
144.902 61.7896 li
148.44 65.2026 li
152.303 69.1665 li
155.044 72.1675 li
161.414 79.2627 li
164.351 82.7734 li
167.833 86.9497 li
170.922 90.9214 li
180.652 103.732 li
182.627 106.326 li
187.018 111.663 li
189.72 114.526 li
192.513 116.879 li
194.59 118.19 li
196.805 119.299 li
198.855 120.101 li
201.489 120.866 li
204.326 121.444 li
206.995 121.767 li
208.793 121.839 li
208.793 121.839 li
0 .993988 1 0 cmyk
@
grestore
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
44.8706 5.04248 mo
44.8706 9.04248 li
44.8706 111.147 mo
44.8706 107.147 li
0 0 0 1 cmyk
@
37.9761 123.362 mo
37.9761 122.946 li
38.9922 122.946 li
38.9922 118.099 li
37.8159 118.858 li
37.8159 118.347 li
39.2402 117.427 li
39.7759 117.427 li
39.7759 122.946 li
40.792 122.946 li
40.792 123.362 li
37.9761 123.362 li
37.9761 123.362 li
cp
ef
44.4238 123.467 mo
43.7842 123.467 43.2881 123.203 42.936 122.675 cv
42.584 122.146 42.4082 121.411 42.4082 120.451 cv
42.4082 119.499 42.584 118.754 42.936 118.227 cv
43.2881 117.699 43.7842 117.427 44.4238 117.427 cv
45.0562 117.427 45.5522 117.699 45.9038 118.227 cv
46.2559 118.754 46.4399 119.499 46.4399 120.451 cv
46.4399 121.411 46.2559 122.146 45.9038 122.675 cv
45.5522 123.203 45.0562 123.467 44.4238 123.467 cv
44.4238 123.467 li
cp
44.4238 123.09 mo
44.8242 123.09 45.1201 122.875 45.3198 122.435 cv
45.5122 122.002 45.6162 121.338 45.6162 120.451 cv
45.6162 119.57 45.5122 118.907 45.3198 118.467 cv
45.1201 118.035 44.8242 117.811 44.4238 117.811 cv
44.0239 117.811 43.7202 118.035 43.5278 118.467 cv
43.3281 118.907 43.2319 119.57 43.2319 120.451 cv
43.2319 121.338 43.3281 122.002 43.5278 122.435 cv
43.7202 122.875 44.0239 123.09 44.4238 123.09 cv
ef
47.7031 115.374 mo
47.916 115.295 48.1177 115.234 48.3135 115.189 cv
48.5098 115.15 48.6943 115.127 48.8682 115.127 cv
49.2656 115.127 49.5791 115.217 49.8032 115.385 cv
50.0273 115.559 50.1392 115.799 50.1392 116.102 cv
50.1392 116.348 50.061 116.555 49.9038 116.718 cv
49.7471 116.886 49.5288 116.998 49.249 117.054 cv
49.585 117.104 49.8423 117.228 50.0273 117.423 cv
50.2119 117.619 50.3071 117.871 50.3071 118.179 cv
50.3071 118.56 50.1782 118.852 49.9209 119.053 cv
49.6631 119.254 49.2993 119.355 48.8179 119.355 cv
48.605 119.355 48.3921 119.333 48.1904 119.288 cv
47.9888 119.249 47.7871 119.182 47.5854 119.086 cv
47.5854 118.292 li
47.8936 118.292 li
47.9106 118.56 48 118.756 48.1567 118.891 cv
48.3135 119.025 48.5376 119.092 48.8286 119.092 cv
49.1089 119.092 49.3271 119.014 49.4897 118.852 cv
49.6465 118.689 49.7305 118.465 49.7305 118.185 cv
49.7305 117.866 49.6465 117.625 49.4785 117.457 cv
49.3105 117.294 49.0698 117.21 48.7505 117.21 cv
48.4927 117.21 li
48.4927 116.931 li
48.6274 116.931 li
48.9463 116.931 49.187 116.869 49.3442 116.734 cv
49.501 116.6 49.585 116.404 49.585 116.135 cv
49.585 115.9 49.5176 115.715 49.3887 115.586 cv
49.2544 115.463 49.0698 115.396 48.8232 115.396 cv
48.5767 115.396 48.3809 115.458 48.2466 115.575 cv
48.1118 115.693 48.0337 115.867 48.0112 116.09 cv
47.7031 116.09 li
47.7031 115.374 li
47.7031 115.374 li
cp
ef
107.925 5.04248 mo
107.925 9.04248 li
107.925 111.147 mo
107.925 107.147 li
@
101.096 123.362 mo
101.096 122.946 li
102.112 122.946 li
102.112 118.099 li
100.936 118.858 li
100.936 118.347 li
102.36 117.427 li
102.896 117.427 li
102.896 122.946 li
103.912 122.946 li
103.912 123.362 li
101.096 123.362 li
101.096 123.362 li
cp
ef
107.544 123.467 mo
106.904 123.467 106.408 123.203 106.056 122.675 cv
105.704 122.146 105.528 121.411 105.528 120.451 cv
105.528 119.499 105.704 118.754 106.056 118.227 cv
106.408 117.699 106.904 117.427 107.544 117.427 cv
108.176 117.427 108.672 117.699 109.024 118.227 cv
109.376 118.754 109.56 119.499 109.56 120.451 cv
109.56 121.411 109.376 122.146 109.024 122.675 cv
108.672 123.203 108.176 123.467 107.544 123.467 cv
107.544 123.467 li
cp
107.544 123.09 mo
107.944 123.09 108.24 122.875 108.44 122.435 cv
108.632 122.002 108.736 121.338 108.736 120.451 cv
108.736 119.57 108.632 118.907 108.44 118.467 cv
108.24 118.035 107.944 117.811 107.544 117.811 cv
107.144 117.811 106.84 118.035 106.648 118.467 cv
106.448 118.907 106.352 119.57 106.352 120.451 cv
106.352 121.338 106.448 122.002 106.648 122.435 cv
106.84 122.875 107.144 123.09 107.544 123.09 cv
ef
113.199 119.283 mo
111.339 119.283 li
111.339 118.991 li
111.995 118.991 li
111.995 118.19 li
110.213 118.19 li
110.213 117.894 li
112 115.127 li
112.543 115.127 li
112.543 117.899 li
113.322 117.899 li
113.322 118.19 li
112.543 118.19 li
112.543 118.991 li
113.199 118.991 li
113.199 119.283 li
113.199 119.283 li
cp
111.995 117.899 mo
111.995 115.727 li
110.6 117.899 li
111.995 117.899 li
ef
170.979 5.04248 mo
170.979 9.04248 li
170.979 111.147 mo
170.979 107.147 li
@
164.216 123.123 mo
164.216 122.707 li
165.232 122.707 li
165.232 117.858 li
164.056 118.619 li
164.056 118.106 li
165.48 117.187 li
166.016 117.187 li
166.016 122.707 li
167.032 122.707 li
167.032 123.123 li
164.216 123.123 li
164.216 123.123 li
cp
ef
170.664 123.227 mo
170.024 123.227 169.528 122.962 169.176 122.435 cv
168.824 121.907 168.648 121.17 168.648 120.21 cv
168.648 119.259 168.824 118.515 169.176 117.986 cv
169.528 117.458 170.024 117.187 170.664 117.187 cv
171.296 117.187 171.792 117.458 172.144 117.986 cv
172.496 118.515 172.68 119.259 172.68 120.21 cv
172.68 121.17 172.496 121.907 172.144 122.435 cv
171.792 122.962 171.296 123.227 170.664 123.227 cv
170.664 123.227 li
cp
170.664 122.851 mo
171.064 122.851 171.36 122.635 171.56 122.194 cv
171.752 121.763 171.856 121.099 171.856 120.21 cv
171.856 119.331 171.752 118.667 171.56 118.227 cv
171.36 117.794 171.064 117.57 170.664 117.57 cv
170.264 117.57 169.96 117.794 169.768 118.227 cv
169.568 118.667 169.472 119.331 169.472 120.21 cv
169.472 121.099 169.568 121.763 169.768 122.194 cv
169.96 122.635 170.264 122.851 170.664 122.851 cv
ef
175.977 115.2 mo
175.977 115.648 li
174.107 115.648 li
174.107 116.818 li
174.196 116.751 174.308 116.707 174.437 116.673 cv
174.56 116.639 174.706 116.623 174.863 116.623 cv
175.299 116.623 175.646 116.746 175.904 116.992 cv
176.162 117.239 176.291 117.569 176.291 117.989 cv
176.291 118.426 176.162 118.762 175.904 118.997 cv
175.646 119.238 175.283 119.355 174.818 119.355 cv
174.627 119.355 174.437 119.333 174.241 119.288 cv
174.04 119.249 173.837 119.182 173.636 119.086 cv
173.636 118.292 li
173.944 118.292 li
173.96 118.555 174.044 118.756 174.191 118.891 cv
174.336 119.025 174.549 119.092 174.818 119.092 cv
175.103 119.092 175.322 118.997 175.478 118.807 cv
175.635 118.616 175.713 118.347 175.713 117.989 cv
175.713 117.636 175.635 117.367 175.484 117.177 cv
175.328 116.986 175.109 116.892 174.818 116.892 cv
174.65 116.892 174.504 116.925 174.38 116.981 cv
174.257 117.037 174.146 117.126 174.05 117.25 cv
173.815 117.25 li
173.815 115.2 li
175.977 115.2 li
175.977 115.2 li
cp
ef
189.96 5.04248 mo
189.96 7.04248 li
189.96 111.147 mo
189.96 109.147 li
168.094 5.04248 mo
168.094 7.04248 li
168.094 111.147 mo
168.094 109.147 li
164.868 5.04248 mo
164.868 7.04248 li
164.868 111.147 mo
164.868 109.147 li
161.212 5.04248 mo
161.212 7.04248 li
161.212 111.147 mo
161.212 109.147 li
156.99 5.04248 mo
156.99 7.04248 li
156.99 111.147 mo
156.99 109.147 li
151.998 5.04248 mo
151.998 7.04248 li
151.998 111.147 mo
151.998 109.147 li
145.887 5.04248 mo
145.887 7.04248 li
145.887 111.147 mo
145.887 109.147 li
138.009 5.04248 mo
138.009 7.04248 li
138.009 111.147 mo
138.009 109.147 li
126.906 5.04248 mo
126.906 7.04248 li
126.906 111.147 mo
126.906 109.147 li
105.039 5.04248 mo
105.039 7.04248 li
105.039 111.147 mo
105.039 109.147 li
101.814 5.04248 mo
101.814 7.04248 li
101.814 111.147 mo
101.814 109.147 li
98.1572 5.04248 mo
98.1572 7.04248 li
98.1572 111.147 mo
98.1572 109.147 li
93.936 5.04248 mo
93.936 7.04248 li
93.936 111.147 mo
93.936 109.147 li
88.9434 5.04248 mo
88.9434 7.04248 li
88.9434 111.147 mo
88.9434 109.147 li
82.833 5.04248 mo
82.833 7.04248 li
82.833 111.147 mo
82.833 109.147 li
74.9551 5.04248 mo
74.9551 7.04248 li
74.9551 111.147 mo
74.9551 109.147 li
63.8521 5.04248 mo
63.8521 7.04248 li
63.8521 111.147 mo
63.8521 109.147 li
41.9854 5.04248 mo
41.9854 7.04248 li
41.9854 111.147 mo
41.9854 109.147 li
38.7603 5.04248 mo
38.7603 7.04248 li
38.7603 111.147 mo
38.7603 109.147 li
@
105.75 131.31 mo
105.327 131.31 li
105.318 131.094 105.255 130.922 105.138 130.806 cv
105.012 130.698 104.841 130.635 104.607 130.635 cv
104.301 130.635 104.094 130.725 103.968 130.887 cv
103.842 131.048 103.788 131.346 103.788 131.769 cv
103.788 132.372 li
105.093 132.372 li
105.093 132.839 li
103.788 132.839 li
103.788 136.575 li
104.823 136.575 li
104.823 137.042 li
102.204 137.042 li
102.204 136.575 li
102.978 136.575 li
102.978 132.839 li
102.204 132.839 li
102.204 132.372 li
102.978 132.372 li
102.978 131.787 li
102.978 131.265 103.113 130.877 103.383 130.607 cv
103.653 130.337 104.049 130.203 104.58 130.203 cv
104.778 130.203 104.967 130.221 105.166 130.256 cv
105.363 130.292 105.552 130.347 105.75 130.418 cv
105.75 131.31 li
105.75 131.31 li
cp
ef
110.991 138.438 mo
110.271 138.113 109.731 137.609 109.371 136.926 cv
109.011 136.242 108.832 135.369 108.832 134.325 cv
108.832 133.281 109.011 132.417 109.371 131.724 cv
109.731 131.031 110.271 130.526 110.991 130.203 cv
110.991 130.635 li
110.542 130.95 110.217 131.391 110.019 131.949 cv
109.821 132.516 109.722 133.308 109.722 134.325 cv
109.722 135.351 109.821 136.143 110.019 136.701 cv
110.217 137.259 110.542 137.69 110.991 138.005 cv
110.991 138.438 li
110.991 138.438 li
cp
ef
111.975 137.042 mo
111.975 136.575 li
112.812 136.575 li
112.812 130.95 li
111.975 130.95 li
111.975 130.481 li
114.541 130.481 li
114.541 130.95 li
113.703 130.95 li
113.703 133.218 li
117.105 133.218 li
117.105 130.95 li
116.268 130.95 li
116.268 130.481 li
118.833 130.481 li
118.833 130.95 li
117.996 130.95 li
117.996 136.575 li
118.833 136.575 li
118.833 137.042 li
116.268 137.042 li
116.268 136.575 li
117.105 136.575 li
117.105 133.757 li
113.703 133.757 li
113.703 136.575 li
114.541 136.575 li
114.541 137.042 li
111.975 137.042 li
111.975 137.042 li
cp
ef
119.76 137.042 mo
119.76 136.665 li
122.685 132.839 li
120.373 132.839 li
120.373 133.649 li
119.904 133.649 li
119.904 132.372 li
123.729 132.372 li
123.729 132.75 li
120.804 136.575 li
123.342 136.575 li
123.342 135.729 li
123.81 135.729 li
123.81 137.042 li
119.76 137.042 li
119.76 137.042 li
cp
ef
124.839 138.438 mo
124.839 138.005 li
125.289 137.69 125.613 137.259 125.811 136.701 cv
126.009 136.143 126.108 135.351 126.108 134.325 cv
126.108 133.308 126.009 132.516 125.811 131.949 cv
125.613 131.391 125.289 130.95 124.839 130.635 cv
124.839 130.203 li
125.55 130.526 126.09 131.031 126.45 131.724 cv
126.81 132.417 127 133.281 127 134.325 cv
127 135.369 126.81 136.242 126.45 136.926 cv
126.09 137.609 125.55 138.113 124.839 138.438 cv
124.839 138.438 li
cp
ef
189.96 111.147 mo
185.96 111.147 li
38.7603 111.147 mo
42.7603 111.147 li
@
14.936 114.243 mo
14.936 113.827 li
15.9521 113.827 li
15.9521 108.979 li
14.7759 109.739 li
14.7759 109.227 li
16.2002 108.307 li
16.7358 108.307 li
16.7358 113.827 li
17.752 113.827 li
17.752 114.243 li
14.936 114.243 li
14.936 114.243 li
cp
ef
21.3843 114.347 mo
20.7441 114.347 20.248 114.083 19.896 113.555 cv
19.5439 113.026 19.3682 112.291 19.3682 111.331 cv
19.3682 110.378 19.5439 109.635 19.896 109.106 cv
20.248 108.579 20.7441 108.307 21.3843 108.307 cv
22.0161 108.307 22.5122 108.579 22.8643 109.106 cv
23.2163 109.635 23.3999 110.378 23.3999 111.331 cv
23.3999 112.291 23.2163 113.026 22.8643 113.555 cv
22.5122 114.083 22.0161 114.347 21.3843 114.347 cv
21.3843 114.347 li
cp
21.3843 113.971 mo
21.7842 113.971 22.0801 113.754 22.2803 113.314 cv
22.4722 112.882 22.5762 112.219 22.5762 111.331 cv
22.5762 110.451 22.4722 109.787 22.2803 109.347 cv
22.0801 108.915 21.7842 108.69 21.3843 108.69 cv
20.9839 108.69 20.6802 108.915 20.4883 109.347 cv
20.2881 109.787 20.1919 110.451 20.1919 111.331 cv
20.1919 112.219 20.2881 112.882 20.4883 113.314 cv
20.6802 113.754 20.9839 113.971 21.3843 113.971 cv
ef
24.1265 108.689 mo
25.5264 108.689 li
25.5264 109.115 li
24.1265 109.115 li
24.1265 108.689 li
24.1265 108.689 li
cp
ef
26.5952 110.402 mo
26.5952 110.111 li
27.3066 110.111 li
27.3066 106.718 li
26.4834 107.25 li
26.4834 106.892 li
27.48 106.248 li
27.8555 106.248 li
27.8555 110.111 li
28.5664 110.111 li
28.5664 110.402 li
26.5952 110.402 li
26.5952 110.402 li
cp
ef
30.1167 107.294 mo
29.8091 107.294 li
29.8091 106.566 li
29.9995 106.466 30.1953 106.387 30.397 106.332 cv
30.5928 106.275 30.7891 106.248 30.979 106.248 cv
31.4048 106.248 31.7407 106.354 31.9873 106.555 cv
32.2339 106.763 32.3569 107.042 32.3569 107.396 cv
32.3569 107.798 32.0767 108.274 31.5171 108.829 cv
31.4722 108.874 31.4438 108.902 31.4219 108.924 cv
30.3911 109.955 li
32.0938 109.955 li
32.0938 109.451 li
32.4131 109.451 li
32.4131 110.402 li
29.7808 110.402 li
29.7808 110.106 li
31.0186 108.868 li
31.2871 108.599 31.4834 108.347 31.6011 108.118 cv
31.7183 107.888 31.7803 107.647 31.7803 107.396 cv
31.7803 107.121 31.707 106.908 31.5615 106.751 cv
31.416 106.595 31.2202 106.516 30.9736 106.516 cv
30.7104 106.516 30.5088 106.583 30.3687 106.712 cv
30.2231 106.841 30.1392 107.037 30.1167 107.294 cv
30.1167 107.294 li
cp
ef
189.96 95.9897 mo
185.96 95.9897 li
38.7603 95.9897 mo
42.7603 95.9897 li
@
14.936 99.1226 mo
14.936 98.7065 li
15.9521 98.7065 li
15.9521 93.8584 li
14.7759 94.6187 li
14.7759 94.1064 li
16.2002 93.1865 li
16.7358 93.1865 li
16.7358 98.7065 li
17.752 98.7065 li
17.752 99.1226 li
14.936 99.1226 li
14.936 99.1226 li
cp
ef
21.3843 99.2266 mo
20.7441 99.2266 20.248 98.9624 19.896 98.4346 cv
19.5439 97.9067 19.3682 97.1704 19.3682 96.2104 cv
19.3682 95.2588 19.5439 94.5146 19.896 93.9863 cv
20.248 93.4585 20.7441 93.1865 21.3843 93.1865 cv
22.0161 93.1865 22.5122 93.4585 22.8643 93.9863 cv
23.2163 94.5146 23.3999 95.2588 23.3999 96.2104 cv
23.3999 97.1704 23.2163 97.9067 22.8643 98.4346 cv
22.5122 98.9624 22.0161 99.2266 21.3843 99.2266 cv
21.3843 99.2266 li
cp
21.3843 98.8506 mo
21.7842 98.8506 22.0801 98.6348 22.2803 98.1943 cv
22.4722 97.7627 22.5762 97.0986 22.5762 96.2104 cv
22.5762 95.3306 22.4722 94.6665 22.2803 94.2266 cv
22.0801 93.7944 21.7842 93.5703 21.3843 93.5703 cv
20.9839 93.5703 20.6802 93.7944 20.4883 94.2266 cv
20.2881 94.6665 20.1919 95.3306 20.1919 96.2104 cv
20.1919 97.0986 20.2881 97.7627 20.4883 98.1943 cv
20.6802 98.6348 20.9839 98.8506 21.3843 98.8506 cv
ef
24.1265 93.3291 mo
25.5264 93.3291 li
25.5264 93.7544 li
24.1265 93.7544 li
24.1265 93.3291 li
24.1265 93.3291 li
cp
ef
26.5952 95.0425 mo
26.5952 94.7515 li
27.3066 94.7515 li
27.3066 91.3579 li
26.4834 91.8896 li
26.4834 91.5313 li
27.48 90.8872 li
27.8555 90.8872 li
27.8555 94.7515 li
28.5664 94.7515 li
28.5664 95.0425 li
26.5952 95.0425 li
26.5952 95.0425 li
cp
ef
30.1953 95.0425 mo
30.1953 94.7515 li
30.9063 94.7515 li
30.9063 91.3579 li
30.0835 91.8896 li
30.0835 91.5313 li
31.0801 90.8872 li
31.4551 90.8872 li
31.4551 94.7515 li
32.1665 94.7515 li
32.1665 95.0425 li
30.1953 95.0425 li
30.1953 95.0425 li
cp
ef
189.96 80.8315 mo
185.96 80.8315 li
38.7603 80.8315 mo
42.7603 80.8315 li
@
14.936 84.0024 mo
14.936 83.5864 li
15.9521 83.5864 li
15.9521 78.7383 li
14.7759 79.4985 li
14.7759 78.9863 li
16.2002 78.0664 li
16.7358 78.0664 li
16.7358 83.5864 li
17.752 83.5864 li
17.752 84.0024 li
14.936 84.0024 li
14.936 84.0024 li
cp
ef
21.3843 84.1064 mo
20.7441 84.1064 20.248 83.8428 19.896 83.3145 cv
19.5439 82.7866 19.3682 82.0508 19.3682 81.0903 cv
19.3682 80.1387 19.5439 79.3945 19.896 78.8667 cv
20.248 78.3384 20.7441 78.0664 21.3843 78.0664 cv
22.0161 78.0664 22.5122 78.3384 22.8643 78.8667 cv
23.2163 79.3945 23.3999 80.1387 23.3999 81.0903 cv
23.3999 82.0508 23.2163 82.7866 22.8643 83.3145 cv
22.5122 83.8428 22.0161 84.1064 21.3843 84.1064 cv
21.3843 84.1064 li
cp
21.3843 83.7305 mo
21.7842 83.7305 22.0801 83.5146 22.2803 83.0747 cv
22.4722 82.6426 22.5762 81.9785 22.5762 81.0903 cv
22.5762 80.2104 22.4722 79.5464 22.2803 79.1064 cv
22.0801 78.6748 21.7842 78.4507 21.3843 78.4507 cv
20.9839 78.4507 20.6802 78.6748 20.4883 79.1064 cv
20.2881 79.5464 20.1919 80.2104 20.1919 81.0903 cv
20.1919 81.9785 20.2881 82.6426 20.4883 83.0747 cv
20.6802 83.5146 20.9839 83.7305 21.3843 83.7305 cv
ef
24.1265 78.209 mo
25.5264 78.209 li
25.5264 78.6348 li
24.1265 78.6348 li
24.1265 78.209 li
24.1265 78.209 li
cp
ef
26.5952 79.9224 mo
26.5952 79.6313 li
27.3066 79.6313 li
27.3066 76.2378 li
26.4834 76.7695 li
26.4834 76.4111 li
27.48 75.7676 li
27.8555 75.7676 li
27.8555 79.6313 li
28.5664 79.6313 li
28.5664 79.9224 li
26.5952 79.9224 li
26.5952 79.9224 li
cp
ef
31.1807 79.9951 mo
30.7329 79.9951 30.3857 79.8105 30.1392 79.4409 cv
29.8931 79.0713 29.7695 78.5562 29.7695 77.8843 cv
29.7695 77.2178 29.8931 76.6968 30.1392 76.3271 cv
30.3857 75.958 30.7329 75.7676 31.1807 75.7676 cv
31.623 75.7676 31.9702 75.958 32.2168 76.3271 cv
32.4634 76.6968 32.5923 77.2178 32.5923 77.8843 cv
32.5923 78.5562 32.4634 79.0713 32.2168 79.4409 cv
31.9702 79.8105 31.623 79.9951 31.1807 79.9951 cv
31.1807 79.9951 li
cp
31.1807 79.7319 mo
31.4609 79.7319 31.668 79.5811 31.8081 79.2729 cv
31.9424 78.9707 32.0151 78.5059 32.0151 77.8843 cv
32.0151 77.2681 31.9424 76.8032 31.8081 76.4951 cv
31.668 76.1929 31.4609 76.0361 31.1807 76.0361 cv
30.9009 76.0361 30.688 76.1929 30.5537 76.4951 cv
30.4136 76.8032 30.3467 77.2681 30.3467 77.8843 cv
30.3467 78.5059 30.4136 78.9707 30.5537 79.2729 cv
30.688 79.5811 30.9009 79.7319 31.1807 79.7319 cv
ef
189.96 65.6748 mo
185.96 65.6748 li
38.7603 65.6748 mo
42.7603 65.6748 li
@
17.8159 68.8828 mo
17.8159 68.4668 li
18.832 68.4668 li
18.832 63.6187 li
17.6563 64.3784 li
17.6563 63.8667 li
19.0801 62.9463 li
19.6162 62.9463 li
19.6162 68.4668 li
20.6318 68.4668 li
20.6318 68.8828 li
17.8159 68.8828 li
17.8159 68.8828 li
cp
ef
24.5039 68.9863 mo
23.8643 68.9863 23.3682 68.7227 23.0161 68.1943 cv
22.6641 67.6665 22.4883 66.9307 22.4883 65.9707 cv
22.4883 65.0186 22.6641 64.2744 23.0161 63.7466 cv
23.3682 63.2188 23.8643 62.9463 24.5039 62.9463 cv
25.1362 62.9463 25.6318 63.2188 25.9839 63.7466 cv
26.3359 64.2744 26.52 65.0186 26.52 65.9707 cv
26.52 66.9307 26.3359 67.6665 25.9839 68.1943 cv
25.6318 68.7227 25.1362 68.9863 24.5039 68.9863 cv
24.5039 68.9863 li
cp
24.5039 68.6104 mo
24.9038 68.6104 25.2002 68.3945 25.3999 67.9546 cv
25.5923 67.5225 25.6963 66.8584 25.6963 65.9707 cv
25.6963 65.0908 25.5923 64.4268 25.3999 63.9863 cv
25.2002 63.5547 24.9038 63.3306 24.5039 63.3306 cv
24.104 63.3306 23.8003 63.5547 23.6079 63.9863 cv
23.4082 64.4268 23.312 65.0908 23.312 65.9707 cv
23.312 66.8584 23.4082 67.5225 23.6079 67.9546 cv
23.8003 68.3945 24.104 68.6104 24.5039 68.6104 cv
ef
27.2466 63.0889 mo
28.6465 63.0889 li
28.6465 63.5146 li
27.2466 63.5146 li
27.2466 63.0889 li
27.2466 63.0889 li
cp
ef
30.6504 60.916 mo
30.3931 60.916 30.1914 61.0112 30.0566 61.2017 cv
29.917 61.3921 29.8496 61.6611 29.8496 62.0137 cv
29.8496 62.3721 29.917 62.6411 30.0566 62.8315 cv
30.1914 63.0215 30.3931 63.1113 30.6504 63.1113 cv
30.9082 63.1113 31.104 63.0215 31.2441 62.8369 cv
31.3784 62.6577 31.4512 62.3945 31.4512 62.0474 cv
31.4512 61.689 31.3784 61.4092 31.2441 61.2129 cv
31.104 61.0171 30.9082 60.916 30.6504 60.916 cv
30.6504 60.916 li
cp
31.541 62.9712 mo
31.4175 63.1113 31.272 63.2119 31.1152 63.2793 cv
30.9585 63.3467 30.7793 63.3799 30.5835 63.3799 cv
30.1743 63.3799 29.8555 63.2627 29.6201 63.0161 cv
29.3848 62.7695 29.2729 62.4395 29.2729 62.0137 cv
29.2729 61.5996 29.396 61.269 29.6538 61.0225 cv
29.9058 60.7764 30.2471 60.6475 30.6729 60.6475 cv
31.1318 60.6475 31.4902 60.8208 31.7368 61.1626 cv
31.9834 61.5098 32.1064 61.9971 32.1064 62.6353 cv
32.1064 63.3521 31.9551 63.9009 31.6641 64.293 cv
31.373 64.6851 30.9585 64.8755 30.4263 64.8755 cv
30.2808 64.8755 30.1299 64.8584 29.9727 64.8359 cv
29.8159 64.8135 29.6538 64.7744 29.4858 64.7188 cv
29.4858 64.041 li
29.7935 64.041 li
29.8159 64.2256 29.8833 64.3657 30.0063 64.4668 cv
30.124 64.5674 30.2808 64.6123 30.4824 64.6123 cv
30.8354 64.6123 31.0986 64.4834 31.272 64.2144 cv
31.4399 63.9458 31.5298 63.5313 31.541 62.9712 cv
ef
189.96 50.5166 mo
185.96 50.5166 li
38.7603 50.5166 mo
42.7603 50.5166 li
@
17.8159 53.7627 mo
17.8159 53.3467 li
18.832 53.3467 li
18.832 48.4985 li
17.6563 49.2588 li
17.6563 48.7466 li
19.0801 47.8267 li
19.6162 47.8267 li
19.6162 53.3467 li
20.6318 53.3467 li
20.6318 53.7627 li
17.8159 53.7627 li
17.8159 53.7627 li
cp
ef
24.5039 53.8667 mo
23.8643 53.8667 23.3682 53.6025 23.0161 53.0747 cv
22.6641 52.5464 22.4883 51.8105 22.4883 50.8506 cv
22.4883 49.8984 22.6641 49.1543 23.0161 48.6265 cv
23.3682 48.0986 23.8643 47.8267 24.5039 47.8267 cv
25.1362 47.8267 25.6318 48.0986 25.9839 48.6265 cv
26.3359 49.1543 26.52 49.8984 26.52 50.8506 cv
26.52 51.8105 26.3359 52.5464 25.9839 53.0747 cv
25.6318 53.6025 25.1362 53.8667 24.5039 53.8667 cv
24.5039 53.8667 li
cp
24.5039 53.4907 mo
24.9038 53.4907 25.2002 53.2744 25.3999 52.8345 cv
25.5923 52.4023 25.6963 51.7383 25.6963 50.8506 cv
25.6963 49.9707 25.5923 49.3066 25.3999 48.8667 cv
25.2002 48.4346 24.9038 48.2104 24.5039 48.2104 cv
24.104 48.2104 23.8003 48.4346 23.6079 48.8667 cv
23.4082 49.3066 23.312 49.9707 23.312 50.8506 cv
23.312 51.7383 23.4082 52.4023 23.6079 52.8345 cv
23.8003 53.2744 24.104 53.4907 24.5039 53.4907 cv
ef
27.2466 47.9688 mo
28.6465 47.9688 li
28.6465 48.3945 li
27.2466 48.3945 li
27.2466 47.9688 li
27.2466 47.9688 li
cp
ef
31.4175 46.5859 mo
31.4175 46.3394 31.3506 46.1436 31.2271 46.0034 cv
31.0986 45.8691 30.9248 45.7959 30.7007 45.7959 cv
30.4771 45.7959 30.2979 45.8691 30.1743 46.0034 cv
30.0454 46.1436 29.9839 46.3394 29.9839 46.5859 cv
29.9839 46.8379 30.0454 47.0337 30.1743 47.168 cv
30.2979 47.3081 30.4771 47.3755 30.7007 47.3755 cv
30.9248 47.3755 31.0986 47.3081 31.2271 47.168 cv
31.3506 47.0337 31.4175 46.8379 31.4175 46.5859 cv
31.4175 46.5859 li
cp
31.1206 47.5098 mo
31.4287 47.5547 31.6694 47.6665 31.8433 47.8516 cv
32.0171 48.042 32.1064 48.2769 32.1064 48.5684 cv
32.1064 48.9492 31.9834 49.2456 31.7427 49.4473 cv
31.4961 49.6543 31.1489 49.7554 30.7007 49.7554 cv
30.2471 49.7554 29.8999 49.6543 29.6592 49.4473 cv
29.4131 49.2456 29.2954 48.9492 29.2954 48.5684 cv
29.2954 48.2769 29.3794 48.042 29.5527 47.8516 cv
29.7266 47.6665 29.9673 47.5547 30.2808 47.5098 cv
30.001 47.4648 29.7935 47.3584 29.6479 47.1963 cv
29.5024 47.0396 29.4297 46.832 29.4297 46.5859 cv
29.4297 46.2607 29.5415 46.0034 29.7656 45.813 cv
29.9897 45.6226 30.3032 45.5273 30.7007 45.5273 cv
31.0928 45.5273 31.4063 45.6226 31.6304 45.813 cv
31.8545 46.0034 31.9722 46.2607 31.9722 46.5859 cv
31.9722 46.832 31.8936 47.0396 31.748 47.1963 cv
31.6025 47.3584 31.3896 47.4648 31.1206 47.5098 cv
31.5298 48.5684 mo
31.5298 48.2769 31.457 48.0527 31.311 47.8906 cv
31.1655 47.728 30.9585 47.644 30.7007 47.644 cv
30.4375 47.644 30.2358 47.728 30.0903 47.8906 cv
29.9448 48.0527 29.8721 48.2769 29.8721 48.5684 cv
29.8721 48.8594 29.9448 49.0889 30.0903 49.2515 cv
30.2358 49.4136 30.4375 49.4922 30.7007 49.4922 cv
30.9585 49.4922 31.1655 49.4136 31.311 49.2515 cv
31.457 49.0889 31.5298 48.8594 31.5298 48.5684 cv
ef
189.96 35.3584 mo
185.96 35.3584 li
38.7603 35.3584 mo
42.7603 35.3584 li
@
17.8159 38.4023 mo
17.8159 37.9863 li
18.832 37.9863 li
18.832 33.1387 li
17.6563 33.8984 li
17.6563 33.3867 li
19.0801 32.4668 li
19.6162 32.4668 li
19.6162 37.9863 li
20.6318 37.9863 li
20.6318 38.4023 li
17.8159 38.4023 li
17.8159 38.4023 li
cp
ef
24.5039 38.5063 mo
23.8643 38.5063 23.3682 38.2427 23.0161 37.7144 cv
22.6641 37.1865 22.4883 36.4507 22.4883 35.4907 cv
22.4883 34.5386 22.6641 33.7944 23.0161 33.2666 cv
23.3682 32.7383 23.8643 32.4668 24.5039 32.4668 cv
25.1362 32.4668 25.6318 32.7383 25.9839 33.2666 cv
26.3359 33.7944 26.52 34.5386 26.52 35.4907 cv
26.52 36.4507 26.3359 37.1865 25.9839 37.7144 cv
25.6318 38.2427 25.1362 38.5063 24.5039 38.5063 cv
24.5039 38.5063 li
cp
24.5039 38.1304 mo
24.9038 38.1304 25.2002 37.9146 25.3999 37.4746 cv
25.5923 37.0425 25.6963 36.3784 25.6963 35.4907 cv
25.6963 34.6104 25.5923 33.9463 25.3999 33.5063 cv
25.2002 33.0747 24.9038 32.8506 24.5039 32.8506 cv
24.104 32.8506 23.8003 33.0747 23.6079 33.5063 cv
23.4082 33.9463 23.312 34.6104 23.312 35.4907 cv
23.312 36.3784 23.4082 37.0425 23.6079 37.4746 cv
23.8003 37.9146 24.104 38.1304 24.5039 38.1304 cv
ef
27.2466 32.6089 mo
28.6465 32.6089 li
28.6465 33.0347 li
27.2466 33.0347 li
27.2466 32.6089 li
27.2466 32.6089 li
cp
ef
32.0786 30.52 mo
30.4824 34.3223 li
30.0737 34.3223 li
31.5967 30.688 li
29.7095 30.688 li
29.7095 31.1924 li
29.3906 31.1924 li
29.3906 30.2402 li
32.0786 30.2402 li
32.0786 30.52 li
32.0786 30.52 li
cp
ef
189.96 20.2007 mo
185.96 20.2007 li
38.7603 20.2007 mo
42.7603 20.2007 li
@
17.8159 23.2827 mo
17.8159 22.8667 li
18.832 22.8667 li
18.832 18.0186 li
17.6563 18.7783 li
17.6563 18.2666 li
19.0801 17.3467 li
19.6162 17.3467 li
19.6162 22.8667 li
20.6318 22.8667 li
20.6318 23.2827 li
17.8159 23.2827 li
17.8159 23.2827 li
cp
ef
24.5039 23.3867 mo
23.8643 23.3867 23.3682 23.1226 23.0161 22.5947 cv
22.6641 22.0664 22.4883 21.3306 22.4883 20.3706 cv
22.4883 19.4185 22.6641 18.6748 23.0161 18.1465 cv
23.3682 17.6187 23.8643 17.3467 24.5039 17.3467 cv
25.1362 17.3467 25.6318 17.6187 25.9839 18.1465 cv
26.3359 18.6748 26.52 19.4185 26.52 20.3706 cv
26.52 21.3306 26.3359 22.0664 25.9839 22.5947 cv
25.6318 23.1226 25.1362 23.3867 24.5039 23.3867 cv
24.5039 23.3867 li
cp
24.5039 23.0107 mo
24.9038 23.0107 25.2002 22.7944 25.3999 22.3545 cv
25.5923 21.9224 25.6963 21.2588 25.6963 20.3706 cv
25.6963 19.4907 25.5923 18.8267 25.3999 18.3867 cv
25.2002 17.9546 24.9038 17.7305 24.5039 17.7305 cv
24.104 17.7305 23.8003 17.9546 23.6079 18.3867 cv
23.4082 18.8267 23.312 19.4907 23.312 20.3706 cv
23.312 21.2588 23.4082 21.9224 23.6079 22.3545 cv
23.8003 22.7944 24.104 23.0107 24.5039 23.0107 cv
ef
27.2466 17.729 mo
28.6465 17.729 li
28.6465 18.1543 li
27.2466 18.1543 li
27.2466 17.729 li
27.2466 17.729 li
cp
ef
29.8608 17.1968 mo
29.9839 17.0625 30.124 16.9561 30.2808 16.8887 cv
30.4375 16.8218 30.6113 16.7881 30.813 16.7881 cv
31.2163 16.7881 31.541 16.9111 31.7759 17.1577 cv
32.0112 17.4043 32.1289 17.7344 32.1289 18.1543 cv
32.1289 18.5688 32 18.8994 31.748 19.1455 cv
31.4902 19.3921 31.1543 19.5156 30.729 19.5156 cv
30.2695 19.5156 29.9111 19.3472 29.665 19.0059 cv
29.4185 18.6641 29.2954 18.1714 29.2954 17.5332 cv
29.2954 16.8218 29.4409 16.2676 29.7319 15.8755 cv
30.0234 15.4834 30.4375 15.2871 30.9751 15.2871 cv
31.1206 15.2871 31.272 15.3042 31.4287 15.3267 cv
31.5854 15.3545 31.748 15.3936 31.916 15.4497 cv
31.916 16.1216 li
31.6079 16.1216 li
31.5854 15.9424 31.5127 15.8027 31.395 15.7017 cv
31.2778 15.6064 31.1206 15.5562 30.9194 15.5562 cv
30.561 15.5562 30.2979 15.6904 30.124 15.9595 cv
29.9507 16.228 29.8608 16.6426 29.8608 17.1968 cv
29.8608 17.1968 li
cp
30.7515 19.252 mo
31.0088 19.252 31.2051 19.1626 31.3447 18.9722 cv
31.479 18.7817 31.5522 18.5127 31.5522 18.1543 cv
31.5522 17.8018 31.479 17.5332 31.3447 17.3428 cv
31.2051 17.1523 31.0088 17.0571 30.7515 17.0571 cv
30.4883 17.0571 30.2866 17.1523 30.1519 17.3311 cv
30.0176 17.5161 29.9507 17.7793 29.9507 18.1211 cv
29.9507 18.4849 30.0176 18.7651 30.1577 18.9609 cv
30.292 19.1567 30.4937 19.252 30.7515 19.252 cv
ef
189.96 5.04248 mo
185.96 5.04248 li
38.7603 5.04248 mo
42.7603 5.04248 li
@
17.8159 8.1626 mo
17.8159 7.74658 li
18.832 7.74658 li
18.832 2.89844 li
17.6563 3.65869 li
17.6563 3.14648 li
19.0801 2.22656 li
19.6162 2.22656 li
19.6162 7.74658 li
20.6318 7.74658 li
20.6318 8.1626 li
17.8159 8.1626 li
17.8159 8.1626 li
cp
ef
24.5039 8.2666 mo
23.8643 8.2666 23.3682 8.00244 23.0161 7.47461 cv
22.6641 6.94629 22.4883 6.21045 22.4883 5.25049 cv
22.4883 4.29834 22.6641 3.55469 23.0161 3.02637 cv
23.3682 2.49854 23.8643 2.22656 24.5039 2.22656 cv
25.1362 2.22656 25.6318 2.49854 25.9839 3.02637 cv
26.3359 3.55469 26.52 4.29834 26.52 5.25049 cv
26.52 6.21045 26.3359 6.94629 25.9839 7.47461 cv
25.6318 8.00244 25.1362 8.2666 24.5039 8.2666 cv
24.5039 8.2666 li
cp
24.5039 7.89063 mo
24.9038 7.89063 25.2002 7.6748 25.3999 7.23438 cv
25.5923 6.80273 25.6963 6.13867 25.6963 5.25049 cv
25.6963 4.37061 25.5923 3.70654 25.3999 3.2666 cv
25.2002 2.83447 24.9038 2.61035 24.5039 2.61035 cv
24.104 2.61035 23.8003 2.83447 23.6079 3.2666 cv
23.4082 3.70654 23.312 4.37061 23.312 5.25049 cv
23.312 6.13867 23.4082 6.80273 23.6079 7.23438 cv
23.8003 7.6748 24.104 7.89063 24.5039 7.89063 cv
ef
27.2466 2.36914 mo
28.6465 2.36914 li
28.6465 2.79443 li
27.2466 2.79443 li
27.2466 2.36914 li
27.2466 2.36914 li
cp
ef
31.7368 0 mo
31.7368 .448242 li
29.8667 .448242 li
29.8667 1.61865 li
29.9561 1.55127 30.0679 1.50635 30.1968 1.47266 cv
30.3198 1.43945 30.4658 1.42236 30.6226 1.42236 cv
31.0591 1.42236 31.4063 1.5459 31.6641 1.79199 cv
31.9219 2.03857 32.0503 2.36914 32.0503 2.78906 cv
32.0503 3.22559 31.9219 3.56152 31.6641 3.79688 cv
31.4063 4.0376 31.0425 4.15527 30.5776 4.15527 cv
30.3872 4.15527 30.1968 4.13281 30.001 4.08789 cv
29.7993 4.04883 29.5977 3.98193 29.396 3.88672 cv
29.396 3.09131 li
29.7041 3.09131 li
29.7207 3.35449 29.8047 3.55615 29.9507 3.69043 cv
30.0962 3.8252 30.3091 3.89209 30.5776 3.89209 cv
30.8633 3.89209 31.0815 3.79688 31.2383 3.60645 cv
31.395 3.41602 31.4736 3.14746 31.4736 2.78906 cv
31.4736 2.43604 31.395 2.16748 31.2441 1.97705 cv
31.0874 1.78662 30.8687 1.69141 30.5776 1.69141 cv
30.4097 1.69141 30.2642 1.7251 30.1406 1.78076 cv
30.0176 1.83691 29.9058 1.92676 29.8105 2.0498 cv
29.5752 2.0498 li
29.5752 0 li
31.7368 0 li
31.7368 0 li
cp
ef
189.96 5.73633 mo
187.96 5.73633 li
38.7603 5.73633 mo
40.7603 5.73633 li
189.96 6.51172 mo
187.96 6.51172 li
38.7603 6.51172 mo
40.7603 6.51172 li
189.96 7.39063 mo
187.96 7.39063 li
38.7603 7.39063 mo
40.7603 7.39063 li
189.96 8.40576 mo
187.96 8.40576 li
38.7603 8.40576 mo
40.7603 8.40576 li
189.96 9.60547 mo
187.96 9.60547 li
38.7603 9.60547 mo
40.7603 9.60547 li
189.96 11.0747 mo
187.96 11.0747 li
38.7603 11.0747 mo
40.7603 11.0747 li
189.96 12.9688 mo
187.96 12.9688 li
38.7603 12.9688 mo
40.7603 12.9688 li
189.96 15.6377 mo
187.96 15.6377 li
38.7603 15.6377 mo
40.7603 15.6377 li
189.96 20.8936 mo
187.96 20.8936 li
38.7603 20.8936 mo
40.7603 20.8936 li
189.96 21.6694 mo
187.96 21.6694 li
38.7603 21.6694 mo
40.7603 21.6694 li
189.96 22.5488 mo
187.96 22.5488 li
38.7603 22.5488 mo
40.7603 22.5488 li
189.96 23.5635 mo
187.96 23.5635 li
38.7603 23.5635 mo
40.7603 23.5635 li
189.96 24.7637 mo
187.96 24.7637 li
38.7603 24.7637 mo
40.7603 24.7637 li
189.96 26.2324 mo
187.96 26.2324 li
38.7603 26.2324 mo
40.7603 26.2324 li
189.96 28.1265 mo
187.96 28.1265 li
38.7603 28.1265 mo
40.7603 28.1265 li
189.96 30.7954 mo
187.96 30.7954 li
38.7603 30.7954 mo
40.7603 30.7954 li
189.96 36.0518 mo
187.96 36.0518 li
38.7603 36.0518 mo
40.7603 36.0518 li
189.96 36.8276 mo
187.96 36.8276 li
38.7603 36.8276 mo
40.7603 36.8276 li
189.96 37.7065 mo
187.96 37.7065 li
38.7603 37.7065 mo
40.7603 37.7065 li
189.96 38.7217 mo
187.96 38.7217 li
38.7603 38.7217 mo
40.7603 38.7217 li
189.96 39.9214 mo
187.96 39.9214 li
38.7603 39.9214 mo
40.7603 39.9214 li
189.96 41.3906 mo
187.96 41.3906 li
38.7603 41.3906 mo
40.7603 41.3906 li
189.96 43.2847 mo
187.96 43.2847 li
38.7603 43.2847 mo
40.7603 43.2847 li
189.96 45.9536 mo
187.96 45.9536 li
38.7603 45.9536 mo
40.7603 45.9536 li
189.96 51.2095 mo
187.96 51.2095 li
38.7603 51.2095 mo
40.7603 51.2095 li
189.96 51.9854 mo
187.96 51.9854 li
38.7603 51.9854 mo
40.7603 51.9854 li
189.96 52.8643 mo
187.96 52.8643 li
38.7603 52.8643 mo
40.7603 52.8643 li
189.96 53.8784 mo
187.96 53.8784 li
38.7603 53.8784 mo
40.7603 53.8784 li
189.96 55.0796 mo
187.96 55.0796 li
38.7603 55.0796 mo
40.7603 55.0796 li
189.96 56.5488 mo
187.96 56.5488 li
38.7603 56.5488 mo
40.7603 56.5488 li
189.96 58.4414 mo
187.96 58.4414 li
38.7603 58.4414 mo
40.7603 58.4414 li
189.96 61.1113 mo
187.96 61.1113 li
38.7603 61.1113 mo
40.7603 61.1113 li
189.96 66.3677 mo
187.96 66.3677 li
38.7603 66.3677 mo
40.7603 66.3677 li
189.96 67.1436 mo
187.96 67.1436 li
38.7603 67.1436 mo
40.7603 67.1436 li
189.96 68.0225 mo
187.96 68.0225 li
38.7603 68.0225 mo
40.7603 68.0225 li
189.96 69.0366 mo
187.96 69.0366 li
38.7603 69.0366 mo
40.7603 69.0366 li
189.96 70.2373 mo
187.96 70.2373 li
38.7603 70.2373 mo
40.7603 70.2373 li
189.96 71.7065 mo
187.96 71.7065 li
38.7603 71.7065 mo
40.7603 71.7065 li
189.96 73.5996 mo
187.96 73.5996 li
38.7603 73.5996 mo
40.7603 73.5996 li
189.96 76.2686 mo
187.96 76.2686 li
38.7603 76.2686 mo
40.7603 76.2686 li
189.96 81.5254 mo
187.96 81.5254 li
38.7603 81.5254 mo
40.7603 81.5254 li
189.96 82.3008 mo
187.96 82.3008 li
38.7603 82.3008 mo
40.7603 82.3008 li
189.96 83.1797 mo
187.96 83.1797 li
38.7603 83.1797 mo
40.7603 83.1797 li
189.96 84.1943 mo
187.96 84.1943 li
38.7603 84.1943 mo
40.7603 84.1943 li
189.96 85.3945 mo
187.96 85.3945 li
38.7603 85.3945 mo
40.7603 85.3945 li
189.96 86.8633 mo
187.96 86.8633 li
38.7603 86.8633 mo
40.7603 86.8633 li
189.96 88.7578 mo
187.96 88.7578 li
38.7603 88.7578 mo
40.7603 88.7578 li
189.96 91.4268 mo
187.96 91.4268 li
38.7603 91.4268 mo
40.7603 91.4268 li
189.96 96.6836 mo
187.96 96.6836 li
38.7603 96.6836 mo
40.7603 96.6836 li
189.96 97.4585 mo
187.96 97.4585 li
38.7603 97.4585 mo
40.7603 97.4585 li
189.96 98.3374 mo
187.96 98.3374 li
38.7603 98.3374 mo
40.7603 98.3374 li
189.96 99.3525 mo
187.96 99.3525 li
38.7603 99.3525 mo
40.7603 99.3525 li
189.96 100.553 mo
187.96 100.553 li
38.7603 100.553 mo
40.7603 100.553 li
189.96 102.021 mo
187.96 102.021 li
38.7603 102.021 mo
40.7603 102.021 li
189.96 103.916 mo
187.96 103.916 li
38.7603 103.916 mo
40.7603 103.916 li
189.96 106.584 mo
187.96 106.584 li
38.7603 106.584 mo
40.7603 106.584 li
@
6.83984 113.507 mo
6.37207 113.507 li
6.37207 112.67 li
.74707 112.67 li
.74707 113.507 li
.278809 113.507 li
.278809 110.897 li
.278809 109.764 .566895 108.881 1.14307 108.251 cv
1.71924 107.622 2.52881 107.307 3.55518 107.307 cv
4.58984 107.307 5.3999 107.63 5.97607 108.261 cv
6.55225 108.891 6.83984 109.772 6.83984 110.897 cv
6.83984 113.507 li
6.83984 113.507 li
cp
6.37207 111.779 mo
6.37207 110.96 li
6.37207 110.115 6.12891 109.458 5.64307 108.999 cv
5.15723 108.548 4.46387 108.314 3.55518 108.314 cv
2.646 108.314 1.95313 108.548 1.46729 108.999 cv
.990234 109.458 .74707 110.115 .74707 110.96 cv
.74707 111.779 li
6.37207 111.779 li
ef
4.12207 102.878 mo
3.58203 102.896 3.16797 103.014 2.88916 103.229 cv
2.61914 103.445 2.4751 103.743 2.4751 104.139 cv
2.4751 104.517 2.61914 104.805 2.89795 105.021 cv
3.17725 105.236 3.58203 105.362 4.12207 105.408 cv
4.12207 102.878 li
4.12207 102.878 li
cp
4.58984 101.924 mo
4.58984 105.408 li
4.62598 105.408 li
5.25586 105.408 5.73291 105.291 6.05713 105.057 cv
6.38086 104.823 6.53418 104.472 6.53418 104.003 cv
6.53418 103.652 6.44385 103.365 6.25488 103.13 cv
6.0752 102.906 5.7959 102.744 5.42725 102.653 cv
5.42725 102.005 li
5.93994 102.131 6.32715 102.375 6.5791 102.717 cv
6.83105 103.067 6.95703 103.526 6.95703 104.084 cv
6.95703 104.769 6.74121 105.317 6.29102 105.731 cv
5.84131 106.146 5.24707 106.353 4.5 106.353 cv
3.76221 106.353 3.16797 106.154 2.71826 105.741 cv
2.26807 105.335 2.04297 104.805 2.04297 104.139 cv
2.04297 103.437 2.26807 102.888 2.7002 102.51 cv
3.13184 102.131 3.76221 101.942 4.58984 101.924 cv
ef
6.83984 101.153 mo
6.37207 101.153 li
6.37207 100.424 li
2.63721 100.424 li
2.63721 101.199 li
2.16895 101.199 li
2.16895 99.6147 li
2.99707 99.6147 li
2.69092 99.4707 2.44824 99.2725 2.28613 99.0386 cv
2.12402 98.8047 2.04297 98.5254 2.04297 98.2017 cv
2.04297 97.6885 2.1958 97.3105 2.48389 97.0674 cv
2.78125 96.8247 3.24023 96.6987 3.87012 96.6987 cv
6.37207 96.6987 li
6.37207 95.9785 li
6.83984 95.9785 li
6.83984 98.2104 li
6.37207 98.2104 li
6.37207 97.5088 li
4.12207 97.5088 li
3.55518 97.5088 3.16797 97.5806 2.95215 97.7246 cv
2.73584 97.8687 2.62793 98.1113 2.62793 98.4624 cv
2.62793 98.8403 2.77197 99.1284 3.04199 99.3267 cv
3.3208 99.5244 3.71729 99.6147 4.23926 99.6147 cv
6.37207 99.6147 li
6.37207 98.9126 li
6.83984 98.9126 li
6.83984 101.153 li
6.83984 101.153 li
cp
ef
6.5791 95.2588 mo
5.49023 95.2588 li
5.49023 94.7905 li
5.84131 94.7817 6.10205 94.6733 6.27295 94.4668 cv
6.45313 94.2598 6.53418 93.9536 6.53418 93.5483 cv
6.53418 93.1885 6.47119 92.9097 6.32715 92.7207 cv
6.19189 92.5317 5.99414 92.4326 5.73291 92.4326 cv
5.53516 92.4326 5.36426 92.5044 5.23828 92.6396 cv
5.11182 92.7837 4.97705 93.0713 4.83301 93.5215 cv
4.63525 94.1064 li
4.50928 94.5117 4.34717 94.7993 4.14893 94.9795 cv
3.95996 95.1597 3.71729 95.2495 3.41113 95.2495 cv
2.98828 95.2495 2.65527 95.0967 2.41211 94.7817 cv
2.16895 94.4668 2.04297 94.0347 2.04297 93.4766 cv
2.04297 93.2334 2.0791 92.9727 2.14209 92.7026 cv
2.20508 92.4326 2.29492 92.1445 2.4209 91.8564 cv
3.43799 91.8564 li
3.43799 92.3247 li
3.14111 92.3428 2.90723 92.4414 2.73584 92.6396 cv
2.56494 92.8374 2.4751 93.1074 2.4751 93.4497 cv
2.4751 93.7915 2.53809 94.0527 2.65527 94.2236 cv
2.78125 94.4033 2.96094 94.4844 3.19482 94.4844 cv
3.39307 94.4844 3.55518 94.4214 3.67188 94.2866 cv
3.78906 94.1606 3.90625 93.8906 4.03223 93.4946 cv
4.22998 92.8555 li
4.37402 92.4146 4.54492 92.0996 4.75195 91.9014 cv
4.95898 91.7036 5.22021 91.6045 5.54395 91.6045 cv
5.99414 91.6045 6.33594 91.7754 6.58789 92.1177 cv
6.83984 92.4595 6.95703 92.9185 6.95703 93.5127 cv
6.95703 93.8184 6.9209 94.1064 6.86719 94.3945 cv
6.81299 94.6826 6.71387 94.9707 6.5791 95.2588 cv
6.5791 95.2588 li
cp
ef
6.37207 89.0547 mo
6.37207 88.2896 li
6.83984 88.2896 li
6.83984 90.6387 li
6.37207 90.6387 li
6.37207 89.8647 li
2.63721 89.8647 li
2.63721 90.6387 li
2.16895 90.6387 li
2.16895 89.0547 li
6.37207 89.0547 li
6.37207 89.0547 li
cp
.720215 90.0894 mo
.584961 90.0894 .468262 90.0444 .369141 89.9453 cv
.27002 89.8467 .216309 89.7295 .216309 89.5854 cv
.216309 89.4595 .27002 89.3428 .369141 89.2437 cv
.468262 89.1445 .584961 89.0908 .720215 89.0908 cv
.864258 89.0908 .980957 89.1445 1.0708 89.2344 cv
1.16992 89.3335 1.21484 89.4507 1.21484 89.5854 cv
1.21484 89.7295 1.16992 89.8467 1.0708 89.9453 cv
.980957 90.0444 .864258 90.0894 .720215 90.0894 cv
ef
2.63721 87.1104 mo
2.63721 87.8213 li
2.16895 87.8213 li
2.16895 87.1104 li
.720215 87.1104 li
.720215 86.3008 li
2.16895 86.3008 li
2.16895 84.7793 li
2.63721 84.7793 li
2.63721 86.3008 li
5.60693 86.3008 li
6.00293 86.3008 6.26416 86.2646 6.37207 86.1836 cv
6.47998 86.1113 6.53418 85.9678 6.53418 85.7607 cv
6.53418 85.5537 6.47119 85.4004 6.34521 85.3018 cv
6.21924 85.2114 6.021 85.1577 5.74219 85.1484 cv
5.74219 84.5366 li
6.17383 84.5635 6.47998 84.6807 6.66895 84.8877 cv
6.85791 85.0947 6.95703 85.4097 6.95703 85.8325 cv
6.95703 86.3008 6.84912 86.6338 6.65088 86.8223 cv
6.45313 87.0205 6.10205 87.1104 5.60693 87.1104 cv
2.63721 87.1104 li
2.63721 87.1104 li
cp
ef
7.68604 82.5386 mo
6.91211 82.2324 li
2.63721 83.9785 li
2.63721 84.5005 li
2.16895 84.5005 li
2.16895 82.3584 li
2.63721 82.3584 li
2.63721 83.1055 li
5.8501 81.7915 li
2.63721 80.4775 li
2.63721 81.1797 li
2.16895 81.1797 li
2.16895 79.4248 li
2.63721 79.4248 li
2.63721 79.9463 li
7.88428 82.0884 li
8.24414 82.2324 8.49609 82.3945 8.63086 82.5747 cv
8.75684 82.7544 8.8291 83.0063 8.8291 83.3306 cv
8.8291 83.4746 8.81104 83.6094 8.79297 83.7534 cv
8.76611 83.8975 8.72998 84.0508 8.69385 84.1943 cv
7.80322 84.1943 li
7.80322 83.7803 li
8.00098 83.7627 8.13623 83.7178 8.22607 83.6274 cv
8.31592 83.5464 8.36084 83.4204 8.36084 83.2407 cv
8.36084 83.0786 8.31592 82.9526 8.22607 82.8535 cv
8.13623 82.7544 7.95605 82.6465 7.68604 82.5386 cv
7.68604 82.5386 li
cp
ef
6.83984 76.0674 mo
6.37207 76.0674 li
6.37207 75.2305 li
.74707 75.2305 li
.74707 76.0674 li
.278809 76.0674 li
.278809 70.6943 li
1.73682 70.6943 li
1.73682 71.2344 li
.818848 71.2344 li
.818848 74.3394 li
3.01514 74.3394 li
3.01514 72.0986 li
2.1958 72.0986 li
2.1958 71.5586 li
4.37402 71.5586 li
4.37402 72.0986 li
3.55518 72.0986 li
3.55518 74.3394 li
6.37207 74.3394 li
6.37207 73.2866 li
6.83984 73.2866 li
6.83984 76.0674 li
6.83984 76.0674 li
cp
ef
6.83984 69.8276 mo
6.37207 69.8276 li
6.37207 68.9907 li
.74707 68.9907 li
.74707 69.8276 li
.278809 69.8276 li
.278809 64.4546 li
1.73682 64.4546 li
1.73682 64.9946 li
.818848 64.9946 li
.818848 68.0996 li
3.01514 68.0996 li
3.01514 65.8584 li
2.1958 65.8584 li
2.1958 65.3184 li
4.37402 65.3184 li
4.37402 65.8584 li
3.55518 65.8584 li
3.55518 68.0996 li
6.37207 68.0996 li
6.37207 67.0464 li
6.83984 67.0464 li
6.83984 69.8276 li
6.83984 69.8276 li
cp
ef
6.83984 62.3633 mo
6.37207 62.3633 li
6.37207 61.5264 li
.80127 61.5264 li
.80127 63.4526 li
1.82715 63.4526 li
1.82715 63.9927 li
.278809 63.9927 li
.278809 58.1694 li
1.82715 58.1694 li
1.82715 58.7095 li
.80127 58.7095 li
.80127 60.6357 li
6.37207 60.6357 li
6.37207 59.7988 li
6.83984 59.7988 li
6.83984 62.3633 li
6.83984 62.3633 li
cp
ef
6.83984 54.7075 mo
6.37207 54.7075 li
6.37207 53.8706 li
.74707 53.8706 li
.74707 54.7075 li
.278809 54.7075 li
.278809 51.6025 li
.278809 50.9546 .450195 50.4326 .783203 50.0454 cv
1.11621 49.6675 1.56592 49.4697 2.12402 49.4697 cv
2.69092 49.4697 3.14111 49.6675 3.47412 50.0454 cv
3.80713 50.4326 3.96924 50.9546 3.96924 51.6025 cv
3.96924 52.9795 li
6.37207 52.9795 li
6.37207 51.9624 li
6.83984 51.9624 li
6.83984 54.7075 li
6.83984 54.7075 li
cp
3.50098 52.9795 mo
3.50098 51.8184 li
3.50098 51.3867 3.38428 51.0537 3.1499 50.8193 cv
2.91602 50.5947 2.57422 50.4775 2.12402 50.4775 cv
1.67383 50.4775 1.33203 50.5947 1.09814 50.8193 cv
.864258 51.0537 .74707 51.3867 .74707 51.8184 cv
.74707 52.9795 li
3.50098 52.9795 li
ef
6.95703 46.4937 mo
6.95703 47.1777 6.74121 47.7178 6.29102 48.1313 cv
5.84131 48.5454 5.24707 48.7524 4.5 48.7524 cv
3.76221 48.7524 3.16797 48.5547 2.71826 48.1406 cv
2.26807 47.7266 2.04297 47.1777 2.04297 46.4937 cv
2.04297 45.8096 2.26807 45.2695 2.71826 44.8555 cv
3.16797 44.4414 3.76221 44.2344 4.5 44.2344 cv
5.24707 44.2344 5.84131 44.4414 6.29102 44.8555 cv
6.74121 45.2695 6.95703 45.8096 6.95703 46.4937 cv
6.95703 46.4937 li
cp
6.53418 46.4937 mo
6.53418 46.0615 6.36328 45.7373 6.021 45.5127 cv
5.6792 45.2964 5.17529 45.1797 4.5 45.1797 cv
3.83398 45.1797 3.33008 45.2964 2.98828 45.5127 cv
2.646 45.7373 2.4751 46.0615 2.4751 46.4937 cv
2.4751 46.9258 2.646 47.2588 2.98828 47.4746 cv
3.33008 47.6997 3.83398 47.8076 4.5 47.8076 cv
5.17529 47.8076 5.6792 47.6997 6.021 47.4746 cv
6.36328 47.2588 6.53418 46.9258 6.53418 46.4937 cv
ef
2.16895 39.3623 mo
5.81396 38.1655 li
2.63721 37.1123 li
2.63721 37.7876 li
2.16895 37.7876 li
2.16895 36.0957 li
2.63721 36.0957 li
2.63721 36.6177 li
6.83984 38.0034 li
6.83984 38.6787 li
3.34814 39.8306 li
6.83984 40.9824 li
6.83984 41.6304 li
2.63721 43.0166 li
2.63721 43.5386 li
2.16895 43.5386 li
2.16895 41.4238 li
2.63721 41.4238 li
2.63721 42.1797 li
5.81396 41.1357 li
2.16895 39.9297 li
2.16895 39.3623 li
2.16895 39.3623 li
cp
ef
4.12207 32.0786 mo
3.58203 32.0967 3.16797 32.2134 2.88916 32.4297 cv
2.61914 32.6455 2.4751 32.9424 2.4751 33.3384 cv
2.4751 33.7168 2.61914 34.0044 2.89795 34.2207 cv
3.17725 34.4365 3.58203 34.5625 4.12207 34.6074 cv
4.12207 32.0786 li
4.12207 32.0786 li
cp
4.58984 31.1245 mo
4.58984 34.6074 li
4.62598 34.6074 li
5.25586 34.6074 5.73291 34.4907 6.05713 34.2563 cv
6.38086 34.0225 6.53418 33.6714 6.53418 33.2036 cv
6.53418 32.8525 6.44385 32.5645 6.25488 32.3306 cv
6.0752 32.1055 5.7959 31.9434 5.42725 31.8535 cv
5.42725 31.2056 li
5.93994 31.3315 6.32715 31.5747 6.5791 31.9165 cv
6.83105 32.2676 6.95703 32.7266 6.95703 33.2847 cv
6.95703 33.9688 6.74121 34.5176 6.29102 34.9316 cv
5.84131 35.3457 5.24707 35.5527 4.5 35.5527 cv
3.76221 35.5527 3.16797 35.3545 2.71826 34.9404 cv
2.26807 34.5356 2.04297 34.0044 2.04297 33.3384 cv
2.04297 32.6367 2.26807 32.0874 2.7002 31.7095 cv
3.13184 31.3315 3.76221 31.1426 4.58984 31.1245 cv
ef
2.16016 26.4204 mo
3.33008 26.4204 li
3.33008 26.8887 li
3.09619 26.9067 2.92529 26.9697 2.80811 27.0776 cv
2.7002 27.1943 2.63721 27.3657 2.63721 27.5815 cv
2.63721 27.9775 2.78125 28.2837 3.05127 28.4995 cv
3.33008 28.7158 3.72607 28.8145 4.23926 28.8145 cv
6.37207 28.8145 li
6.37207 27.8784 li
6.83984 27.8784 li
6.83984 30.3535 li
6.37207 30.3535 li
6.37207 29.6245 li
2.62793 29.6245 li
2.62793 30.3984 li
2.16895 30.3984 li
2.16895 28.8145 li
2.99707 28.8145 li
2.67285 28.6616 2.43896 28.4634 2.27686 28.2114 cv
2.12402 27.9595 2.04297 27.6533 2.04297 27.2935 cv
2.04297 27.1675 2.06104 27.0234 2.0791 26.8794 cv
2.09717 26.7354 2.12402 26.5825 2.16016 26.4204 cv
2.16016 26.4204 li
cp
ef
8.23486 20.6514 mo
7.91113 21.3716 7.40723 21.9116 6.72314 22.2715 cv
6.03906 22.6313 5.16602 22.8115 4.12207 22.8115 cv
3.07813 22.8115 2.21387 22.6313 1.521 22.2715 cv
.828125 21.9116 .324219 21.3716 0 20.6514 cv
.432129 20.6514 li
.74707 21.1016 1.18799 21.4258 1.74609 21.6235 cv
2.31299 21.8213 3.10498 21.9204 4.12207 21.9204 cv
5.14795 21.9204 5.93994 21.8213 6.49805 21.6235 cv
7.05615 21.4258 7.48828 21.1016 7.80322 20.6514 cv
8.23486 20.6514 li
8.23486 20.6514 li
cp
ef
3.92383 15.7705 mo
6.37207 15.7705 li
6.37207 15.0508 li
6.83984 15.0508 li
6.83984 16.5806 li
6.33594 16.5806 li
6.55225 16.7607 6.71387 16.9678 6.81299 17.2017 cv
6.90283 17.4355 6.95703 17.7144 6.95703 18.0205 cv
6.95703 18.5425 6.82227 18.9565 6.55225 19.2627 cv
6.28223 19.5684 5.90381 19.7124 5.43604 19.7124 cv
4.95898 19.7124 4.58984 19.5415 4.31982 19.1904 cv
4.05029 18.8486 3.91504 18.3535 3.91504 17.7144 cv
3.91504 16.5806 li
3.59131 16.5806 li
3.24023 16.5806 2.97021 16.6885 2.77197 16.9043 cv
2.57422 17.1206 2.4751 17.4268 2.4751 17.8135 cv
2.4751 18.1377 2.55615 18.3896 2.7002 18.5786 cv
2.84424 18.7764 3.06006 18.8936 3.34814 18.9385 cv
3.34814 19.3525 li
2.40283 19.3525 li
2.28613 19.0737 2.1958 18.8037 2.1333 18.5337 cv
2.0791 18.2725 2.04297 18.0117 2.04297 17.7598 cv
2.04297 17.1113 2.20508 16.6255 2.52881 16.2837 cv
2.85303 15.9414 3.31201 15.7705 3.92383 15.7705 cv
3.92383 15.7705 li
cp
5.37305 16.5806 mo
4.3833 16.5806 li
4.3833 17.6245 li
4.3833 18.0293 4.47314 18.3267 4.64404 18.5244 cv
4.82422 18.7227 5.08496 18.8125 5.43604 18.8125 cv
5.76025 18.8125 6.021 18.7134 6.20996 18.5156 cv
6.4082 18.3174 6.49805 18.0474 6.49805 17.7056 cv
6.49805 17.3726 6.39893 17.1025 6.19189 16.8955 cv
5.98486 16.6885 5.71484 16.5806 5.37305 16.5806 cv
ef
2.16016 10.3408 mo
3.33008 10.3408 li
3.33008 10.8086 li
3.09619 10.8267 2.92529 10.8896 2.80811 10.9976 cv
2.7002 11.1143 2.63721 11.2856 2.63721 11.5015 cv
2.63721 11.8975 2.78125 12.2036 3.05127 12.4194 cv
3.33008 12.6357 3.72607 12.7344 4.23926 12.7344 cv
6.37207 12.7344 li
6.37207 11.7983 li
6.83984 11.7983 li
6.83984 14.2734 li
6.37207 14.2734 li
6.37207 13.5444 li
2.62793 13.5444 li
2.62793 14.3184 li
2.16895 14.3184 li
2.16895 12.7344 li
2.99707 12.7344 li
2.67285 12.5815 2.43896 12.3838 2.27686 12.1313 cv
2.12402 11.8794 2.04297 11.5737 2.04297 11.2134 cv
2.04297 11.0874 2.06104 10.9434 2.0791 10.7998 cv
2.09717 10.6553 2.12402 10.5024 2.16016 10.3408 cv
2.16016 10.3408 li
cp
ef
4.73389 8.47754 mo
5.30127 8.47754 5.73291 8.36963 6.021 8.15332 cv
6.31787 7.9375 6.46191 7.63135 6.46191 7.21777 cv
6.46191 6.80371 6.30029 6.49756 5.96729 6.28174 cv
5.64307 6.06543 5.14795 5.95752 4.5 5.95752 cv
3.85205 5.95752 3.36621 6.06543 3.04199 6.28174 cv
2.71826 6.49756 2.54688 6.80371 2.54688 7.21777 cv
2.54688 7.63135 2.7002 7.9375 2.99707 8.15332 cv
3.29395 8.36963 3.71729 8.47754 4.2749 8.47754 cv
4.73389 8.47754 li
4.73389 8.47754 li
cp
6.37207 9.2876 mo
.468262 9.2876 li
.468262 10.0615 li
0 10.0615 li
0 8.47754 li
2.89795 8.47754 li
2.60986 8.32471 2.39404 8.12646 2.25 7.87451 cv
2.11523 7.63135 2.04297 7.32568 2.04297 6.96582 cv
2.04297 6.38965 2.27686 5.92139 2.72705 5.56152 cv
3.17725 5.20166 3.771 5.0127 4.5 5.0127 cv
5.23828 5.0127 5.83203 5.20166 6.28223 5.56152 cv
6.73193 5.92139 6.95703 6.38965 6.95703 6.96582 cv
6.95703 7.32568 6.88525 7.63135 6.75928 7.87451 cv
6.62402 8.12646 6.4082 8.32471 6.11084 8.47754 cv
6.83984 8.47754 li
6.83984 10.0615 li
6.37207 10.0615 li
6.37207 9.2876 li
ef
8.23486 3.92334 mo
7.80322 3.92334 li
7.48828 3.47363 7.05615 3.14941 6.49805 2.95166 cv
5.93994 2.75342 5.14795 2.6543 4.12207 2.6543 cv
3.10498 2.6543 2.31299 2.75342 1.74609 2.95166 cv
1.18799 3.14941 .74707 3.47363 .432129 3.92334 cv
0 3.92334 li
.324219 3.2124 .828125 2.67236 1.521 2.3125 cv
2.21387 1.95264 3.07813 1.76367 4.12207 1.76367 cv
5.16602 1.76367 6.03906 1.95264 6.72314 2.3125 cv
7.40723 2.67236 7.91113 3.2124 8.23486 3.92334 cv
8.23486 3.92334 li
cp
ef
1.5 lw
2 lc
38.7603 111.147 mo
38.7603 5.04248 li
38.7603 111.147 mo
189.96 111.147 li
189.96 111.147 mo
189.96 5.04248 li
38.7603 5.04248 mo
189.96 5.04248 li
@
173.388 19.3828 mo
172.428 18.9507 171.708 18.2783 171.228 17.3667 cv
170.748 16.4546 170.508 15.2905 170.508 13.8984 cv
170.508 12.5063 170.748 11.3545 171.228 10.4307 cv
171.708 9.50635 172.428 8.83447 173.388 8.40234 cv
173.388 8.97852 li
172.788 9.39844 172.356 9.98633 172.092 10.7305 cv
171.828 11.4863 171.696 12.5425 171.696 13.8984 cv
171.696 15.2666 171.828 16.3223 172.092 17.0664 cv
172.356 17.8105 172.788 18.3867 173.388 18.8066 cv
173.388 19.3828 li
173.388 19.3828 li
cp
ef
180.216 13.6348 mo
180.216 16.8984 li
181.176 16.8984 li
181.176 17.5225 li
179.136 17.5225 li
179.136 16.8506 li
178.896 17.1387 178.62 17.3545 178.308 17.4863 cv
177.996 17.6064 177.625 17.6787 177.216 17.6787 cv
176.52 17.6787 175.968 17.4985 175.56 17.1387 cv
175.152 16.7783 174.96 16.2744 174.96 15.6504 cv
174.96 15.0146 175.188 14.5225 175.656 14.1626 cv
176.112 13.8027 176.772 13.6226 177.625 13.6226 cv
179.136 13.6226 li
179.136 13.1904 li
179.136 12.7227 178.992 12.3623 178.704 12.0986 cv
178.417 11.8345 178.008 11.7026 177.492 11.7026 cv
177.06 11.7026 176.724 11.8105 176.472 12.0024 cv
176.208 12.1943 176.052 12.4824 175.992 12.8667 cv
175.44 12.8667 li
175.44 11.6064 li
175.812 11.4507 176.172 11.3306 176.532 11.2466 cv
176.88 11.1748 177.228 11.1265 177.564 11.1265 cv
178.428 11.1265 179.076 11.3428 179.532 11.7744 cv
179.988 12.2065 180.216 12.8184 180.216 13.6348 cv
180.216 13.6348 li
cp
179.136 15.5664 mo
179.136 14.2466 li
177.744 14.2466 li
177.204 14.2466 176.808 14.3667 176.544 14.5947 cv
176.28 14.8345 176.16 15.1826 176.16 15.6504 cv
176.16 16.0825 176.292 16.4307 176.556 16.6826 cv
176.82 16.9463 177.18 17.0664 177.636 17.0664 cv
178.08 17.0664 178.44 16.9346 178.716 16.6587 cv
178.992 16.3828 179.136 16.0225 179.136 15.5664 cv
ef
182.172 19.3828 mo
182.172 18.8066 li
182.772 18.3867 183.204 17.8105 183.468 17.0664 cv
183.732 16.3223 183.864 15.2666 183.864 13.8984 cv
183.864 12.5425 183.732 11.4863 183.468 10.7305 cv
183.204 9.98633 182.772 9.39844 182.172 8.97852 cv
182.172 8.40234 li
183.12 8.83447 183.84 9.50635 184.32 10.4307 cv
184.8 11.3545 185.052 12.5063 185.052 13.8984 cv
185.052 15.2905 184.8 16.4546 184.32 17.3667 cv
183.84 18.2783 183.12 18.9507 182.172 19.3828 cv
182.172 19.3828 li
cp
ef
50.7603 83.8354 mo
64.7603 83.8354 li
@
76.27 87.3623 mo
76.27 86.8428 li
77.2002 86.8428 li
77.2002 80.5928 li
76.27 80.5928 li
76.27 80.0723 li
82.1401 80.0723 li
82.1401 81.6924 li
81.54 81.6924 li
81.54 80.6724 li
78.1899 80.6724 li
78.1899 83.1123 li
80.5801 83.1123 li
80.5801 82.2026 li
81.1802 82.2026 li
81.1802 84.6226 li
80.5801 84.6226 li
80.5801 83.7124 li
78.1899 83.7124 li
78.1899 86.7627 li
81.6201 86.7627 li
81.6201 85.7427 li
82.2202 85.7427 li
82.2202 87.3623 li
76.27 87.3623 li
76.27 87.3623 li
cp
ef
86.0698 84.1924 mo
87.1602 82.6924 li
86.46 82.6924 li
86.46 82.1724 li
88.46 82.1724 li
88.46 82.6924 li
87.77 82.6924 li
86.3799 84.6123 li
88 86.8428 li
88.6802 86.8428 li
88.6802 87.3623 li
86.2803 87.3623 li
86.2803 86.8428 li
86.9399 86.8428 li
85.8101 85.2925 li
84.6802 86.8428 li
85.3501 86.8428 li
85.3501 87.3623 li
83.3799 87.3623 li
83.3799 86.8428 li
84.0698 86.8428 li
85.5 84.8726 li
83.9199 82.6924 li
83.2803 82.6924 li
83.2803 82.1724 li
85.6001 82.1724 li
85.6001 82.6924 li
84.98 82.6924 li
86.0698 84.1924 li
86.0698 84.1924 li
cp
ef
89.8301 82.6924 mo
88.9702 82.6924 li
88.9702 82.1724 li
90.73 82.1724 li
90.73 82.9824 li
90.8999 82.6626 91.1201 82.4224 91.3999 82.2627 cv
91.6699 82.1123 92.0103 82.0327 92.4102 82.0327 cv
93.0503 82.0327 93.5698 82.2925 93.9702 82.7925 cv
94.3701 83.2925 94.5801 83.9526 94.5801 84.7627 cv
94.5801 85.5825 94.3701 86.2427 93.9702 86.7427 cv
93.5698 87.2427 93.0503 87.4927 92.4102 87.4927 cv
92.0103 87.4927 91.6699 87.4126 91.3999 87.2725 cv
91.1201 87.1226 90.8999 86.8828 90.73 86.5527 cv
90.73 88.9126 li
91.5801 88.9126 li
91.5801 89.4326 li
88.9702 89.4326 li
88.9702 88.9126 li
89.8301 88.9126 li
89.8301 82.6924 li
89.8301 82.6924 li
cp
90.73 84.5127 mo
90.73 85.0225 li
90.73 85.6523 90.8501 86.1328 91.0898 86.4526 cv
91.3301 86.7827 91.6699 86.9424 92.1299 86.9424 cv
92.5898 86.9424 92.9302 86.7627 93.1699 86.3926 cv
93.4102 86.0327 93.5303 85.4824 93.5303 84.7627 cv
93.5303 84.0425 93.4102 83.5024 93.1699 83.1426 cv
92.9302 82.7827 92.5898 82.5928 92.1299 82.5928 cv
91.6699 82.5928 91.3301 82.7627 91.0898 83.0928 cv
90.8501 83.4224 90.73 83.8926 90.73 84.5127 cv
ef
99.52 84.3428 mo
99.5 83.7427 99.3701 83.2827 99.1299 82.9727 cv
98.8901 82.6724 98.5601 82.5127 98.1201 82.5127 cv
97.7002 82.5127 97.3799 82.6724 97.1401 82.9824 cv
96.8999 83.2925 96.7603 83.7427 96.71 84.3428 cv
99.52 84.3428 li
99.52 84.3428 li
cp
100.58 84.8623 mo
96.71 84.8623 li
96.71 84.9023 li
96.71 85.6025 96.8398 86.1328 97.1001 86.4927 cv
97.3599 86.8525 97.75 87.0225 98.27 87.0225 cv
98.6602 87.0225 98.98 86.9224 99.2402 86.7124 cv
99.4902 86.5127 99.6699 86.2026 99.77 85.7925 cv
100.49 85.7925 li
100.35 86.3623 100.08 86.7925 99.7002 87.0723 cv
99.3101 87.3525 98.8003 87.4927 98.1802 87.4927 cv
97.4199 87.4927 96.8101 87.2524 96.3501 86.7524 cv
95.8901 86.2524 95.6602 85.5928 95.6602 84.7627 cv
95.6602 83.9424 95.8799 83.2827 96.3398 82.7827 cv
96.79 82.2827 97.3799 82.0327 98.1201 82.0327 cv
98.8999 82.0327 99.5103 82.2827 99.9302 82.7627 cv
100.35 83.2427 100.56 83.9424 100.58 84.8623 cv
ef
105.7 82.1626 mo
105.7 83.4624 li
105.18 83.4624 li
105.16 83.2026 105.09 83.0127 104.97 82.8828 cv
104.84 82.7627 104.65 82.6924 104.41 82.6924 cv
103.97 82.6924 103.63 82.8525 103.39 83.1523 cv
103.15 83.4624 103.04 83.9023 103.04 84.4727 cv
103.04 86.8428 li
104.08 86.8428 li
104.08 87.3623 li
101.33 87.3623 li
101.33 86.8428 li
102.14 86.8428 li
102.14 82.6826 li
101.28 82.6826 li
101.28 82.1724 li
103.04 82.1724 li
103.04 83.0928 li
103.21 82.7324 103.43 82.4727 103.71 82.2925 cv
103.99 82.1226 104.33 82.0327 104.73 82.0327 cv
104.87 82.0327 105.03 82.0527 105.19 82.0723 cv
105.35 82.0928 105.52 82.1226 105.7 82.1626 cv
105.7 82.1626 li
cp
ef
107.84 86.8428 mo
108.69 86.8428 li
108.69 87.3623 li
106.08 87.3623 li
106.08 86.8428 li
106.94 86.8428 li
106.94 82.6924 li
106.08 82.6924 li
106.08 82.1724 li
107.84 82.1724 li
107.84 86.8428 li
107.84 86.8428 li
cp
106.69 80.5625 mo
106.69 80.4126 106.74 80.2827 106.85 80.1724 cv
106.96 80.0625 107.09 80.0024 107.25 80.0024 cv
107.39 80.0024 107.52 80.0625 107.63 80.1724 cv
107.74 80.2827 107.8 80.4126 107.8 80.5625 cv
107.8 80.7227 107.74 80.8525 107.64 80.9526 cv
107.53 81.0625 107.4 81.1123 107.25 81.1123 cv
107.09 81.1123 106.96 81.0625 106.85 80.9526 cv
106.74 80.8525 106.69 80.7227 106.69 80.5625 cv
ef
114.26 83.1826 mo
114.43 82.8027 114.65 82.5225 114.92 82.3223 cv
115.19 82.1328 115.5 82.0327 115.86 82.0327 cv
116.4 82.0327 116.81 82.2026 117.08 82.5425 cv
117.34 82.8828 117.48 83.3828 117.48 84.0625 cv
117.48 86.8428 li
118.291 86.8428 li
118.291 87.3623 li
115.8 87.3623 li
115.8 86.8428 li
116.58 86.8428 li
116.58 84.1626 li
116.58 83.6426 116.5 83.2627 116.34 83.0327 cv
116.18 82.8125 115.93 82.6924 115.57 82.6924 cv
115.17 82.6924 114.86 82.8525 114.65 83.1523 cv
114.44 83.4526 114.34 83.8926 114.34 84.4727 cv
114.34 86.8428 li
115.12 86.8428 li
115.12 87.3623 li
112.66 87.3623 li
112.66 86.8428 li
113.44 86.8428 li
113.44 84.1328 li
113.44 83.6123 113.36 83.2427 113.2 83.0225 cv
113.041 82.8027 112.791 82.6924 112.43 82.6924 cv
112.03 82.6924 111.72 82.8525 111.51 83.1523 cv
111.3 83.4526 111.2 83.8926 111.2 84.4727 cv
111.2 86.8428 li
111.98 86.8428 li
111.98 87.3623 li
109.49 87.3623 li
109.49 86.8428 li
110.3 86.8428 li
110.3 82.6826 li
109.44 82.6826 li
109.44 82.1724 li
111.2 82.1724 li
111.2 83.0928 li
111.36 82.7524 111.57 82.4824 111.83 82.3027 cv
112.09 82.1226 112.38 82.0327 112.71 82.0327 cv
113.11 82.0327 113.44 82.1328 113.71 82.3325 cv
113.98 82.5327 114.16 82.8223 114.26 83.1826 cv
114.26 83.1826 li
cp
ef
122.8 84.3428 mo
122.78 83.7427 122.65 83.2827 122.41 82.9727 cv
122.17 82.6724 121.84 82.5127 121.4 82.5127 cv
120.98 82.5127 120.66 82.6724 120.42 82.9824 cv
120.18 83.2925 120.041 83.7427 119.99 84.3428 cv
122.8 84.3428 li
122.8 84.3428 li
cp
123.86 84.8623 mo
119.99 84.8623 li
119.99 84.9023 li
119.99 85.6025 120.12 86.1328 120.38 86.4927 cv
120.64 86.8525 121.03 87.0225 121.55 87.0225 cv
121.94 87.0225 122.26 86.9224 122.52 86.7124 cv
122.77 86.5127 122.95 86.2026 123.05 85.7925 cv
123.77 85.7925 li
123.63 86.3623 123.36 86.7925 122.98 87.0723 cv
122.59 87.3525 122.08 87.4927 121.46 87.4927 cv
120.7 87.4927 120.09 87.2524 119.63 86.7524 cv
119.17 86.2524 118.94 85.5928 118.94 84.7627 cv
118.94 83.9424 119.16 83.2827 119.62 82.7827 cv
120.07 82.2827 120.66 82.0327 121.4 82.0327 cv
122.18 82.0327 122.791 82.2827 123.21 82.7627 cv
123.63 83.2427 123.84 83.9424 123.86 84.8623 cv
ef
124.85 87.3623 mo
124.85 86.8428 li
125.66 86.8428 li
125.66 82.6924 li
124.8 82.6924 li
124.8 82.1724 li
126.56 82.1724 li
126.56 83.0928 li
126.72 82.7524 126.94 82.4824 127.2 82.3027 cv
127.46 82.1226 127.77 82.0327 128.13 82.0327 cv
128.7 82.0327 129.12 82.2026 129.39 82.5225 cv
129.66 82.8525 129.8 83.3623 129.8 84.0625 cv
129.8 86.8428 li
130.6 86.8428 li
130.6 87.3623 li
128.12 87.3623 li
128.12 86.8428 li
128.9 86.8428 li
128.9 84.3428 li
128.9 83.7124 128.82 83.2827 128.66 83.0425 cv
128.5 82.8027 128.23 82.6826 127.84 82.6826 cv
127.42 82.6826 127.1 82.8428 126.88 83.1426 cv
126.66 83.4526 126.56 83.8926 126.56 84.4727 cv
126.56 86.8428 li
127.34 86.8428 li
127.34 87.3623 li
124.85 87.3623 li
124.85 87.3623 li
cp
ef
132 82.6924 mo
131.21 82.6924 li
131.21 82.1724 li
132 82.1724 li
132 80.5625 li
132.9 80.5625 li
132.9 82.1724 li
134.59 82.1724 li
134.59 82.6924 li
132.9 82.6924 li
132.9 85.9927 li
132.9 86.4326 132.94 86.7227 133.03 86.8428 cv
133.11 86.9624 133.27 87.0225 133.5 87.0225 cv
133.73 87.0225 133.9 86.9526 134.01 86.8125 cv
134.11 86.6724 134.17 86.4526 134.18 86.1426 cv
134.86 86.1426 li
134.83 86.6226 134.7 86.9624 134.47 87.1724 cv
134.24 87.3828 133.89 87.4927 133.42 87.4927 cv
132.9 87.4927 132.53 87.3726 132.32 87.1523 cv
132.1 86.9326 132 86.5425 132 85.9927 cv
132 82.6924 li
132 82.6924 li
cp
ef
0 lc
[6 6 ] 0 dsh
50.7603 98.5073 mo
64.7603 98.5073 li
0 .993988 1 0 cmyk
@
76.6499 101.652 mo
76.6499 99.9927 li
77.21 99.9927 li
77.2202 100.553 77.3799 100.962 77.6899 101.223 cv
77.9902 101.493 78.46 101.623 79.0801 101.623 cv
79.6602 101.623 80.1001 101.513 80.3999 101.283 cv
80.7002 101.053 80.8599 100.712 80.8599 100.272 cv
80.8599 99.9224 80.7603 99.6523 80.5801 99.4624 cv
80.3999 99.2827 80.0103 99.0928 79.4199 98.9126 cv
78.46 98.6226 li
77.7603 98.4126 77.2603 98.1523 76.98 97.8325 cv
76.7002 97.5225 76.5601 97.0928 76.5601 96.5327 cv
76.5601 95.9126 76.7803 95.4326 77.2202 95.0928 cv
77.6602 94.7524 78.27 94.5825 79.0698 94.5825 cv
79.4102 94.5825 79.7803 94.6226 80.1802 94.6924 cv
80.5801 94.7725 81.0103 94.8726 81.4702 95.0127 cv
81.4702 96.5625 li
80.9199 96.5625 li
80.8599 96.0527 80.6899 95.6826 80.3999 95.4526 cv
80.1099 95.2227 79.6699 95.1025 79.0898 95.1025 cv
78.5698 95.1025 78.1802 95.2124 77.9102 95.4224 cv
77.6401 95.6323 77.5103 95.9326 77.5103 96.3325 cv
77.5103 96.6826 77.6099 96.9526 77.8101 97.1523 cv
78.0103 97.3525 78.4399 97.5527 79.1001 97.7427 cv
80 98.0127 li
80.6602 98.2124 81.1299 98.4727 81.4102 98.7725 cv
81.6899 99.0825 81.8398 99.4927 81.8398 100.013 cv
81.8398 100.723 81.6099 101.252 81.1602 101.603 cv
80.7002 101.962 80.0303 102.132 79.1401 102.132 cv
78.7402 102.132 78.3301 102.093 77.9102 102.013 cv
77.4902 101.942 77.0698 101.823 76.6499 101.652 cv
76.6499 101.652 li
cp
0 0 0 1 cmyk
ef
84.8003 101.482 mo
85.6499 101.482 li
85.6499 102.002 li
83.04 102.002 li
83.04 101.482 li
83.8999 101.482 li
83.8999 97.3325 li
83.04 97.3325 li
83.04 96.8125 li
84.8003 96.8125 li
84.8003 101.482 li
84.8003 101.482 li
cp
83.6499 95.2026 mo
83.6499 95.0527 83.7002 94.9224 83.8101 94.8125 cv
83.9199 94.7026 84.0503 94.6426 84.21 94.6426 cv
84.3501 94.6426 84.48 94.7026 84.5898 94.8125 cv
84.7002 94.9224 84.7603 95.0527 84.7603 95.2026 cv
84.7603 95.3623 84.7002 95.4927 84.6001 95.5928 cv
84.4902 95.7026 84.3599 95.7524 84.21 95.7524 cv
84.0503 95.7524 83.9199 95.7026 83.8101 95.5928 cv
83.7002 95.4927 83.6499 95.3623 83.6499 95.2026 cv
ef
90.98 97.8228 mo
91.1499 97.4424 91.3701 97.1626 91.6401 96.9624 cv
91.9102 96.7725 92.2202 96.6724 92.5801 96.6724 cv
93.1201 96.6724 93.5303 96.8428 93.8003 97.1826 cv
94.0601 97.5225 94.2002 98.0225 94.2002 98.7026 cv
94.2002 101.482 li
95.0103 101.482 li
95.0103 102.002 li
92.52 102.002 li
92.52 101.482 li
93.3003 101.482 li
93.3003 98.8027 li
93.3003 98.2827 93.2202 97.9023 93.0601 97.6724 cv
92.8999 97.4526 92.6499 97.3325 92.29 97.3325 cv
91.8901 97.3325 91.5801 97.4927 91.3701 97.7925 cv
91.1602 98.0928 91.0601 98.5327 91.0601 99.1123 cv
91.0601 101.482 li
91.8398 101.482 li
91.8398 102.002 li
89.3799 102.002 li
89.3799 101.482 li
90.1602 101.482 li
90.1602 98.7725 li
90.1602 98.2524 90.0801 97.8823 89.9199 97.6626 cv
89.7603 97.4424 89.5103 97.3325 89.1499 97.3325 cv
88.75 97.3325 88.4399 97.4927 88.23 97.7925 cv
88.02 98.0928 87.9199 98.5327 87.9199 99.1123 cv
87.9199 101.482 li
88.7002 101.482 li
88.7002 102.002 li
86.21 102.002 li
86.21 101.482 li
87.02 101.482 li
87.02 97.3228 li
86.1602 97.3228 li
86.1602 96.8125 li
87.9199 96.8125 li
87.9199 97.7324 li
88.0801 97.3926 88.29 97.1226 88.5503 96.9424 cv
88.8101 96.7627 89.1001 96.6724 89.4302 96.6724 cv
89.8301 96.6724 90.1602 96.7725 90.4302 96.9727 cv
90.7002 97.1724 90.8799 97.4624 90.98 97.8228 cv
90.98 97.8228 li
cp
ef
98.9399 96.8125 mo
100.62 96.8125 li
100.62 101.482 li
101.47 101.482 li
101.47 102.002 li
99.7202 102.002 li
99.7202 101.083 li
99.5503 101.433 99.3301 101.692 99.0698 101.873 cv
98.8101 102.042 98.5 102.132 98.1602 102.132 cv
97.5801 102.132 97.1499 101.973 96.8799 101.652 cv
96.6099 101.333 96.48 100.813 96.48 100.112 cv
96.48 97.3325 li
95.6699 97.3325 li
95.6699 96.8125 li
97.3799 96.8125 li
97.3799 99.8325 li
97.3799 100.473 97.4502 100.902 97.6099 101.132 cv
97.77 101.373 98.04 101.482 98.4399 101.482 cv
98.8599 101.482 99.1699 101.333 99.3901 101.022 cv
99.6099 100.723 99.7202 100.272 99.7202 99.6924 cv
99.7202 97.3325 li
98.9399 97.3325 li
98.9399 96.8125 li
98.9399 96.8125 li
cp
ef
103.69 101.482 mo
104.541 101.482 li
104.541 102.002 li
101.93 102.002 li
101.93 101.482 li
102.79 101.482 li
102.79 94.9224 li
101.93 94.9224 li
101.93 94.4023 li
103.69 94.4023 li
103.69 101.482 li
103.69 101.482 li
cp
ef
109.88 98.7627 mo
109.88 101.482 li
110.68 101.482 li
110.68 102.002 li
108.98 102.002 li
108.98 101.442 li
108.78 101.683 108.55 101.862 108.291 101.973 cv
108.03 102.073 107.72 102.132 107.38 102.132 cv
106.8 102.132 106.34 101.982 106 101.683 cv
105.66 101.382 105.5 100.962 105.5 100.442 cv
105.5 99.9126 105.69 99.5024 106.08 99.2026 cv
106.46 98.9023 107.01 98.7524 107.72 98.7524 cv
108.98 98.7524 li
108.98 98.3926 li
108.98 98.0024 108.86 97.7026 108.62 97.4824 cv
108.38 97.2627 108.041 97.1523 107.61 97.1523 cv
107.25 97.1523 106.97 97.2427 106.76 97.4023 cv
106.541 97.5625 106.41 97.8027 106.36 98.1226 cv
105.9 98.1226 li
105.9 97.0728 li
106.21 96.9424 106.51 96.8428 106.81 96.7725 cv
107.1 96.7124 107.39 96.6724 107.67 96.6724 cv
108.39 96.6724 108.93 96.8525 109.31 97.2124 cv
109.69 97.5728 109.88 98.0825 109.88 98.7627 cv
109.88 98.7627 li
cp
108.98 100.373 mo
108.98 99.2725 li
107.82 99.2725 li
107.37 99.2725 107.041 99.3726 106.82 99.5625 cv
106.6 99.7627 106.5 100.053 106.5 100.442 cv
106.5 100.803 106.61 101.093 106.83 101.303 cv
107.05 101.522 107.35 101.623 107.73 101.623 cv
108.1 101.623 108.4 101.513 108.63 101.283 cv
108.86 101.053 108.98 100.752 108.98 100.373 cv
ef
112.08 97.3325 mo
111.291 97.3325 li
111.291 96.8125 li
112.08 96.8125 li
112.08 95.2026 li
112.98 95.2026 li
112.98 96.8125 li
114.67 96.8125 li
114.67 97.3325 li
112.98 97.3325 li
112.98 100.632 li
112.98 101.073 113.02 101.362 113.11 101.482 cv
113.19 101.603 113.35 101.663 113.58 101.663 cv
113.81 101.663 113.98 101.593 114.09 101.453 cv
114.19 101.313 114.25 101.093 114.26 100.783 cv
114.94 100.783 li
114.91 101.263 114.78 101.603 114.55 101.813 cv
114.32 102.022 113.97 102.132 113.5 102.132 cv
112.98 102.132 112.61 102.013 112.4 101.792 cv
112.18 101.573 112.08 101.183 112.08 100.632 cv
112.08 97.3325 li
112.08 97.3325 li
cp
ef
116.96 101.482 mo
117.81 101.482 li
117.81 102.002 li
115.2 102.002 li
115.2 101.482 li
116.06 101.482 li
116.06 97.3325 li
115.2 97.3325 li
115.2 96.8125 li
116.96 96.8125 li
116.96 101.482 li
116.96 101.482 li
cp
115.81 95.2026 mo
115.81 95.0527 115.86 94.9224 115.97 94.8125 cv
116.08 94.7026 116.21 94.6426 116.37 94.6426 cv
116.51 94.6426 116.64 94.7026 116.75 94.8125 cv
116.86 94.9224 116.92 95.0527 116.92 95.2026 cv
116.92 95.3623 116.86 95.4927 116.76 95.5928 cv
116.65 95.7026 116.52 95.7524 116.37 95.7524 cv
116.21 95.7524 116.08 95.7026 115.97 95.5928 cv
115.86 95.4927 115.81 95.3623 115.81 95.2026 cv
ef
121.21 102.132 mo
120.45 102.132 119.85 101.893 119.39 101.393 cv
118.93 100.893 118.7 100.232 118.7 99.4023 cv
118.7 98.5825 118.92 97.9224 119.38 97.4224 cv
119.84 96.9224 120.45 96.6724 121.21 96.6724 cv
121.97 96.6724 122.57 96.9224 123.03 97.4224 cv
123.49 97.9224 123.72 98.5825 123.72 99.4023 cv
123.72 100.232 123.49 100.893 123.03 101.393 cv
122.57 101.893 121.97 102.132 121.21 102.132 cv
121.21 102.132 li
cp
121.21 101.663 mo
121.69 101.663 122.05 101.473 122.3 101.093 cv
122.541 100.712 122.67 100.152 122.67 99.4023 cv
122.67 98.6626 122.541 98.1025 122.3 97.7227 cv
122.05 97.3428 121.69 97.1523 121.21 97.1523 cv
120.73 97.1523 120.36 97.3428 120.12 97.7227 cv
119.87 98.1025 119.75 98.6626 119.75 99.4023 cv
119.75 100.152 119.87 100.712 120.12 101.093 cv
120.36 101.473 120.73 101.663 121.21 101.663 cv
ef
124.61 102.002 mo
124.61 101.482 li
125.42 101.482 li
125.42 97.3325 li
124.56 97.3325 li
124.56 96.8125 li
126.32 96.8125 li
126.32 97.7324 li
126.48 97.3926 126.7 97.1226 126.96 96.9424 cv
127.22 96.7627 127.53 96.6724 127.89 96.6724 cv
128.46 96.6724 128.88 96.8428 129.15 97.1626 cv
129.42 97.4927 129.56 98.0024 129.56 98.7026 cv
129.56 101.482 li
130.36 101.482 li
130.36 102.002 li
127.88 102.002 li
127.88 101.482 li
128.66 101.482 li
128.66 98.9824 li
128.66 98.3525 128.58 97.9224 128.42 97.6826 cv
128.26 97.4424 127.99 97.3228 127.6 97.3228 cv
127.18 97.3228 126.86 97.4824 126.64 97.7827 cv
126.42 98.0928 126.32 98.5327 126.32 99.1123 cv
126.32 101.482 li
127.1 101.482 li
127.1 102.002 li
124.61 102.002 li
124.61 102.002 li
cp
ef
38.7603 259.695 mo
189.96 259.695 li
189.96 153.589 li
38.7603 153.589 li
38.7603 259.695 li
0 0 0 0 cmyk
f
gsave
38.7603 259.742 mo
189.96 259.742 li
189.96 153.643 li
38.7603 153.643 li
38.7603 259.742 li
cp
clp
2 lc
[] 0 dsh
63.0737 235.06 mo
64.3398 226.043 li
65.6064 225.246 li
66.8726 223.764 li
68.1392 224.412 li
69.4053 219.377 li
70.6714 215.789 li
71.938 214.663 li
73.2041 210.959 li
74.4707 205.854 li
75.7368 204.533 li
77.0034 200.965 li
78.2695 197.556 li
79.5361 194.788 li
80.8022 192.646 li
82.0684 190.331 li
83.335 187.703 li
84.6011 185.755 li
85.8677 183.799 li
87.1338 181.946 li
88.4004 180.087 li
89.6665 178.341 li
90.9331 176.658 li
92.1992 174.991 li
93.4653 173.452 li
94.7319 171.915 li
95.998 170.484 li
97.2651 169.273 li
98.5313 167.817 li
99.7969 166.766 li
101.064 165.622 li
102.33 164.606 li
103.596 163.656 li
104.863 162.821 li
106.129 161.906 li
107.395 160.982 li
108.662 160.149 li
109.928 159.381 li
111.194 158.87 li
112.461 158.599 li
113.727 158.785 li
114.993 159.124 li
116.259 159.592 li
117.526 160.098 li
118.792 160.745 li
120.058 161.439 li
121.325 162.115 li
122.591 162.784 li
123.857 163.434 li
125.125 164.304 li
126.39 165.137 li
127.656 166.114 li
128.923 167.109 li
130.189 168.292 li
131.455 169.266 li
132.722 170.507 li
133.988 171.755 li
135.254 172.938 li
136.521 174.386 li
137.787 175.61 li
139.053 177.102 li
140.32 178.218 li
141.586 180.014 li
142.852 181.662 li
144.119 183.056 li
145.385 184.702 li
146.651 186.591 li
147.918 188.925 li
149.184 190.037 li
150.45 191.756 li
151.717 193.433 li
152.983 194.985 li
154.25 197.483 li
155.516 200 li
156.782 201.484 li
158.048 204.356 li
159.315 206.258 li
160.581 208.744 li
161.847 210.194 li
163.114 213.169 li
164.38 214.444 li
165.646 216.603 li
166.913 221.375 li
168.179 222.608 li
169.445 230.958 li
170.712 235.06 li
171.978 231.797 li
173.244 235.525 li
174.511 244.459 li
175.777 240.849 li
177.043 248.382 li
0 0 0 1 cmyk
@
0 lc
[6 6 ] 0 dsh
49.144 293.219 mo
50.4102 270.405 li
51.6768 259.833 li
52.9429 245.513 li
54.2095 234.527 li
55.4756 227.885 li
56.7417 223.321 li
58.0083 219.194 li
59.2744 215.384 li
60.541 211.846 li
61.8071 208.787 li
63.0737 206.302 li
64.3398 204.27 li
65.6064 202.509 li
66.8726 200.891 li
68.1392 199.314 li
69.4053 197.938 li
70.6714 196.647 li
71.938 195.472 li
73.2041 194.351 li
74.4707 193.23 li
75.7368 192.167 li
77.0034 191.094 li
78.2695 190.022 li
79.5361 188.964 li
80.8022 187.816 li
82.0684 186.578 li
83.335 185.289 li
84.6011 183.94 li
85.8677 182.588 li
87.1338 181.244 li
88.4004 179.886 li
89.6665 178.536 li
90.9331 177.206 li
92.1992 175.896 li
93.4653 174.571 li
94.7319 173.244 li
95.998 171.874 li
97.2651 170.514 li
98.5313 169.204 li
99.7969 167.941 li
101.064 166.663 li
102.33 165.333 li
103.596 164.05 li
104.863 162.869 li
106.129 161.801 li
107.395 160.875 li
108.662 160.089 li
109.928 159.453 li
111.194 158.986 li
112.461 158.777 li
113.727 158.824 li
114.993 159.026 li
116.259 159.356 li
117.526 159.801 li
118.792 160.355 li
120.058 160.999 li
121.325 161.672 li
122.591 162.397 li
123.857 163.202 li
125.125 164.083 li
126.39 165.019 li
127.656 165.977 li
128.923 166.974 li
130.189 168.015 li
131.455 169.104 li
132.722 170.253 li
133.988 171.476 li
135.254 172.79 li
136.521 174.161 li
137.787 175.602 li
139.053 177.109 li
140.32 178.667 li
141.586 180.276 li
142.852 181.989 li
144.119 183.864 li
145.385 185.82 li
146.651 187.953 li
147.918 190.29 li
149.184 192.754 li
150.45 195.527 li
151.717 198.759 li
152.983 202.369 li
154.25 206.291 li
155.516 210.398 li
156.782 214.675 li
158.048 219.049 li
159.315 224.147 li
160.581 229.846 li
161.847 235.409 li
163.114 241.949 li
164.38 249.888 li
165.646 258.265 li
166.913 271.02 li
168.179 283.067 li
0 .993988 1 0 cmyk
@
grestore
.5 lw
[] 0 dsh
63.96 153.589 mo
63.96 157.589 li
63.96 259.695 mo
63.96 255.695 li
0 0 0 1 cmyk
@
55.688 266.698 mo
60.6958 266.698 li
60.6958 267.33 li
55.688 267.33 li
55.688 266.698 li
55.688 266.698 li
cp
ef
64.104 269.627 mo
63.4639 269.627 62.9683 269.362 62.6162 268.835 cv
62.2642 268.307 62.0879 267.57 62.0879 266.61 cv
62.0879 265.658 62.2642 264.914 62.6162 264.387 cv
62.9683 263.858 63.4639 263.587 64.104 263.587 cv
64.7358 263.587 65.2319 263.858 65.584 264.387 cv
65.936 264.914 66.1201 265.658 66.1201 266.61 cv
66.1201 267.57 65.936 268.307 65.584 268.835 cv
65.2319 269.362 64.7358 269.627 64.104 269.627 cv
64.104 269.627 li
cp
64.104 269.251 mo
64.5039 269.251 64.8003 269.034 65 268.595 cv
65.1919 268.162 65.2959 267.499 65.2959 266.61 cv
65.2959 265.73 65.1919 265.066 65 264.627 cv
64.8003 264.194 64.5039 263.971 64.104 263.971 cv
63.7041 263.971 63.3999 264.194 63.208 264.627 cv
63.0083 265.066 62.9121 265.73 62.9121 266.61 cv
62.9121 267.499 63.0083 268.162 63.208 268.595 cv
63.3999 269.034 63.7041 269.251 64.104 269.251 cv
ef
67.3521 269.114 mo
67.3521 268.971 67.3999 268.851 67.4961 268.746 cv
67.5923 268.65 67.7202 268.595 67.8721 268.595 cv
68.0161 268.595 68.1362 268.65 68.2402 268.746 cv
68.3359 268.851 68.3921 268.971 68.3921 269.114 cv
68.3921 269.259 68.3359 269.387 68.2402 269.482 cv
68.1362 269.578 68.0161 269.627 67.8721 269.627 cv
67.7202 269.627 67.5923 269.578 67.4961 269.482 cv
67.3999 269.387 67.3521 269.267 67.3521 269.114 cv
67.3521 269.114 li
cp
ef
73.752 269.522 mo
71.0962 269.522 li
71.0962 269.106 li
72.0322 269.106 li
72.0322 267.963 li
69.4883 267.963 li
69.4883 267.538 li
72.04 263.587 li
72.8159 263.587 li
72.8159 267.547 li
73.9282 267.547 li
73.9282 267.963 li
72.8159 267.963 li
72.8159 269.106 li
73.752 269.106 li
73.752 269.522 li
73.752 269.522 li
cp
72.0322 267.547 mo
72.0322 264.442 li
70.04 267.547 li
72.0322 267.547 li
ef
89.1602 153.589 mo
89.1602 157.589 li
89.1602 259.695 mo
89.1602 255.695 li
@
81.1279 266.698 mo
86.1362 266.698 li
86.1362 267.33 li
81.1279 267.33 li
81.1279 266.698 li
81.1279 266.698 li
cp
ef
89.5439 269.627 mo
88.9038 269.627 88.4082 269.362 88.0562 268.835 cv
87.7041 268.307 87.5278 267.57 87.5278 266.61 cv
87.5278 265.658 87.7041 264.914 88.0562 264.387 cv
88.4082 263.858 88.9038 263.587 89.5439 263.587 cv
90.1763 263.587 90.6719 263.858 91.0239 264.387 cv
91.376 264.914 91.5601 265.658 91.5601 266.61 cv
91.5601 267.57 91.376 268.307 91.0239 268.835 cv
90.6719 269.362 90.1763 269.627 89.5439 269.627 cv
89.5439 269.627 li
cp
89.5439 269.251 mo
89.9438 269.251 90.2402 269.034 90.4399 268.595 cv
90.6318 268.162 90.7358 267.499 90.7358 266.61 cv
90.7358 265.73 90.6318 265.066 90.4399 264.627 cv
90.2402 264.194 89.9438 263.971 89.5439 263.971 cv
89.144 263.971 88.8398 264.194 88.6479 264.627 cv
88.4482 265.066 88.3521 265.73 88.3521 266.61 cv
88.3521 267.499 88.4482 268.162 88.6479 268.595 cv
88.8398 269.034 89.144 269.251 89.5439 269.251 cv
ef
92.792 269.114 mo
92.792 268.971 92.8398 268.851 92.936 268.746 cv
93.0322 268.65 93.1602 268.595 93.312 268.595 cv
93.4561 268.595 93.5762 268.65 93.6802 268.746 cv
93.7759 268.851 93.832 268.971 93.832 269.114 cv
93.832 269.259 93.7759 269.387 93.6802 269.482 cv
93.5762 269.578 93.4561 269.627 93.312 269.627 cv
93.1602 269.627 93.0322 269.578 92.936 269.482 cv
92.8398 269.387 92.792 269.267 92.792 269.114 cv
92.792 269.114 li
cp
ef
95.7041 265.083 mo
95.2642 265.083 li
95.2642 264.043 li
95.5361 263.898 95.8159 263.786 96.104 263.707 cv
96.3843 263.627 96.6641 263.587 96.936 263.587 cv
97.5439 263.587 98.0239 263.738 98.376 264.026 cv
98.728 264.322 98.9038 264.723 98.9038 265.227 cv
98.9038 265.803 98.5039 266.482 97.7041 267.274 cv
97.6401 267.339 97.6001 267.379 97.5679 267.41 cv
96.0962 268.883 li
98.5278 268.883 li
98.5278 268.162 li
98.9839 268.162 li
98.9839 269.522 li
95.2241 269.522 li
95.2241 269.099 li
96.9922 267.33 li
97.376 266.946 97.6563 266.587 97.8242 266.259 cv
97.9922 265.931 98.0801 265.587 98.0801 265.227 cv
98.0801 264.835 97.9761 264.53 97.7681 264.307 cv
97.5601 264.083 97.2803 263.971 96.9282 263.971 cv
96.5522 263.971 96.2642 264.066 96.064 264.251 cv
95.856 264.435 95.7358 264.715 95.7041 265.083 cv
95.7041 265.083 li
cp
ef
114.36 153.589 mo
114.36 157.589 li
114.36 259.695 mo
114.36 255.695 li
@
111.144 269.627 mo
110.504 269.627 110.008 269.362 109.656 268.835 cv
109.304 268.307 109.128 267.57 109.128 266.61 cv
109.128 265.658 109.304 264.914 109.656 264.387 cv
110.008 263.858 110.504 263.587 111.144 263.587 cv
111.776 263.587 112.272 263.858 112.625 264.387 cv
112.976 264.914 113.16 265.658 113.16 266.61 cv
113.16 267.57 112.976 268.307 112.625 268.835 cv
112.272 269.362 111.776 269.627 111.144 269.627 cv
111.144 269.627 li
cp
111.144 269.251 mo
111.544 269.251 111.84 269.034 112.041 268.595 cv
112.232 268.162 112.336 267.499 112.336 266.61 cv
112.336 265.73 112.232 265.066 112.041 264.627 cv
111.84 264.194 111.544 263.971 111.144 263.971 cv
110.744 263.971 110.44 264.194 110.248 264.627 cv
110.048 265.066 109.952 265.73 109.952 266.61 cv
109.952 267.499 110.048 268.162 110.248 268.595 cv
110.44 269.034 110.744 269.251 111.144 269.251 cv
ef
114.392 269.114 mo
114.392 268.971 114.44 268.851 114.536 268.746 cv
114.632 268.65 114.76 268.595 114.912 268.595 cv
115.056 268.595 115.176 268.65 115.28 268.746 cv
115.376 268.851 115.432 268.971 115.432 269.114 cv
115.432 269.259 115.376 269.387 115.28 269.482 cv
115.176 269.578 115.056 269.627 114.912 269.627 cv
114.76 269.627 114.632 269.578 114.536 269.482 cv
114.44 269.387 114.392 269.267 114.392 269.114 cv
114.392 269.114 li
cp
ef
118.584 269.627 mo
117.944 269.627 117.448 269.362 117.096 268.835 cv
116.744 268.307 116.568 267.57 116.568 266.61 cv
116.568 265.658 116.744 264.914 117.096 264.387 cv
117.448 263.858 117.944 263.587 118.584 263.587 cv
119.216 263.587 119.712 263.858 120.064 264.387 cv
120.417 264.914 120.6 265.658 120.6 266.61 cv
120.6 267.57 120.417 268.307 120.064 268.835 cv
119.712 269.362 119.216 269.627 118.584 269.627 cv
118.584 269.627 li
cp
118.584 269.251 mo
118.984 269.251 119.28 269.034 119.48 268.595 cv
119.672 268.162 119.776 267.499 119.776 266.61 cv
119.776 265.73 119.672 265.066 119.48 264.627 cv
119.28 264.194 118.984 263.971 118.584 263.971 cv
118.184 263.971 117.88 264.194 117.688 264.627 cv
117.488 265.066 117.392 265.73 117.392 266.61 cv
117.392 267.499 117.488 268.162 117.688 268.595 cv
117.88 269.034 118.184 269.251 118.584 269.251 cv
ef
139.56 153.589 mo
139.56 157.589 li
139.56 259.695 mo
139.56 255.695 li
@
136.344 269.627 mo
135.704 269.627 135.208 269.362 134.856 268.835 cv
134.504 268.307 134.328 267.57 134.328 266.61 cv
134.328 265.658 134.504 264.914 134.856 264.387 cv
135.208 263.858 135.704 263.587 136.344 263.587 cv
136.976 263.587 137.472 263.858 137.824 264.387 cv
138.176 264.914 138.36 265.658 138.36 266.61 cv
138.36 267.57 138.176 268.307 137.824 268.835 cv
137.472 269.362 136.976 269.627 136.344 269.627 cv
136.344 269.627 li
cp
136.344 269.251 mo
136.744 269.251 137.041 269.034 137.24 268.595 cv
137.432 268.162 137.536 267.499 137.536 266.61 cv
137.536 265.73 137.432 265.066 137.24 264.627 cv
137.041 264.194 136.744 263.971 136.344 263.971 cv
135.944 263.971 135.64 264.194 135.448 264.627 cv
135.249 265.066 135.152 265.73 135.152 266.61 cv
135.152 267.499 135.249 268.162 135.448 268.595 cv
135.64 269.034 135.944 269.251 136.344 269.251 cv
ef
139.592 269.114 mo
139.592 268.971 139.64 268.851 139.736 268.746 cv
139.833 268.65 139.96 268.595 140.112 268.595 cv
140.256 268.595 140.376 268.65 140.48 268.746 cv
140.576 268.851 140.632 268.971 140.632 269.114 cv
140.632 269.259 140.576 269.387 140.48 269.482 cv
140.376 269.578 140.256 269.627 140.112 269.627 cv
139.96 269.627 139.833 269.578 139.736 269.482 cv
139.64 269.387 139.592 269.267 139.592 269.114 cv
139.592 269.114 li
cp
ef
142.504 265.083 mo
142.064 265.083 li
142.064 264.043 li
142.336 263.898 142.616 263.786 142.904 263.707 cv
143.184 263.627 143.464 263.587 143.736 263.587 cv
144.344 263.587 144.824 263.738 145.176 264.026 cv
145.528 264.322 145.704 264.723 145.704 265.227 cv
145.704 265.803 145.304 266.482 144.504 267.274 cv
144.44 267.339 144.4 267.379 144.368 267.41 cv
142.896 268.883 li
145.328 268.883 li
145.328 268.162 li
145.784 268.162 li
145.784 269.522 li
142.024 269.522 li
142.024 269.099 li
143.792 267.33 li
144.176 266.946 144.457 266.587 144.625 266.259 cv
144.792 265.931 144.88 265.587 144.88 265.227 cv
144.88 264.835 144.776 264.53 144.568 264.307 cv
144.36 264.083 144.08 263.971 143.728 263.971 cv
143.352 263.971 143.064 264.066 142.864 264.251 cv
142.656 264.435 142.536 264.715 142.504 265.083 cv
142.504 265.083 li
cp
ef
164.76 153.589 mo
164.76 157.589 li
164.76 259.695 mo
164.76 255.695 li
@
161.304 269.627 mo
160.664 269.627 160.168 269.362 159.816 268.835 cv
159.464 268.307 159.288 267.57 159.288 266.61 cv
159.288 265.658 159.464 264.914 159.816 264.387 cv
160.168 263.858 160.664 263.587 161.304 263.587 cv
161.936 263.587 162.432 263.858 162.784 264.387 cv
163.136 264.914 163.32 265.658 163.32 266.61 cv
163.32 267.57 163.136 268.307 162.784 268.835 cv
162.432 269.362 161.936 269.627 161.304 269.627 cv
161.304 269.627 li
cp
161.304 269.251 mo
161.704 269.251 162 269.034 162.2 268.595 cv
162.392 268.162 162.496 267.499 162.496 266.61 cv
162.496 265.73 162.392 265.066 162.2 264.627 cv
162 264.194 161.704 263.971 161.304 263.971 cv
160.904 263.971 160.6 264.194 160.408 264.627 cv
160.208 265.066 160.112 265.73 160.112 266.61 cv
160.112 267.499 160.208 268.162 160.408 268.595 cv
160.6 269.034 160.904 269.251 161.304 269.251 cv
ef
164.792 269.114 mo
164.792 268.971 164.84 268.851 164.936 268.746 cv
165.032 268.65 165.16 268.595 165.312 268.595 cv
165.457 268.595 165.576 268.65 165.68 268.746 cv
165.776 268.851 165.833 268.971 165.833 269.114 cv
165.833 269.259 165.776 269.387 165.68 269.482 cv
165.576 269.578 165.457 269.627 165.312 269.627 cv
165.16 269.627 165.032 269.578 164.936 269.482 cv
164.84 269.387 164.792 269.267 164.792 269.114 cv
164.792 269.114 li
cp
ef
170.952 269.522 mo
168.296 269.522 li
168.296 269.106 li
169.232 269.106 li
169.232 267.963 li
166.688 267.963 li
166.688 267.538 li
169.24 263.587 li
170.016 263.587 li
170.016 267.547 li
171.128 267.547 li
171.128 267.963 li
170.016 267.963 li
170.016 269.106 li
170.952 269.106 li
170.952 269.522 li
170.952 269.522 li
cp
169.232 267.547 mo
169.232 264.442 li
167.24 267.547 li
169.232 267.547 li
ef
110.703 280.803 mo
110.64 280.803 110.613 280.767 110.613 280.686 cv
110.613 280.668 110.623 280.641 110.631 280.604 cv
110.64 280.568 110.649 280.542 110.667 280.523 cv
110.685 280.506 110.703 280.487 110.73 280.487 cv
111.306 280.487 111.639 280.308 111.729 279.938 cv
112.953 275.016 li
112.782 274.988 112.521 274.971 112.161 274.971 cv
112.098 274.971 112.071 274.935 112.071 274.854 cv
112.071 274.836 112.08 274.809 112.089 274.772 cv
112.098 274.736 112.107 274.71 112.125 274.691 cv
112.143 274.674 112.161 274.655 112.188 274.655 cv
113.745 274.655 li
113.781 274.655 113.808 274.674 113.826 274.71 cv
115.824 279.471 li
116.823 275.483 li
116.833 275.421 116.841 275.376 116.841 275.349 cv
116.841 275.097 116.607 274.971 116.148 274.971 cv
116.085 274.971 116.058 274.935 116.058 274.854 cv
116.076 274.781 116.094 274.728 116.103 274.7 cv
116.112 274.674 116.148 274.655 116.211 274.655 cv
118.137 274.655 li
118.191 274.655 118.227 274.7 118.227 274.772 cv
118.218 274.791 118.209 274.817 118.2 274.854 cv
118.191 274.89 118.182 274.926 118.164 274.943 cv
118.146 274.962 118.128 274.971 118.11 274.971 cv
117.534 274.971 117.201 275.159 117.111 275.52 cv
115.815 280.722 li
115.797 280.775 115.761 280.803 115.725 280.803 cv
115.617 280.803 li
115.572 280.803 115.545 280.784 115.536 280.739 cv
113.241 275.295 li
113.223 275.24 li
113.205 275.231 113.205 275.223 113.205 275.214 cv
112.017 279.975 li
112.008 279.992 112 280.02 112 280.037 cv
112 280.056 111.99 280.083 111.99 280.109 cv
111.99 280.271 112.053 280.37 112.188 280.416 cv
112.323 280.47 112.494 280.487 112.692 280.487 cv
112.746 280.487 112.782 280.532 112.782 280.604 cv
112.755 280.694 112.737 280.748 112.728 280.767 cv
112.71 280.794 112.683 280.803 112.629 280.803 cv
110.703 280.803 li
110.703 280.803 li
cp
ef
189.96 259.695 mo
185.96 259.695 li
38.7603 259.695 mo
42.7603 259.695 li
@
17.8159 262.803 mo
17.8159 262.387 li
18.832 262.387 li
18.832 257.538 li
17.6563 258.299 li
17.6563 257.786 li
19.0801 256.866 li
19.6162 256.866 li
19.6162 262.387 li
20.6318 262.387 li
20.6318 262.803 li
17.8159 262.803 li
17.8159 262.803 li
cp
ef
24.5039 262.906 mo
23.8643 262.906 23.3682 262.643 23.0161 262.114 cv
22.6641 261.587 22.4883 260.851 22.4883 259.891 cv
22.4883 258.938 22.6641 258.194 23.0161 257.667 cv
23.3682 257.139 23.8643 256.866 24.5039 256.866 cv
25.1362 256.866 25.6318 257.139 25.9839 257.667 cv
26.3359 258.194 26.52 258.938 26.52 259.891 cv
26.52 260.851 26.3359 261.587 25.9839 262.114 cv
25.6318 262.643 25.1362 262.906 24.5039 262.906 cv
24.5039 262.906 li
cp
24.5039 262.53 mo
24.9038 262.53 25.2002 262.314 25.3999 261.875 cv
25.5923 261.442 25.6963 260.778 25.6963 259.891 cv
25.6963 259.011 25.5923 258.347 25.3999 257.906 cv
25.2002 257.475 24.9038 257.251 24.5039 257.251 cv
24.104 257.251 23.8003 257.475 23.6079 257.906 cv
23.4082 258.347 23.312 259.011 23.312 259.891 cv
23.312 260.778 23.4082 261.442 23.6079 261.875 cv
23.8003 262.314 24.104 262.53 24.5039 262.53 cv
ef
27.2466 257.009 mo
28.6465 257.009 li
28.6465 257.435 li
27.2466 257.435 li
27.2466 257.009 li
27.2466 257.009 li
cp
ef
32.0786 254.92 mo
30.4824 258.723 li
30.0737 258.723 li
31.5967 255.088 li
29.7095 255.088 li
29.7095 255.592 li
29.3906 255.592 li
29.3906 254.641 li
32.0786 254.641 li
32.0786 254.92 li
32.0786 254.92 li
cp
ef
189.96 242.011 mo
185.96 242.011 li
38.7603 242.011 mo
42.7603 242.011 li
@
17.8159 245.043 mo
17.8159 244.627 li
18.832 244.627 li
18.832 239.778 li
17.6563 240.538 li
17.6563 240.026 li
19.0801 239.106 li
19.6162 239.106 li
19.6162 244.627 li
20.6318 244.627 li
20.6318 245.043 li
17.8159 245.043 li
17.8159 245.043 li
cp
ef
24.5039 245.146 mo
23.8643 245.146 23.3682 244.883 23.0161 244.354 cv
22.6641 243.826 22.4883 243.091 22.4883 242.131 cv
22.4883 241.179 22.6641 240.435 23.0161 239.906 cv
23.3682 239.379 23.8643 239.106 24.5039 239.106 cv
25.1362 239.106 25.6318 239.379 25.9839 239.906 cv
26.3359 240.435 26.52 241.179 26.52 242.131 cv
26.52 243.091 26.3359 243.826 25.9839 244.354 cv
25.6318 244.883 25.1362 245.146 24.5039 245.146 cv
24.5039 245.146 li
cp
24.5039 244.771 mo
24.9038 244.771 25.2002 244.555 25.3999 244.114 cv
25.5923 243.683 25.6963 243.019 25.6963 242.131 cv
25.6963 241.251 25.5923 240.587 25.3999 240.146 cv
25.2002 239.715 24.9038 239.49 24.5039 239.49 cv
24.104 239.49 23.8003 239.715 23.6079 240.146 cv
23.4082 240.587 23.312 241.251 23.312 242.131 cv
23.312 243.019 23.4082 243.683 23.6079 244.114 cv
23.8003 244.555 24.104 244.771 24.5039 244.771 cv
ef
27.2466 239.489 mo
28.6465 239.489 li
28.6465 239.914 li
27.2466 239.914 li
27.2466 239.489 li
27.2466 239.489 li
cp
ef
29.8608 238.957 mo
29.9839 238.822 30.124 238.716 30.2808 238.649 cv
30.4375 238.582 30.6113 238.548 30.813 238.548 cv
31.2163 238.548 31.541 238.671 31.7759 238.918 cv
32.0112 239.164 32.1289 239.494 32.1289 239.914 cv
32.1289 240.329 32 240.659 31.748 240.906 cv
31.4902 241.152 31.1543 241.275 30.729 241.275 cv
30.2695 241.275 29.9111 241.107 29.665 240.766 cv
29.4185 240.424 29.2954 239.932 29.2954 239.293 cv
29.2954 238.582 29.4409 238.027 29.7319 237.636 cv
30.0234 237.243 30.4375 237.047 30.9751 237.047 cv
31.1206 237.047 31.272 237.064 31.4287 237.087 cv
31.5854 237.114 31.748 237.153 31.916 237.21 cv
31.916 237.882 li
31.6079 237.882 li
31.5854 237.702 31.5127 237.563 31.395 237.462 cv
31.2778 237.366 31.1206 237.316 30.9194 237.316 cv
30.561 237.316 30.2979 237.45 30.124 237.72 cv
29.9507 237.988 29.8608 238.402 29.8608 238.957 cv
29.8608 238.957 li
cp
30.7515 241.012 mo
31.0088 241.012 31.2051 240.923 31.3447 240.732 cv
31.479 240.542 31.5522 240.273 31.5522 239.914 cv
31.5522 239.562 31.479 239.293 31.3447 239.103 cv
31.2051 238.912 31.0088 238.817 30.7515 238.817 cv
30.4883 238.817 30.2866 238.912 30.1519 239.092 cv
30.0176 239.276 29.9507 239.539 29.9507 239.881 cv
29.9507 240.245 30.0176 240.525 30.1577 240.721 cv
30.292 240.917 30.4937 241.012 30.7515 241.012 cv
ef
189.96 224.326 mo
185.96 224.326 li
38.7603 224.326 mo
42.7603 224.326 li
@
17.8159 227.282 mo
17.8159 226.866 li
18.832 226.866 li
18.832 222.019 li
17.6563 222.778 li
17.6563 222.267 li
19.0801 221.347 li
19.6162 221.347 li
19.6162 226.866 li
20.6318 226.866 li
20.6318 227.282 li
17.8159 227.282 li
17.8159 227.282 li
cp
ef
24.5039 227.387 mo
23.8643 227.387 23.3682 227.123 23.0161 226.595 cv
22.6641 226.066 22.4883 225.33 22.4883 224.37 cv
22.4883 223.419 22.6641 222.675 23.0161 222.146 cv
23.3682 221.618 23.8643 221.347 24.5039 221.347 cv
25.1362 221.347 25.6318 221.618 25.9839 222.146 cv
26.3359 222.675 26.52 223.419 26.52 224.37 cv
26.52 225.33 26.3359 226.066 25.9839 226.595 cv
25.6318 227.123 25.1362 227.387 24.5039 227.387 cv
24.5039 227.387 li
cp
24.5039 227.011 mo
24.9038 227.011 25.2002 226.795 25.3999 226.354 cv
25.5923 225.923 25.6963 225.259 25.6963 224.37 cv
25.6963 223.49 25.5923 222.826 25.3999 222.387 cv
25.2002 221.954 24.9038 221.73 24.5039 221.73 cv
24.104 221.73 23.8003 221.954 23.6079 222.387 cv
23.4082 222.826 23.312 223.49 23.312 224.37 cv
23.312 225.259 23.4082 225.923 23.6079 226.354 cv
23.8003 226.795 24.104 227.011 24.5039 227.011 cv
ef
27.2466 221.729 mo
28.6465 221.729 li
28.6465 222.154 li
27.2466 222.154 li
27.2466 221.729 li
27.2466 221.729 li
cp
ef
31.7368 219.36 mo
31.7368 219.809 li
29.8667 219.809 li
29.8667 220.979 li
29.9561 220.911 30.0679 220.866 30.1968 220.833 cv
30.3198 220.8 30.4658 220.782 30.6226 220.782 cv
31.0591 220.782 31.4063 220.906 31.6641 221.152 cv
31.9219 221.398 32.0503 221.729 32.0503 222.149 cv
32.0503 222.586 31.9219 222.922 31.6641 223.157 cv
31.4063 223.397 31.0425 223.516 30.5776 223.516 cv
30.3872 223.516 30.1968 223.493 30.001 223.448 cv
29.7993 223.409 29.5977 223.342 29.396 223.246 cv
29.396 222.451 li
29.7041 222.451 li
29.7207 222.715 29.8047 222.916 29.9507 223.051 cv
30.0962 223.185 30.3091 223.252 30.5776 223.252 cv
30.8633 223.252 31.0815 223.157 31.2383 222.967 cv
31.395 222.776 31.4736 222.508 31.4736 222.149 cv
31.4736 221.796 31.395 221.527 31.2441 221.337 cv
31.0874 221.146 30.8687 221.052 30.5776 221.052 cv
30.4097 221.052 30.2642 221.085 30.1406 221.141 cv
30.0176 221.197 29.9058 221.286 29.8105 221.41 cv
29.5752 221.41 li
29.5752 219.36 li
31.7368 219.36 li
31.7368 219.36 li
cp
ef
189.96 206.643 mo
185.96 206.643 li
38.7603 206.643 mo
42.7603 206.643 li
@
17.8159 209.763 mo
17.8159 209.347 li
18.832 209.347 li
18.832 204.499 li
17.6563 205.259 li
17.6563 204.747 li
19.0801 203.827 li
19.6162 203.827 li
19.6162 209.347 li
20.6318 209.347 li
20.6318 209.763 li
17.8159 209.763 li
17.8159 209.763 li
cp
ef
24.5039 209.866 mo
23.8643 209.866 23.3682 209.603 23.0161 209.074 cv
22.6641 208.547 22.4883 207.811 22.4883 206.851 cv
22.4883 205.898 22.6641 205.154 23.0161 204.626 cv
23.3682 204.099 23.8643 203.827 24.5039 203.827 cv
25.1362 203.827 25.6318 204.099 25.9839 204.626 cv
26.3359 205.154 26.52 205.898 26.52 206.851 cv
26.52 207.811 26.3359 208.547 25.9839 209.074 cv
25.6318 209.603 25.1362 209.866 24.5039 209.866 cv
24.5039 209.866 li
cp
24.5039 209.49 mo
24.9038 209.49 25.2002 209.274 25.3999 208.835 cv
25.5923 208.402 25.6963 207.738 25.6963 206.851 cv
25.6963 205.971 25.5923 205.307 25.3999 204.867 cv
25.2002 204.435 24.9038 204.21 24.5039 204.21 cv
24.104 204.21 23.8003 204.435 23.6079 204.867 cv
23.4082 205.307 23.312 205.971 23.312 206.851 cv
23.312 207.738 23.4082 208.402 23.6079 208.835 cv
23.8003 209.274 24.104 209.49 24.5039 209.49 cv
ef
27.2466 203.969 mo
28.6465 203.969 li
28.6465 204.395 li
27.2466 204.395 li
27.2466 203.969 li
27.2466 203.969 li
cp
ef
32.0786 205.683 mo
30.2192 205.683 li
30.2192 205.392 li
30.8745 205.392 li
30.8745 204.59 li
29.0938 204.59 li
29.0938 204.294 li
30.8799 201.527 li
31.4233 201.527 li
31.4233 204.299 li
32.2017 204.299 li
32.2017 204.59 li
31.4233 204.59 li
31.4233 205.392 li
32.0786 205.392 li
32.0786 205.683 li
32.0786 205.683 li
cp
30.8745 204.299 mo
30.8745 202.126 li
29.48 204.299 li
30.8745 204.299 li
ef
189.96 188.958 mo
185.96 188.958 li
38.7603 188.958 mo
42.7603 188.958 li
@
17.8159 192.002 mo
17.8159 191.586 li
18.832 191.586 li
18.832 186.739 li
17.6563 187.499 li
17.6563 186.986 li
19.0801 186.066 li
19.6162 186.066 li
19.6162 191.586 li
20.6318 191.586 li
20.6318 192.002 li
17.8159 192.002 li
17.8159 192.002 li
cp
ef
24.5039 192.106 mo
23.8643 192.106 23.3682 191.843 23.0161 191.314 cv
22.6641 190.787 22.4883 190.051 22.4883 189.09 cv
22.4883 188.139 22.6641 187.395 23.0161 186.867 cv
23.3682 186.338 23.8643 186.066 24.5039 186.066 cv
25.1362 186.066 25.6318 186.338 25.9839 186.867 cv
26.3359 187.395 26.52 188.139 26.52 189.09 cv
26.52 190.051 26.3359 190.787 25.9839 191.314 cv
25.6318 191.843 25.1362 192.106 24.5039 192.106 cv
24.5039 192.106 li
cp
24.5039 191.73 mo
24.9038 191.73 25.2002 191.515 25.3999 191.075 cv
25.5923 190.643 25.6963 189.979 25.6963 189.09 cv
25.6963 188.21 25.5923 187.546 25.3999 187.106 cv
25.2002 186.675 24.9038 186.451 24.5039 186.451 cv
24.104 186.451 23.8003 186.675 23.6079 187.106 cv
23.4082 187.546 23.312 188.21 23.312 189.09 cv
23.312 189.979 23.4082 190.643 23.6079 191.075 cv
23.8003 191.515 24.104 191.73 24.5039 191.73 cv
ef
27.2466 186.449 mo
28.6465 186.449 li
28.6465 186.875 li
27.2466 186.875 li
27.2466 186.449 li
27.2466 186.449 li
cp
ef
29.4634 184.254 mo
29.6763 184.175 29.8774 184.114 30.0737 184.069 cv
30.2695 184.03 30.4546 184.007 30.6279 184.007 cv
31.0259 184.007 31.3394 184.097 31.5635 184.265 cv
31.7871 184.438 31.8994 184.679 31.8994 184.982 cv
31.8994 185.228 31.8208 185.436 31.6641 185.598 cv
31.5073 185.766 31.2891 185.878 31.0088 185.934 cv
31.3447 185.984 31.6025 186.107 31.7871 186.303 cv
31.9722 186.5 32.0674 186.751 32.0674 187.06 cv
32.0674 187.44 31.9385 187.731 31.6807 187.933 cv
31.4233 188.135 31.0591 188.235 30.5776 188.235 cv
30.3647 188.235 30.1519 188.213 29.9507 188.168 cv
29.749 188.129 29.5474 188.062 29.3457 187.967 cv
29.3457 187.171 li
29.6538 187.171 li
29.6704 187.44 29.7603 187.636 29.917 187.771 cv
30.0737 187.905 30.2979 187.972 30.5889 187.972 cv
30.8687 187.972 31.0874 187.894 31.2495 187.731 cv
31.4063 187.569 31.4902 187.345 31.4902 187.065 cv
31.4902 186.746 31.4063 186.505 31.2383 186.337 cv
31.0703 186.175 30.8296 186.09 30.5103 186.09 cv
30.2529 186.09 li
30.2529 185.811 li
30.3872 185.811 li
30.7065 185.811 30.9473 185.749 31.104 185.615 cv
31.2607 185.48 31.3447 185.284 31.3447 185.015 cv
31.3447 184.78 31.2778 184.595 31.1489 184.467 cv
31.0146 184.343 30.8296 184.276 30.5835 184.276 cv
30.3369 184.276 30.1406 184.338 30.0063 184.456 cv
29.8721 184.573 29.7935 184.747 29.7715 184.971 cv
29.4634 184.971 li
29.4634 184.254 li
29.4634 184.254 li
cp
ef
189.96 171.274 mo
185.96 171.274 li
38.7603 171.274 mo
42.7603 171.274 li
@
17.8159 174.482 mo
17.8159 174.066 li
18.832 174.066 li
18.832 169.219 li
17.6563 169.979 li
17.6563 169.467 li
19.0801 168.546 li
19.6162 168.546 li
19.6162 174.066 li
20.6318 174.066 li
20.6318 174.482 li
17.8159 174.482 li
17.8159 174.482 li
cp
ef
24.5039 174.586 mo
23.8643 174.586 23.3682 174.323 23.0161 173.794 cv
22.6641 173.267 22.4883 172.531 22.4883 171.57 cv
22.4883 170.619 22.6641 169.875 23.0161 169.347 cv
23.3682 168.818 23.8643 168.546 24.5039 168.546 cv
25.1362 168.546 25.6318 168.818 25.9839 169.347 cv
26.3359 169.875 26.52 170.619 26.52 171.57 cv
26.52 172.531 26.3359 173.267 25.9839 173.794 cv
25.6318 174.323 25.1362 174.586 24.5039 174.586 cv
24.5039 174.586 li
cp
24.5039 174.21 mo
24.9038 174.21 25.2002 173.995 25.3999 173.555 cv
25.5923 173.123 25.6963 172.458 25.6963 171.57 cv
25.6963 170.69 25.5923 170.026 25.3999 169.586 cv
25.2002 169.154 24.9038 168.931 24.5039 168.931 cv
24.104 168.931 23.8003 169.154 23.6079 169.586 cv
23.4082 170.026 23.312 170.69 23.312 171.57 cv
23.312 172.458 23.4082 173.123 23.6079 173.555 cv
23.8003 173.995 24.104 174.21 24.5039 174.21 cv
ef
27.2466 168.689 mo
28.6465 168.689 li
28.6465 169.115 li
27.2466 169.115 li
27.2466 168.689 li
27.2466 168.689 li
cp
ef
29.6367 167.294 mo
29.3286 167.294 li
29.3286 166.566 li
29.519 166.466 29.7153 166.387 29.917 166.332 cv
30.1128 166.275 30.3091 166.248 30.499 166.248 cv
30.9248 166.248 31.2607 166.354 31.5073 166.555 cv
31.7534 166.763 31.877 167.042 31.877 167.396 cv
31.877 167.798 31.5967 168.274 31.0366 168.829 cv
30.9922 168.874 30.9639 168.902 30.9419 168.924 cv
29.9111 169.955 li
31.6138 169.955 li
31.6138 169.451 li
31.9331 169.451 li
31.9331 170.402 li
29.3008 170.402 li
29.3008 170.106 li
30.5386 168.868 li
30.8071 168.599 31.0034 168.347 31.1206 168.118 cv
31.2383 167.888 31.3003 167.647 31.3003 167.396 cv
31.3003 167.121 31.2271 166.908 31.0815 166.751 cv
30.936 166.595 30.7402 166.516 30.4937 166.516 cv
30.2305 166.516 30.0288 166.583 29.8887 166.712 cv
29.7432 166.841 29.6592 167.037 29.6367 167.294 cv
29.6367 167.294 li
cp
ef
189.96 153.589 mo
185.96 153.589 li
38.7603 153.589 mo
42.7603 153.589 li
@
17.8159 156.723 mo
17.8159 156.307 li
18.832 156.307 li
18.832 151.458 li
17.6563 152.219 li
17.6563 151.707 li
19.0801 150.787 li
19.6162 150.787 li
19.6162 156.307 li
20.6318 156.307 li
20.6318 156.723 li
17.8159 156.723 li
17.8159 156.723 li
cp
ef
24.5039 156.827 mo
23.8643 156.827 23.3682 156.563 23.0161 156.035 cv
22.6641 155.506 22.4883 154.771 22.4883 153.811 cv
22.4883 152.858 22.6641 152.115 23.0161 151.586 cv
23.3682 151.059 23.8643 150.787 24.5039 150.787 cv
25.1362 150.787 25.6318 151.059 25.9839 151.586 cv
26.3359 152.115 26.52 152.858 26.52 153.811 cv
26.52 154.771 26.3359 155.506 25.9839 156.035 cv
25.6318 156.563 25.1362 156.827 24.5039 156.827 cv
24.5039 156.827 li
cp
24.5039 156.451 mo
24.9038 156.451 25.2002 156.234 25.3999 155.794 cv
25.5923 155.362 25.6963 154.699 25.6963 153.811 cv
25.6963 152.931 25.5923 152.267 25.3999 151.827 cv
25.2002 151.395 24.9038 151.17 24.5039 151.17 cv
24.104 151.17 23.8003 151.395 23.6079 151.827 cv
23.4082 152.267 23.312 152.931 23.312 153.811 cv
23.312 154.699 23.4082 155.362 23.6079 155.794 cv
23.8003 156.234 24.104 156.451 24.5039 156.451 cv
ef
27.2466 150.929 mo
28.6465 150.929 li
28.6465 151.354 li
27.2466 151.354 li
27.2466 150.929 li
27.2466 150.929 li
cp
ef
29.7153 152.643 mo
29.7153 152.352 li
30.4263 152.352 li
30.4263 148.958 li
29.603 149.49 li
29.603 149.131 li
30.6001 148.487 li
30.9751 148.487 li
30.9751 152.352 li
31.6865 152.352 li
31.6865 152.643 li
29.7153 152.643 li
29.7153 152.643 li
cp
ef
189.96 154.399 mo
187.96 154.399 li
38.7603 154.399 mo
40.7603 154.399 li
189.96 155.304 mo
187.96 155.304 li
38.7603 155.304 mo
40.7603 155.304 li
189.96 156.33 mo
187.96 156.33 li
38.7603 156.33 mo
40.7603 156.33 li
189.96 157.514 mo
187.96 157.514 li
38.7603 157.514 mo
40.7603 157.514 li
189.96 158.914 mo
187.96 158.914 li
38.7603 158.914 mo
40.7603 158.914 li
189.96 160.627 mo
187.96 160.627 li
38.7603 160.627 mo
40.7603 160.627 li
189.96 162.836 mo
187.96 162.836 li
38.7603 162.836 mo
40.7603 162.836 li
189.96 165.951 mo
187.96 165.951 li
38.7603 165.951 mo
40.7603 165.951 li
189.96 172.083 mo
187.96 172.083 li
38.7603 172.083 mo
40.7603 172.083 li
189.96 172.987 mo
187.96 172.987 li
38.7603 172.987 mo
40.7603 172.987 li
189.96 174.014 mo
187.96 174.014 li
38.7603 174.014 mo
40.7603 174.014 li
189.96 175.198 mo
187.96 175.198 li
38.7603 175.198 mo
40.7603 175.198 li
189.96 176.598 mo
187.96 176.598 li
38.7603 176.598 mo
40.7603 176.598 li
189.96 178.312 mo
187.96 178.312 li
38.7603 178.312 mo
40.7603 178.312 li
189.96 180.521 mo
187.96 180.521 li
38.7603 180.521 mo
40.7603 180.521 li
189.96 183.635 mo
187.96 183.635 li
38.7603 183.635 mo
40.7603 183.635 li
189.96 189.768 mo
187.96 189.768 li
38.7603 189.768 mo
40.7603 189.768 li
189.96 190.672 mo
187.96 190.672 li
38.7603 190.672 mo
40.7603 190.672 li
189.96 191.698 mo
187.96 191.698 li
38.7603 191.698 mo
40.7603 191.698 li
189.96 192.881 mo
187.96 192.881 li
38.7603 192.881 mo
40.7603 192.881 li
189.96 194.282 mo
187.96 194.282 li
38.7603 194.282 mo
40.7603 194.282 li
189.96 195.996 mo
187.96 195.996 li
38.7603 195.996 mo
40.7603 195.996 li
189.96 198.205 mo
187.96 198.205 li
38.7603 198.205 mo
40.7603 198.205 li
189.96 201.319 mo
187.96 201.319 li
38.7603 201.319 mo
40.7603 201.319 li
189.96 207.451 mo
187.96 207.451 li
38.7603 207.451 mo
40.7603 207.451 li
189.96 208.356 mo
187.96 208.356 li
38.7603 208.356 mo
40.7603 208.356 li
189.96 209.382 mo
187.96 209.382 li
38.7603 209.382 mo
40.7603 209.382 li
189.96 210.565 mo
187.96 210.565 li
38.7603 210.565 mo
40.7603 210.565 li
189.96 211.966 mo
187.96 211.966 li
38.7603 211.966 mo
40.7603 211.966 li
189.96 213.68 mo
187.96 213.68 li
38.7603 213.68 mo
40.7603 213.68 li
189.96 215.89 mo
187.96 215.89 li
38.7603 215.89 mo
40.7603 215.89 li
189.96 219.004 mo
187.96 219.004 li
38.7603 219.004 mo
40.7603 219.004 li
189.96 225.136 mo
187.96 225.136 li
38.7603 225.136 mo
40.7603 225.136 li
189.96 226.041 mo
187.96 226.041 li
38.7603 226.041 mo
40.7603 226.041 li
189.96 227.066 mo
187.96 227.066 li
38.7603 227.066 mo
40.7603 227.066 li
189.96 228.25 mo
187.96 228.25 li
38.7603 228.25 mo
40.7603 228.25 li
189.96 229.65 mo
187.96 229.65 li
38.7603 229.65 mo
40.7603 229.65 li
189.96 231.363 mo
187.96 231.363 li
38.7603 231.363 mo
40.7603 231.363 li
189.96 233.573 mo
187.96 233.573 li
38.7603 233.573 mo
40.7603 233.573 li
189.96 236.688 mo
187.96 236.688 li
38.7603 236.688 mo
40.7603 236.688 li
189.96 242.82 mo
187.96 242.82 li
38.7603 242.82 mo
40.7603 242.82 li
189.96 243.725 mo
187.96 243.725 li
38.7603 243.725 mo
40.7603 243.725 li
189.96 244.751 mo
187.96 244.751 li
38.7603 244.751 mo
40.7603 244.751 li
189.96 245.935 mo
187.96 245.935 li
38.7603 245.935 mo
40.7603 245.935 li
189.96 247.335 mo
187.96 247.335 li
38.7603 247.335 mo
40.7603 247.335 li
189.96 249.049 mo
187.96 249.049 li
38.7603 249.049 mo
40.7603 249.049 li
189.96 251.258 mo
187.96 251.258 li
38.7603 251.258 mo
40.7603 251.258 li
189.96 254.371 mo
187.96 254.371 li
38.7603 254.371 mo
40.7603 254.371 li
@
9.72021 262.067 mo
9.25195 262.067 li
9.25195 261.23 li
3.62695 261.23 li
3.62695 262.067 li
3.15918 262.067 li
3.15918 259.458 li
3.15918 258.323 3.44727 257.441 4.02295 256.812 cv
4.59912 256.182 5.40918 255.866 6.43506 255.866 cv
7.47021 255.866 8.28027 256.19 8.85596 256.82 cv
9.43213 257.45 9.72021 258.333 9.72021 259.458 cv
9.72021 262.067 li
9.72021 262.067 li
cp
9.25195 260.34 mo
9.25195 259.521 li
9.25195 258.675 9.00928 258.018 8.52295 257.559 cv
8.03711 257.108 7.34424 256.875 6.43506 256.875 cv
5.52588 256.875 4.83301 257.108 4.34717 257.559 cv
3.87012 258.018 3.62695 258.675 3.62695 259.521 cv
3.62695 260.34 li
9.25195 260.34 li
ef
7.00195 251.438 mo
6.46191 251.457 6.04785 251.573 5.76904 251.789 cv
5.49902 252.006 5.35498 252.303 5.35498 252.698 cv
5.35498 253.076 5.49902 253.364 5.77783 253.58 cv
6.05713 253.797 6.46191 253.923 7.00195 253.968 cv
7.00195 251.438 li
7.00195 251.438 li
cp
7.47021 250.484 mo
7.47021 253.968 li
7.50586 253.968 li
8.13623 253.968 8.61328 253.851 8.93701 253.616 cv
9.26123 253.383 9.41406 253.031 9.41406 252.563 cv
9.41406 252.213 9.32422 251.925 9.13525 251.69 cv
8.95508 251.466 8.67627 251.304 8.30713 251.214 cv
8.30713 250.565 li
8.81982 250.691 9.20703 250.935 9.45898 251.276 cv
9.71094 251.628 9.83691 252.087 9.83691 252.645 cv
9.83691 253.328 9.62109 253.878 9.1709 254.292 cv
8.72119 254.705 8.12695 254.912 7.37988 254.912 cv
6.64209 254.912 6.04785 254.715 5.59814 254.301 cv
5.14795 253.896 4.92285 253.364 4.92285 252.698 cv
4.92285 251.996 5.14795 251.447 5.58008 251.069 cv
6.01221 250.691 6.64209 250.503 7.47021 250.484 cv
ef
9.72021 249.714 mo
9.25195 249.714 li
9.25195 248.984 li
5.51709 248.984 li
5.51709 249.759 li
5.04883 249.759 li
5.04883 248.175 li
5.87695 248.175 li
5.5708 248.03 5.32813 247.833 5.16602 247.599 cv
5.00391 247.364 4.92285 247.086 4.92285 246.762 cv
4.92285 246.248 5.07617 245.87 5.36426 245.628 cv
5.66113 245.385 6.12012 245.259 6.75 245.259 cv
9.25195 245.259 li
9.25195 244.538 li
9.72021 244.538 li
9.72021 246.771 li
9.25195 246.771 li
9.25195 246.068 li
7.00195 246.068 li
6.43506 246.068 6.04785 246.141 5.83203 246.284 cv
5.61621 246.429 5.5083 246.672 5.5083 247.022 cv
5.5083 247.4 5.65186 247.688 5.92188 247.887 cv
6.20117 248.085 6.59717 248.175 7.11914 248.175 cv
9.25195 248.175 li
9.25195 247.473 li
9.72021 247.473 li
9.72021 249.714 li
9.72021 249.714 li
cp
ef
9.45898 243.818 mo
8.37012 243.818 li
8.37012 243.351 li
8.72119 243.342 8.98193 243.233 9.15283 243.026 cv
9.33301 242.819 9.41406 242.514 9.41406 242.108 cv
9.41406 241.748 9.35107 241.47 9.20703 241.28 cv
9.07227 241.092 8.87402 240.992 8.61328 240.992 cv
8.41504 240.992 8.24414 241.064 8.11816 241.199 cv
7.99219 241.344 7.85693 241.632 7.71289 242.082 cv
7.51514 242.667 li
7.38916 243.071 7.22705 243.359 7.02881 243.539 cv
6.83984 243.72 6.59717 243.81 6.29102 243.81 cv
5.86816 243.81 5.53516 243.656 5.29199 243.342 cv
5.04883 243.026 4.92285 242.595 4.92285 242.036 cv
4.92285 241.794 4.95898 241.532 5.02197 241.263 cv
5.08496 240.992 5.17529 240.704 5.30127 240.417 cv
6.31787 240.417 li
6.31787 240.885 li
6.021 240.902 5.78711 241.002 5.61621 241.199 cv
5.44482 241.397 5.35498 241.668 5.35498 242.01 cv
5.35498 242.352 5.41797 242.612 5.53516 242.783 cv
5.66113 242.964 5.84131 243.045 6.0752 243.045 cv
6.27295 243.045 6.43506 242.981 6.55225 242.847 cv
6.66895 242.721 6.78613 242.45 6.91211 242.055 cv
7.10986 241.416 li
7.25391 240.975 7.42529 240.659 7.63184 240.462 cv
7.83887 240.264 8.1001 240.164 8.42383 240.164 cv
8.87402 240.164 9.21631 240.336 9.46826 240.678 cv
9.72021 241.02 9.83691 241.479 9.83691 242.072 cv
9.83691 242.379 9.80127 242.667 9.74707 242.954 cv
9.69287 243.242 9.59424 243.53 9.45898 243.818 cv
9.45898 243.818 li
cp
ef
9.25195 237.614 mo
9.25195 236.85 li
9.72021 236.85 li
9.72021 239.198 li
9.25195 239.198 li
9.25195 238.425 li
5.51709 238.425 li
5.51709 239.198 li
5.04883 239.198 li
5.04883 237.614 li
9.25195 237.614 li
9.25195 237.614 li
cp
3.6001 238.649 mo
3.46484 238.649 3.34814 238.604 3.24902 238.506 cv
3.1499 238.406 3.09619 238.289 3.09619 238.146 cv
3.09619 238.02 3.1499 237.902 3.24902 237.804 cv
3.34814 237.704 3.46484 237.65 3.6001 237.65 cv
3.74414 237.65 3.86084 237.704 3.95117 237.795 cv
4.05029 237.894 4.09521 238.011 4.09521 238.146 cv
4.09521 238.289 4.05029 238.406 3.95117 238.506 cv
3.86084 238.604 3.74414 238.649 3.6001 238.649 cv
ef
5.51709 235.671 mo
5.51709 236.382 li
5.04883 236.382 li
5.04883 235.671 li
3.6001 235.671 li
3.6001 234.86 li
5.04883 234.86 li
5.04883 233.34 li
5.51709 233.34 li
5.51709 234.86 li
8.48682 234.86 li
8.8833 234.86 9.14404 234.824 9.25195 234.743 cv
9.35986 234.672 9.41406 234.527 9.41406 234.32 cv
9.41406 234.113 9.35107 233.961 9.2251 233.861 cv
9.09912 233.771 8.90088 233.718 8.62207 233.709 cv
8.62207 233.097 li
9.0542 233.123 9.35986 233.24 9.54883 233.447 cv
9.73828 233.654 9.83691 233.97 9.83691 234.393 cv
9.83691 234.86 9.729 235.193 9.53125 235.383 cv
9.33301 235.58 8.98193 235.671 8.48682 235.671 cv
5.51709 235.671 li
5.51709 235.671 li
cp
ef
10.5659 231.099 mo
9.79199 230.793 li
5.51709 232.538 li
5.51709 233.061 li
5.04883 233.061 li
5.04883 230.919 li
5.51709 230.919 li
5.51709 231.666 li
8.72998 230.352 li
5.51709 229.037 li
5.51709 229.739 li
5.04883 229.739 li
5.04883 227.984 li
5.51709 227.984 li
5.51709 228.507 li
10.7642 230.648 li
11.124 230.793 11.376 230.954 11.5112 231.135 cv
11.6372 231.314 11.709 231.566 11.709 231.891 cv
11.709 232.034 11.6909 232.17 11.6729 232.313 cv
11.646 232.458 11.6099 232.61 11.5742 232.755 cv
10.6831 232.755 li
10.6831 232.341 li
10.8809 232.322 11.0161 232.277 11.106 232.188 cv
11.1958 232.106 11.2412 231.98 11.2412 231.801 cv
11.2412 231.639 11.1958 231.513 11.106 231.413 cv
11.0161 231.314 10.8359 231.207 10.5659 231.099 cv
10.5659 231.099 li
cp
ef
9.72021 224.628 mo
9.25195 224.628 li
9.25195 223.791 li
3.62695 223.791 li
3.62695 224.628 li
3.15918 224.628 li
3.15918 219.255 li
4.61719 219.255 li
4.61719 219.795 li
3.69922 219.795 li
3.69922 222.899 li
5.89502 222.899 li
5.89502 220.658 li
5.07617 220.658 li
5.07617 220.118 li
7.25391 220.118 li
7.25391 220.658 li
6.43506 220.658 li
6.43506 222.899 li
9.25195 222.899 li
9.25195 221.847 li
9.72021 221.847 li
9.72021 224.628 li
9.72021 224.628 li
cp
ef
9.25195 217.037 mo
9.25195 216.272 li
9.72021 216.272 li
9.72021 218.621 li
9.25195 218.621 li
9.25195 217.848 li
3.34814 217.848 li
3.34814 218.621 li
2.87988 218.621 li
2.87988 217.037 li
9.25195 217.037 li
9.25195 217.037 li
cp
ef
5.04883 212.816 mo
5.04883 211.305 li
9.25195 211.305 li
9.25195 210.539 li
9.72021 210.539 li
9.72021 212.114 li
8.89209 212.114 li
9.20703 212.268 9.44092 212.466 9.60303 212.699 cv
9.75586 212.934 9.83691 213.213 9.83691 213.519 cv
9.83691 214.041 9.69287 214.428 9.40527 214.671 cv
9.11719 214.913 8.64893 215.03 8.01904 215.03 cv
5.51709 215.03 li
5.51709 215.76 li
5.04883 215.76 li
5.04883 214.221 li
7.76709 214.221 li
8.34326 214.221 8.72998 214.157 8.93701 214.014 cv
9.15283 213.869 9.25195 213.627 9.25195 213.267 cv
9.25195 212.889 9.11719 212.609 8.83789 212.411 cv
8.56787 212.214 8.16309 212.114 7.64111 212.114 cv
5.51709 212.114 li
5.51709 212.816 li
5.04883 212.816 li
5.04883 212.816 li
cp
ef
8.31592 205.617 mo
8.81982 205.733 9.19824 205.95 9.4502 206.273 cv
9.71094 206.598 9.83691 207.021 9.83691 207.533 cv
9.83691 208.218 9.62109 208.758 9.1709 209.172 cv
8.72119 209.586 8.12695 209.793 7.37988 209.793 cv
6.64209 209.793 6.04785 209.586 5.59814 209.172 cv
5.14795 208.758 4.92285 208.218 4.92285 207.533 cv
4.92285 207.245 4.95898 206.948 5.03125 206.651 cv
5.10303 206.363 5.20215 206.066 5.33691 205.77 cv
6.53418 205.77 li
6.53418 206.237 li
6.12891 206.301 5.83203 206.436 5.64307 206.643 cv
5.4541 206.85 5.35498 207.146 5.35498 207.524 cv
5.35498 207.966 5.52588 208.299 5.86816 208.515 cv
6.20996 208.739 6.71387 208.848 7.37988 208.848 cv
8.06396 208.848 8.56787 208.739 8.91016 208.515 cv
9.25195 208.299 9.41406 207.966 9.41406 207.524 cv
9.41406 207.183 9.32422 206.903 9.14404 206.696 cv
8.96387 206.49 8.68506 206.346 8.31592 206.265 cv
8.31592 205.617 li
8.31592 205.617 li
cp
ef
5.51709 204.23 mo
5.51709 204.941 li
5.04883 204.941 li
5.04883 204.23 li
3.6001 204.23 li
3.6001 203.42 li
5.04883 203.42 li
5.04883 201.899 li
5.51709 201.899 li
5.51709 203.42 li
8.48682 203.42 li
8.8833 203.42 9.14404 203.385 9.25195 203.304 cv
9.35986 203.231 9.41406 203.087 9.41406 202.88 cv
9.41406 202.673 9.35107 202.521 9.2251 202.421 cv
9.09912 202.332 8.90088 202.277 8.62207 202.269 cv
8.62207 201.657 li
9.0542 201.684 9.35986 201.801 9.54883 202.007 cv
9.73828 202.214 9.83691 202.529 9.83691 202.953 cv
9.83691 203.42 9.729 203.753 9.53125 203.942 cv
9.33301 204.141 8.98193 204.23 8.48682 204.23 cv
5.51709 204.23 li
5.51709 204.23 li
cp
ef
5.04883 198.417 mo
5.04883 196.904 li
9.25195 196.904 li
9.25195 196.14 li
9.72021 196.14 li
9.72021 197.714 li
8.89209 197.714 li
9.20703 197.868 9.44092 198.065 9.60303 198.3 cv
9.75586 198.534 9.83691 198.813 9.83691 199.119 cv
9.83691 199.641 9.69287 200.027 9.40527 200.271 cv
9.11719 200.514 8.64893 200.63 8.01904 200.63 cv
5.51709 200.63 li
5.51709 201.359 li
5.04883 201.359 li
5.04883 199.82 li
7.76709 199.82 li
8.34326 199.82 8.72998 199.757 8.93701 199.614 cv
9.15283 199.47 9.25195 199.227 9.25195 198.867 cv
9.25195 198.489 9.11719 198.209 8.83789 198.012 cv
8.56787 197.813 8.16309 197.714 7.64111 197.714 cv
5.51709 197.714 li
5.51709 198.417 li
5.04883 198.417 li
5.04883 198.417 li
cp
ef
6.8042 191.451 mo
9.25195 191.451 li
9.25195 190.73 li
9.72021 190.73 li
9.72021 192.261 li
9.21631 192.261 li
9.43213 192.44 9.59424 192.647 9.69287 192.881 cv
9.7832 193.116 9.83691 193.395 9.83691 193.701 cv
9.83691 194.223 9.70215 194.637 9.43213 194.942 cv
9.16211 195.249 8.78418 195.393 8.31592 195.393 cv
7.83887 195.393 7.47021 195.222 7.2002 194.871 cv
6.93018 194.528 6.79492 194.034 6.79492 193.395 cv
6.79492 192.261 li
6.47119 192.261 li
6.12012 192.261 5.8501 192.369 5.65186 192.584 cv
5.4541 192.801 5.35498 193.106 5.35498 193.494 cv
5.35498 193.817 5.43604 194.069 5.58008 194.259 cv
5.72412 194.457 5.93994 194.574 6.22803 194.619 cv
6.22803 195.033 li
5.2832 195.033 li
5.16602 194.753 5.07617 194.483 5.01318 194.213 cv
4.95898 193.953 4.92285 193.691 4.92285 193.439 cv
4.92285 192.792 5.08496 192.306 5.40918 191.963 cv
5.73291 191.622 6.19189 191.451 6.8042 191.451 cv
6.8042 191.451 li
cp
8.25293 192.261 mo
7.26318 192.261 li
7.26318 193.305 li
7.26318 193.709 7.35303 194.006 7.52393 194.205 cv
7.7041 194.402 7.96484 194.493 8.31592 194.493 cv
8.64014 194.493 8.90088 194.394 9.08984 194.195 cv
9.28809 193.998 9.37793 193.728 9.37793 193.386 cv
9.37793 193.053 9.27881 192.783 9.07227 192.576 cv
8.86523 192.369 8.59521 192.261 8.25293 192.261 cv
ef
5.51709 189.59 mo
5.51709 190.302 li
5.04883 190.302 li
5.04883 189.59 li
3.6001 189.59 li
3.6001 188.781 li
5.04883 188.781 li
5.04883 187.26 li
5.51709 187.26 li
5.51709 188.781 li
8.48682 188.781 li
8.8833 188.781 9.14404 188.745 9.25195 188.664 cv
9.35986 188.592 9.41406 188.448 9.41406 188.241 cv
9.41406 188.034 9.35107 187.88 9.2251 187.782 cv
9.09912 187.691 8.90088 187.638 8.62207 187.628 cv
8.62207 187.017 li
9.0542 187.043 9.35986 187.161 9.54883 187.368 cv
9.73828 187.575 9.83691 187.89 9.83691 188.313 cv
9.83691 188.781 9.729 189.114 9.53125 189.303 cv
9.33301 189.5 8.98193 189.59 8.48682 189.59 cv
5.51709 189.59 li
5.51709 189.59 li
cp
ef
9.25195 184.814 mo
9.25195 184.05 li
9.72021 184.05 li
9.72021 186.398 li
9.25195 186.398 li
9.25195 185.625 li
5.51709 185.625 li
5.51709 186.398 li
5.04883 186.398 li
5.04883 184.814 li
9.25195 184.814 li
9.25195 184.814 li
cp
3.6001 185.85 mo
3.46484 185.85 3.34814 185.805 3.24902 185.706 cv
3.1499 185.606 3.09619 185.49 3.09619 185.346 cv
3.09619 185.22 3.1499 185.103 3.24902 185.003 cv
3.34814 184.904 3.46484 184.851 3.6001 184.851 cv
3.74414 184.851 3.86084 184.904 3.95117 184.995 cv
4.05029 185.094 4.09521 185.21 4.09521 185.346 cv
4.09521 185.49 4.05029 185.606 3.95117 185.706 cv
3.86084 185.805 3.74414 185.85 3.6001 185.85 cv
ef
9.83691 181.134 mo
9.83691 181.817 9.62109 182.357 9.1709 182.771 cv
8.72119 183.186 8.12695 183.393 7.37988 183.393 cv
6.64209 183.393 6.04785 183.194 5.59814 182.781 cv
5.14795 182.367 4.92285 181.817 4.92285 181.134 cv
4.92285 180.45 5.14795 179.91 5.59814 179.496 cv
6.04785 179.082 6.64209 178.875 7.37988 178.875 cv
8.12695 178.875 8.72119 179.082 9.1709 179.496 cv
9.62109 179.91 9.83691 180.45 9.83691 181.134 cv
9.83691 181.134 li
cp
9.41406 181.134 mo
9.41406 180.702 9.24316 180.377 8.90088 180.152 cv
8.55908 179.937 8.05518 179.819 7.37988 179.819 cv
6.71387 179.819 6.20996 179.937 5.86816 180.152 cv
5.52588 180.377 5.35498 180.702 5.35498 181.134 cv
5.35498 181.565 5.52588 181.898 5.86816 182.115 cv
6.20996 182.339 6.71387 182.448 7.37988 182.448 cv
8.05518 182.448 8.55908 182.339 8.90088 182.115 cv
9.24316 181.898 9.41406 181.565 9.41406 181.134 cv
ef
9.72021 178.193 mo
9.25195 178.193 li
9.25195 177.464 li
5.51709 177.464 li
5.51709 178.239 li
5.04883 178.239 li
5.04883 176.654 li
5.87695 176.654 li
5.5708 176.511 5.32813 176.313 5.16602 176.079 cv
5.00391 175.845 4.92285 175.565 4.92285 175.242 cv
4.92285 174.729 5.07617 174.351 5.36426 174.107 cv
5.66113 173.865 6.12012 173.739 6.75 173.739 cv
9.25195 173.739 li
9.25195 173.019 li
9.72021 173.019 li
9.72021 175.25 li
9.25195 175.25 li
9.25195 174.548 li
7.00195 174.548 li
6.43506 174.548 6.04785 174.621 5.83203 174.765 cv
5.61621 174.909 5.5083 175.151 5.5083 175.502 cv
5.5083 175.88 5.65186 176.168 5.92188 176.367 cv
6.20117 176.564 6.59717 176.654 7.11914 176.654 cv
9.25195 176.654 li
9.25195 175.953 li
9.72021 175.953 li
9.72021 178.193 li
9.72021 178.193 li
cp
ef
9.72021 169.428 mo
9.25195 169.428 li
9.25195 168.59 li
3.62695 168.59 li
3.62695 169.428 li
3.15918 169.428 li
3.15918 166.323 li
3.15918 165.674 3.33008 165.152 3.66309 164.766 cv
3.99609 164.388 4.4458 164.189 5.00391 164.189 cv
5.5708 164.189 6.021 164.388 6.354 164.766 cv
6.68701 165.152 6.84912 165.674 6.84912 166.323 cv
6.84912 167.7 li
9.25195 167.7 li
9.25195 166.683 li
9.72021 166.683 li
9.72021 169.428 li
9.72021 169.428 li
cp
6.38086 167.7 mo
6.38086 166.539 li
6.38086 166.106 6.26416 165.773 6.03027 165.54 cv
5.7959 165.314 5.4541 165.198 5.00391 165.198 cv
4.5542 165.198 4.21191 165.314 3.97803 165.54 cv
3.74414 165.773 3.62695 166.106 3.62695 166.539 cv
3.62695 167.7 li
6.38086 167.7 li
ef
9.72021 163.428 mo
9.25195 163.428 li
9.25195 162.59 li
3.62695 162.59 li
3.62695 163.428 li
3.15918 163.428 li
3.15918 160.817 li
3.15918 159.684 3.44727 158.802 4.02295 158.171 cv
4.59912 157.542 5.40918 157.227 6.43506 157.227 cv
7.47021 157.227 8.28027 157.551 8.85596 158.181 cv
9.43213 158.811 9.72021 159.692 9.72021 160.817 cv
9.72021 163.428 li
9.72021 163.428 li
cp
9.25195 161.7 mo
9.25195 160.88 li
9.25195 160.035 9.00928 159.377 8.52295 158.918 cv
8.03711 158.469 7.34424 158.234 6.43506 158.234 cv
5.52588 158.234 4.83301 158.469 4.34717 158.918 cv
3.87012 159.377 3.62695 160.035 3.62695 160.88 cv
3.62695 161.7 li
9.25195 161.7 li
ef
9.72021 155.987 mo
9.25195 155.987 li
9.25195 155.15 li
3.62695 155.15 li
3.62695 155.987 li
3.15918 155.987 li
3.15918 150.615 li
4.61719 150.615 li
4.61719 151.154 li
3.69922 151.154 li
3.69922 154.26 li
5.89502 154.26 li
5.89502 152.019 li
5.07617 152.019 li
5.07617 151.479 li
7.25391 151.479 li
7.25391 152.019 li
6.43506 152.019 li
6.43506 154.26 li
9.25195 154.26 li
9.25195 153.207 li
9.72021 153.207 li
9.72021 155.987 li
9.72021 155.987 li
cp
ef
1.5 lw
2 lc
38.7603 259.695 mo
38.7603 153.589 li
38.7603 259.695 mo
189.96 259.695 li
189.96 259.695 mo
189.96 153.589 li
38.7603 153.589 mo
189.96 153.589 li
@
172.428 167.703 mo
171.468 167.271 170.748 166.599 170.268 165.687 cv
169.788 164.774 169.548 163.61 169.548 162.219 cv
169.548 160.827 169.788 159.674 170.268 158.75 cv
170.748 157.827 171.468 157.154 172.428 156.723 cv
172.428 157.298 li
171.828 157.719 171.396 158.307 171.132 159.051 cv
170.868 159.807 170.736 160.862 170.736 162.219 cv
170.736 163.586 170.868 164.643 171.132 165.387 cv
171.396 166.13 171.828 166.707 172.428 167.126 cv
172.428 167.703 li
172.428 167.703 li
cp
ef
175.62 163.035 mo
175.62 163.791 175.764 164.367 176.052 164.75 cv
176.34 165.146 176.748 165.338 177.3 165.338 cv
177.852 165.338 178.26 165.123 178.548 164.679 cv
178.836 164.247 178.98 163.586 178.98 162.723 cv
178.98 161.858 178.836 161.21 178.548 160.778 cv
178.26 160.347 177.852 160.119 177.3 160.119 cv
176.748 160.119 176.34 160.323 176.052 160.719 cv
175.764 161.115 175.62 161.679 175.62 162.422 cv
175.62 163.035 li
175.62 163.035 li
cp
174.541 165.219 mo
174.541 157.347 li
173.508 157.347 li
173.508 156.723 li
175.62 156.723 li
175.62 160.586 li
175.824 160.203 176.088 159.915 176.424 159.723 cv
176.748 159.542 177.156 159.446 177.636 159.446 cv
178.404 159.446 179.028 159.759 179.508 160.358 cv
179.988 160.958 180.24 161.75 180.24 162.723 cv
180.24 163.707 179.988 164.499 179.508 165.099 cv
179.028 165.699 178.404 165.999 177.636 165.999 cv
177.156 165.999 176.748 165.902 176.424 165.734 cv
176.088 165.555 175.824 165.267 175.62 164.871 cv
175.62 165.843 li
173.508 165.843 li
173.508 165.219 li
174.541 165.219 li
ef
181.692 167.703 mo
181.692 167.126 li
182.292 166.707 182.724 166.13 182.988 165.387 cv
183.252 164.643 183.384 163.586 183.384 162.219 cv
183.384 160.862 183.252 159.807 182.988 159.051 cv
182.724 158.307 182.292 157.719 181.692 157.298 cv
181.692 156.723 li
182.64 157.154 183.36 157.827 183.84 158.75 cv
184.32 159.674 184.572 160.827 184.572 162.219 cv
184.572 163.61 184.32 164.774 183.84 165.687 cv
183.36 166.599 182.64 167.271 181.692 167.703 cv
181.692 167.703 li
cp
ef
38.7603 408.242 mo
189.96 408.242 li
189.96 302.138 li
38.7603 302.138 li
38.7603 408.242 li
0 0 0 0 cmyk
f
gsave
38.7603 408.242 mo
189.96 408.242 li
189.96 302.143 li
38.7603 302.143 li
38.7603 408.242 li
cp
clp
51.3599 366.065 mo
53.8799 363.786 li
56.3999 351.276 li
58.9199 330.634 li
61.4399 325.267 li
63.96 334.932 li
66.48 337.389 li
69 349.766 li
71.52 354.212 li
74.04 345.424 li
76.5601 336.672 li
79.0801 331.929 li
81.6001 325.934 li
84.1201 320.203 li
86.6401 322.505 li
89.1602 320.271 li
91.6802 324.406 li
94.2002 324.89 li
96.7202 327.326 li
99.2402 331.289 li
101.76 331.61 li
104.28 332.275 li
106.8 334.021 li
109.32 332.155 li
111.84 331.906 li
114.36 333.357 li
116.88 336.88 li
119.4 340.702 li
121.92 342.015 li
124.44 346.961 li
126.96 346.668 li
129.48 341.439 li
132 340.662 li
134.52 343.78 li
137.041 343.215 li
139.56 348.309 li
142.08 351.904 li
144.6 354.659 li
147.12 357.475 li
149.64 359.252 li
152.16 359.709 li
154.68 358.732 li
157.2 356.538 li
159.72 357.808 li
162.24 359.305 li
164.76 359.812 li
167.28 365.512 li
169.8 366.443 li
172.32 372.99 li
174.84 382.556 li
177.36 385.174 li
179.88 388.666 li
182.4 393.415 li
184.92 397.466 li
187.44 398.922 li
0 0 0 1 cmyk
@
0 lc
[6 6 ] 0 dsh
50.9175 367.512 mo
51.9565 344.886 li
52.9951 335.604 li
54.0337 330.214 li
55.0728 326.637 li
56.1113 324.012 li
57.1504 322.095 li
58.189 320.669 li
59.228 319.637 li
60.2666 319.088 li
61.3052 319.089 li
62.3442 319.521 li
65.4604 321.361 li
66.499 321.801 li
68.5767 322.324 li
69.6157 322.408 li
70.6543 322.334 li
73.771 321.733 li
74.8096 321.668 li
75.8481 321.717 li
76.8872 321.983 li
78.9648 323.087 li
83.1196 325.741 li
85.1973 327.482 li
87.2749 329.77 li
90.3911 333.233 li
91.4302 334.254 li
92.4688 335.05 li
93.5073 335.554 li
94.5464 335.874 li
95.585 336.024 li
96.624 335.934 li
99.7402 335.176 li
101.818 335.003 li
104.934 334.712 li
105.973 334.653 li
107.012 334.762 li
108.05 335.062 li
110.128 336.049 li
111.167 336.678 li
112.205 337.454 li
114.283 339.494 li
117.399 342.945 li
119.477 344.854 li
121.554 346.294 li
123.632 347.39 li
128.826 350.062 li
134.02 353.042 li
136.097 354.539 li
139.214 356.828 li
141.292 358.214 li
143.369 359.875 li
154.795 369.978 li
161.028 375.913 li
164.144 378.854 li
166.222 380.48 li
168.3 381.678 li
172.455 383.797 li
177.649 386.771 li
178.687 387.497 li
179.726 388.538 li
180.765 389.999 li
181.804 393.019 li
182.842 399.883 li
182.842 399.883 li
0 .993988 1 0 cmyk
@
grestore
.5 lw
0 lc
38.7603 302.138 mo
38.7603 306.138 li
38.7603 408.242 mo
38.7603 404.242 li
0 0 0 1 cmyk
@
35.5762 418.083 mo
35.5762 417.667 li
36.5923 417.667 li
36.5923 412.818 li
35.416 413.578 li
35.416 413.066 li
36.8398 412.146 li
37.376 412.146 li
37.376 417.667 li
38.3921 417.667 li
38.3921 418.083 li
35.5762 418.083 li
35.5762 418.083 li
cp
ef
42.0239 418.187 mo
41.3843 418.187 40.8882 417.923 40.5361 417.395 cv
40.1841 416.866 40.0083 416.131 40.0083 415.171 cv
40.0083 414.219 40.1841 413.475 40.5361 412.946 cv
40.8882 412.419 41.3843 412.146 42.0239 412.146 cv
42.6563 412.146 43.1519 412.419 43.5039 412.946 cv
43.856 413.475 44.04 414.219 44.04 415.171 cv
44.04 416.131 43.856 416.866 43.5039 417.395 cv
43.1519 417.923 42.6563 418.187 42.0239 418.187 cv
42.0239 418.187 li
cp
42.0239 417.811 mo
42.4238 417.811 42.7202 417.595 42.9199 417.154 cv
43.1118 416.723 43.2158 416.059 43.2158 415.171 cv
43.2158 414.291 43.1118 413.627 42.9199 413.187 cv
42.7202 412.755 42.4238 412.53 42.0239 412.53 cv
41.624 412.53 41.3198 412.755 41.1279 413.187 cv
40.9282 413.627 40.832 414.291 40.832 415.171 cv
40.832 416.059 40.9282 416.723 41.1279 417.154 cv
41.3198 417.595 41.624 417.811 42.0239 417.811 cv
ef
63.96 302.138 mo
63.96 306.138 li
63.96 408.242 mo
63.96 404.242 li
@
60.7759 418.083 mo
60.7759 417.667 li
61.792 417.667 li
61.792 412.818 li
60.6162 413.578 li
60.6162 413.066 li
62.04 412.146 li
62.5762 412.146 li
62.5762 417.667 li
63.5923 417.667 li
63.5923 418.083 li
60.7759 418.083 li
60.7759 418.083 li
cp
ef
68.7041 412.251 mo
68.7041 412.891 li
66.0322 412.891 li
66.0322 414.563 li
66.1602 414.467 66.3198 414.402 66.5039 414.354 cv
66.6802 414.307 66.8882 414.282 67.1118 414.282 cv
67.7358 414.282 68.2319 414.459 68.6001 414.811 cv
68.9683 415.162 69.1519 415.635 69.1519 416.234 cv
69.1519 416.858 68.9683 417.339 68.6001 417.675 cv
68.2319 418.019 67.7119 418.187 67.0479 418.187 cv
66.7759 418.187 66.5039 418.154 66.2241 418.091 cv
65.936 418.034 65.6479 417.938 65.3599 417.803 cv
65.3599 416.667 li
65.8003 416.667 li
65.8242 417.043 65.9438 417.33 66.1519 417.522 cv
66.3599 417.715 66.6641 417.811 67.0479 417.811 cv
67.4561 417.811 67.7681 417.675 67.9922 417.402 cv
68.2163 417.131 68.3281 416.746 68.3281 416.234 cv
68.3281 415.73 68.2163 415.347 68 415.074 cv
67.7759 414.803 67.4639 414.667 67.0479 414.667 cv
66.8081 414.667 66.6001 414.715 66.4243 414.795 cv
66.248 414.875 66.0879 415.003 65.9521 415.179 cv
65.6162 415.179 li
65.6162 412.251 li
68.7041 412.251 li
68.7041 412.251 li
cp
ef
89.1602 302.138 mo
89.1602 306.138 li
89.1602 408.242 mo
89.1602 404.242 li
@
85.624 413.643 mo
85.1841 413.643 li
85.1841 412.603 li
85.4561 412.459 85.7358 412.347 86.0239 412.267 cv
86.3042 412.187 86.584 412.146 86.856 412.146 cv
87.4639 412.146 87.9438 412.299 88.2959 412.587 cv
88.6479 412.883 88.8242 413.282 88.8242 413.786 cv
88.8242 414.362 88.4243 415.043 87.624 415.835 cv
87.5601 415.898 87.52 415.938 87.4883 415.971 cv
86.0161 417.442 li
88.4482 417.442 li
88.4482 416.723 li
88.9038 416.723 li
88.9038 418.083 li
85.144 418.083 li
85.144 417.658 li
86.9121 415.891 li
87.2959 415.507 87.5762 415.146 87.7441 414.818 cv
87.9121 414.49 88 414.146 88 413.786 cv
88 413.395 87.896 413.091 87.688 412.866 cv
87.48 412.643 87.2002 412.53 86.8481 412.53 cv
86.4722 412.53 86.1841 412.627 85.9839 412.811 cv
85.7759 412.994 85.6563 413.274 85.624 413.643 cv
85.624 413.643 li
cp
ef
92.1841 418.187 mo
91.5439 418.187 91.0479 417.923 90.6958 417.395 cv
90.3442 416.866 90.168 416.131 90.168 415.171 cv
90.168 414.219 90.3442 413.475 90.6958 412.946 cv
91.0479 412.419 91.5439 412.146 92.1841 412.146 cv
92.8159 412.146 93.312 412.419 93.6641 412.946 cv
94.0161 413.475 94.2002 414.219 94.2002 415.171 cv
94.2002 416.131 94.0161 416.866 93.6641 417.395 cv
93.312 417.923 92.8159 418.187 92.1841 418.187 cv
92.1841 418.187 li
cp
92.1841 417.811 mo
92.584 417.811 92.8799 417.595 93.0801 417.154 cv
93.272 416.723 93.376 416.059 93.376 415.171 cv
93.376 414.291 93.272 413.627 93.0801 413.187 cv
92.8799 412.755 92.584 412.53 92.1841 412.53 cv
91.7842 412.53 91.48 412.755 91.2881 413.187 cv
91.0879 413.627 90.9922 414.291 90.9922 415.171 cv
90.9922 416.059 91.0879 416.723 91.2881 417.154 cv
91.48 417.595 91.7842 417.811 92.1841 417.811 cv
ef
114.36 302.138 mo
114.36 306.138 li
114.36 408.242 mo
114.36 404.242 li
@
110.824 413.643 mo
110.384 413.643 li
110.384 412.603 li
110.656 412.459 110.936 412.347 111.224 412.267 cv
111.504 412.187 111.784 412.146 112.056 412.146 cv
112.664 412.146 113.144 412.299 113.496 412.587 cv
113.848 412.883 114.024 413.282 114.024 413.786 cv
114.024 414.362 113.625 415.043 112.824 415.835 cv
112.76 415.898 112.72 415.938 112.688 415.971 cv
111.216 417.442 li
113.648 417.442 li
113.648 416.723 li
114.104 416.723 li
114.104 418.083 li
110.344 418.083 li
110.344 417.658 li
112.112 415.891 li
112.496 415.507 112.776 415.146 112.944 414.818 cv
113.112 414.49 113.2 414.146 113.2 413.786 cv
113.2 413.395 113.096 413.091 112.888 412.866 cv
112.68 412.643 112.4 412.53 112.048 412.53 cv
111.672 412.53 111.384 412.627 111.184 412.811 cv
110.976 412.994 110.856 413.274 110.824 413.643 cv
110.824 413.643 li
cp
ef
118.864 412.251 mo
118.864 412.891 li
116.192 412.891 li
116.192 414.563 li
116.32 414.467 116.48 414.402 116.664 414.354 cv
116.84 414.307 117.048 414.282 117.272 414.282 cv
117.896 414.282 118.392 414.459 118.76 414.811 cv
119.128 415.162 119.312 415.635 119.312 416.234 cv
119.312 416.858 119.128 417.339 118.76 417.675 cv
118.392 418.019 117.873 418.187 117.208 418.187 cv
116.936 418.187 116.664 418.154 116.384 418.091 cv
116.096 418.034 115.808 417.938 115.52 417.803 cv
115.52 416.667 li
115.96 416.667 li
115.984 417.043 116.104 417.33 116.312 417.522 cv
116.52 417.715 116.824 417.811 117.208 417.811 cv
117.616 417.811 117.928 417.675 118.152 417.402 cv
118.376 417.131 118.488 416.746 118.488 416.234 cv
118.488 415.73 118.376 415.347 118.16 415.074 cv
117.936 414.803 117.625 414.667 117.208 414.667 cv
116.968 414.667 116.76 414.715 116.584 414.795 cv
116.408 414.875 116.248 415.003 116.112 415.179 cv
115.776 415.179 li
115.776 412.251 li
118.864 412.251 li
118.864 412.251 li
cp
ef
139.56 302.138 mo
139.56 306.138 li
139.56 408.242 mo
139.56 404.242 li
@
135.776 412.499 mo
136.08 412.387 136.368 412.299 136.648 412.234 cv
136.928 412.179 137.192 412.146 137.44 412.146 cv
138.008 412.146 138.457 412.274 138.776 412.515 cv
139.096 412.763 139.256 413.106 139.256 413.538 cv
139.256 413.891 139.144 414.187 138.92 414.419 cv
138.696 414.658 138.384 414.818 137.984 414.898 cv
138.464 414.971 138.833 415.146 139.096 415.427 cv
139.36 415.707 139.496 416.066 139.496 416.507 cv
139.496 417.051 139.312 417.467 138.944 417.755 cv
138.576 418.043 138.056 418.187 137.368 418.187 cv
137.064 418.187 136.76 418.154 136.472 418.091 cv
136.184 418.034 135.896 417.938 135.608 417.803 cv
135.608 416.667 li
136.048 416.667 li
136.072 417.051 136.2 417.33 136.424 417.522 cv
136.648 417.715 136.968 417.811 137.384 417.811 cv
137.784 417.811 138.096 417.698 138.328 417.467 cv
138.552 417.234 138.672 416.915 138.672 416.515 cv
138.672 416.059 138.552 415.715 138.312 415.475 cv
138.072 415.242 137.728 415.123 137.272 415.123 cv
136.904 415.123 li
136.904 414.723 li
137.096 414.723 li
137.552 414.723 137.896 414.635 138.12 414.442 cv
138.344 414.251 138.464 413.971 138.464 413.587 cv
138.464 413.251 138.368 412.986 138.184 412.803 cv
137.992 412.627 137.728 412.53 137.376 412.53 cv
137.024 412.53 136.744 412.618 136.552 412.786 cv
136.36 412.954 136.248 413.202 136.216 413.522 cv
135.776 413.522 li
135.776 412.499 li
135.776 412.499 li
cp
ef
142.584 418.187 mo
141.944 418.187 141.448 417.923 141.096 417.395 cv
140.744 416.866 140.568 416.131 140.568 415.171 cv
140.568 414.219 140.744 413.475 141.096 412.946 cv
141.448 412.419 141.944 412.146 142.584 412.146 cv
143.216 412.146 143.712 412.419 144.064 412.946 cv
144.417 413.475 144.6 414.219 144.6 415.171 cv
144.6 416.131 144.417 416.866 144.064 417.395 cv
143.712 417.923 143.216 418.187 142.584 418.187 cv
142.584 418.187 li
cp
142.584 417.811 mo
142.984 417.811 143.28 417.595 143.48 417.154 cv
143.672 416.723 143.776 416.059 143.776 415.171 cv
143.776 414.291 143.672 413.627 143.48 413.187 cv
143.28 412.755 142.984 412.53 142.584 412.53 cv
142.184 412.53 141.88 412.755 141.688 413.187 cv
141.488 413.627 141.392 414.291 141.392 415.171 cv
141.392 416.059 141.488 416.723 141.688 417.154 cv
141.88 417.595 142.184 417.811 142.584 417.811 cv
ef
164.76 302.138 mo
164.76 306.138 li
164.76 408.242 mo
164.76 404.242 li
@
160.976 412.499 mo
161.28 412.387 161.568 412.299 161.848 412.234 cv
162.128 412.179 162.392 412.146 162.64 412.146 cv
163.208 412.146 163.656 412.274 163.976 412.515 cv
164.296 412.763 164.457 413.106 164.457 413.538 cv
164.457 413.891 164.344 414.187 164.12 414.419 cv
163.896 414.658 163.584 414.818 163.184 414.898 cv
163.664 414.971 164.032 415.146 164.296 415.427 cv
164.56 415.707 164.696 416.066 164.696 416.507 cv
164.696 417.051 164.512 417.467 164.144 417.755 cv
163.776 418.043 163.256 418.187 162.568 418.187 cv
162.264 418.187 161.96 418.154 161.672 418.091 cv
161.384 418.034 161.096 417.938 160.808 417.803 cv
160.808 416.667 li
161.248 416.667 li
161.272 417.051 161.4 417.33 161.625 417.522 cv
161.848 417.715 162.168 417.811 162.584 417.811 cv
162.984 417.811 163.296 417.698 163.528 417.467 cv
163.752 417.234 163.873 416.915 163.873 416.515 cv
163.873 416.059 163.752 415.715 163.512 415.475 cv
163.272 415.242 162.928 415.123 162.472 415.123 cv
162.104 415.123 li
162.104 414.723 li
162.296 414.723 li
162.752 414.723 163.096 414.635 163.32 414.442 cv
163.544 414.251 163.664 413.971 163.664 413.587 cv
163.664 413.251 163.568 412.986 163.384 412.803 cv
163.192 412.627 162.928 412.53 162.576 412.53 cv
162.224 412.53 161.944 412.618 161.752 412.786 cv
161.56 412.954 161.448 413.202 161.417 413.522 cv
160.976 413.522 li
160.976 412.499 li
160.976 412.499 li
cp
ef
169.504 412.251 mo
169.504 412.891 li
166.833 412.891 li
166.833 414.563 li
166.96 414.467 167.12 414.402 167.304 414.354 cv
167.48 414.307 167.688 414.282 167.912 414.282 cv
168.536 414.282 169.032 414.459 169.4 414.811 cv
169.768 415.162 169.952 415.635 169.952 416.234 cv
169.952 416.858 169.768 417.339 169.4 417.675 cv
169.032 418.019 168.512 418.187 167.848 418.187 cv
167.576 418.187 167.304 418.154 167.024 418.091 cv
166.736 418.034 166.448 417.938 166.16 417.803 cv
166.16 416.667 li
166.6 416.667 li
166.625 417.043 166.744 417.33 166.952 417.522 cv
167.16 417.715 167.464 417.811 167.848 417.811 cv
168.256 417.811 168.568 417.675 168.792 417.402 cv
169.016 417.131 169.128 416.746 169.128 416.234 cv
169.128 415.73 169.016 415.347 168.8 415.074 cv
168.576 414.803 168.264 414.667 167.848 414.667 cv
167.608 414.667 167.4 414.715 167.224 414.795 cv
167.048 414.875 166.888 415.003 166.752 415.179 cv
166.417 415.179 li
166.417 412.251 li
169.504 412.251 li
169.504 412.251 li
cp
ef
189.96 302.138 mo
189.96 306.138 li
189.96 408.242 mo
189.96 404.242 li
@
189.672 418.083 mo
187.016 418.083 li
187.016 417.667 li
187.952 417.667 li
187.952 416.522 li
185.408 416.522 li
185.408 416.099 li
187.96 412.146 li
188.736 412.146 li
188.736 416.106 li
189.848 416.106 li
189.848 416.522 li
188.736 416.522 li
188.736 417.667 li
189.672 417.667 li
189.672 418.083 li
189.672 418.083 li
cp
187.952 416.106 mo
187.952 413.003 li
185.96 416.106 li
187.952 416.106 li
ef
192.984 418.187 mo
192.344 418.187 191.848 417.923 191.496 417.395 cv
191.144 416.866 190.968 416.131 190.968 415.171 cv
190.968 414.219 191.144 413.475 191.496 412.946 cv
191.848 412.419 192.344 412.146 192.984 412.146 cv
193.616 412.146 194.112 412.419 194.464 412.946 cv
194.816 413.475 195 414.219 195 415.171 cv
195 416.131 194.816 416.866 194.464 417.395 cv
194.112 417.923 193.616 418.187 192.984 418.187 cv
192.984 418.187 li
cp
192.984 417.811 mo
193.384 417.811 193.68 417.595 193.88 417.154 cv
194.072 416.723 194.176 416.059 194.176 415.171 cv
194.176 414.291 194.072 413.627 193.88 413.187 cv
193.68 412.755 193.384 412.53 192.984 412.53 cv
192.584 412.53 192.28 412.755 192.088 413.187 cv
191.888 413.627 191.792 414.291 191.792 415.171 cv
191.792 416.059 191.888 416.723 192.088 417.154 cv
192.28 417.595 192.584 417.811 192.984 417.811 cv
ef
105.222 425.402 mo
105.222 426.572 li
104.754 426.572 li
104.736 426.339 104.673 426.168 104.565 426.051 cv
104.448 425.942 104.277 425.88 104.061 425.88 cv
103.666 425.88 103.359 426.023 103.143 426.294 cv
102.927 426.572 102.828 426.969 102.828 427.481 cv
102.828 429.614 li
103.764 429.614 li
103.764 430.083 li
101.289 430.083 li
101.289 429.614 li
102.018 429.614 li
102.018 425.87 li
101.244 425.87 li
101.244 425.411 li
102.828 425.411 li
102.828 426.239 li
102.981 425.916 103.179 425.682 103.431 425.52 cv
103.683 425.366 103.989 425.285 104.349 425.285 cv
104.475 425.285 104.619 425.304 104.763 425.321 cv
104.907 425.34 105.06 425.366 105.222 425.402 cv
105.222 425.402 li
cp
ef
110.991 431.478 mo
110.271 431.153 109.731 430.649 109.371 429.966 cv
109.011 429.281 108.832 428.408 108.832 427.364 cv
108.832 426.32 109.011 425.457 109.371 424.764 cv
109.731 424.07 110.271 423.566 110.991 423.242 cv
110.991 423.675 li
110.542 423.989 110.217 424.431 110.019 424.988 cv
109.821 425.556 109.722 426.348 109.722 427.364 cv
109.722 428.391 109.821 429.183 110.019 429.74 cv
110.217 430.299 110.542 430.73 110.991 431.046 cv
110.991 431.478 li
110.991 431.478 li
cp
ef
116.106 428.679 mo
115.989 429.183 115.773 429.561 115.449 429.813 cv
115.125 430.073 114.702 430.199 114.189 430.199 cv
113.505 430.199 112.965 429.983 112.551 429.533 cv
112.137 429.084 111.93 428.489 111.93 427.742 cv
111.93 427.005 112.137 426.41 112.551 425.961 cv
112.965 425.511 113.505 425.285 114.189 425.285 cv
114.477 425.285 114.774 425.321 115.071 425.394 cv
115.359 425.466 115.656 425.564 115.953 425.699 cv
115.953 426.896 li
115.485 426.896 li
115.422 426.491 115.287 426.194 115.08 426.006 cv
114.873 425.816 114.576 425.718 114.198 425.718 cv
113.757 425.718 113.424 425.889 113.208 426.23 cv
112.983 426.572 112.875 427.076 112.875 427.742 cv
112.875 428.427 112.983 428.931 113.208 429.272 cv
113.424 429.614 113.757 429.776 114.198 429.776 cv
114.541 429.776 114.819 429.687 115.026 429.507 cv
115.233 429.326 115.377 429.048 115.458 428.679 cv
116.106 428.679 li
116.106 428.679 li
cp
ef
121.182 426.32 mo
121.335 425.979 121.533 425.727 121.776 425.547 cv
122.019 425.376 122.298 425.285 122.623 425.285 cv
123.108 425.285 123.477 425.438 123.72 425.744 cv
123.954 426.051 124.08 426.501 124.08 427.112 cv
124.08 429.614 li
124.809 429.614 li
124.809 430.083 li
122.568 430.083 li
122.568 429.614 li
123.27 429.614 li
123.27 427.202 li
123.27 426.734 123.198 426.393 123.054 426.186 cv
122.91 425.987 122.685 425.88 122.361 425.88 cv
122.001 425.88 121.722 426.023 121.533 426.294 cv
121.344 426.563 121.254 426.96 121.254 427.481 cv
121.254 429.614 li
121.957 429.614 li
121.957 430.083 li
119.742 430.083 li
119.742 429.614 li
120.444 429.614 li
120.444 427.176 li
120.444 426.708 120.373 426.375 120.228 426.177 cv
120.084 425.979 119.859 425.88 119.535 425.88 cv
119.175 425.88 118.896 426.023 118.708 426.294 cv
118.518 426.563 118.428 426.96 118.428 427.481 cv
118.428 429.614 li
119.13 429.614 li
119.13 430.083 li
116.889 430.083 li
116.889 429.614 li
117.618 429.614 li
117.618 425.87 li
116.844 425.87 li
116.844 425.411 li
118.428 425.411 li
118.428 426.239 li
118.572 425.934 118.761 425.69 118.995 425.528 cv
119.229 425.366 119.49 425.285 119.787 425.285 cv
120.147 425.285 120.444 425.376 120.687 425.556 cv
120.93 425.735 121.092 425.996 121.182 426.32 cv
121.182 426.32 li
cp
ef
125.799 431.478 mo
125.799 431.046 li
126.25 430.73 126.573 430.299 126.771 429.74 cv
126.969 429.183 127.068 428.391 127.068 427.364 cv
127.068 426.348 126.969 425.556 126.771 424.988 cv
126.573 424.431 126.25 423.989 125.799 423.675 cv
125.799 423.242 li
126.51 423.566 127.05 424.07 127.41 424.764 cv
127.77 425.457 127.959 426.32 127.959 427.364 cv
127.959 428.408 127.77 429.281 127.41 429.966 cv
127.05 430.649 126.51 431.153 125.799 431.478 cv
125.799 431.478 li
cp
ef
189.96 408.242 mo
185.96 408.242 li
38.7603 408.242 mo
42.7603 408.242 li
@
20.9038 411.227 mo
20.2642 411.227 19.7681 410.963 19.416 410.435 cv
19.064 409.906 18.8882 409.171 18.8882 408.211 cv
18.8882 407.259 19.064 406.515 19.416 405.986 cv
19.7681 405.459 20.2642 405.187 20.9038 405.187 cv
21.5361 405.187 22.0322 405.459 22.3843 405.986 cv
22.7358 406.515 22.9199 407.259 22.9199 408.211 cv
22.9199 409.171 22.7358 409.906 22.3843 410.435 cv
22.0322 410.963 21.5361 411.227 20.9038 411.227 cv
20.9038 411.227 li
cp
20.9038 410.851 mo
21.3042 410.851 21.6001 410.635 21.8003 410.194 cv
21.9922 409.763 22.0962 409.099 22.0962 408.211 cv
22.0962 407.33 21.9922 406.667 21.8003 406.227 cv
21.6001 405.795 21.3042 405.57 20.9038 405.57 cv
20.5039 405.57 20.2002 405.795 20.0083 406.227 cv
19.8081 406.667 19.7119 407.33 19.7119 408.211 cv
19.7119 409.099 19.8081 409.763 20.0083 410.194 cv
20.2002 410.635 20.5039 410.851 20.9038 410.851 cv
ef
24.1519 410.715 mo
24.1519 410.57 24.2002 410.45 24.2959 410.347 cv
24.3921 410.251 24.52 410.194 24.6719 410.194 cv
24.8159 410.194 24.936 410.251 25.04 410.347 cv
25.1362 410.45 25.1919 410.57 25.1919 410.715 cv
25.1919 410.858 25.1362 410.986 25.04 411.083 cv
24.936 411.179 24.8159 411.227 24.6719 411.227 cv
24.52 411.227 24.3921 411.179 24.2959 411.083 cv
24.2002 410.986 24.1519 410.866 24.1519 410.715 cv
24.1519 410.715 li
cp
ef
28.3442 411.227 mo
27.7041 411.227 27.208 410.963 26.856 410.435 cv
26.5039 409.906 26.3281 409.171 26.3281 408.211 cv
26.3281 407.259 26.5039 406.515 26.856 405.986 cv
27.208 405.459 27.7041 405.187 28.3442 405.187 cv
28.9761 405.187 29.4722 405.459 29.8242 405.986 cv
30.1763 406.515 30.3599 407.259 30.3599 408.211 cv
30.3599 409.171 30.1763 409.906 29.8242 410.435 cv
29.4722 410.963 28.9761 411.227 28.3442 411.227 cv
28.3442 411.227 li
cp
28.3442 410.851 mo
28.7441 410.851 29.04 410.635 29.2402 410.194 cv
29.4321 409.763 29.5361 409.099 29.5361 408.211 cv
29.5361 407.33 29.4321 406.667 29.2402 406.227 cv
29.04 405.795 28.7441 405.57 28.3442 405.57 cv
27.9438 405.57 27.6401 405.795 27.4482 406.227 cv
27.248 406.667 27.1519 407.33 27.1519 408.211 cv
27.1519 409.099 27.248 409.763 27.4482 410.194 cv
27.6401 410.635 27.9438 410.851 28.3442 410.851 cv
ef
32.104 406.683 mo
31.6641 406.683 li
31.6641 405.643 li
31.936 405.499 32.2163 405.387 32.5039 405.307 cv
32.7842 405.227 33.064 405.187 33.3359 405.187 cv
33.9438 405.187 34.4238 405.339 34.7759 405.627 cv
35.1279 405.923 35.3042 406.322 35.3042 406.826 cv
35.3042 407.402 34.9038 408.083 34.104 408.875 cv
34.04 408.938 34 408.979 33.9683 409.011 cv
32.4961 410.482 li
34.9282 410.482 li
34.9282 409.763 li
35.3843 409.763 li
35.3843 411.123 li
31.624 411.123 li
31.624 410.698 li
33.3921 408.931 li
33.7759 408.547 34.0562 408.187 34.2241 407.858 cv
34.3921 407.53 34.48 407.187 34.48 406.826 cv
34.48 406.435 34.376 406.131 34.168 405.906 cv
33.96 405.683 33.6802 405.57 33.3281 405.57 cv
32.9521 405.57 32.6641 405.667 32.4639 405.851 cv
32.2559 406.034 32.1362 406.314 32.104 406.683 cv
32.104 406.683 li
cp
ef
189.96 390.559 mo
185.96 390.559 li
38.7603 390.559 mo
42.7603 390.559 li
@
20.4238 393.467 mo
19.7842 393.467 19.2881 393.202 18.936 392.675 cv
18.584 392.146 18.4082 391.41 18.4082 390.45 cv
18.4082 389.499 18.584 388.755 18.936 388.227 cv
19.2881 387.698 19.7842 387.427 20.4238 387.427 cv
21.0562 387.427 21.5522 387.698 21.9038 388.227 cv
22.2559 388.755 22.4399 389.499 22.4399 390.45 cv
22.4399 391.41 22.2559 392.146 21.9038 392.675 cv
21.5522 393.202 21.0562 393.467 20.4238 393.467 cv
20.4238 393.467 li
cp
20.4238 393.091 mo
20.8242 393.091 21.1201 392.875 21.3198 392.435 cv
21.5122 392.003 21.6162 391.339 21.6162 390.45 cv
21.6162 389.57 21.5122 388.906 21.3198 388.467 cv
21.1201 388.034 20.8242 387.811 20.4238 387.811 cv
20.0239 387.811 19.7202 388.034 19.5278 388.467 cv
19.3281 388.906 19.2319 389.57 19.2319 390.45 cv
19.2319 391.339 19.3281 392.003 19.5278 392.435 cv
19.7202 392.875 20.0239 393.091 20.4238 393.091 cv
ef
23.6719 392.954 mo
23.6719 392.811 23.7202 392.69 23.8159 392.587 cv
23.9121 392.49 24.04 392.435 24.1919 392.435 cv
24.3359 392.435 24.4561 392.49 24.5601 392.587 cv
24.6563 392.69 24.7119 392.811 24.7119 392.954 cv
24.7119 393.099 24.6563 393.227 24.5601 393.322 cv
24.4561 393.419 24.3359 393.467 24.1919 393.467 cv
24.04 393.467 23.9121 393.419 23.8159 393.322 cv
23.7202 393.227 23.6719 393.106 23.6719 392.954 cv
23.6719 392.954 li
cp
ef
28.104 393.467 mo
27.4639 393.467 26.9683 393.202 26.6162 392.675 cv
26.2642 392.146 26.0879 391.41 26.0879 390.45 cv
26.0879 389.499 26.2642 388.755 26.6162 388.227 cv
26.9683 387.698 27.4639 387.427 28.104 387.427 cv
28.7358 387.427 29.2319 387.698 29.584 388.227 cv
29.936 388.755 30.1201 389.499 30.1201 390.45 cv
30.1201 391.41 29.936 392.146 29.584 392.675 cv
29.2319 393.202 28.7358 393.467 28.104 393.467 cv
28.104 393.467 li
cp
28.104 393.091 mo
28.5039 393.091 28.8003 392.875 29 392.435 cv
29.1919 392.003 29.2959 391.339 29.2959 390.45 cv
29.2959 389.57 29.1919 388.906 29 388.467 cv
28.8003 388.034 28.5039 387.811 28.104 387.811 cv
27.7041 387.811 27.3999 388.034 27.208 388.467 cv
27.0083 388.906 26.9121 389.57 26.9121 390.45 cv
26.9121 391.339 27.0083 392.003 27.208 392.435 cv
27.3999 392.875 27.7041 393.091 28.104 393.091 cv
ef
35.1118 393.362 mo
32.4561 393.362 li
32.4561 392.946 li
33.3921 392.946 li
33.3921 391.803 li
30.8481 391.803 li
30.8481 391.379 li
33.3999 387.427 li
34.1763 387.427 li
34.1763 391.387 li
35.2881 391.387 li
35.2881 391.803 li
34.1763 391.803 li
34.1763 392.946 li
35.1118 392.946 li
35.1118 393.362 li
35.1118 393.362 li
cp
33.3921 391.387 mo
33.3921 388.282 li
31.3999 391.387 li
33.3921 391.387 li
ef
189.96 372.874 mo
185.96 372.874 li
38.7603 372.874 mo
42.7603 372.874 li
@
20.4238 375.946 mo
19.7842 375.946 19.2881 375.683 18.936 375.154 cv
18.584 374.627 18.4082 373.891 18.4082 372.931 cv
18.4082 371.979 18.584 371.234 18.936 370.707 cv
19.2881 370.179 19.7842 369.906 20.4238 369.906 cv
21.0562 369.906 21.5522 370.179 21.9038 370.707 cv
22.2559 371.234 22.4399 371.979 22.4399 372.931 cv
22.4399 373.891 22.2559 374.627 21.9038 375.154 cv
21.5522 375.683 21.0562 375.946 20.4238 375.946 cv
20.4238 375.946 li
cp
20.4238 375.57 mo
20.8242 375.57 21.1201 375.354 21.3198 374.915 cv
21.5122 374.482 21.6162 373.818 21.6162 372.931 cv
21.6162 372.051 21.5122 371.387 21.3198 370.946 cv
21.1201 370.515 20.8242 370.291 20.4238 370.291 cv
20.0239 370.291 19.7202 370.515 19.5278 370.946 cv
19.3281 371.387 19.2319 372.051 19.2319 372.931 cv
19.2319 373.818 19.3281 374.482 19.5278 374.915 cv
19.7202 375.354 20.0239 375.57 20.4238 375.57 cv
ef
23.9121 375.435 mo
23.9121 375.291 23.96 375.171 24.0562 375.066 cv
24.1519 374.971 24.2803 374.915 24.4321 374.915 cv
24.5762 374.915 24.6958 374.971 24.8003 375.066 cv
24.896 375.171 24.9521 375.291 24.9521 375.435 cv
24.9521 375.578 24.896 375.707 24.8003 375.803 cv
24.6958 375.898 24.5762 375.946 24.4321 375.946 cv
24.2803 375.946 24.1519 375.898 24.0562 375.803 cv
23.96 375.707 23.9121 375.587 23.9121 375.435 cv
23.9121 375.435 li
cp
ef
28.104 375.946 mo
27.4639 375.946 26.9683 375.683 26.6162 375.154 cv
26.2642 374.627 26.0879 373.891 26.0879 372.931 cv
26.0879 371.979 26.2642 371.234 26.6162 370.707 cv
26.9683 370.179 27.4639 369.906 28.104 369.906 cv
28.7358 369.906 29.2319 370.179 29.584 370.707 cv
29.936 371.234 30.1201 371.979 30.1201 372.931 cv
30.1201 373.891 29.936 374.627 29.584 375.154 cv
29.2319 375.683 28.7358 375.946 28.104 375.946 cv
28.104 375.946 li
cp
28.104 375.57 mo
28.5039 375.57 28.8003 375.354 29 374.915 cv
29.1919 374.482 29.2959 373.818 29.2959 372.931 cv
29.2959 372.051 29.1919 371.387 29 370.946 cv
28.8003 370.515 28.5039 370.291 28.104 370.291 cv
27.7041 370.291 27.3999 370.515 27.208 370.946 cv
27.0083 371.387 26.9121 372.051 26.9121 372.931 cv
26.9121 373.818 27.0083 374.482 27.208 374.915 cv
27.3999 375.354 27.7041 375.57 28.104 375.57 cv
ef
31.9438 372.635 mo
32.1201 372.442 32.3198 372.291 32.5439 372.194 cv
32.7681 372.099 33.0161 372.051 33.3042 372.051 cv
33.8799 372.051 34.3442 372.227 34.6802 372.578 cv
35.0161 372.931 35.1841 373.402 35.1841 374.003 cv
35.1841 374.595 35 375.066 34.6401 375.419 cv
34.272 375.771 33.792 375.946 33.1841 375.946 cv
32.5278 375.946 32.0161 375.707 31.6641 375.219 cv
31.312 374.73 31.1362 374.026 31.1362 373.114 cv
31.1362 372.099 31.3442 371.307 31.7603 370.746 cv
32.1763 370.187 32.7681 369.906 33.5361 369.906 cv
33.7441 369.906 33.96 369.931 34.1841 369.963 cv
34.4082 370.003 34.6401 370.059 34.8799 370.139 cv
34.8799 371.099 li
34.4399 371.099 li
34.4082 370.843 34.3042 370.643 34.1362 370.499 cv
33.9683 370.362 33.7441 370.291 33.4561 370.291 cv
32.9438 370.291 32.5679 370.482 32.3198 370.866 cv
32.0723 371.251 31.9438 371.843 31.9438 372.635 cv
31.9438 372.635 li
cp
33.2163 375.57 mo
33.584 375.57 33.8643 375.442 34.064 375.171 cv
34.2559 374.898 34.3599 374.515 34.3599 374.003 cv
34.3599 373.499 34.2559 373.114 34.064 372.843 cv
33.8643 372.57 33.584 372.435 33.2163 372.435 cv
32.8398 372.435 32.5522 372.57 32.3599 372.826 cv
32.168 373.091 32.0723 373.467 32.0723 373.954 cv
32.0723 374.475 32.168 374.875 32.3682 375.154 cv
32.5601 375.435 32.8481 375.57 33.2163 375.57 cv
ef
189.96 355.189 mo
185.96 355.189 li
38.7603 355.189 mo
42.7603 355.189 li
@
20.6641 358.187 mo
20.0239 358.187 19.5278 357.923 19.1763 357.395 cv
18.8242 356.866 18.6479 356.131 18.6479 355.171 cv
18.6479 354.219 18.8242 353.475 19.1763 352.946 cv
19.5278 352.419 20.0239 352.146 20.6641 352.146 cv
21.2959 352.146 21.792 352.419 22.144 352.946 cv
22.4961 353.475 22.6802 354.219 22.6802 355.171 cv
22.6802 356.131 22.4961 356.866 22.144 357.395 cv
21.792 357.923 21.2959 358.187 20.6641 358.187 cv
20.6641 358.187 li
cp
20.6641 357.811 mo
21.064 357.811 21.3599 357.595 21.5601 357.154 cv
21.752 356.723 21.856 356.059 21.856 355.171 cv
21.856 354.291 21.752 353.627 21.5601 353.187 cv
21.3599 352.755 21.064 352.53 20.6641 352.53 cv
20.2642 352.53 19.96 352.755 19.7681 353.187 cv
19.5679 353.627 19.4722 354.291 19.4722 355.171 cv
19.4722 356.059 19.5679 356.723 19.7681 357.154 cv
19.96 357.595 20.2642 357.811 20.6641 357.811 cv
ef
23.9121 357.675 mo
23.9121 357.53 23.96 357.41 24.0562 357.307 cv
24.1519 357.211 24.2803 357.154 24.4321 357.154 cv
24.5762 357.154 24.6958 357.211 24.8003 357.307 cv
24.896 357.41 24.9521 357.53 24.9521 357.675 cv
24.9521 357.818 24.896 357.946 24.8003 358.043 cv
24.6958 358.139 24.5762 358.187 24.4321 358.187 cv
24.2803 358.187 24.1519 358.139 24.0562 358.043 cv
23.96 357.946 23.9121 357.826 23.9121 357.675 cv
23.9121 357.675 li
cp
ef
28.104 358.187 mo
27.4639 358.187 26.9683 357.923 26.6162 357.395 cv
26.2642 356.866 26.0879 356.131 26.0879 355.171 cv
26.0879 354.219 26.2642 353.475 26.6162 352.946 cv
26.9683 352.419 27.4639 352.146 28.104 352.146 cv
28.7358 352.146 29.2319 352.419 29.584 352.946 cv
29.936 353.475 30.1201 354.219 30.1201 355.171 cv
30.1201 356.131 29.936 356.866 29.584 357.395 cv
29.2319 357.923 28.7358 358.187 28.104 358.187 cv
28.104 358.187 li
cp
28.104 357.811 mo
28.5039 357.811 28.8003 357.595 29 357.154 cv
29.1919 356.723 29.2959 356.059 29.2959 355.171 cv
29.2959 354.291 29.1919 353.627 29 353.187 cv
28.8003 352.755 28.5039 352.53 28.104 352.53 cv
27.7041 352.53 27.3999 352.755 27.208 353.187 cv
27.0083 353.627 26.9121 354.291 26.9121 355.171 cv
26.9121 356.059 27.0083 356.723 27.208 357.154 cv
27.3999 357.595 27.7041 357.811 28.104 357.811 cv
ef
34.4082 353.658 mo
34.4082 353.307 34.312 353.026 34.1362 352.826 cv
33.9521 352.635 33.7041 352.53 33.3843 352.53 cv
33.064 352.53 32.8081 352.635 32.6318 352.826 cv
32.4482 353.026 32.3599 353.307 32.3599 353.658 cv
32.3599 354.019 32.4482 354.299 32.6318 354.49 cv
32.8081 354.69 33.064 354.786 33.3843 354.786 cv
33.7041 354.786 33.9521 354.69 34.1362 354.49 cv
34.312 354.299 34.4082 354.019 34.4082 353.658 cv
34.4082 353.658 li
cp
33.9839 354.979 mo
34.4238 355.043 34.7681 355.202 35.0161 355.467 cv
35.2642 355.738 35.3921 356.074 35.3921 356.49 cv
35.3921 357.034 35.2163 357.459 34.8721 357.746 cv
34.52 358.043 34.0239 358.187 33.3843 358.187 cv
32.7358 358.187 32.2402 358.043 31.896 357.746 cv
31.5439 357.459 31.376 357.034 31.376 356.49 cv
31.376 356.074 31.4961 355.738 31.7441 355.467 cv
31.9922 355.202 32.3359 355.043 32.7842 354.979 cv
32.3843 354.914 32.0879 354.763 31.8799 354.53 cv
31.6719 354.307 31.5679 354.011 31.5679 353.658 cv
31.5679 353.194 31.728 352.826 32.0479 352.555 cv
32.3682 352.282 32.8159 352.146 33.3843 352.146 cv
33.9438 352.146 34.3921 352.282 34.7119 352.555 cv
35.0322 352.826 35.2002 353.194 35.2002 353.658 cv
35.2002 354.011 35.0879 354.307 34.8799 354.53 cv
34.6719 354.763 34.3682 354.914 33.9839 354.979 cv
34.5679 356.49 mo
34.5679 356.074 34.4639 355.755 34.2559 355.522 cv
34.0479 355.291 33.752 355.171 33.3843 355.171 cv
33.0083 355.171 32.7202 355.291 32.5122 355.522 cv
32.3042 355.755 32.2002 356.074 32.2002 356.49 cv
32.2002 356.906 32.3042 357.234 32.5122 357.467 cv
32.7202 357.698 33.0083 357.811 33.3843 357.811 cv
33.752 357.811 34.0479 357.698 34.2559 357.467 cv
34.4639 357.234 34.5679 356.906 34.5679 356.49 cv
ef
189.96 337.506 mo
185.96 337.506 li
38.7603 337.506 mo
42.7603 337.506 li
@
20.4238 340.427 mo
19.7842 340.427 19.2881 340.162 18.936 339.635 cv
18.584 339.106 18.4082 338.37 18.4082 337.41 cv
18.4082 336.459 18.584 335.715 18.936 335.187 cv
19.2881 334.658 19.7842 334.387 20.4238 334.387 cv
21.0562 334.387 21.5522 334.658 21.9038 335.187 cv
22.2559 335.715 22.4399 336.459 22.4399 337.41 cv
22.4399 338.37 22.2559 339.106 21.9038 339.635 cv
21.5522 340.162 21.0562 340.427 20.4238 340.427 cv
20.4238 340.427 li
cp
20.4238 340.051 mo
20.8242 340.051 21.1201 339.835 21.3198 339.395 cv
21.5122 338.963 21.6162 338.299 21.6162 337.41 cv
21.6162 336.53 21.5122 335.866 21.3198 335.427 cv
21.1201 334.994 20.8242 334.771 20.4238 334.771 cv
20.0239 334.771 19.7202 334.994 19.5278 335.427 cv
19.3281 335.866 19.2319 336.53 19.2319 337.41 cv
19.2319 338.299 19.3281 338.963 19.5278 339.395 cv
19.7202 339.835 20.0239 340.051 20.4238 340.051 cv
ef
23.9121 339.914 mo
23.9121 339.771 23.96 339.65 24.0562 339.547 cv
24.1519 339.45 24.2803 339.395 24.4321 339.395 cv
24.5762 339.395 24.6958 339.45 24.8003 339.547 cv
24.896 339.65 24.9521 339.771 24.9521 339.914 cv
24.9521 340.059 24.896 340.187 24.8003 340.282 cv
24.6958 340.379 24.5762 340.427 24.4321 340.427 cv
24.2803 340.427 24.1519 340.379 24.0562 340.282 cv
23.96 340.187 23.9121 340.066 23.9121 339.914 cv
23.9121 339.914 li
cp
ef
26.6963 340.322 mo
26.6963 339.906 li
27.7119 339.906 li
27.7119 335.059 li
26.5361 335.818 li
26.5361 335.307 li
27.96 334.387 li
28.4961 334.387 li
28.4961 339.906 li
29.5122 339.906 li
29.5122 340.322 li
26.6963 340.322 li
26.6963 340.322 li
cp
ef
33.144 340.427 mo
32.5039 340.427 32.0083 340.162 31.6563 339.635 cv
31.3042 339.106 31.1279 338.37 31.1279 337.41 cv
31.1279 336.459 31.3042 335.715 31.6563 335.187 cv
32.0083 334.658 32.5039 334.387 33.144 334.387 cv
33.7759 334.387 34.272 334.658 34.624 335.187 cv
34.9761 335.715 35.1602 336.459 35.1602 337.41 cv
35.1602 338.37 34.9761 339.106 34.624 339.635 cv
34.272 340.162 33.7759 340.427 33.144 340.427 cv
33.144 340.427 li
cp
33.144 340.051 mo
33.5439 340.051 33.8398 339.835 34.04 339.395 cv
34.2319 338.963 34.3359 338.299 34.3359 337.41 cv
34.3359 336.53 34.2319 335.866 34.04 335.427 cv
33.8398 334.994 33.5439 334.771 33.144 334.771 cv
32.7441 334.771 32.4399 334.994 32.248 335.427 cv
32.0479 335.866 31.9521 336.53 31.9521 337.41 cv
31.9521 338.299 32.0479 338.963 32.248 339.395 cv
32.4399 339.835 32.7441 340.051 33.144 340.051 cv
ef
189.96 319.821 mo
185.96 319.821 li
38.7603 319.821 mo
42.7603 319.821 li
@
20.9038 322.906 mo
20.2642 322.906 19.7681 322.643 19.416 322.114 cv
19.064 321.587 18.8882 320.851 18.8882 319.891 cv
18.8882 318.938 19.064 318.194 19.416 317.667 cv
19.7681 317.139 20.2642 316.866 20.9038 316.866 cv
21.5361 316.866 22.0322 317.139 22.3843 317.667 cv
22.7358 318.194 22.9199 318.938 22.9199 319.891 cv
22.9199 320.851 22.7358 321.587 22.3843 322.114 cv
22.0322 322.643 21.5361 322.906 20.9038 322.906 cv
20.9038 322.906 li
cp
20.9038 322.53 mo
21.3042 322.53 21.6001 322.314 21.8003 321.875 cv
21.9922 321.442 22.0962 320.778 22.0962 319.891 cv
22.0962 319.011 21.9922 318.347 21.8003 317.906 cv
21.6001 317.475 21.3042 317.251 20.9038 317.251 cv
20.5039 317.251 20.2002 317.475 20.0083 317.906 cv
19.8081 318.347 19.7119 319.011 19.7119 319.891 cv
19.7119 320.778 19.8081 321.442 20.0083 321.875 cv
20.2002 322.314 20.5039 322.53 20.9038 322.53 cv
ef
24.1519 322.395 mo
24.1519 322.251 24.2002 322.131 24.2959 322.026 cv
24.3921 321.931 24.52 321.875 24.6719 321.875 cv
24.8159 321.875 24.936 321.931 25.04 322.026 cv
25.1362 322.131 25.1919 322.251 25.1919 322.395 cv
25.1919 322.538 25.1362 322.667 25.04 322.763 cv
24.936 322.858 24.8159 322.906 24.6719 322.906 cv
24.52 322.906 24.3921 322.858 24.2959 322.763 cv
24.2002 322.667 24.1519 322.547 24.1519 322.395 cv
24.1519 322.395 li
cp
ef
26.936 322.803 mo
26.936 322.387 li
27.9521 322.387 li
27.9521 317.538 li
26.7759 318.299 li
26.7759 317.786 li
28.2002 316.866 li
28.7358 316.866 li
28.7358 322.387 li
29.752 322.387 li
29.752 322.803 li
26.936 322.803 li
26.936 322.803 li
cp
ef
32.104 318.362 mo
31.6641 318.362 li
31.6641 317.322 li
31.936 317.179 32.2163 317.066 32.5039 316.986 cv
32.7842 316.906 33.064 316.866 33.3359 316.866 cv
33.9438 316.866 34.4238 317.019 34.7759 317.307 cv
35.1279 317.603 35.3042 318.003 35.3042 318.507 cv
35.3042 319.083 34.9038 319.763 34.104 320.555 cv
34.04 320.618 34 320.658 33.9683 320.69 cv
32.4961 322.162 li
34.9282 322.162 li
34.9282 321.442 li
35.3843 321.442 li
35.3843 322.803 li
31.624 322.803 li
31.624 322.379 li
33.3921 320.61 li
33.7759 320.227 34.0562 319.866 34.2241 319.538 cv
34.3921 319.211 34.48 318.866 34.48 318.507 cv
34.48 318.114 34.376 317.811 34.168 317.587 cv
33.96 317.362 33.6802 317.251 33.3281 317.251 cv
32.9521 317.251 32.6641 317.347 32.4639 317.53 cv
32.2559 317.715 32.1362 317.994 32.104 318.362 cv
32.104 318.362 li
cp
ef
189.96 302.138 mo
185.96 302.138 li
38.7603 302.138 mo
42.7603 302.138 li
@
20.4238 305.146 mo
19.7842 305.146 19.2881 304.883 18.936 304.354 cv
18.584 303.826 18.4082 303.091 18.4082 302.131 cv
18.4082 301.179 18.584 300.435 18.936 299.906 cv
19.2881 299.379 19.7842 299.106 20.4238 299.106 cv
21.0562 299.106 21.5522 299.379 21.9038 299.906 cv
22.2559 300.435 22.4399 301.179 22.4399 302.131 cv
22.4399 303.091 22.2559 303.826 21.9038 304.354 cv
21.5522 304.883 21.0562 305.146 20.4238 305.146 cv
20.4238 305.146 li
cp
20.4238 304.771 mo
20.8242 304.771 21.1201 304.555 21.3198 304.114 cv
21.5122 303.683 21.6162 303.019 21.6162 302.131 cv
21.6162 301.251 21.5122 300.587 21.3198 300.146 cv
21.1201 299.715 20.8242 299.49 20.4238 299.49 cv
20.0239 299.49 19.7202 299.715 19.5278 300.146 cv
19.3281 300.587 19.2319 301.251 19.2319 302.131 cv
19.2319 303.019 19.3281 303.683 19.5278 304.114 cv
19.7202 304.555 20.0239 304.771 20.4238 304.771 cv
ef
23.6719 304.635 mo
23.6719 304.49 23.7202 304.37 23.8159 304.267 cv
23.9121 304.171 24.04 304.114 24.1919 304.114 cv
24.3359 304.114 24.4561 304.171 24.5601 304.267 cv
24.6563 304.37 24.7119 304.49 24.7119 304.635 cv
24.7119 304.778 24.6563 304.906 24.5601 305.003 cv
24.4561 305.099 24.3359 305.146 24.1919 305.146 cv
24.04 305.146 23.9121 305.099 23.8159 305.003 cv
23.7202 304.906 23.6719 304.786 23.6719 304.635 cv
23.6719 304.635 li
cp
ef
26.6963 305.043 mo
26.6963 304.627 li
27.7119 304.627 li
27.7119 299.778 li
26.5361 300.538 li
26.5361 300.026 li
27.96 299.106 li
28.4961 299.106 li
28.4961 304.627 li
29.5122 304.627 li
29.5122 305.043 li
26.6963 305.043 li
26.6963 305.043 li
cp
ef
35.1118 305.043 mo
32.4561 305.043 li
32.4561 304.627 li
33.3921 304.627 li
33.3921 303.482 li
30.8481 303.482 li
30.8481 303.059 li
33.3999 299.106 li
34.1763 299.106 li
34.1763 303.066 li
35.2881 303.066 li
35.2881 303.482 li
34.1763 303.482 li
34.1763 304.627 li
35.1118 304.627 li
35.1118 305.043 li
35.1118 305.043 li
cp
33.3921 303.066 mo
33.3921 299.963 li
31.3999 303.066 li
33.3921 303.066 li
ef
9 365.819 mo
9 365.883 8.96387 365.909 8.8833 365.909 cv
8.86523 365.909 8.83789 365.9 8.80225 365.892 cv
8.76611 365.883 8.73926 365.874 8.72119 365.855 cv
8.70313 365.838 8.68506 365.819 8.68506 365.793 cv
8.68506 365.217 8.50488 364.884 8.13623 364.794 cv
3.21289 363.569 li
3.18604 363.74 3.16797 364.002 3.16797 364.361 cv
3.16797 364.425 3.13184 364.451 3.05127 364.451 cv
3.0332 364.451 3.00586 364.442 2.97021 364.434 cv
2.93408 364.425 2.90723 364.416 2.88916 364.397 cv
2.87109 364.38 2.85303 364.361 2.85303 364.335 cv
2.85303 362.777 li
2.85303 362.741 2.87109 362.715 2.90723 362.696 cv
7.66797 360.698 li
3.68115 359.699 li
3.61816 359.69 3.57324 359.682 3.5459 359.682 cv
3.29395 359.682 3.16797 359.916 3.16797 360.375 cv
3.16797 360.438 3.13184 360.465 3.05127 360.465 cv
2.979 360.446 2.92529 360.429 2.89795 360.42 cv
2.87109 360.41 2.85303 360.375 2.85303 360.312 cv
2.85303 358.386 li
2.85303 358.332 2.89795 358.296 2.97021 358.296 cv
2.98828 358.305 3.01514 358.313 3.05127 358.322 cv
3.08691 358.332 3.12305 358.341 3.14111 358.358 cv
3.15918 358.377 3.16797 358.395 3.16797 358.412 cv
3.16797 358.988 3.35693 359.321 3.71729 359.411 cv
8.91895 360.708 li
8.97314 360.726 9 360.762 9 360.798 cv
9 360.905 li
9 360.95 8.98193 360.978 8.93701 360.986 cv
3.49219 363.281 li
3.43799 363.3 li
3.4292 363.317 3.41992 363.317 3.41113 363.317 cv
8.17188 364.506 li
8.18994 364.515 8.21729 364.523 8.23486 364.523 cv
8.25293 364.523 8.28027 364.532 8.30713 364.532 cv
8.46924 364.532 8.56787 364.47 8.61328 364.335 cv
8.66699 364.199 8.68506 364.028 8.68506 363.83 cv
8.68506 363.776 8.72998 363.74 8.80225 363.74 cv
8.89209 363.768 8.9458 363.785 8.96387 363.795 cv
8.99121 363.813 9 363.84 9 363.894 cv
9 365.819 li
9 365.819 li
cp
ef
9.16357 357.077 mo
9.16357 356.378 li
9.16357 355.924 9.05029 355.577 8.81689 355.345 cv
8.70996 355.244 8.57129 355.155 8.40771 355.093 cv
8.24365 355.029 8.08008 354.998 7.91602 354.998 cv
7.76514 354.998 7.63916 355.049 7.55078 355.137 cv
7.4624 355.225 7.40576 355.338 7.36816 355.471 cv
7.33643 355.609 7.31787 355.754 7.31787 355.918 cv
7.31787 356.34 li
7.31787 356.453 7.33008 356.529 7.34912 356.566 cv
7.36816 356.604 7.43115 356.643 7.53174 356.667 cv
9.16357 357.077 li
9.16357 357.077 li
cp
11.3999 358.733 mo
11.3999 358.778 11.375 358.797 11.3184 358.797 cv
11.3057 358.797 11.2866 358.791 11.2612 358.784 cv
11.2363 358.784 11.2173 358.771 11.2046 358.759 cv
11.1924 358.746 11.1797 358.733 11.1797 358.715 cv
11.1797 358.463 11.167 358.28 11.1353 358.18 cv
11.123 358.129 11.0659 358.085 10.9653 358.06 cv
7.50684 357.196 li
7.46875 357.19 7.4375 357.184 7.41846 357.184 cv
7.37451 357.184 7.34912 357.209 7.34277 357.26 cv
7.33008 357.342 7.31787 357.493 7.31787 357.713 cv
7.31787 357.758 7.29248 357.776 7.23584 357.776 cv
7.22314 357.776 7.2041 357.77 7.1792 357.764 cv
7.15381 357.758 7.13477 357.751 7.12256 357.738 cv
7.10986 357.726 7.09717 357.713 7.09717 357.694 cv
7.09717 355.785 li
7.09717 355.634 7.11621 355.477 7.14746 355.313 cv
7.18555 355.149 7.23584 354.998 7.31152 354.859 cv
7.38721 354.721 7.48779 354.607 7.61377 354.52 cv
7.73975 354.431 7.88477 354.387 8.04834 354.387 cv
8.2627 354.387 8.45166 354.463 8.61523 354.601 cv
8.7793 354.739 8.91797 354.916 9.03125 355.13 cv
9.14453 355.345 9.22021 355.546 9.26416 355.748 cv
9.32715 355.584 9.42188 355.451 9.54785 355.345 cv
9.68018 355.244 9.83154 355.187 10.0015 355.187 cv
10.0269 355.187 10.0391 355.193 10.0518 355.193 cv
10.0645 355.193 10.0771 355.193 10.0898 355.193 cv
10.6504 355.244 li
10.7324 355.25 10.8018 355.256 10.8584 355.256 cv
10.9214 355.263 10.9653 355.263 10.9971 355.263 cv
11.1104 355.263 11.2046 355.25 11.2739 355.212 cv
11.3433 355.181 11.375 355.111 11.375 355.011 cv
11.375 354.885 11.3184 354.765 11.1924 354.664 cv
11.0723 354.563 10.9399 354.5 10.7954 354.469 cv
10.7573 354.456 10.7388 354.431 10.7388 354.405 cv
10.7388 354.349 li
10.7388 354.312 10.77 354.286 10.8203 354.286 cv
10.9463 354.317 11.0601 354.368 11.167 354.431 cv
11.2803 354.5 11.3687 354.589 11.4316 354.689 cv
11.4946 354.79 11.5322 354.903 11.5322 355.017 cv
11.5322 355.263 11.4756 355.471 11.375 355.646 cv
11.2676 355.823 11.0977 355.905 10.8584 355.905 cv
10.77 355.905 10.6943 355.898 10.625 355.88 cv
10.0645 355.741 li
10.0142 355.729 9.95752 355.716 9.88818 355.716 cv
9.71143 355.716 9.57959 355.779 9.47852 355.893 cv
9.37793 356.013 9.32715 356.163 9.32715 356.34 cv
9.32715 357.115 li
10.9907 357.53 li
11.0283 357.543 11.0537 357.543 11.0786 357.543 cv
11.123 357.543 11.1479 357.518 11.1543 357.468 cv
11.1733 357.392 11.1797 357.241 11.1797 357.014 cv
11.1797 356.977 11.2109 356.951 11.2612 356.951 cv
11.3247 356.964 11.3623 356.977 11.375 356.982 cv
11.3936 356.995 11.3999 357.021 11.3999 357.058 cv
11.3999 358.733 li
ef
11.3999 353.921 mo
11.3999 353.966 11.375 353.984 11.3184 353.984 cv
11.3057 353.984 11.293 353.978 11.2676 353.972 cv
11.2427 353.972 11.2236 353.966 11.2046 353.953 cv
11.1924 353.94 11.1797 353.928 11.1797 353.902 cv
11.1797 353.506 11.0537 353.272 10.7954 353.203 cv
7.50684 352.384 li
7.46875 352.378 7.4375 352.371 7.41846 352.371 cv
7.37451 352.371 7.34912 352.396 7.34277 352.447 cv
7.33008 352.529 7.31787 352.68 7.31787 352.9 cv
7.31787 352.944 7.29248 352.964 7.23584 352.964 cv
7.22314 352.964 7.2041 352.957 7.1792 352.951 cv
7.15381 352.944 7.13477 352.938 7.12256 352.926 cv
7.10986 352.913 7.09717 352.9 7.09717 352.882 cv
7.09717 351.773 li
7.09717 351.729 7.12256 351.704 7.1665 351.691 cv
10.7764 351.199 li
7.1665 348.906 li
7.12256 348.881 7.09717 348.837 7.09717 348.787 cv
7.09717 347.716 li
7.09717 347.678 7.12842 347.652 7.1792 347.652 cv
7.19189 347.659 7.21045 347.665 7.23584 347.672 cv
7.26074 347.678 7.28613 347.685 7.29883 347.697 cv
7.31152 347.709 7.31787 347.722 7.31787 347.734 cv
7.31787 347.993 7.33643 348.169 7.36182 348.271 cv
7.38086 348.327 7.4375 348.364 7.53174 348.39 cv
10.9907 349.253 li
11.0347 349.266 11.0659 349.266 11.0786 349.266 cv
11.0977 349.266 11.1104 349.266 11.123 349.259 cv
11.1353 349.259 11.1416 349.253 11.1416 349.24 cv
11.1479 349.228 11.1543 349.215 11.1543 349.19 cv
11.1733 349.114 11.1797 348.963 11.1797 348.736 cv
11.1797 348.698 11.2109 348.674 11.2612 348.674 cv
11.3247 348.692 11.3623 348.705 11.375 348.711 cv
11.3936 348.724 11.3999 348.742 11.3999 348.78 cv
11.3999 350.425 li
11.3999 350.469 11.375 350.487 11.3184 350.487 cv
11.3057 350.487 11.2866 350.481 11.2612 350.476 cv
11.2363 350.469 11.2173 350.463 11.2046 350.45 cv
11.1924 350.438 11.1797 350.425 11.1797 350.406 cv
11.1797 350.154 11.167 349.971 11.1353 349.87 cv
11.123 349.82 11.0659 349.775 10.9653 349.751 cv
7.31787 348.844 li
11.3306 351.389 li
11.3813 351.414 11.3999 351.458 11.3999 351.515 cv
11.3999 351.571 11.3813 351.603 11.3306 351.603 cv
7.36816 352.139 li
10.8203 353.001 li
10.833 353.008 10.8521 353.014 10.8647 353.014 cv
10.877 353.014 10.896 353.021 10.915 353.021 cv
11.0283 353.021 11.0977 352.977 11.1294 352.882 cv
11.167 352.787 11.1797 352.668 11.1797 352.529 cv
11.1797 352.491 11.2109 352.466 11.2612 352.466 cv
11.3184 352.479 11.356 352.491 11.375 352.504 cv
11.3936 352.517 11.3999 352.535 11.3999 352.573 cv
11.3999 353.921 li
11.3999 353.921 li
cp
ef
11.5322 347.618 mo
11.5322 347.631 11.5195 347.644 11.5073 347.656 cv
11.4946 347.669 11.4819 347.669 11.4692 347.669 cv
10.0078 347.304 li
9.98242 347.297 9.96973 347.278 9.96973 347.253 cv
9.96973 347.178 li
9.96973 347.165 9.97607 347.152 9.98877 347.14 cv
10.0015 347.133 10.0205 347.127 10.0327 347.127 cv
10.1777 347.165 10.3037 347.178 10.4175 347.178 cv
10.7261 347.178 10.9526 347.076 11.0977 346.868 cv
11.249 346.661 11.3184 346.396 11.3184 346.075 cv
11.3184 345.937 11.2866 345.804 11.2173 345.672 cv
11.1543 345.539 11.0659 345.42 10.9526 345.318 cv
10.8457 345.218 10.7261 345.143 10.5874 345.079 cv
10.4551 345.022 10.3164 344.991 10.1777 344.991 cv
10.0327 344.991 9.90088 345.035 9.78711 345.111 cv
9.67383 345.187 9.59814 345.294 9.56055 345.432 cv
9.35889 346.201 li
9.30859 346.408 9.19482 346.572 9.0249 346.698 cv
8.86133 346.824 8.67236 346.881 8.45801 346.881 cv
8.20605 346.881 7.96631 346.806 7.7334 346.654 cv
7.50049 346.503 7.31152 346.308 7.17285 346.068 cv
7.03418 345.829 6.9585 345.583 6.9585 345.331 cv
6.9585 345.143 6.99658 344.966 7.06543 344.802 cv
7.14111 344.645 7.24854 344.519 7.39941 344.431 cv
6.97754 344.071 li
6.96484 344.046 6.9585 344.033 6.9585 344.027 cv
6.9585 343.989 li
6.9585 343.977 6.97119 343.964 6.98389 343.951 cv
6.99658 343.939 7.00879 343.933 7.02148 343.933 cv
8.48291 344.298 li
8.51465 344.311 8.52734 344.323 8.52734 344.349 cv
8.52734 344.424 li
8.52734 344.462 8.5083 344.48 8.45801 344.48 cv
8.32568 344.462 8.2124 344.449 8.11133 344.449 cv
7.92236 344.449 7.75244 344.487 7.60742 344.55 cv
7.4624 344.619 7.34912 344.721 7.27344 344.853 cv
7.19775 344.991 7.16016 345.155 7.16016 345.351 cv
7.16016 345.521 7.21045 345.69 7.30518 345.854 cv
7.40576 346.018 7.53174 346.156 7.68945 346.258 cv
7.85303 346.358 8.01709 346.408 8.18701 346.408 cv
8.32568 346.408 8.44531 346.371 8.54639 346.289 cv
8.65332 346.213 8.72266 346.106 8.76025 345.974 cv
8.96191 345.205 li
8.99951 345.066 9.06885 344.947 9.15723 344.847 cv
9.25195 344.745 9.36523 344.664 9.49121 344.606 cv
9.61719 344.557 9.75586 344.525 9.90674 344.525 cv
10.1084 344.525 10.3101 344.569 10.499 344.651 cv
10.6943 344.739 10.8706 344.853 11.0283 345.004 cv
11.1924 345.155 11.312 345.331 11.3999 345.521 cv
11.4883 345.709 11.5322 345.904 11.5322 346.1 cv
11.5322 346.604 11.3872 346.963 11.0977 347.178 cv
11.5137 347.53 li
11.5259 347.556 11.5322 347.574 11.5322 347.574 cv
11.5322 347.618 li
11.5322 347.618 li
cp
ef
1.5 lw
2 lc
38.7603 408.242 mo
38.7603 302.138 li
38.7603 408.242 mo
189.96 408.242 li
189.96 408.242 mo
189.96 302.138 li
38.7603 302.138 mo
189.96 302.138 li
@
173.628 314.583 mo
172.668 314.15 171.948 313.479 171.468 312.566 cv
170.988 311.654 170.748 310.49 170.748 309.099 cv
170.748 307.707 170.988 306.555 171.468 305.631 cv
171.948 304.707 172.668 304.034 173.628 303.603 cv
173.628 304.179 li
173.028 304.599 172.596 305.187 172.333 305.931 cv
172.068 306.687 171.936 307.742 171.936 309.099 cv
171.936 310.467 172.068 311.522 172.333 312.267 cv
172.596 313.011 173.028 313.587 173.628 314.007 cv
173.628 314.583 li
173.628 314.583 li
cp
ef
180.528 310.851 mo
180.373 311.522 180.084 312.026 179.652 312.362 cv
179.22 312.711 178.656 312.879 177.972 312.879 cv
177.06 312.879 176.34 312.591 175.788 311.99 cv
175.236 311.391 174.96 310.599 174.96 309.603 cv
174.96 308.618 175.236 307.826 175.788 307.227 cv
176.34 306.627 177.06 306.326 177.972 306.326 cv
178.356 306.326 178.752 306.375 179.148 306.471 cv
179.532 306.566 179.928 306.698 180.324 306.879 cv
180.324 308.475 li
179.7 308.475 li
179.616 307.935 179.436 307.538 179.16 307.286 cv
178.884 307.034 178.488 306.902 177.984 306.902 cv
177.396 306.902 176.952 307.131 176.664 307.587 cv
176.364 308.043 176.22 308.715 176.22 309.603 cv
176.22 310.515 176.364 311.187 176.664 311.643 cv
176.952 312.099 177.396 312.314 177.984 312.314 cv
178.44 312.314 178.812 312.194 179.088 311.954 cv
179.364 311.715 179.556 311.343 179.664 310.851 cv
180.528 310.851 li
180.528 310.851 li
cp
ef
181.932 314.583 mo
181.932 314.007 li
182.532 313.587 182.964 313.011 183.228 312.267 cv
183.492 311.522 183.625 310.467 183.625 309.099 cv
183.625 307.742 183.492 306.687 183.228 305.931 cv
182.964 305.187 182.532 304.599 181.932 304.179 cv
181.932 303.603 li
182.88 304.034 183.6 304.707 184.08 305.631 cv
184.56 306.555 184.812 307.707 184.812 309.099 cv
184.812 310.49 184.56 311.654 184.08 312.566 cv
183.6 313.479 182.88 314.15 181.932 314.583 cv
181.932 314.583 li
cp
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 16.0.0%%For: (Troy Carter) ()%%Title: (statistics.eps)%%CreationDate: 8/6/12 12:04 PM%%Canvassize: 16383%AI9_DataStream%Gb!9spKf=BdkH)cJ9q82`<;BWR:m)R[*4Dbaq=^Up[dbGO71du<JR!6@:g@n3o>;8rb[=WSds;9];n#a0!p(rYP%%)U%R<.Ua!oP%fp%Z"D'f]`9r-6"p![*r?RBQh[Z(HsL7ptC,AV(X#&bnm=]5`RXjh[mq5Q<!-_8g]XkPG9)QcbY-$`U@#@KE7?#)9#s%*tEeX+TM%3kq^[<pGZJV:GCAp6)_EPn5>oO+j3Pj7VX!labSL8K*nH@.fZ3G0u#T<g)N*K$D?l07]SCH9LI@ZitTJMhfp]@M]$520DKQiNH\D%L8C%dP+jAo`Kk%%94i';C[^q6Y>ai=>L!%jen1i1ri1-*Tjen$K*=,8cRO7hO>U5&]_9ln<-pKS,urC"'K*JsSX"lEP#ATNQ(\Ob%:$T/V^7'dJbIACjrDTouB-k)eX1m.G'O1B.n#ZLQ0RR$P,`-uu-`91g>3DV_mm0GM\nm8,_q&V*!TfmH.uc$p')>=H5A>]?C?N:]%K;icHILlr=8W1%XdrA4_[t`?\dftie[H;c#P4WcteR]R#:e+DaAM\&c>#I(Goqhm8eS.m(5AA)=%9C>]#=P@`?qQJAp%NcRL%W]<%h!W[!h.\d4Ud[L=pTp1T^WleVrIc?gHF5*c2iq,2:`pQ'H[&"!3<&u9CKBbO0*?Nu=@in3;?3_1QE%VJi'Nb^R#h7o$ifp8h*bFu%J#\BuL4Pu*NM"06LT2j'<E4FHWq]Onl-i6.hkk<0#*q"Qr+-^IatU&a@8n_h:><cD[Z+j7pkNeB2O:Xc/;<!N'2''u=K5KA2iC+P%;Cl:F8d1hf.Y`Lm="=!X;PER+*n1,:rm2GF;gacn=$\n*-^MV(i?sr.1%CCSB/h+5`%j:rr5<Sr9[J!'9_aIZE('JX2,QK`RW1aj%M;uUj#fSN,RhV@!I4U*4_G;^]W?@/G&,)OQQsu1e#s[[DFQBh'[-tA?Zut^qT-IZorkhVn55`?fkR>m:dq<dBn1U*EnaRKo=J>3C%q!\rHiTTM'j!X4S6LYX]iV;o+c6B(tMHALq[`E._Hd:l2cPc*l`B'<ZGiO%B,H&5qT$r/9G%o3K^1[iP&'Nnp3+_+5n814$q@pu*%T3.!!2i`sYKYEA:=9_9^89;r9]L+DD>G0KjBpd?VV`*m%V%cN0S1jZ-;S:K8;685i.Gh;lHq*n`B]$'/Dk5HShl"fb5MC2$R?X0)%S5\4i)CjeiV-fSDkrX_Yk>mqU31aC/VpruUhPEGagSH(=l0^*D/A(M(4lVjI[p<h>^@M9oG%nY^9j*e'5Q"0NU<NTc$@Uq5V>jA3%iBR&irKg(@3eb(nks*Xm^YQZsT4QF-QGqUefY;g*5&pVNIt[t&mJ`s^''W;N6JT?J?b&j[]79'0an\Hg3R/XodWq\(q(MR\`i!K=%9fG_VP.)!3QLKD%>q)`[IcjLK79@\GrN;NFW@Ra%54ANd;Na`J2gpn+D>kR5eeQ0"4i&%^&+UM0JjT&E5YKa8qNUp+Yik):al3#]%^P=[3s!tJ.UsC@/_XI7odHS0GN*4$kGouSmksJ%jBl3VLI8\;,HO@`N@a^iH>g`7ih\D?8%A.#9U^b4B9nQq!%m%@$OpfnDQGX>Q%DaeKk^6*mZ#=.;Qi5D@IDc/,1>V=J!p_]Z7SrZmWnXZDslc,O6)gOJF:Re//2Wg0%+Cg0+nWV6]la[`eDE;E@L3^u3Xf0\BnJPeq%o[[udlAgsdL:0n@5aKLg.Xt(Ef#3\;>?3Gs5Y2^2>q"iH8p,utXE_boh["DpYAE2hYq19hZ(-#%Y\fLL8.-c\Cu4Q]pl=)F`48MO%:_G&kci`6\18QB_bMq=K3YH/&.J@)>NelW&aMpS^+ep.sB28nW'IZ%WNJrqRrhBm%$Ur(#"h4NQfsDjRF#k@iL=f?Kg,i&>r!b7p%.$[^n3BaPgVT:_gqr4[bF'8%Y+O!rAdN=l]`p(2Q7BVr]1i((KEVk!<8.A1fCb,pi0IlDPr6ddegL>(L=4?n'=5au"Y2PP"[>e/3%lIEQ>6u^$(#^sjpR*IbPS4bmob9[L\Q1R##c`@>/@Yp,'cF8TW-IFBLn%:RV+905Ui-1CqD"btqOPX5gG.ECRYtnhn.FncA=mfLs%*2_blSD]YI<$K4.<6c#W1nt\<BdC]LCeV:T!=!"md=fL#/sS_V,0,Mo'A>@n&hjRCF"YRr-h,T]*K"RL$cNV'=[4W.>"FlN7(L2)%9hH/1FJ;`*H3*K_[]*e(r[euc;TGV960bD5b,CQ!o1ea%NfJ0CV&cSp(h[Nh5,p,1,4j[=p:Otl:W0O0bb-Oa*i$$XTgks#KDqcj%54&<F-Y91Rq<V0B2\OnH\0XE0KKY#q;$uE,5j]<sTm5RnRJ(7c37^I9e^p`/%#'b+CO7V/C31LVYL;*)2(mdreO+\`1<Es?U.2!O%6>BFI4n8?D4m+jSbjt'!h_!%=[A^PPKka<,='TNuaqiAk&u6S-`AG6BkmYtn&8Nmo1CeH)RZ(2rfQi*@&EI(GH)Z4F\jY`sH^DI'%eePCA<p`$"NM8j.obcjfb.XsRET\.PbH1.f[t7"#@?OB,[C.TJ`L9JQbCF%Cr(Y_DT>++^KrF16Y!e.(.V&s$2p'uj=#cb^(a/Kj%$,^TcAeC-q,tIjEm>3k(9?OnZ`&`=em2pcZaX#TVU]cuORE+Z\Ju^[r)2i"`Zpn_tfop6\AZUYk.=R4R8]'j1=43jK-Ir=FGb39N%8&q?QiF?E4JM"7.P.+%)XjN2&pff/?-=YK$Zi8X+ZR=s#7pE!`>,\9Tg69:rhfZK_SUL'f[0Tfo60ptZ\tN"<T2M,O4Nd=>H)agA%60XotaE78o3rKe0B<I$'r(P/U7W-U[OSXred<e@.Barrdm7Bp;m\kP9f""gn;R\pi0eQK&I3GbgR$C5-Ufri1#["FDYJPU^M`-6h%'5=#S]G\(nK!d`.(Y=?bF`EnPcdQ9"Oj6*39i5JL_=XEoD/@3cL'_=7d*h"21@(:UDb`/2S6'rnbaU,'C_5mkgu)YU_I]u&_\CY/%\3s$\5,3$ba%1?,,Mt!#X$`C-MQ7siqOk6Q4ug#j!P?:&5cI;tpttd\#4,uR8U&bnj`8VB/!$;TdD$k/19/kRLO)J.nDi^b=jV#7%^85-e^?^+?n=RpD$h(=77aQ'8:O6o'AS/\0#d]"c9f1B"ZM6>Q;Fgb,g/LcBPg>9?)lijBg7q[\pI].&2jQfW3;7ME'h[XUI)9pa%#2GBX?5SD9X\iq!]D.@h4UA6agaL:)-c#($P>f&.GI]V+Ga']1)N'!uV)d.fYOm0m#*i/\6VSo6$m)D-<]0W@k]=]S0up\Q<+c&C%E8T3&4>Eu!elj6cEDC^gWl685j^ZoK+OQI;_KE%\P1lF2QQXUNa_KuFk?"V.aC>L'%%L7p^WnhRFJ)C*181!8lZq165?(8_E`V<X%Q"f[!V[^r5g^_gnPfL9>eqh!mZT6t(ij?]qj[ppRh6AW_UU'L4dhpmQX8n0*#Fn+#WQ+S@'0.33*+LiYT=[:?Du;*Z*sgGNkSroq%@^;+sfJD@2qgs44)992i?]KB9G$\60e>5$@*H')rR.kifeF&RW(a-<3Gs<]/H=[JfJ_3.$MI#X!ds(r36-8L%Zu,&b8:B9sA:7o!%3j3_cgue8\kZi-=ctfsD]1/PM+!,??/HL(((j6$DM->ticDW_M+tCpPoAJ.i`*t>SX]aW2Q&hED6@7ui#20E@kb4#[Fh0hr<&.;]%TCXpsC#ul8n[)qK3hUE=[Y]Gb\os^p%[T7<k;F-3eGgk6lZ>mY2c+MZE+G+N*E"HN'ih1:juB)4$9+8F-((eq2M't),;*cJnut.#%MH$]C5IH*Hs*5LrjlMk*jHJ/C)P=F[AL=hZSb\;qnas:p$^Km-c:?=@"!]./N_<VM\G56S7B,Lhd@@/2C[4$dWP0b0s!H'L4EAQ9%0l?#S@r;^rO]ra#<:;WP(GrG;qp+@oLb\Ca*aO0]:mk7>;nl_VP/n##%_1Z&=DgN]l<#tX8uVg6Vp!=dgg<@^'jG%TrM@\]?CZ+@%NRg1>k'SOPc>(%b2Vg\dIQnm]TQIl()`n[&jGEPSdeJA`gRZnkHaih%8n@LrXlimYZM)^^FmB!*HVGPGs+)9`aUHimPW\D6?_@Jq%m?G^nlg=Mhl7.d.Vj=+hiD&m,ruM#\WV4p.I(?FZBY!q7XjLkkeN/e,o/6?Ug1_)#qP6u*<]`kSGA9=?rrZ&sJ17sF(D`do>,U*Z%jH*G6&RPVP"b]B#)QNKpP(cB-q:]uVVE_a7Vm+#1S\<rNTMDf>q<<>RcWdN+;m#eV;`b'p.$jnjdDcK<Tm>Fh#jQ>b(%A\sn+?V2%[0!2B>C_M/RqjZX)ia]@VqV-K^B?D*nD%`74r]6\rr%.\2<s!NQ_"?$8[[$J^GK\<s)rasYLo&./AKb%aG$j<A=9e(<-p8?#PI7T%[8X7tEZ\&l>J9h>["%dJn'tYG[D(A)a#&)8;/Oq+0R=fU;Y&&2:k&Vq0+.I8j_1W3djMY.ZM/:4ekP6!S#u]IacGLT,'++n\,+S;%h9RHi8(FeHE[d,4X+.MXH`W$f4AJGaN^YsR<<^0P@dl9RqU/A-_08ttO+6-/*dmbcT`69K.=%;n]pFnc!5:KgOQp0d3@^.m'?M6d%&,q`S^sLnW$q/*,[8DQ:,CMe%Nnmq>elOWlX8bc`D2CE$8XpKbDXc53R>_6H:7QmL;3D!Ubdo@Q8!GO.RfA.oTctR4UiP$f^'0iA%-'((c)[HOqeR&k,e]tqj\!5,(_P7OH,U].G`&:1.<1E>@BN1M/g;l'C6@%?gSF=t-H(k]2ZWt5nWW!jhN$Z=4RC9(@F/QE\j.lkW%#&l=b2ZD.,ZJGdXokqB=rV*PMq4nNt\37=$S_'YGKR_CN^U.<uiW0/MaUI_@/LJp^J/@gT'Z)aj,JCUHT@OqDX]*q-l,ZGs>K7eK%V[BI4pQNej?^%$5'L4!s8_3!OAd%.;F-V/7UE[3h:dEon.8@6:Z?28cqU\MqOKm7;Rl3?2j`l'e*RjYk,!6,,Dg'lCau*Q*9tki:%Y>F!RY\rZ^VHBO7-'dP4j!S`lpJ.jAN*3SfH_i"t?!$^gP-WGcJOP8&$nU^d5W2Ra9jX!(5dB&@VqO:Tn0GVE!do%:WHDtsYR\up%s6UEs;LP],l9.%T);3)'=UD$kPNQS-\+8!]nCfP3MM.s^Vt:-m!LK2H6*N%_a8"\/rV`M#m>akt.TZmD<aa<RNW<@*3$tTZE>ol)%4u,in/6f*feFLlY7VtudKA'O:@4S],\@Wg/#SNh4D8*7FQ>A'C9@FTi7.J$?euLh?asU+/psMg#G:X0]R'".X(uBCeQL]NP[H?DQ%L_R+mVHYH%!unF#>-3fM'i>Z5b.<flY\4Hf+QY_MTbrY,el`u[cr]&//NKQ(Q\Zjn`onfdoCR+>OP\j*2,5Hke6B"3)F^n-=@"gO%:+YVO&1+uY46WWPRQEAP(U!u9(Hqf-c./pla/T?I^0Q/8or4+XCA61)b.?t@cW@+Rju<O4]`$H*4j3&O5sU*H\.SmhR*>U&>055C%)"&DWXF^eCNT;&'?i`Dk"`ksrX]2q2jWpO)l_i@52f$MV#hXAJ_9?\CecMk:PHWcCq/!KG52c[l'J7.o#qB-I[P0-;e5)(bO>4k+%HWYWss*Q-K'VkPS@jK-]W]2"Gb+k:;//FR):fSOe^sD$(,bdqFNDlA1NT6X;)[7&U:@@E:i!;@]BV*%.rqEJ@KZD9_bte65VoMX`%)KgP?M@%ccP^</(2dSRNk\tS):[t4CYYo)AfmWdrg?GaI8m<kC:Xp%L"PsS:f+\WU??#0/pXj2gR^EugB`N@N803^-??/Ac3U4,G%l\)b/(h3[-!(NhZ4*Z-^km:)aR$`s[0bJ4!odU6b3.sM8<r`3<kUZ\OAp#[$J!m$NGV;;;?L-qWXsEmkFL]c$@]0Ze)o,p&amlS+%`>P,(s(f4:IiU+J[9iM@VJ+b6fOOVbRN$?gW*C`E/]2.j)d;3lib8k^1B5j[s);+Xf"3$NMVr>TRL5')-C#+A$&sF>nZ&;?+F8X%%5!O>QZJM_4&-TSVU5NjAK3`#sT(>uem!;nYgT@-ql@JF:lS($9*@m"G7h>_r>E=P)FS:I,T,W15D8+U#HWGK-2.),cVc)u*#;ee=%,CGrs??:iWhW-`JN&\;lqgDCYRW?'?`@?IO<Y"Zag-!+#qPVnY@uS#=rPD4&hG1el:bhl,fr;Z;^?'9(6A/QjV*hnljaY?$H1JN"%E'm:!31cI;kI($;mq=(i8$/BG0iuI%:a;%`mZmp%o_qq&R*E1A2#!p@S0_[J2B"\og%A7#^NcX\Gj<kahG//anD,#n$"`s==+>MP%JPNWKhC!FBH<ks&#mCPC0"P$VZeg.c8bj&e%4(S'X%[lBB3^lu,'IH>3Xd+Vp"iabaj&ir45RAI]`%j&R0E7eHYpI0AY08bYV9'j%EH:]/^Ne+]]p8V>CSfTT!Io9<i'CK;MjQ;jh\ne6B18W"]l($9IAJfal/6Y>J0aVA<o2AsESbEEIc3jNc.JS%^W*FHg:PWL5uZTW%G?D,+.=a1TFZ-A-&id-mmQ^Brh?VY-Tqsr+E1Um"Q)`lYSSSBrAA")=(5lG^[ME/Sj#1i@TtR7570:^6XjroV3R@^P9-"T'S`iY\%>25MTA=aSZf"qfO8;jFH,t)Jm.e=D@RrhPc/<E<Dc.?..rn\>)i05YKp5GIB#1Q0N[bg<KAVOT,fqj9M[bURM8,oM,SLj>AF:#1*%@-W(U-B8oNQ?:XK1S0QE-r(("h0I8R3d!PZb9Lm,$bh0ms(HQSLQQpSWA[t3NM6U)l?bFPpfNr6"M5he<#=/@G[1Epr=_?6mRt1^%no)$;U1IZ"IN-aCV?cf<O&Cao&*BigD%FVg.i6TWU9MF]!hC&PGHk*`pI3#p>Z.*7BpUR6]E9G:X7mT7_WCbNPmeiXf*f6s-pf!d%..bl$[0IC3Z`"Abb(*qA@B[hH7WB%;\_?:;bbNdaE7IU?_ED<uK?=N^-AEE!FsBIbV].A5$Jc!IU:4_fqq?iAH*g8Wo@@YGaZD')%rH[Q'W!:LD(C'_3/],;W'$k^-<?ij%Rr-a5X7#DEO@&1(JGn2]VA^ujlD>G)=$t!]Wm81fnGIL:h%)WsY82[8/6(r/\(-/G3J[sB%c!/=!P4S]jB0@<).Kq[:V)j'(Sh.#JQ$a)rqLcpF/a+fT#0j&MN\3[gQNX]3fd&25Ou6-7U'DEL[9k,R$7X>]QuQ$^onRl2EL&M2%Y=G'"i&5``lNgDRmAKam5p`lHoA)F'$r@AnSSGLQ(V,1s<`3[oC[gm@QqNj*lrc7B]CqaG[_S/W:#9I,INP3;bpWNg"up7&@*K!)%?]Y^'A^J+'6R4s/G_G/>leg"o_n[kVl@%1#<I;cOcL^%I1G,bdlg@C=8c?E3`_!<(<dX'Ai1*gIW?$TZ<,X^1H#M?P.FkoNVHNSq%_Y4f@B`2SAr`\W'cV?B&DL<j8Dj'l+g4H_'Jef-dQ"5>&C15u2M#hf]i9l<3LGQo*'WJ9lTr9.C7@e`k;?!<1D!Sr@f[^4%WH1Q2%RI8?Y>(j'Vk@hk*Z62b3fiRgu(Ju-1,ro*l3K&qF/3Eo.[)R?HU1FR=b$-D6<O>F^>d=/'iC@mc#0#bKVtu;=$qY3->;r97CXACX%Y`lSF+($4=#lQE%>GAeK[OM&RN4&pEEPBg[X'nta9C^R3pmShNgUm>"]0UWeA(1?Y,):+LJhan8=`JZ;dRuH^T31F=LAk^9DI,Ni%Utjtgo&Ae%:W770[e=K*FWUI$^6&Z$lK3Aq:jTIW5Biu#f;k`,l$C6mW[t<F)BYr(F_<kFS=;T7Uf30jT51G%UDl;&oMLB6:N+q9%im5bMC?b5fPZj@_'e-V@SKZ8DWT*h/XfHOSTl[&+D=dO:6S2E?A_\,02f$T4Q'V5MQ!W:Ed`u@)Qq2E^)sbiGV=r<nf"TtrY]eTH%B.L)'mBYNX]9,]EQ0\%aH@Gf]?HAU1equLEgs?%2FE!e2Q<LkIfM*r%b>rBJ-$tBAZ4L&3/Npi5WVQC',;n@/e8]0nim>'/;uB[H%Nnia<0K/9gR6U+i&ns+sDX)\RUs*[LQ$e:k\ZW?BCejF]^sDD&oK%>)ikmb>Ful\[bKaD2g6Zj6)+CQ`-[7FqV/H7SA>#4>=d`[W%fU]LsI;r[GWubA-M]:EM=a)&\UK[!UX;TUQ6g+I=j36+'+,dP?rhP#s[&(Q-+,l\QYXWi6)pc'ai'u<r\)$;llP!qXE3-h*k;H@u%[sLE#0!;p%CE\ZUe'jXB8%Pm$CkX^H?/J2<JoMd_kZ$Z)2:GN+:P'LM.W6t%ToI>Ig3&g&A\_EUlW7eI]5nuTd`V<<;ETHK3Rq;]%F#s''_AYS*Rj3oU<nOLRS]fdnBbX,/\a5m;gWk63ncTo&mjBFK?L)/UQ@g,nn*D@K^1Q1jN?`.[3ip_qc@[EM"ZLa,?C:^MILb1'%'5=r/mW?';$#=Wq;eaB5_2W4$f8H\hMke'WV^b\0OnLX_cKbD46:dlkFBZ0Gc&bDu+/MTqr7l-'`Zd7O4gR>!;#@a.CioQ@FW!6g%g#Z2!c"["AZf5D^WVJrn41DWI`F]q_`k(d:`AuIbq\q]N4h>9c?8#r=,;o.1p;Uq`BM9E39gLi8qIKji\i]Rp*F-?]JW1^0C-/,K%-IVeEn+KZK=LHmPl0R@*-b.QPp#2QAfh;Q-HG3V@FW6$[nMY`;BUh;@2-Q.qV$B)ld=^QFo@M$:eY#At_H]:+G=0DsRAi?X_\t\&%IP5UT65hF/rnaqA7FGinm2tZ=deQ7DUOT/d%gjJ>hAOaiok?.Z;4t1nUPo!39)<3M&A\kf=-'&7[VD;"pTR*tV5NlMM):)Hk3(8&%H0VF(CH&3>:?Q;9RPjrCcMNu@d9\6%[*e/<Dqf+CXc'U:9'8\r9%`K.?_b[-RI>q%eJ:!QhXPBMQ.GU@C\6(^n26Y`]:F6mN@*(G%iEG+2$A_W[Huuu[N@ss`_P:\FBo5&<HHYD7=k`(OVS(tJ$8OWneN`2&(R\6#B3'oe?;Xg/>do`2Z-cg+UIKQErH`)])Vn'^)GMZ7%it'QdcHFA6XDb1i>3k9Gg?@\<_1>[Q"-3D/["s$lG+MHdi_u]JPu:YOcb?<;7TOtM;sN[M48<Z0*ggP,YD#.,!&5JE6_4qVU:bYS%VU,.ho$+afYb`i1Bto25foutA2molfH0O70h]P].l%%qckqMeb$@BB9*P^s4L-9sLcAJ5Whc&-]\QtBD/uMVkDr50'o<#o(fMc(e%8:>-'T<>"9i0U(#ae&6"WZC?p,.11<H5R0amR`c6bF;p9&#A)=G+N3Fs7qfLgF*lUhEI'>VTo"BVgkN>X.':M;\rqfVKDk$D(4Q5%4'R$@=B381DFoo/UE/ptYleLX0'qmIc`7r:ISpYCSj#rnL"V5Rf[DX%s4>b,.)oRso$O@5%se%p?G?EF59'N"IqYFWY4Z\L0W&qf%;KMGV`2:\--^36Rn8pU]b3j(_d&2?7Vt:n,2/VeXn5F3'%OB8eo):0+q>K=,lIW$)[(*bfauhkLBH-?_lhP"`eNKYTCLb&K(0n3:%?*1o<V9_.H;R"X'Pg`jIhH[=+^1gmekH]2.?HWCDWY>ioQX[4]gL#WccJ%WmVfW#fUXJjhQD`7n@ZBi);0V2th7.UhB("#\c@HLO%og@LT&?]qeNmBbWX04b6!s_Sd_:_sOnHeI+PVT^sZHSl1j$Smaa(BUlqStpK/_(2G<4fjODfi#MRe&BD>0L\]WgjlSKes-knT"N3%)V4+N7&/M[[R]f$cH]1sNHVl`Md<5Xe^LJ)UKr9fXR\ii)]nWHA].'GZ^F58D79'-,\KI`-.E^Y.!Us63SXcsWa4Kp01g!2KA\C/%Zr,gEKJn^Z_lMN?N5a7^/\FsHkgrgZUM,^AU,S3(MrZU/XM=UDFa@VU2,Cq@3a[^rLD#?,>`DaYG'=M$h#%I1LXLe,r!.s86KDS2%aq+:3F14S-rRK?uZ2^bAiL"aJIS4"YOI)Ju>;e.YVI1"1[`D6?MbU;4<!^H[SBSFGHYCTpD2EiNS);]DC%?i(q:k4nYm-5ZrfkcN%XH5c]]tI,UCtcT_JY08_p//LQ\OO:d7L+Wc960jB]1q<>CqrB(2p,k.Z#nWmfV(2f(WYqLJ-(WM"H%FWj?@=T1f,t*!Ku6&G,%.\%'FF$P;L++J0RV#0@*nRQ.FN]T+J!nanI_BUE-s#^GC2e[p5RGp3#,_lJGB9dqf'p[4oV+@`&^[W,%'Pt&sY8pUWst$qWJ2d(PbCZ%3&.Keq5SHZ,Z3VD9^LNcm:aX_l&&AZ3+Y["o$hdjbX^\6ofcc4&=LQ#S5h!Dmqc;7,KhT`ZE6=<F1p)s1uO<6W_]FGR>is3@p>nK%l*<hObg-p%%-,LrV-[hb=@YWbP7NC0&p+Su?2<p:a-ECW%d$CKp]M"B;r0`p0sj@&2`T.1QD^L57R(W8g"DAYr)u0!a4htKM0,+G%E^qu[7hn_a%qV`krVR[!TL@^Sq.PQI#cA2J0V*.Nch_I#OiCe'9"@M9jtU+6_cUZeM]AK4LQ\Wd'3Nq/2mfm;WW\=JjZC$/a*5kP%GDn6]ELk/4L]17,"LT1'Q]F@P@-\gc3AN%&=Ukd?/'@fdJLiRU1]eaSU%lGb:P7<uZiT4Yb!8a&98*f='(IN+Sh5]j9R84$DaO_S%r%#hqF(^hKbW@-)GMeX4>+K=I(G0r$/I%u]l@pab5b$/:0tO^'m?=Q'/%pfhpADXBbLN#kSJ]qACL,"I$`f(74#I:Hld)!_/tjX&%SPfeRp0M^9*,@1NV"8bD3^QoZP8?T3!'WV[+q9Ip!B.\PK*+fY+m'<s=S;2n16kG=5IJ\-WlVg]?("cf%.9H)/c.#ES,9pg(rcd4%Fi+XYD'a6Z0oYoRg9;E(OY%W0l"thF**8tUoaiU+r78,g)cLJ8mHse2=4'MU[)!)q#?PP],3>2*?jGBm0VHak$$#&:Y+b1mj!`6/%biJXr,-B.lmN7CAS\]2N@PDsHZa%CRiF<0/$U[V:A"_H5FsIZt.taY5^lI@<gXW&S2GQTlSoc6?me7/l^4TEbDke8Fm=IGfZD>UT%,SK/b"QXCf_G7Z#D!93;?'#-<Er6,(5n/kaF5Li3L(PM9%.\&_B6JM_^4DjGFK%2><rdJhh=Ru-mUQG#Oo0]PisUD$nb![\K#S%*%)&hal/-S8_C+VsHH`;0E;sMI4Kg1h/N3E,P\@,t]=D*Fc%N`sih018%,gsRR/!@l(O@<p#G]H$SL1G97ZFgU;AQm<qia7%=((YE5%#"Fs/R?abN3"_=p=MiZrKV-j<Oqm[=p(Nlg!sO;Y!J<bFW0(0B\M:uI?[M)#jnW?Kck:="*9rL]/WCG#TY/#EX^&<S*fsa,$8L2s%.%P">p3sXe4a,UNe1ZUpICL+b8A&Q\(U".CjQYSnK@c@E>WM'E9PJY@,+\9JTC5X91oC05TY3Qhbfl2'?D?/dOJ@GYIS2Xo%IOle%aE1umE&34pgtqe*_9r$ho4!,s*',I3gtqe+^R3D^Oj7$WV7_+M(f2Cs:$H!<d7+fM!fcUAl+7N1!2.</kcd]rkAZ6W$aF7T4'k?7%5S%9RgmS[KF`Yq#oUN-"$f?gAbBsa?ZbU^W;2)'W&_ADK;/MqQ$#<+PoNakt$7g2WXc`Mo,Micm75J:%R>afaNuO"t=e!b4C'e5,%)dL_+:q[0?'.<H(:1R=U%5V$Jb;"=,LnXW8A_Af&B\U/Rp1\uihkdtH++&^XPqZ%&cgMcTh-du[Ma$[^pd.jR3ig2%LIue"cmX_T%Y)>L4P@sr#M.+Cuj3#FC9B,5GCl*o<!bUOj(4;?7K;ntu)Vku[lj=A)2O$T;[ZiHuXcC['\.HD/!T*;&r=DS2"7(dg6_\?>qib+A%Ll]Bcab;eKk_Zbaf/XT=7CE7ECb]ZrLb0Y,8'\M>4L#9oi&Id1ca2Qee-3'9'+nm'<=p;>L9<\[[*5[*>p7C6ji@h?:t]5"RtrS,%0B;JL#SJp'mr)RBUV5n/VDO\un"usY#rAfW:t%V8(9al_l5=dR"KfX_W$>C##M'Q4j&%!sJb^f8/QV9(66Xc=#E!_PdB="[;[5%)%RK6_PnbB89:Vsi\$fAAM=Q?Zo+]K4khZrD_O;KNL2PPUQcD`q&:I9t>V[b)K`Lrgm[1CB03#m8M&a<#7TMF8M2n0nh<#\<m_>jle%:G!*\%3ouR8d>#nqmGBTAk4R!A.r>_3ca!8rr.Gm;slQ&:a*3/$$SlG.MDgk)7KAGcGGC'DL\1K<&QRWL\?YqG%=Pq9%J;CAjjsU%,&UKtkOLBgPo6rT.X6>BOeM+1m;ucB&h(U1[iEUu5u*kH\@Q#?W?pHIM)b%d:abWk8hGl]f0G?"ls94D^Mrl)%n$rI>b3q!>;84T%2i>4U$EMT"k%1LA)m!iU&]]ro.#$udfjRP_ruORZP-7HI/T,,Cbl6B,g3i4p,1=EFNKL#0iF-.ZF0U#\`IL@bpqYp!.Z]/AbiXFd%bAA5KCc<uIO/;*mT5qoBfm9TeDk*%`#$iE9R2ifWa:(*Q@q_q`3cPg5Ig2Hg9#*DHFO:tJDRSJJ3HRT_!?$!rcJc$Kkb9ls`,*80%Ep05RkT[;9LWZ<KcCbiW"in`YMpA!eAdaWj6Pl:Z8%%"E3HWXdF@aN;aJ"O;TVH!7/r.`a+ZUb6c%uhte[Ihf?$HS)GDn/nM"F$3%#&W-ZCdf<+F;I6b+3>UM1[Ju#C],_m7!_YkL>#9A^;bA$nqNN$^_>$Eo4QbKmkjXG>Z"(;Oo+[#f(^F=)mg,+A:4BHOVjL-Z,c$g%>`F=,a65?Wg8.o>O+SWX&RB-umGq]>k(\sT%qWt6)Dc[FSNlO2DZui+7?#J6j`/l66q`@FDX;T_%..rd2mgA+2Zo9"L><1Li9t0]%gX$PmrW/:in[tY`a_pXXJqQ`h5YSt*OHJ<0Uu]$'>&guYD*0=#T*[eM`<.k;j2nB8j_%DC,^,>bFm<s]n3dDVQj2XA7AV[J'fa)J%U_4:(on5n'!b^B*+^2HMhD!&0U8@54h(_B6>.A/XZI34DJQ]ZPk/7gVHk/G/AXl0LnTc[h^c]=70k_;nRT9ejK(5>Y"89NK8*tjl%5'8'm"6P[+nI=1S+$Yf>E/1rjo0,P`T.bdVL`"3nM"&Ok,hU'&(\*V@_q3+f*ot+8!f![*I.^qON"&=m)%L0A30eak^[ubBcUK:F%rA5XD-C-6qj,a$0B+2>p*\UkQ6<]%AJFbP;fd#9(&!YB.4$h.u^cpBfc<bF15lQOS41c5P1PU4FZbol'WF2JO"WWN]oj42W%`?D]%7(JBs&hM\+^6Ofd2_6f;/s'AP]KZrJZ/Z4#Z11+_Edd4)`,`ZpBtaW@m2bl2=&E2t1Sp*r/,$^Sh?uZ\OCRC[,=<js<9I(dMg</(%)iu1$5jF#87/;$<NGO[Sfa[%fQdlbS3$.Q'RpC[?+h9H'B6UlT:.463G81?R_!b@E,_<e"ELndC-\;PGC8cq^7$hj_`+8'\.O*oC%fbL\h_aS*`?BR8H]AE-LA2#<DS;<+s@paRm7qC,;Q-;p`+"'[JQu9gun.D'bJ,a;&m"c&Y:!84YmYIKi(,I-JFe04;6Q7s.K1TaV%0-bUmLs01aLeK"!IU77e-<>-s[p]h06`&s6mZPZeN+JSj2'<DeQEe(E\j9emSA^\"""#bP2sB";V/BV,0iCMOS/\p*m[Oa@di3(9%o5X".j(#n>\fZ"Z_P$NUgq"%A>B!tVh-_CqLlkaT-\!t9ECo;&7+a*:"q^kt@3JH#-&;#oDlXr#a>s8]._roX6.jjJGk#5'HoS;_%`\ZU$SI[[Iq.&sci<I]^AFe^C8UCAp\Dcb1cA.=m6ZnoH35J?*1?'XO%l`uGd#$i$7I5cgVWJ$PiP_4E!n_HYq/CEd]K[WYdeRi*%=e$/NLPtlF_No>Q03]+2X@EFQ?nZfl4crR+*7)'PYpU/6;^T<WJFBf].oq45J?T^X@M7f+WMONGnF.s@U`Q`24Kpb1E>VU"fK&Z$%(<2#ZXqVXcL>)/;H3S?8*r&i!T"tuq=R`Y*q5tQo5e=-P"rgm0FXSf%>JA>k3]/5_f&XA[5N`H@A"d+jkItH(PD3<%`Ls=B6PJ28%A534RoaElc-AM7el5>`o"1?eC7+gua<#::]VA6\eqQfQ\i'F97/Ol>_#ik7*<J7TM*U8`FeEYOtkQ/\C&bp^9)6(@uR?@>m1)['8%h\4(%Q)BoqP*$+E9I(htlPVo3'l04*7Oi#R%6b!M\$%GAIg[)=im?1WRuG!=k(&!GB>_d8fPrJm@>&1$Z$5gCV8A'm/C'7smi^Z%%m=W`:SjY&ubEXUrm]WG'NU0^VPmS=V#14\piTQ;X!U5_VVo"QP<$.iW8PK0N\Jm#cL]o:7K6W5Kh@1*M:P<r[8dh"ns3\\.+/hX`%p)UXC1ir^8qpc(]mmaNiY5O+a%piKHbso`![MVXs;5a#[.*iKj(RFeV34[_o-/V;O?A];;5tCB0FUe$G3S>XM4n2_Jbit(S>5J#8%L6nVV,gppgpg\&IIoT5qPtlhh"la0>JbXM*iB2&:[hC;q9J,]tl;I'8dq$U7^%EgtR7Ed[f>Z-B/A\O^,eKW.,SA4k]X.%]9M<#\%eXPokH(I%p%*Pm(k3o%-h&_kL)^UhcLGWa>PI.:X%(h:nA@IdEhC)^1m51j:ho?P)GIEgKO17UFf@HqJW:.;W]P9Ja_bU56f_W;.%%SHi7N_4JAQ[Fd=n)M%;$.#hKJ*&AU_]#XH1qG9@7,GuY^,I(dB^0Kh\-PIj;H/D,<+U:)2lk$&bG9FSNG%8L]Z)FF4C.RHkm].'%FhF<';.JePnP_Q+)oq:`U/$)pZS&o(Pjp3PW7^Xu/[p-Dm)eU\J"sY@U,l1e&&$#`*?'/0NgbXYA$m%r<-.8pX74W1JTnKn07F)D%qSp-=cJ,0;hbO&?h'<dnFYTY1-Z`5HA4*qjhV6K:)b3$fqBE'to3WY"3!qU_-$#^>)gq,/TZ]gaN%aBG[?4Baj4lF'([2$>@Yi>`%dbB=r(CO#JbVT.u3lg9M=>jHHHSK%N-:Tn!O<5#NKc;P3/h!'(nG+cUB%$q&";C#kB@@%GdNQA!2Oc=TEY9&3V@/Ae:GeOnBHtVQ%-\TF]VAlm4EAH3h60gADCTlc/ds:,@k0eseN/X3"(VKH&l"ms#S<6BTe&=H4C<UKT@H5%b9,G)f3`\.EO>9FQJqT?/V@2[PYZa2`%Cq?9E\pt`@`lt:fRQot/aGFKW"]`NBGUJkQ(R.Q/O>AY(2Vk;K)_RUt!6-@M9c'$e2^HCPACC_DdY6aaNKHpOA9n#mX2iP`$PGGU%HP7`g9c(0?6N"u_B%)#UQlY8$NgNNW1s_jG,9pjMM)3):<[.1ZLtQmdIUsog7a._COPuRiiL*rGB%$nm82u5MbUCG*NTgG+p&1.n%?h-sh1sj0s8eC$2pp3U55gO/(UF&/6PSRTk@M8Fc%BqH3FC3in^hn3[ejV\`%D:@p+ArhL%)3Tr?o!*l'#6;Y#Mhe[&9$ht_Neur%:A_!EjT]!V)q_"$h&Y.I3:%Wc9AIFD.:FFiAAjfgTcT=W@t3XR*mpS:,O407j:?irgm7'8k\e>/2)eh][N?in8KRJl]0r0Fn^uIK%Ok@XGMsb%$dS8Zlm'3_('=0Yc0=m(6VA+'qh2i5f&[/_QN%"NU\f3D+WW/F!^6??b0"N!1ZNo[ti@ah$cahc%@%Kf6IkmpEj1MJk%)EX9u5C+u;ZP.@e,$iRP_]ebXj.)0Y7F$AGhI$:XQ%9b$Kl>t,S!?J2VAlbQ/`%g0`/PXmP!a0?ngo=8BDNW[bf'*$3me`_C:sj>%o<At@,'KkO8%%Q:p^k'2Ls8/Ph,#BkIr$#*I)jnG'dN<i!_X]4(6?9M0`*Tj)+N_Amd.f:7cM4t>/5h4S1,H<dWAAipt:6RDIE2d%f)DX[q@[TDe-<'%`D?F.;i>e[Dh*8f^S;_t>DOTL"PjfMb-NE\j`'t-7P-3C[FW*FqN;nG)gt@kSBtWJDs,2TR4/r9]YX)HE]4hA%p_"H6jSd9Q;"f6\k2YG\k(Hr3jK?d:l5BVd!*[]^[oIeQ(T\unbKt3T<ImF;&fJ\ki<@u:T+(f:ON9+B"Fc"CmK2u10?7ZlTrQ5j%><V2)]6Mp%\2W1LR?)oCg^TZs'6;"H82oW>SPKr?;r5$#ke#e+npLERq'#9G\4_KVk"i'!l%Zg[Vj_P]I?0rOKr6cN;Zfe%Ln@d"%:BgTSin8tS'5Q^/iGM3tc$ZV3aLrFXq8fnsa#W=?e.X@$'trdfe2(E?/ZFHfb4--\In-(<[tVD6R/HZlbr)c/b7e_0Ii;8cjr2J$%\qjBpJT7gMHf$%"E6'<%/$dS;Wl9S=R%fbnT#62)m(C'BN]U56&S&GGhe`nd8uV)4#$8f8@_*btqdfWIa%iuDn+S>"FOEc.)mP`L%TOI&B.R9mUe!PkI%%ld1X037g:?(UubYNR#%S6?OPW*E=CG?dBcd!7/^2r3W1;_$kR]6m.'>*]&\a(l`7cmalY[NDl1PXJ>GuNSM%A,KOr_q(!lNH>iGmLd#EF`p:A**8JR2tY""@!c\o%_A3kd[Nh(=d%X5I>up.kP2<I>("H[@9R$#jS!08"+/%U\lg,pfJcT@>,NmK%4)UfaakhBsVN_fW3$3$TC,RmjY4M7L%8Xin<n<LZs.+4hmQG@e\*H%W@Q./PIt)"4s5M6#HTO7rD0/h8H[H-8oJJH_/WoI)7tia-%XPVI6mds"$/0E0kg%_07E^o?;LRT*Cn=7,="9bnYToDYZ><3+*e<lgfrDF\g)GR#IX:Ybo;jFL$hWX[]dq*3fF1$u&iC:!JBmA=0%7M"WJ)sq`#2Gui#-IOaFDsMlJgbYugRl=-WZ&+i$hRn<V.JN?'eJ'<'84d=fqk8C[4Kq<RK@(]<PF*P8QhMAgmZ*+I='nq'o$[nH%;3%B/Z#,YMiW8@2\#"pd6;U!UX5[Ei)RO'(iW;0%bo:b_=klckh2'b!cm;;5R(#][Gs$'uh3'F])fRT+lq#QAC#C9cmS:i:4:SX)%C-YhR6E#5g>ZP%\%Sbh@]s6d8aB_uCH[B^Z"8AV3c+4"h4-Et1BAF$Lc'B3@;rIu<%*:0'&\$3;hXp8rot&]TLLH@8^F%o3PbX;7%N>[A^?L!L`h""jSI!6IA'di@[Fa5134P.d*j2]3_P;p#`Er\5pNde,g\PY"l5a+Z-6aHat*7u,^#;C>8fH@Ao*4\]m<d`-'BghAr%gNci6UW4?U_Gi%Lo9#ZqWAkP',7hLLFXRNr^0NZb*d._.MDts8#A@d_ICuN$Vq(KJ/)q-oL=daC'UjU+D.'o.#lRk^AF<(LlZTYs%2FJaWp#FLCj5a<*%liaf%@7Z@)4oY"Ia14fCL"62q?!8+V?.+rk?C[ib288NauSt:S%e\+gY;=6FTs2X`$U46N4[Nt<u.7.lJ+$N%9P$RiHj%Fnk4/q5Yt:KH!gSJB>`OE@LkN.LFCEK&mtb+sENMUs?"q2g!ID:349mRu</i',!53ddcN3[oO$$qg@,)_e-M^#7TWfo#%]2:4h?#5<J^^sApQNJ(M8*[l@^qm#sA?WjH=b%[jm)oEgb-;:Ba3Zd1"oHA\ZN0%J!/C?k`tuRe)X1/6&T;2!nl!3KN7<\jau:HC%0VM/8'(L[q(mjghjOdhNP`J:(8%epVm\P:n$MS`tj[0s(:As!Aq1cZ!Eg05m!i$+TWES5VR`'BH]btoMP^'7$G`16#c@u\?eSjYF%Y)n#/7Q;?%KR<YaLGj^iU"k"n`n@7(s'EJ(XLee/%7T^X)uj`Q3;<9gb-)f^?9]5f6(s5;8fm5'^Q$<=r=\?3-G+o$n9b+gbN'T7%?9^YCG]39Hmo11t?GG]t7G_B3`4^WI\,))4!slNj07#m?$/Oo+BSYk`me)LP#V2#Y@aA2q]meAabH5c6qU)PAqF)nqT05+']mcP)%8q"2FNH##bk?bpeX](&_h<R!ZRq!**qF0<,2r&h/iV30XG9>_@p\K/Nn_`UJE`25Mp\KS^-_me;k$Ggd"ViN-`kU+Y1-L?X)kU)q%=ST"Irk-i[n+DTFVa8!\M0o2q2dD,MU^h[R?W\)2YaR7Xh?-_85^4R6k<7=hme)Laqr?Jtk7ChTXaVMOa#E'.*hi>uNM#qfh!-h!%2TJ7blg7n#Nj[V"`k?iK)dAm2I>88%]@S_44:h0mT(27AF&K.B';NO*U%mkBrV--tQ=H,gf.Zu$^WG9O2e\CEh#$k95"s#i?70]q%+0R!CQQGSeLAlPu#%#7b/n%5Zf.SW,ipN<4Q/gcf(J%lXXa];BV8Y63K_<Kmme)JrF+hd6Z0q:+YoT'_43Du!_e7q_grD?k1s:*D%hg"nc`Qc8ZfQ.dHYMZ;#n15r,m!J[nCtNs4+),9fp\ODj[btBgW#QcV?GG]`:;haT^qG3EDEGbg`,_H$DtT#1\+F.RJ$7bNIcXE#%qM!$VHE5qVFq5@`DtW^m2F$cGIaPY$-.4MA6T:QQ`.Zc.NBG(kIaPY$%C!n4-cAL2l6et6a1Bl@"<1s+Hi69DOt>P0cE81,Y@!gu%QK-lg(TeZ23pKcW[9gV-#-`(._"9tNNXmMAbA8$[m:%C)&+'EL6GQ*0]_A9TP&(VZT%^mq(/3"Fd:I[NlKVhW6ifjmE)N@/;p?N(%-WK3`61e80FugS?orVJ;D(dPH^X&.TNN!O>K)&A-MruJ<:+C\$31IcM:hoE,k9H6ts-$eph>"Dpf2b\N(XME>/ZE"SPEX.=Q<0m)%ri\FTr^s5?+Dq.aQ_f>jUIXS,lg7t=DU^kGZU<9/c?JT@dREoj9tHR8%I*FlrC?^tI$p+7Q7h<rqraqgl/CUd9mSp%Hd\+(2((O-%Aq"k`ST:m^]ka`nIcTX&,2N'?ZngGtEu%K%diRXpc7RXTGE-m-m'j+?qj[?0_JK)6AB%ei'[e@AgO$7KTBW=(4*QpWDS2ch21,&l%q9N&TD1O&9VLFibg<gS%&s@R,8>l$DoCK=G;gS]38LmVlY^%DfV;3c$P9-Nc$eLhd"XL]ME2DJ[(-r[CD#;hA#3bjXQCcYKju]-/%j[FBpI3[;)Y85a>\LjdYfIod\\!K6lqtTBU48iPLA*.N`[C>[3?<jt"DP^V"0h$-rInA`po9!;L-fpA(90Qk/b<DLJqjoQMDS/sd%R]CiV]h^G$B2eD;7p9Xf2g:)r\#%SJai^HGk-qc1[[11q20FRd[n$4$1UW`S?W0UQ=$*C8mqEVQp"Nq49s;lB(/\tpa9tF^23BNB%X#V'<oshDUOQqqLWK`Z8$bi1>je__G%JY,B:#(%DpGnKbDlY\f=&4u7fc9gE68?BlrM_Ba)a!Yu]skQ@7D^]>M[ZhQ=iR)Wm,rr>%WW4Kp/&-I\gJUf(Q1A:aK5Q/<p[<Hj!^3#qF2OMl+-7*(#OB`on>JBH>j%0*bO,J/E-&;++7/.F#@MnlkP9a?fm3&e':*N,\aB%n%!eXMb.^m#r>]Pa\/T:)i!T-NXTZZ[<Tq:LojhCWT#9KDXjJTS7Ob02Q>7410O2OH)ffuGe@A*k/Z>0Uf9i)O-+AE@t&4jhq[3s!T%N%?Uo`="m`8@8hIEcNP:C@:TX;h]GA!Vt2[e+e"s)T[A!\a+lZ!Fnp<Pp_rDj(>idX00^M]Jo"+.ViV_O!$3W5i'0N,s&3aHf_j5%^ucj4ahl`'7#bHOOrhp;=hecg]<X:q4"p!8Y,@Xo$0/U[3W5O"Ml!9B:F3?R];s.7*iBm$>urmri)PoPSr]3M78&/1ZO&iLEfB@W%Y9`r>@!<[TjnVrS<c@F%6.rJdPnnbJWr1VP7]KipqfteK>UJ_TIU;-g]:ZPFs7YAKgGA'>K+3Sd5@7FLd6gNSX?=ecmOM(ghe>!7%cS'pl't%GKenXS\riPs(</q=qCYBCf2&hgQ##W!S5kK.sqOIijGe?eoorbSqUG%R.H4Q1O/T54Y>?0hC?59ph.-OSH?gj'<lOAg7%6gn;](?RPVc-,4J_ogG:g*U!'SUKjndba\l%Wcc2/=%rmG4PN3de!P4c"r8i(%;,VDet;94M5W?q*?lYKi\\L5q)`H9$JI6A=20M%=X!MJmsltF4AX5R)]Pd<k-$k2V0:5%"anQ=[sh&**AC2O6WfAZAfrj3Om4kt\a'a`=@6V1ZLIIja%:>b%_'6&UU49:dLu!togm9l%<Yk"m;s(MdpLN:2E*OTBpOLl+[[X=)os-EC<F8p4,fVU\Z1;3tBNO$&4PK7nI=-,;XdGYCiC[2Pj=9WhrXt@GBLh&ap2c-2k2fA.%kqiA)OfAYLUd+<XCgpb+YrE^OD\p+sR%3n\G]^=NN,P:7QrDuH=\<+Id2A4B6uIU+p8?9)C0'Ddjbf!3aDT71p$HReU7D+gi/:r@%#JsKC)s_@mgr19ePo\JZla,k7hp%G`P=%FH@i/Dm/U*/]6K.0BqM5,PAm;*sdWB>?\,<j745G3EQY59VE`THCoo4hlF8B(Qhj`J*%rHSX35-&fYJ\)`,\J]p$76A]^Es6S?33cV4X6c0CfZhWVXd$Th<n(UC0n3MW\1@$<eE*h$HnJd[rMk&lV1r5_k(6X6F#0tG`/ZM_%C_,*qH`&Q5[_L5SDL&L9o8u8Pr7tMXfq$Iefh^nNr8'Fs-s*Hjg%*DRe-BD<BZ9hA%$tkf(X\VkM'oZ#&%KC9hb#>e?2IoQm+oih%X*^J:dDI:#A9Yi_eDeKoCs(oE&k9a2*HKok(H^oUo!h58es0CXoZG!!@(TGmHtG.Kgm/W<JZ+<h2chqM7r3HnJ#7;mX__pZJ*,'M%lM&Xr=-US0]Ggt7';Vni>ZTT.b^"V77p=J=ee_1e128>s<PBK+G?*H]mqig*Q.aI6jkSD\<bnUS?$T]/REcnhY8mTM[$f@sYO3ju%`GXsiXsC]XRjI"8Q!`rAp\F\RiB&[#'57L)$h)n.EG^rgbOK2kcpo'88=6nS++qoQl(NhQ1iP>08X18#T17!"f#9rZWDAJUXY':u%8jCkn!t_5?#N/'imcSfd<!S(hl)[]^G.-bCos.Qb4KLZHhAe@2[MtQ7G>R@$8u/q:h=_'kTuThDO4epq:HZ@?Afj[i[#;o?k?RV]%PVqX8A-QH8@l!p@Z4/KGGedh4[R<0rJ4#)"K[u_<N'uYQ)]+PCje.q(ai5!_A/b2U/mAc,YFu^N;ln$t2/$Q+YoZ8fa/:XnM\"]#%nb=GL[)C=#@i6kLLh:k.$q0bB_sJg.U0hAhHCQ];dQsB\-B7\$CPh])EeOYAWo)L.^gPJR(XC%Lk?bIT\@Fq@8Z<]WTCWEo-+/,%%5!p.T!56!mGd,u>JCka!R6ct3e?ZL[i:Zjj/A+R150%"q)IlXN3I8U[43m/rM1M")g,!Gl`fd-8WED2Eft+AOFT!Y<^A93Ug:]B;%?oBc=>AK^nX:l3FG%VrlO`#?XIjs:2g&=jhDu$]IFh,9$$Zg9Y.R+fk+$k&a3IT1g:9<>HO4pQ'o!kp3HM?r3b+:e>MJqh*kEn.9%2X3(BL:3[-68F;S(fR"Nn&No5Z)so(Cm3E7OmsH9bi<EB@4\5d2*,(8*gD9\3t_?5]&c>+GX#V]q)VAK4LO\*BKNA"`l7hr?IDZg%Nr$`PJJ"/N6jt3R'3BLd,,:93%hI)C%!4(mr=okp>Ul9oW&6i(ggmii^GN;iC?b82%foRCl+?n`0!d,.RT`,hEh&SJHF$^inaTVU%8"oo.rA(AQ!-+M'476iGrA&96jm#e?F0#,-H\1BUY<fqA=08U$s%i=2YaUR8rBUOG*%jdLbF)7M0S\spQs_TPL&-X%ZR,Gl"2c>]%=6XS14cK[<1SE[f0kfK]jZU\@)U!g)1)J160^LY@M:4VFUPH\F[@Bbu`EjcE(YtoG8SJe\a2ThR@glG3YrM)-ig:DDU"F/!JI=:M%LV7.P(G<m:I_3FI^AF&7MoA"`;Tc`^f15Y5[^;<Lq/oXcD(b+#q5)Zb>j8-6]?fp_:IeW-kO$f?kPk:%F]6#]9%0t.jjN9X=fn34%Rb)H@&$.s5n8FiD?`6tk85D;#*b<WKO$)A\7GJ0jOGbV1g<Y6P$/*)],82SrqI5YI;ZmP7fQHd%S/CZ]-.4#m,0,VXNZ@c]\#5"B%O,XjAF';>7s74)9hWk/CibuhE6iAr^HqYSE5*hVIc!i6j(k8+cjf8N(3Rc&u5*tGI^#Ffm?]3%chhu<KT`24Kdsh>Dh&US`?e@FY%QdI]e([gkW(OmK8aYr^Ln*=1,;kK='34bAs84B/S4FT1(.euR,:Fn/UI"Q_\/)A]em?6jhi'G^uWGO7dXJ]t!#=V0g&uRR@hj,'j%G?;np#c2K?mDZ<(a_okJ3Upo3nLm[#R<BX&s(`9DVEL(@b7btIQ"QVD-e$B8>lD'e+(C4JN/8q2:*e'@S9QgB)!V""'-GDLNLY6.%g3Wp7rVNJqR8!?p1Q5m-,KR;];Bk?aHtm'mR2sW1rP#WspEU+''dIgIpm.SLBD#:oBSsU&MYS]6V<QEL6P$;,hQ6d"jm5mYm&OU#%33ub2X\^<R?`WT##]+6j@rn.:Vl^,BoJl#4PtKc4!;FB)krE)c='$bpVi#diaD<!;#:tt1g[<4.X39eplE(JD=(t7_I`Tsu5lu]7%]?Cm)=A&>D8)+JrfB#*g*d`>@M2Vs`4E@Uu\Tc/)EV8Gg&3%!mq<n0#\*K3hD"NdBXksLdiV"@KVrok*\+e6HD&XP;?G^#bnp1%&%\XVqa>5*3+F63<75+#qtiesjsM^+@KY*YRc@tjaW7=K1"c@'m$cNW8XHJ&sLATrILE:H[V+f-S8FjEU3KHfAM7)I:;Z%I][0+o%k%=oDI4mAS>N"Y6m/K&Y&@"%PY#fs_dCljQ;!_@/^3mEK85>N@,W5U`@W29N)i8YkU8$q>h0@t3WSUT/V;a\\Z.a>)n/7XK/.Bj[]?%\M?T?Vf7(M+sHP?F*\Wh#P/f6Ms7Y!PE1eBNC?l&+'lkD$5O9=EN9Y-+cIKUkpVRZ?Q-Bab9!f+WJYMN@?<d:>g^>:EoRWs&uF]'%6mW@4Q'hO2Y@;3pGjb9+Yi)R4fZD$20tr<D=ph5QmVFF+#?=#Ck+N*d(]Gni0kNf/qN]1,$EBT9^51ds\4!_MKiZ"%f>1J.0i/b1%i5C@Q;Krqr[*)e3WU9YYVlAI'>Ag=;Y+G,%kIqXK3Br&tdob+uE[+*q+-#@`8Rr)fcNOpeHK)1i4uXsB\29M8`Z7OYe;6h.3G"^E%&/r`kK=Phh><aYkdOI9s]'AO41-k+Yr=XejASKp`/:05E.'oUX@o,Q;*And.*9/A:E&eY(,AUiLEe.T*eWk1OqN<MT\8o<oE`;Bg%A8h$#`mIPdqS)]ZS8W\G]3.*MC"^&+OiL7HB;e&RVW<s`<n:C0c>fu.;Tc.+Q^,U^f-QTu7.Qk`V>+/iEL8<I7b#\@.@QdFe+MW<%*g?\2f&k(MYX,a%n8i0',r(Mb0n!i*rk.^N8>a_'3jZ9g`3PjR[b_[3Sqjm1G'$;j4uj,h`!=9RZh%QrHuL7D3Y/OUKD5$tTbU.D%Zok\l_&jZE"BKgF@&iM-(<(BmL[9rj?s.m(?GY;ZauQ@#lUMS-guTR:!,)=fL0!BuLU:"SY=2XU\LjRUrO)!:)`,uJ"rML_jVO\J%[JZ2D*rqK(A`oE\=LBe@[k^T]]WNeH3M83Y9:7_>*5n@[`C9:9=h;7VcTc6J8s_?:'/%6!:[.+(^*@`mSm:&s,&<=R0r<ZIGAZkZ%[:=#XBLd@>r\[&q(%X@s.A"\-lR!c=\YQ%Fs1EgO62hY@67M<'dhU`sP`h<[c)s`s]_$6GZYtg2Kmij/I@rS1jn\0dqkh#9`o:p-%<q(@?K`^EaMq;XMPfLdp7,A)Cr:/s7ebq=Sj\XNfR$RTUqYJ6XTWoKXhnPe;Yrqt['qJa]Bq^Z;?c\kP]H*71G>i/6%3V$SS0<Z#%3(I5u$HI#Q7>$2\rn4FD7dkD_UM#i"NM^mFY28I1>H(dRjTrlo<EA\]/+;rQEUit@;JJn=jA4+jk/u#n>JF#^XeFh6.BgFn5pI"!%i)P'P4]05S/<qn,c8:;Np>U(/JRWV:rG7$qf91M^,*ahr.5@7_]3M1aUfMo^.G;hiXNF`@'@kOV!oIql-;W`fddlcLOg%SUjt\s;%!artuSss`]OQekh^.#6dK$Wf3G9risN(7fsk?:Nh%5!4cMco:%P?Hj)Ot1&[)3DV:\"q4<d_R-5rVeQFZ@$$*Q1id4&eqKZ`AD`7%ZU#6J;-:AL%)`m$%[Hr7Za+CpgKTTWI"s[#-BlR+Q"@beZc$DFp-F^OC`ZGQU7?6-+^a1sEOF#h.0"cT&uK4X8P?OoAFB)f;<o3G%lL4CXE[e8^aQ7VWq4d]=WcW!`o@e\@V:Ni9=0:.KXsA)aZf:DUV3bpMXk-a>gf:OBR?"d]B(Wo_kD@6<GdcuOngfs]m-W,il-o<?%ktSbGn8IT]=*N58;r9%;XaH,0NMVq)l6!N[08hj+B=K!`8hE\k$H_WD3l=Jo2;]6X2f$T4Q'V5MQ!QoD7cO<<Ut;719C8LfXaRgn%@I:/pc;n+-g1@g9G9`Aj.bEjKp&+Xoafk(r.-85S)m5:N$tJfR2.r5U;`MKSr)go_+AQ=oZO[(.c0;t;G&PPJ&L@)^"!X?MBr]IY%1LG?*&C%=a1BCXgH6h3kRB_Qsf>X@BcFTD"be@Y%mQ'dpK$/efJV5>9q!N^B@[=67ep0"5#fA`Ho<MZ[]VB%kZQZtT-)<1%QHdG#%P'Akf8[7H>7,Ci0Iic&R/7sItK]]aFLj:d0[L>:\3?(:u)d(?R/%G\Cnf&<[gW'rLY=3VB_tJdNP0(Zf#u896`ZlO,55*+dZC>"k%ZbT])j<.+AJXBZV!itkP<'pSMiStZ&?I<M=?^gWZ%V:)943oL3>r%V%ie\H&a'%!9E5r=\e'?c:"g1XB61lPPUXs`6$!_b\^/E0^%bcX,E5Ks(Lr]K*99b343gb(_I?7TJ!]Niu-b=?]rlUdW(kCY)>C^>@`_=MB,*XbiZ/'ZO]eYu2f<.q<9E0%kq\jNnEPOs7nND8g3%]2$\'TJk0[72DZF1<c1E7ijW[#qUu^LjW5<i;a.jn(k;nhDMIGDKN^4?n(J1S`@P.QE/EgrSe&t+uT(3F2SB8IchO2\+8A3,5ik\%]D&H@Qr:G#/Gja'gjJKG8oNt^3G>V(bq"dFq#L*l(f]8)1<fBhVe:jGkEV/una%YhV0J/`F3r0.-g@]mEc[Ec$aK?[4q9bJa#U0?%Yuk7X-1Md'(=um/Z2?23`O/d/P5giein>p,f)I69MefM@D_DJYR7WVnIA_5a"dA/3YNPljIf<*h!af+m.fJ?7I%<^`)I]PM[X%#T%)Pl3$V6%.X&!fVXSbC/(V!^[e@ck&-)LA1Fq3Ee4o%J*:=Uk>[?bt'qG;XJTG":UEm;.eb#Xn7baW2gTOu<s1c6@_\3j>+VK6^T\%_]rSF*U9[sRI!Z*Y4U-%\n"g.*o_;qSCP$UqK;'S,@6R>*IJ=@^Pmu-2U4'%3D>rOD!3`57"ToZ+?Ik<,4E6BQhKehiB]j5=kR@W%\.MR<]b++l8'lKX^aN>R6?V\:7=oj?O=ala+1O'fr,T)^?;I(;Jg`\4q?^G!V0b[c"m',QfKO:Hkq7pZ_CH`j<6grm<'a8LNNRfu%:5c:7\fHDJU+0P`F,r,9a%hR#,.S=^ZQ*m#jR>bk/Opi$7lXAbgnV+08B%\T6onVb,kXDW2Cs'E>doG#%ks<`.dl$N8XP]3^PLkd%M`i",c^iuXL_\_?.\IQY;amfMep`O:PE0#]@Dc4,&**7o7-<M'Menoj;M-\9`>^0F^*u[drc0NNFq1]_]GS8pF(j`?kcIgphsh[$%Hi4e65d%aVk24JUr&pY$\ZY`7`1aHGA:"2/QpCNEi5=2[+GgL]N93nI.Zq_[&#1q\e8]0gqIaP*Nk_!R*itKhm[[QNC@:ZQbd1C?%Gq>p^DI]\p&&Q885(&#S*Sq%$?_T7Er7N*O,+b8epN3ah"P<6h*2sUMOk\)'73h>>-"@<[aNX%'L+1GMkUdm<KEAl9HH0:u]0[=Z%#foCCM)\6WhMA:%73!ZgDo?pXME"?XhMA:%73!ZgD^9*5&J<(*`#JMtUL=bTai#.SF'sVFNg#;Y-IU9Ra2u7=8UbnP`,RR&7bl<+%'lfa;]TM`5BZ+mGnOAZh((kPF)/h(9B.gO('3%HfIIXr85]Y0!,@IQNHXqjHH(iE">_gRuUrit+aq67BpTH2^aK:!^Yn#J_2](\d%M<`TY`n$2Jl@/=LZ+$#j.KCNWIC$GgFP5Vc\XI:j0`#stEZ98daP4V`SZq,!QedSjdbG)\US.)%Mu+ac*ps-a?Z`l<gY-i*j<SRT%"@Ql%U`mFJ#I>anV/T1_oduTYeH?f="70-3<F"CpaB6`EYj?Vfm<9"@f8m3gXuE]+_hoSML`dCml?8LfSedeXC>J_N)i<*5)V6)R%bKX+.r@sF0"6?Q7qe9O@rNT1GY;Zuls404;3D'77i'7,rmA-gc8O_7iLQ9`6k<t&h:!3(L").-XQgaQ=op9!ueZ<rn9s,W&lL<_@%\!1,hd^"p1Fu>\=hFN]()BR/`U?<cnn1c(4oC2e1IhG!8k8:f"Srd%j!;nMJfRki,!;)nZ/0tgj\+`ek'jisq.%6AX,tU[C[Zn1:%>u#hp<*RZ%P,,XmL'uII1Fl*2_OPh&@)BO@`&BMr$NG#l'^1I6IECcrs$19SCTE>_e1EOn.OMU,(e3)B<=2Yue](ce.kA_r!AHNL%8.'(Qd^,7Akt0^<Z^,<fEjh-b:>,]#(Gq]"TK_+`G>0<_fEA'D)SCYE2(PYhMBH'HlF(RWFi2??.XXOLT!_9#RP;se,&%/lZB^\L%$(<Pi(b+^,W^uUr&Rf?U;jBof$?X7mYT-\[d;j!QdS3!$Tk%/%U+d8'iN#jWPr8-4.VDaQJZe2`^e!on-**Mc+'gh2RVEBFTZkE\%l?ZK21ki`PX:<(q[B-(TZn<RRR23LBD(@Y!"[fLN/B;KoQjk_UgQZ+n'N.\iiE^,(f5-g$3dcJ2L1LsaC1sDaR[Q+T],G&t\k6@6%<jT&uR0B[RY/!t)`stI^MiAcc0F!6H$sBkAbg%,a:-c*3P@?Qqf[@$l!]34+&7DqU@B2X,L/(!!<k;iRO=JAJ2F*W1K2:c_$,]^k%%-Z4q#tV>b=92qL3*iQPF@6A(./9YD6`$^`OD[G)3auHn1CZ.<9<(]o&g3[[C`Or+-;L<V0q_=.BbHM:crP]-'FbVS_j#5r"F?2(%%:99rctK`cdg.)u9\+%fduZ_CQkYnoe[-4<0T_n@+C^<C-dX;iZO';['jAo(l7a"S!t*Kd$3M3%L&_E'VR(JTp97['&S5pCXk5<9%"mDRd*>h7#Cn3ha:4N=KBpOTU6$F&rJP6/[%R?1d&\9^)/4pToE6<X01/9q5-u&cnBh6VOP*##A#3:fWMi7qc`B]`k+:S*^.MQIs%[35^r>#o9(#r'W@+Tb>H4:*^YcG9H<1s\FqMY&GEMCE^"Qjglu8NDV9&k.pP)F]rgBdmG9+F+#E<(^s,;a;B9QtFe_5dX*D)$J6i%@PO7E,8hZKV"hELMh%QfF'-5kF:\H$/K>VCCmji!a?gc`!l?c_Z5H?&J>@;/"B&5[bX/0Q0TC+["nN4E>*hKPBGADcdU_)Z0NljA%a<\H_TN[oZ"@the.*PMd]Wlu(1_`mh;^>@T0G>]G^ed-C]UWP+#(`b4g+8V%+uBkNYl_;*a?UFPb`AG2R#TMoAK&E"#H"IY/S?gg%#8f/-8mie1'F(lpjF)P-.T^IdoL[,LPi4liW![5?-V`\V$g`$<P>0UZe7')u5l2m>C4L"d0Hj+I)$m%2:-]$6PR'']Pl).(LFOHO%V5/bu7Z97`9EWiJGn0D:cB!tM9-YR=&t'13TYOM<O@5KA?pM.7-F;sAOXLWr^mml&ieb[pBqf\N+>Si\Z[!2gE.CC#3AU]1_Qm/C%"$sc\2*k?nE[nC:5R/7*7:<Dh\/fAid/<[=$'R_F,^]dL1'u1/.!afR_mV"QM)>!BU,kOV9GhU^9a(0m7b'FUVO7!U9qbJ67f&A6%X'Cirk=o/-0Z)lbB%Y$+!r]4j="R"LBTEm\_gnR4S]DR`'sJ-J!Yg8Q>>uUC$u?3/^eC0e-btO%65YfVb[;bI,_R%m`]t<>%Ittl%:(<!]bUq!)\k`+&&V?-eqPI[UO<tnLU)QLX+UG,;OJFlZYe9Ho1j18QoY*pg%]3K>D1[Af,hb&9h\LjDRRBXg;'h8W:su-t9<i0^%'L7I_&t#Y3*2][G7UVm0'a=c8L4DOEnRA/c.#d@l$DV*](*o0Z$'p02L'g8&[fA,?,m%!seRC3DT,'#V)]V=H"t<%O)MFNi6-Eu.%@P\iu7AP9ba[!;S\tZI7C=E;/*Tflt/L'Mf2Ub\DL_sG4,s$P+E3Nk-Lo"g_B555t".RR<!nOht3\t1AE#@!S#Qo+4)%9IXjT\B/%GWFM8WE_2Q#",!5WH;Ql-,Q$>TQ==)!u3!tU`:;D15Eu?6&A1=fdMBM,_A!(-Q+CdJU!k5P9g\?gX@@c/B^p.bQ'@k?e&]t1I7HA%(`9^Z?'@f&-q8nEJo"C:U_k0kR\qnmB<#eE5t8p.*JLAsR6^Z%ed5$J"s(Pp_ka%-jfC/'VPpkKR\B7l@$K(8^dR*799r_/]#!98%Coq]X5a,%Ed4QB(_'$%";K>Z$^G)%,O3*kHitIe08h&DEa^ISodue>aB$(nV0plI`4qgp5Bi_KT#'21s<p=.F=X(]C;EA=##V_$n%'hdTK^j)S!Wp2VIOWG(>E(Y]98:,/M?&p[tZ6up_'ae>*8[KHk)u*VGVJ1_COT?bt_+`Uf$&heA)J54:&4U"q#E_lE`8hEF9L9Lk%SS^.o%%F[tW/\Y.M1R:um5"3$2#=(9#mt(YFs4'S%L`P34)F-sY>0jMd!$e$QSW0+p;E2?0i4CA-^r1>bY/(g=XNSEO:rY%W]8f:%#FQ%F+uZobk,U%1]Q4QO(mRPj;e-)qWUfNm,7XstS]T'+RENrp)[rM[N5e+Ig'm,f[\PYc!;jf5BrgIP;ih=b5AO9\X]jZBHAZE9%HVrL*@g+$V1/21Z3er8R_mG1FF-t7oh[BXX-);f@/l]3cj<Te^>ieNsjjls@8J43ad)eakU8.7<(<T\[d"<!FOn]%MkC>.7KQN+T%)jm-p-"8lu(kRdSJT1iAAu"m3TJ@al?RAebk]q+f$"IAQ5bl%L`Wg8A9n6_d>3MI>TSEqjEM.f=dZOCt')1PuSN,AaqGT8(>$niF%Co\4r:e1NfXab;N!=dQ3#4s,4U%<#ge.^?Z^<rk]C7E`"K?ch9kR/Rtg>(@\M!&;1es-7kL\S#-.PGPPRIGr^mP_;OU+ef'U$ahm%NJ)qOs$LWP0E>X9HP8<bYTRVX_1aTEj>cX+%,'R)1iNO.*))`/0Uj+o)$YUJn@i`$L7fQgku\FAUoE.8,/G%J0aT0]1EQmaH\n[K%'gi3-#'Z1HpJfSqW^^F\\5GTtQF97Kb_?FS+XtjD*KA\X_)5SiDT!),rqo=b:,EX!&p?#dT=k#k=SQlfFVq'@=J-/FKUS6&Qr&<I%4OeT;6Cen,7$u,DEL'_:+Q5qLKIb.uTg9)YW^'<-H;#T"R%#`0A5f7`Ne2oo"(;s;#T>aW=%tB3aUBs?jaihY9f:o6.camPY7sI?%#/\<%'cQcRL9Y/DqF;;,HG_1nP9kf=?ms`n"<>BW8JJW9_\fCa8/)Z/K4G$,Tb!.$2QYsI$+,k_%T8W%7QMtdC_;>&8C@PBR)ara%e+X\QTk:T,'0=Kj#e)gE)!DdbpLpH)F!0E-Ut]m>TS;`mNWJW$S[uRR)4e+=;[jC[T#Pk5E1ooI<_V0^]Bqk:_)X1S"\qc%RWs/\%/pX@"K_'Z)PN&4GQUD"ugbYoF*P`JjOZ5f?N-%I]Knp"81`EX=qFH+?+!:h(euB1JKbREBepTl4!^mm6!s@9ZjL8?UL&R42\?2H(%"R9MW<p4(.-kkE#F5HC[."T$md?:X=V1=#271j;jWL+E)!t1V)FLOaU<D%/,*Ioh!#Ngu;=6/@s[jGRIpW5i_n$bA'rcrhsQqP<0%([qEPH]=sBUj?Jg!6?@Q!>R4hnd;<u&d(OX/V,*3LnYOt!"dMkfEB"*8i/!@<bNpLePr9s,T4NQ67dse."gH)TTg_MSl86.;,pL+%#0d]E/5">^SROq+==0J6(-7Y0AfZk@RuRVT<P8rc=7@dHKH@;9?BZd&a&!LObU+4Fd2HrI+:=@$,7's>,Dg'u"FpMBr(Rr*kY&L]%0pi;s&/g8B.*@k?>AOjAFLK&t.+@,g@]*M-0eNj/]];3\6Gd[[Hd@9-Q9n6d1<..,g=R+EQ6B+7PqXu:L.9AoKfZPN5#e"<Ls:sd%7^2;Gk\O1q5V,@`$!7dcd0Ph6<;Hk$99.Am9p\0PbQbpM#['qjLi#[@JWPsXkp;4/qORckS!dFb5c6)6E.40,)$1GlMNH(OL;Csa%`qT^o@k2@PN1O$k@k$e[(iQ(<OAq)@iluKL737:R$`.D+^?I213%#ja`AX8i@$G(;ZoJTKLWk?!BhVZk%L<UbHqZ_*'ZS#g6;9]r%Z:Sg5.p452E%h!5d!Z6GD@#L:A5`e*$k^@X2QN<4(e^oeiPHKW%![?+.hQ55L9;>)=[X>f(h"#10p/G5:*XoliA=eCUg;Nt;'u4>%.?m=B2BkG-!J9iL;tVmb#)!^`a-ob8d!uEV.0MaE.`ZX#=P,',ULM0WR$W=A".`MGbrce,#\!@d:7eAJW^ubFin"bHYRK4fJfji\%7"Rq].hn>'5Y[Np7,ki^Jh\N+5,sc/Egjc^rN\KroG26jP;RJ_!d6;?n!^fq'9$K-.N$>1/;CF2igPSD'G[s?"die[ief\6:_:i.%QW6Us1dA=47?Hc:T.@A;0oX5C\uON$0X4UujbaWOF3NSAOTiWBEu>RfTg(#ob646!BSWSFB?;J-%W8tZ1@o]q'+[Ac.*V'DKFeU]%fSTaK0gGjYZTEl0Qu2+Hk?>*-Vmr;`G+=u;mcYX3)*sF^#t5\/KN`=t`q6\C0X;2Up'>/t[UA.-!-_r`L_&CFL82h(bf-@+,6uo7%cd$q1bo4'UKdVnWN"n,6NPS.M2!bIVh+2M(B&q8h4G4T^5jI!Q#[r_rZP<Y"0Pgt`btb_lDOJ)\3TdBs-Z7tUrT;>_R87EH'/GXY%_$;7h73[=Y9`STcP1,p0&m/b'O7l/brA@?Bfe7nM.=_raH/CoJdtiN@V^i7OSaO(QiLdEBJ8&O`11sgsn?,W287G8",0V0F=;VIa%Gc=oG&b'7^;i[rcn1Co-88(aEd7\)%&QhDRWG!;ehHGP?4A(8M@U2u$@+Z^\KWPggJD&m<e-BoG_1Vi`2_(:?0VMY4h-cU+$jS@M%0EEd(0KruT.aM)X<WH"Y\M-nBEN#i,>Z_u2B,GaN#E]jV>XSkP*G(V^[grH^3gjkAFI.90&+"j]<85cDl!b"RCq@4l7VCiZ?p_38%/nD(7(ds"F^+fdW>X\n]!p;nJ;Um*2^l<.C@orjWJ8/`tO>SSBcrY%C(ki5LCkY:t;'V2t3jqe3C17a!+O#9L?j^%;&LtY78glo;%>HWX"H=O54KA0fkZ&-nK7`?N(A>EbnSPY3a4PcH:U2@j"A3+7p5A7b]ZI!.f+H/sDZ-bWJ3>c4bM.ks5E\Ygcm7`7Q_Aj<R5-RT@%^M%ahoMQ7b(6:_C#UMg)giX=58W7A`NN#e\#ZL[7>ne"r_O)>\gY="&"LEut-f!k2X?_qZ\>":HUH:?gIWKDr9IPHG6GQ<-67J1;%%MEO)*4*Y!%\suF,mp3[`C`];475@eiAiRs#u42)U,9n7iQ1(cE\YkOm7`CUia2KEOpOk5`3gX%^qhnY0+S>A,MaH^G%:`ng`;sd%PAtdrJ_;fQ$XGP(=A]Ou>;^*qGhF?J1C-(*4VSe`@;%]S.-.i`0cs;k1i;es"Y4$0m6.gVP5q+lNiYklH-'O-0Q:nU1*p<bWY/rY%eau0n<Ee`P#/eD\K>,B@;X"rDTflYJ,lY:".8V+LAs#uKU/8ft_C%<"Iuo@lKDO+b.>fkrA0G'p/R^u-"ZI=QVG5;b&nF:aBq!PI%+@-crkb^XU6S-=<J['_4fs#.pi<V+afi6+X"@>gN(1a,F0<rJ)2HAtu)FBMh+`pWu&"a,0E.TWs.nT=H10r(TTGSi@b_!(_`A*nC%aun4@L.2Lfg^XDXGTajC$SWS[JI"-l"qC8Ih+iOnA*EhR]'Y*r)1.DJLNKh?;&C8VYSjlcD])9u-p9(9OjU\H8YQdL?lTU-[7pjh%#R5e]s'O(.?!!@uk72lkr=1@E:,Y_@>:FC(E8[g;!ZNgSR`9LUF#DnM:L&O)2q;"$m/;.4JG"o$U+#:nMP;L<p\01hm$"7n&e]9.%*hL'I^qMV%e,K5c-$Y.CSS-n5>!HG.5)+D*r;FoC%l<N0/E%,B4&*aRRYku>*Qp8E,FpS]LGD:%1I6dO4fhIq5CIW%do.sLF"#M$%0m@NtC;M_p6Slj"1/3TVXh,PTb;9[Q1]uKGG.M!88V8pY"?1o:-$o67PBK,P;i[F%1Ss<tR<!,==W&*id<'3"WTZh#Z&Ro(`J]_Q%@iJ-22k#b<RO>Q%d%#r)@%!mcR:]ip-;JL650st/Bc<FS#*ru_J4a)@M.U.`VP0Di@$tWI#'TG*$nTja1t)kLUNuAR^dceXNM`Eh%9uf"``4kkbRmRM*1_%\d"5@K]GjX-t3k!F8FJJ)&VKj-&'#q:qG9+j`%GeJ)Nb+Y$\$!.FO%f-id,T>i'$[&^``%pEDH=",r"eK9%E4md?-mcF7d&%l*!%A;%@3S2(T_D+I(BLLXctPBpp(Fuj#/fds,T<Z8NXA;ngXZpba4T``MDCI1)#tLF(P/pA-Fkk&s+/E@^<*N4%c.L5_.W@bTS/DGT_+7!6biml,8AfJV00_/orphrW>!68Rrd\]I_+Tem(-b(`AWrLd="*TI+21(mW;,e35WjHW&.'mU$P-M?&CD"j%<<orYMF\:;V:sPC0lnA+S[$*Q`=A"?g4>IO*XMXl(*.0sC)rMff;T6`1!>7D7I+-OM]kl(rD:Q&dbu<tMDX#p@hudBB>F6\oU!)[%j=X7J#g)//7+`l=ptJ'HjJq3**E*Q\Cdao\_=;JR;aV'F:S<H0qXgFU*'LcXR@1SNQk2Z":HMQQlrHHJW"YP_E6]sT>H;ZdlMiUu%0=d5d]R4@^hhZs)7JftiA5)$UJ__8\b"s;Ukj4Q53TOWNWY;kgrOXVLrJ8T:,!F`GRhQPhW(BqUc#Nk`HQ=&7$RRVRWklBW<fCIm%17C6+SDDR0Y*;!<SdtL,I;>d(me87*(YuTt`t\Kc5rKes_qE@;aMdcm+21*PE'%1+M`ZC-r6rr,BWi6mN@,qpEJ%"Q$f8,cmCaH'%Y+Hisj?+9pq%Mn_,#4g*G:\Tm^\n2>FjX<:LKs'"ei+!B=,_7GEr*`&[jLhk0PBK%8m\3<1n@(EChYk?XA+WG`C8FlQCfPn8A8T#%hc2`igu]@CAcM,0p%ebi(N7Bc-Z9B1^!h7Np)V&U9f%+%^EOhs%sbftO;uhC.$M"X#Gs<S>AdH5EXC"Rs+s:dF/ChS`9"80/L38C%gDp[HM*'efNS6-%5cdt:l%0ZrFNLk(d^&)Lf[B$NqWd@*9(l-%/26sS[QDdAU4XZsC%bR,`9:N;dg_*Nmn&#!Ei>=I9H[PT'f18L%FA/HT>tOKF8$3l'CY,4$*W,NXg&HQ7,OH]t_%3t4DR2O4*rMKMja6h[.,l#f@dq-"[g3=nM@9D57g^md%_IHh$%0mginMas]F;)S%oI$9@nr0>e\SY3/S=Zap@_(43j55&S>Oh[FYZE5^Pg;tR1s!i(g2Fea1fUaO6oVGeM2&WlbOtsm>SI&3".1.E+BAJ>?RMSO#*B)8%?m'ETPZ'eF8C+bt&2*M0`ba.J"(Dl51VJm&Yh!2"QZo]@7)KGL7jn+'V+s0]E'bpi"[)'2)*@0^S9@9L=`u(EAPb3iab5&CXt3"O%-tI0g7rLNeb_),>09b2k-H3$N^kB+R"=;.dKP"ZVO+r18Ob*]!-1&eE&Wk-h<J2$W,pB8@%Md!A#GG@LZ4]WL9>c<[>ShaaO7k*6%[V<!hkZ,$'WZKb].Ff5#W%m4AX%])3M'^r8>ZYOlO_C4M+TN`$6F,m^.#k,9\FCSfo'EojQeo+=j:h918(2H_LNG<r>t,:iHcPPK%Q7P])gGd?krP\]Hd>L(TO].Imqh1NQT8Bc?1#BqF!RhV>Du$i4Pug#soq!j`s7rYNL$[e.-7$VHY>A2%&"Zk8A(lb-Q\N1`[g4I(%7-GpU#ogk^()5CRZj!8G7tdghEQ;o?@(Kg0k\TPN2sW`I%E$pt10Tf%VOkG:HOYXEh?Z:#Cc[#\U]pjI<:*/SQ-gj1;AF)=!El=,%:6cr?I!1ue][Ye`@LhI(b)k7q#si;.#!Q\dY4n/YP4D,?-LqY>55K"EZJl^f]$sgB+H\F"firuMZRa*FMNk0A7-_IHPYNfNQX-Vl%FoDNc1/4k8\]>!i*FIpRh>@;k5a%%a,53]BD$2%SU(-U=da`[t5cmrT3hH"t%7kD\?aD>L`98#t9@)HsBN"0TL2ek.iduBUj6igg%[!)@MPu'[PLRfDFlgX,.MK5[95T*1,SAPPr?<%epJfe:eOaF(Y/lj@1%&@s)9;adnir#tKY%VHW+.5RAfq;u#TC_@6AZku!$W7V0%o^g3@Ugq"I2G1Oa\X!(S$W=9jSB63_^c3Jr'jmZXYHsXnLo`3I`0@LLJsb>@Pftl<0ejF#Z)C\T`?1bjpdcu_!C"at8].jZCc*-,%-5q?5N`@l1d_7F1`bdk1)'eI,fn2g\,>gQB@PRY/%FNIXct(?sWc$Ou,ie)tkYYgbdVEIBY02Eag]1!De4<5se<J.AdG.A'WC7Xd%4-1AH0Q"POE=$nr8WM)Y9A@"cmW`j,LXFb8;hLImqD-.91OL\b2/^<'^)l.31ID\Cnf",<K0U]0-R#J2NXbFC';`fiTiBiZ5t/W=%7:m4b3Z#6me.<t9]i$;ecOqP3ijS.%ek8]94d[(1,W3n&(P5S+6$[l%9kVU;mYkAJ4?DorZS.pdUElRcnkBmpA)B@KRDi\5p'pV3%5I"`Rp*7kk1F="h=bj0t4Qok9ffB7Z13_*"NT/M9F'o_CBkl<dI)T!sAg%)+fhLgo[_60-)TC(H;TP6WE\c+o/!ct2`H]N/r/a7b%9F=d#mbD,^I`,0t5e0YF5T&lYbZankY'96).;^U=Ab5a8[&\!r(E,B#qcebkC@q6)Bk!E*cu7Q"^"OViL-e1uN7-UVC8pSeB1)FW%5/?j_)j[N^%K-AUKYK_jp'SLsmW)0;B'!lskt:Ha`Qlu4V"0G'XXIIH!>nEHB`j-nUP]c#Z^!7OZ?%cKdRB,U?\0POdnYYE"_/mG%%hSEN=MkQhau`4`WXMLs:s[B.+^-g,1;t5L-c?teR#=39WJIXU/4F%sA8P"1D`mp`;gT<<'XRWob]P3A>7ejr$FM/:PGqhuq@H/`%BkAW=`+a6Y;O\[g)&"'EjPV35G#mJ^9BmHf<TWecF)BAMFf6KeI7Ga8PX3F@Bs,aGY4H1M3S8L#29momJIuoO=`%_oL3?ik<8bc?%oZ=H&^0Z-W6\0kbh-E4)IIEPprGLN,@K,XAQ5-ogjPAoBe"`.K;qA-SB8CJ,ee%5M:MA<gHC=X,6u_VWhg'pM;V0D_@->)4GQ%f)%KbJgoo3_s\XU7LR6R*R$0\Ls9nt&fFF@V?'-TQ=h)S5s_/LbiVS\"=1+Ffe1<(OKb&@_kmo9$7m2A0(`1/_>V%O[t!r%,uha6=@r%/)Pt_4ge%I0/YnQ/!i<-7O:YS:+5:3he?eXS>d/>m7(\M+l5?%>R4*H"m,D'EB7/RF6>[YbMIT[K]^#`["-0LO;Lj4KTiaK?:f$D%/dtl[N^?6+OjFch,fiP(DPL^(J%:c7OOW]Oal.[[_Vo+AEc#b(G3^2\BeUcR@[g;,ldb9QTkg6-/$b&2<i7-#2s+G5V6UPjE#Ntm%RH]BLdi<E03$fB(f9[cI>a`*]D=<R![sbr3jkjBm$hL\7g&p%-1i,*9UL[K"\`D'`W$X,`WbKSco6\OMIcW#P'B_H!Ko]op2X,?f%2SauOQ6-jq=5";/NQskCnf:Agi^U2MbC7@)%Gri+HH20X3d;Y\J!Ap^>Hhn\TZh(3l]MI&g))'si]_YQpo8XA#fs]&S<=4a>\j]a%G$pW?a]nCodaVM\;-e2E3)=k9PPDlAYN(VSr9.h@RhK?o4j/\@\mi.k3rM^.V(NQS'%[>`VA\I^G;:cqY:Kh@*1=%%BCCmoYD!^[%rZ]Sd(4roO$kkhC;A?m\HM_@je]fI$A4EurjO%YDQ8BhJe8!%l*]eT;7ljQZ+JQ1-hUE#K0KH`2Ph*CrWKGo3#Y0F_T;g>IC#P;R%>4JRQSWnu/g[lA?BDn6eV2.(d8[s#XSg;2kP>ijq*.)Tdqs<XF+5Qp$bh@UP+3=!MRmn,nFN;*OVOO"Br9YF=hnEL(@Yh95S[9N*%VKQ%+V\i7=M@unQOE<b<USFT.cERb6,h8Vl(]!+5.h:$iA4R8"r5aGY3)U14'9%OelVX[\km?W;._Ad/E@@H&@Y3qra=)OJY]^&;%a@HYG,/JRJm9jrSIcaaNr(QNt!P#!H/)@TV*XRlR'MN7!5NJ+4*`*]+7S;&u(A&1&e.e7(:hq+->+u^k$*Y7scm]2XQ"QCjJ2reR%r"+1e*DH&T-Z0BaO-VU_e1mcAj]\tr'LNZVC;VZaO*aA]eV;YSgY?8(Cn5](JPGFOalGct%Ll^l"]:0ja*([dA&tB.Fa:p9/=nj%%;@dBF618ufWE%A7\\*L_5SH/:3YApu`pXVj4-4c1=EQ`;bil7Ii?U&ZaAOZoN5/I5CpIV''B[t[\UCrp:GQ@9I=.V<&:PsMoMV[2%lrudr8O_,+_0Wt0"@?`N;<2.)*!UF6<T\>LH+-LCkQGdii&WluN1go!@=RUbD1^t&/4<*1Mg6o@!AMl^oLR"[T"+hZqn^ZE&Z5h$%,)%s$9d=,7CfA(n,oMf@Vtr)7rPY7#a[@aBZtdjdNA\umgF]BQHqdKRl@e*?D_+hJ5(.*OS0[JCml^5sf2_T`<rs;q&D]Fg0]pQ!%6;<Z+7Wf:)\Z@hI,n!5Pbn:l>h6Qe2f1UU*g\O/5]mYl&?0BkaCP?rtg<51iS]^oED/EDYJ+&aN$8k3I"mXWD\Rn<T]q2rH<V1Q=%f"H?"Sm0T\=K^)RkT@#if@m=iIuh9Ff(U7Vf76&k:^md_[U!L$R&u:%JI_?^R73'VFR@/81_QCr':t;[a,10a/Rls16(En_ZKcaV%d2>lRVdR?MggCd[W3sp4Cg0CY1M*,=RCdlg#gt+2T%%Wf[LJ%i)</n".Np":.gscB$?7$6d3[,!q_YIFg4%_b2CqPT)sJqW]5;WA%MdC6N*:5SO2,@W^U<O24CI_.^"sbjIe9/r9SGV!Hm`eM4NG"_"WB1j:VKJ+Y@l>a'ad_TP_`50#ko=O*mqA*jeomf"ij!g8$tmd^%OgFQs4n7mBYEqHN0W_m@?=h%.Y\[EcDU5W%r!(-,0A,F9UcsPZnSHbE*P4Pc+=mO31LuBJd+Pn+CEn\r!S!#'U1g3BGtX*BB!c%N%U->Y=+/S%DSrJm9T]bSsV0ZUMaNch$*ItLj^Ja:..SVlK;n;!\Fb0Lq#KRJZmh4(f&=&]]8D\,M.2S-Z1-)5S9\.Kdl42qPfkK-)%H&RBh+?$cJQ&qmY(gRS[?8%SSlld\2I-%0QFI_?*k#_+W:"\hViIn^s'3:FQ+P\>8,LsB?:6cQsUM;&^-.HJrU*]C0hMp<F^q#A*%&FC?LRMUS5FBt:Gm.OHQg5<iH"\4:8?mMT_P"(LB5/c_l4pqZYW,lj.`"aenIk'j&X-'AOb`'#[j*+u4$7=G%I3[/0G)C0CKE)S:%/EdiP\L?s;5WNrT394A]c:`m2d_"sm*4rAj)'u.;*\ApcSa*iT6]cXrADco(GfQS$Cl1>4J=$.*h`=LE2+$UhF"'MYN\flan1kSS%?'Y5B'1Z%EE!i`]ib_>U8t[q6D?pQ$o%F7MR;=a;]98H/--ll6gE6#`(a$M:9HHE]"^iA3@kA),SC'ZeeOB9g7k@[V"F5l@R\#_Q%N!82$^i"HKFB1M8QO2'AOfQ)Uo]e$5<(u%-f*P%/a0BqI%Tb#WNbdbA&.@$)>G4_6fr1JNO`,ZtA()AQ2YJU%0BHY`670lT>EZJd%PkmfDIeMRK95je72a=fkF]#jKm`2P[q\(8cs-$+Tr<<PZXY_q#Yi[)X[bH([(6??(D?nKT2SJ7;0HhB>+P`9h!s76F]OIj<g[;^`%eK_7^g@^K>Ck6OeXZR(0%#`pG*o];g[pNJ#g^b4f&nC9FOQU4lLC7UZh4Chg7i=q`$AYleGHl,D!=cFq'AlI#35'=Tbui^nGT#7R%"<#sYjN;<)&hN;8-FbrV29hec0$997bK)1A5rqL_D!0LKj4S4?qk$a-I,=l?(Aj(gH-Ipa,sul1Ba6Iu$N?:Gc-:^m59l=pmF[Zl%K8rG%HY&Os?KE3S=Ku(0Y'"Jqh.]VJhbccjgN*KDgR4l&D#4i-EI["2ld+'37D.k[_StR.,T4mpUag*AfR)Z3B4!=jpot(8S(Hud%E5AdI*KpWJhtsm$R!nj`rC(M05\K$Om<P.]Oq(GrS3?P5Q]nUODAWl"#/>#gR9Okl=Os[C4t97-<bSjA%'&6e)KY0@]j\eL48.!0%/s0tTd7`PHafo&(7ENnL\`DZ6V0Q3%hh8*kVH,#8![/65\NAr8e8AqJB#:^=*HT<o[2r)Q2_8$E)X%pJ/>;KEX5:)tXYf^%dB&TA%$OneV9k)Qb88ri;*-92QH#AYQl`aK57u@R,X!M;Bm[I\ri[gR/%f$,%__HB*ZoIipRKY*ClO:m].8$!HE'gEOEc%[MJg])/_6sBl%1dd9;MGG]S,-*4%dMN=2)q31\c]7m%9N1>PXI'D(28Do$Tdc(B[dB*cS(S'^'SUTKEP[>o[+V.:Ts-i&6X-ZFACk)ta5!N["pN=2%2n&/Hl_q857k%@>6-7VFY0W>)E(./JD!UP'R0(r_Vr6R>HEmrlbZp\Oj>VDEfjA)>IJBM#AFqY:dM7jP=XdYU8n7_k%?#.3YiM7:%4,Qbn,]@Nu2_A:DF%l9eGaTI19[tkQ3s)@k9_CbQVN'N&H0?^6dV1?fIrC-^XPXV*HmgsOC@iXFqXj_RFTjZ]8oebqY43!`??=Z*%.AGQs%d-e`%[o:J&qp]]hIP/r-Vf>K.:,UtqDe;I01]u:>a&-"+>MZb<<%hRWq>bb^8^,)8o.UL:b![@fXur`g!hOu^'bHWi@EF+%VT/AJI-W=85O=K#ifO6S%O+K$>1_mtQ2JK()<kGa[&dR-ddk8`,MG?p8f+>r$l?itd25claoF%I^S32LX/)fXaVe2$i\ZdAm]SDk%Bc&-iZ3Ugaj?EYh^*<<c5buSA[P@sdb=#F(NT>j.4eR?EP3^*fm2UtYoJ2+<HA)cGhr8K#G-\brD>q=D(X@=!jSqS7AiVZA@m>;C%UB_,^*Wrr"$&pC/AOK?]iVQTio^L\KEq$V=?GGk.HmRrn'XBNA+SB3adFemq:K1`#St3egnV+K.>Z)AV(u0Gq#O-%!O[4@nQL:uf%Srcf5O2ESqTDVIN#iV_Fl"8!3Q!&KcorA"(Djj.Pb1d(O&3YR[1F*^0mg-iX,D/c3`3Rt"cguUD[*_IGF0P\tIsk)6YEru"*sa.:%l#kaQchBMN8-%m4FY<La2RPXV]NNbTD"#Hro*_ifI6)VIom6C^DG7E^=O_+h1)i0Dhk6pq9]n?*GlRbVbo?4_7kYnfAM[M`0NdFJ%n!T_.nqq_ZA&\4KHH@B?j>H:!84)AI=>lr+'QGHdQ^hN\g1#9o/EsEYid*cJ.h0TiFHePM2(4l(]/JQ!/EtHC)T^41rD)_e-n`H"%L^V:>8n)mk>hI?.ouEiR4tZ!;X]m]V'af:&01a9]So3)]E%n9QMf]$mAXRPNHFd]X,W4707%3Ar+VO@U>d$hB]OV\%/\Yg79J=)K%S%@&9k*eHuA^"P).V@5nWm(/GL1hP3a8.m*8eH!Pe*,b<e=&:&Vp/0UZSQD\n`[*YcOTlWSsMVUSZQPB^3?YnlBM56)eS!A@"8.6%JVrL''nFcY>nfZG-@-,3KtiVjGO4fIHVkjl/IhY>E/P&/SQuj]G$>T2N+L"s7(i]O3)AT>l\_3Ic$!V'FG/PfV3VJQ\JQ2$&KM1N%p;?>4+\N0HU*n2p0tV6[7'>%<8Or-q-q'oLdA?q[2BQ[lGdXF6JVRqnKMUm9F\N=+/"2>u&2dN@h6iR^\UfjT/f85m5jjn,<Un";%(4m\2;bfKV:qr+"KGpE?YrAD&KbK2[iaNpeRJ);!".uT9KWHhDW"AUH%S[51VOC1P!X/d0fNNC'J8?k!604h=:diX3E/'ZN<GkB5%`+#CcMe0KV$oBaI>V\^NEm%!"D*bd%[N9U.*i"KR[e/*oNtIV]1W%X(mk3T:dpNYrFTKj83MUSSBG\/N-m`fr#Z<KspYOr7N+DWR%><'G/$f6CbJ=LZO5pBnOQ8t6QO`rq'jk+dsFT-d)X9n@J5KllY'0t]._B\"Yp;g"m,qH::D:nR)6c3<Igt69ip7UXr'?sK3jhNkn%F.-c'p;hgF-(X1!1=7Y#R:E"kfRp&f9Jf\i6k^NGSY@5;H<Mdqo2:EGA_-.+RUQeR?8>AO,nj"$fP%%ZfRp&f9Jf\i7'keBj3_O,%%uOC?&WC`r&#g^EhttBsSRRflP.>+tM-O<Q5uY#n9eVoJVNQdJkDOa-9uS/1]k!k*8g]uoU>Ikl6Nc=+MH2>AN,jd3j>EBcTOJFh%?8@X:,nnOMN?79>iJ'L/HHAQ2PtX$d]gS/V_\IOFoTG&C.[a1R+Ebc\gMYXg$&=iUR^lt'#u=+H8J6>GZuV"2PY:X$\Iu6r,P7XA%jV#6TQgT8CZ9ue,'RJR2ZuSGcPtUc=6/NP:lp9#l-Bb?=U5?\%#EONZ'WkUa)!)CD`]HO,6,alZ]jr=T8o?ICPAV_hKX22H/@Q4u%Eetj/k@tNZMENA6a[@nL%%=<fAk&Y3fM44p#0gC.d6s(Ag#n<&&"6f[d7bi"c-FL%)bn9m1qdFoR7\fppNCF:RSN'4dE3be;(g8.%XcCdMm8iR>d7YgLWFV`[6eCY?Ugak'?8Bo%-.BPkK<GYnRYEtCSp8AMR7hES=0:RU;m6e$>&pD&,nj"_/GJ,+d"A'X9*D"pU5),"%LLk&LK;+]+,ZDf!`l<\pRA<01+>t_d"B2j!&'#TL\RX9EU6eP!;oqE@q)4;Ih1e(+HHAQ2PtX$hLQ53p6*Yk%Lf?"S6QGB$D):NE%d7YgLWT4h(GcYC^1CX-d1";ACAh"ZTnL@@^bT4TERSbhRk)tR5j'-mM9uS/1]k!k*8g^!tfci>CMEPX!a[@qM9Jkq)FZq.J@1Sf5%1=8cA'2>9a>`Z<Dp7UXr'?sK3d9N<T_QX9ior0H^aV5M4)`I;m^)?VM$hBHH1RHl`NR#S+=6LmUk^3g6<%cQ;J)7f<#=6<M'YS$$%R7\fpb:hfWc"5L=2O[r-d7bk8EDU'TAu9:pj#G+Q#0gC.d6panh-]*mK;Ou/1fMLa'@5g$^$UP;BR7cg1R1WjgP<L>kWuJ%k_iDX%Hhh^3a4bF`K;+]+,ZDfQF8X^_L65mTRU.bs9I4sJ=<nscmF2UP1^i3HOKaDq#qECgkFnnC-PNihO99UH>(+4uLIArp1J6\AYcg9A%kUVbfT$KA33!Q"LO9F?096S0n!(W_-po`j+]MT#%S[E!#a;(PYXZC`=l-(^;5;R@tJ@:DD&^pB&Iu<=A:581$bdmL@_5MbqQ9jd4%]0@3sX+!PjDc$9A:MF+d41;BM0_Kg$-PpkIrU(1j>$`VM6bC6RE?1;lqoE"o#L`nfa+R4:l_`&Mbo\dXdq\("8kjYf!-o5trhh3"%V7)<]e)Sk8dh^gU%d=;O36V[sg\1:aj6p'n%_eLG/l#Q<l+uo"(B@T7"WK4q&ggBbVK+p+e(>1Z:&uqNOun*_h-TY#OVPZH=e#t=%2O9O#d1UKq/XD@;>;\a(\`M4,SQKI^m;3gJ0]ZIc>EN5pGVf71Y%I&PFn^R_acHh6pf'$sTO?b=jXWg9,Vo_1UD38A5p5rCNf3jf%O@CC9p<1(%AWEb'H-*+W(Z,M@^sOh$90uPu83A2bZ-9:R\i(m1RFc]+8Or$pG9([&#g#^uBf^I.2.@/sqX=Q]m-mj2EL&$#)0RSW%jMDp"SkN^V'o7G'aE2g6o<2YEQ!'Gq5/t&CEoc6M1M;h[o,*ue,d`X[J$CoGWO)Nb*-,]8;.dmT\X&@.JLVaOfe77%dE9;N[J_[`%76D<"UZ>H/-CXuWf=<lt<iNgCG/XYlVNt4I;XktXcrqCHNAbHBdXss,7>8]h;L%r?/_]>b-DeGLOFh17rSWR&2b[lBf4S=&hk7_$%LQWEa#Yc@oN()Enmf\n?B4:EW)M(3QNZljV0.Z(f93fYda,l[$)CA#UG=])&0F>8k+pk<$>[.GPrFBSBD+7#:N=eNJI1/Ldim-<j%91]a5;LLIO/ep<WV0bu2/Q8lt:1Vp6cU)i*/N//43rhO(JR%:bJUAc+.[6blr#Mg$T/THm,NMX-+@o?[i(2KCeQIq.9E<KG>HKOu%1jS\XNRe=@)X\WOBB7H#+AA%5LceXG_K,"O2Fr32HaKG&,3p`FFUNH+GrkKPUl9tIEW2"_cPS<K>`jfa%EUq3K.8-heu(L"a>O-l%fO'-\>4;:HJ'/2C-qD1h1NlRhY2,j'[9sWb$UrTJW/[Y>]B"o3,$to6LG9&#Sd@u88o"6=m=<i98U3']I\W>EV9ogP`H-__"4GJ(%b$&.*\/41G:jK4t=A&5o'3+N]F\nQU.oFtR/EdlZ*Zg(YaP"K#`'a.R!P=UQ<>@h;!&1H!Stopt83<[UD_Q*-IT?P3:7gt[DtP6P%o9tnID,lot\W%)*7^Wt4DEji\A1:'ECs[n@;C21h&<?%ppD^cp4jKDVN'CLtQ)j4l(=M#GGo>-29l&+p8[opr2chfBNl<Gg'Qub[%We:kIDrVeB;AirRX]+^e6/snec56tA01eEY%22:O;o=WD-g^h/?6LS;>WS1J;7kO-#N?1g91J4<`\"gpq9`!iT$leE""k*p9osIN%!/MN3&@f)j(]WLlMJ8WQN'<AAPDm$`J(I,c<$[MY6tK3\?:\/A8W#8q9&XCgYuRPkB<Edt1:Hrf^nh6`kMm0&1;30"Mu9;3A@uq:%,Ciu$H#f=:PZ$]Y\N"gB9-A`R[;HVg@+YOEr$jJEoaJC_MmH<&K.Ff!aLN=f/C:I<["`/6_bquWlWZla38QIhWl=@.Buns_E:JBD%(qA"TB2^$WL7le&5n9Hp37l]l\r%8s^ED/ZL!M#/cUIZqF.Ka%KMX$1bK76#IgagRlGkS$&e$G7]!s]5f9ION=cA)uIAJ'agnd:N%$Iammp3SAQdegBlZstRHVk[0>eKpd/YFHgfUeFia,8s9TKV)sfo2KJ@3?EjHL7r;^BKW5\<f;YaYTcWY6n/!!eqSG(&uH:4PZ18S%^*H9_b2oaaV`rd\%bA?EGI6h5LFtmE^*.rZn@1!d"T?4SkiR?*NCoE/'hb1Q>5sI/]AK54G_Hus):`i)hVd=7X<Ghuh5bh=o\8gs%);[*-0%do:`+F7GS<l/cI67JqD6,+.>:p5GQ0;oXjd_k(PY;$t\SFL'L`'fXRb^nM*O]`RC@\eMeh=A'`&a'3P#I@F$T\GEEO<Wt%/+<iG>ICC[B,ottY1\VZFIf57<jQpL0jNc\g<$24$PARm!i[nVk]C5P-=kd[lZ0K^0mWNGQW8!BG+AZA*8.g*8QXa["EH017/@OC%5]4Hgc1nq+fqu@*C-uV!bX3W356gEI.gC?HaUT2n/;R0boY%iM8>8U8l.[^H7;9!^S)!QSPb6U6$lnNdGO29W:%fl!0k,@f;C>pK%q[OV^itI]l@RsSt=?(cF/@.9/00Z.N+K1S41_*4gBnAAR@p,U-)#7"n;gNP*(\T.^%AX#i[kHfb>(hnFb,7c]Zicos3["bdQf"@i%+g4HF:f!CUfCFt4I4dnBPu>(n4*VZ2?K(r_FV7g9A(Wr-I44*Z&pD_GVoaUC`^OqsJf:E?n\iSL&h$+S#:fA5b&^5PC^O+Z_:"I(%63VqNk6"lPrsES![il>M&A-N>g0i,VX%c_PEMG$#$ah9-cTVNH4sku#4K5Q(1ID[`CcsW=H\3SL;L$K:JG_cWP.tIhO%Oc9OpJg3%#>GJQHQ2uL@-;&'[<dE!*6&@e&)KY#fd!Yf+#)LK9?-QRinp.is+Y)K9UIK[-&-oX,i52rA"Hfj<J4Xn1kAY8:o[NuIIbW]lbYS/%IHWihL/#3F\96^[<8(T(T>"`sfl?Jp(MNT5RF-BMQn3Km"(*5OdeiYG$V!gQT?+.#f%Blb(#-=]M/@ZuHQ0SPeY#kp;K%o\o:u8;%+^=QW,SbQ5;#E49?oKTsSpnKoDT124IJX,tC+VMsDcktd>&N%%K^/g0r1ok>Y[(($/?TVC1\G.m:\!`J:)L9gShUof@jV4mo0oML%6H9Y.)No=V):PWh13/0DLA8nDZuaX@?i[_.=b#bRTicJE"=\-49LSHAQ+\O!nH;';T7c5*K_7<cp#^b=LudS](;YOg[V56Q1ar+K%-#BKEjTS5Jq8dlu3g/Fi87DK/lupuH=\S8]-4[SJfhp&4.FFo+3b%V9T(5FPVMZ+,AFtKUlEll;KICA[X!#oSU%D2fkMse3;Q&8$%G]l?@`D;<NN\EJB63p/qNdY>]_tID^@Xk4nL"Ogq4Q:IN.T(#dh86t$W>uq0P[afJ1lg^s\^`rJr(`bai_CtohhaYbkDG:ui+?9*%']T'I*V5f`g,+='nY?Z0@+tZu>B1'o4KC3d#=pUE'?ERQIRV][Bh5I"rflFiGH+QI#Z)GnFt;V4EAB/bW6$@Qm%b\#QCiU!Q):SJ%fCmM&1kY68]!3:"L"k,4eam4kW*@b+BVu?]K"@h&ji,HM1@\8+'hN&VWK`qdJ^C5dTf>T>3^<&Kfe2mqNo\CoVB&66l.?R!CQQ@O%Qo3JPkpFs0;XuWgiTr[&R[g?g1ONEXHnXOnE^D+m<1D(b=L-d;Q6..@p">,BNPgb63-hUK6_rB]R3#>sh"R841SO>niHW34T1\MT%_DUbdp+P=-:2aTJB9:RSOVf$lr','QT9l@n4(V.@MA81E2sarA9<P_H.k<]'l(07@nH'jH\Qo#Tq$jqdnEm\XpsuW\Q)("5K=C<9%hKd0@g;@W:62%aM_eGKjZ(&QZiA;LNiA?S6aVrV+8X:n8Vidctf<CH%$)`o]O/E0dE>]YhO,dU<<cqI]+f(L$-FbmL@@ui]QWP.K%](&!APQj_I`$s]>1dK2ejI0L5oC-U8`YPoTGpLX&8gli:&.A(6`&lpQHOr5.`&Efmai._1$<\(d8A@%54\\"oB@a^j6EFg\q0i:W%2s>$]-BY3KN>9Xt(qfAUMhrU&R>b%P/.KePienVQ43j#@8]g9Xnu3_@k)j@E`%]CC-2QuT;aqp`ron`V2OJp\TT,OqBjC;Mp>keZ%O5X^gN=[0`7F;ChqT@&ga<@\%",NZP1.rVaFiE('8YKWJ176+4eCoEuXt#QR+__c&"M*k%>Jk-)BuH-SNJVhX`]H;lCUXDQgt(p1%,R)RP-?qi/\Tj'^]4GElG=Ek6'+nP1#?J6(f77^X,K9"OH2I1;mV:R<AY1l,`+";0&O&(:OZkmNae5A4'qU4VS:bLrdoqWfk+bAt%`\!(a&NqC0-8K4@PTJj;$qYFT"smLJY2'2D9GtKPKc]LVkmN/+l^-p-M(O"l,QkjM!Ii!#_]"WD6[WWa1;/tnRSWm"9HES2bQ3hN%JJ=1K_-](=aoRWD_[X01.bjSb5BD#MbDP>VPbim]Obf(g/ZLAH^a-u[Wpb>[luTgg]o6B>?GM7D_s]o-HsZ,ia--8-%U"_kaJBG>%bc$<3"$7K-7CWdR5?cW;NP4OI8Whf,pXcgK=_N>g<(.HPC*@,R[PWP(6ZnmNg:=MQZ'`ATaT3/>(J@l-%HCN4@Mq!RD/=.SBR51X%n'Ze!NHR]K0stGNcq%b^4*]U/m:^?NlH8^W`YtKN0\>(eR>q\BaSg0sQ"`R_`6aCSP2t</jf,@(*W,em--s`pCMcVH`IuM*]#jh]%$@QQc`=u!J.2mLWVnnPP<RQFbk@h.ZM=0@)4P=6<hBCr)8)22I<t>`kRNhf4gq;[0$?7^'6DoQ<M>N4A&uVj5QD)f<CFrhh4O9:D%<p_-XW&\QX<QSO%hYn7`;olf,4>]YOechp*L9U%Zl+4:JJrVEja-2;&N$cG!H#!g\$fa*iVNR:q="HDYF)kk`o0mhoPt&+aneg)+%WobOB&P@=am<5LCNZ!#nV:h7li:3rS+[:qi\.?hlM,_QQSWa_>?ccgZ-I7"ZXC8l6N4OpeU-K3MM*bhK+OAu>$^)e5OW9,3K6!Ae%#Diple\Id%jFa1s!f6d.%Y\H^s5e,F`3<)\#u)L8Nko2@P*4CYaV`h9M.(TTdg<<5C/c$Ho`^N^*JXi)\#!eMV)uT;5a'/rJ[KM\%b-[q\+rbthp$H!FLZG91/+!Zs:$j)BP=$Q<N8VB!DoICa?RE#r-HE3c%M&7.M!gHHd7;cf(fUq@91Z`QPh`MbJZ?q3g6)C^h<^5f%O$1A#OKqFJ,-$!@q2'7^I88.mQV"f+qB^D,&l^UKK3DH5HtT616'b`6J;RP.Zl!cjUh>Stf6!B$e@Q>pcVBJ`V_,Cg^7MhXUQsYE%>_aBR]#fc_;Dh[;f:nlq/B2JQh<u+(Y4%`"L)-O-a^R(T/S2F`e/m3")g:0HhXt+W59QKf5-2Y'CrZ:6=bj1_@TY5%*MULYBoHj_%6==(h4"\HpKUY_22@+c]]_u'e*FIEY/:BH$YS-gt)eQZEf3*_,e4pB=V8]t64HMVV=FK/Dq&HPE014C*+P(J/XEk;SA%7soh`E)Y%?!q9/]j`if=E'V96+njE>$'2m.1[p\]j32U?:"pe%DOF6pOqWX<nZPmFMup7*3&Yof[g[>RB]>]SN(kH?$]g4Tag-ib?Ij!k\,bJ%Ru:fI_nD+rrTK!7O)eu16S1/QmACUQ241GV1f8,ZUae:T%`$h2O:1!@8X+m]=PS&eU:`le,^GkN'jZF'9ulAoQ30WU=#uQM6&_`Y%La+C>'P#^e88"s@`>TGN2-b-lS&8R<P:d5d3]dCKdE85b@uZ["8\u&om*mR3ekLK7il*OY2DW)2_H(<f.m"V-5UBLp<7`&_!t2X^%HM5Q%U+W?dk!I."Bc0^EW\[t[aL.EPb#uSV<!I:PSZ>:r>Ja>@Y$5.'\dE%H_Ha(0^b)eIqrAfnV<roqd?WU-:j?Drqh!mCGlO7[%<Gm3nqu.i68*aWil.A?pik:e>I9Zt\mLnSm%$q/OolOpR/Ua&4G'+#Q(07km;962$5tJJH\Mi2T#"uN@%BaQ[C2NjjX(?%Lm=!U*%/&&8O##Fj3S*1g%Cb)>dD93tM!DU!CQ_](/Y@noEa\i+EX=P7Ie@V!uq'Rr[*lsV7%j>%12hSI8dD90CSc6_+GQ.Fl^QA2nr;3kH%T*_#03Vj4tAGiE;b5:p9d]oE:IWG(C.f-pXg+JuKg$+`1/p1dfRuPa]bC0a`fi?gP]!9!=[L*RC;mL&$T\4Z#@:7L^Kk19M6FiJK%r#T8QdAOnWR:;(G;hNHQ1@]L6D6%X5K$TB%gb\,+`qHFV_&JA<qA.`8*uh(3TD3Gu;W12C*Y8W.#9mUL5RqCH0(t51GaLk(Gi#k]%9B#iD:=DoqT*\(`G&0]ag`V90!b,]83p\K]+R@#]Fs3,&-K"Md9'X^E'W5:k?2XYY\Vm?%ho"V>E$oBSq1<*TiXA+?mV%Oa<*Fl'%T$D"+WF_Fs\9k=aU<dl\];OEu9KN`8S;Xr;Q&Pa/SNFT,lkfuB3\-B<?Ceu%C?'3=s!b/L#t&"s'bU[#4J,+M8H\3nCWIRcMj2aj%.JV?T<9nR*!as[@$$%8FT<2;LYu:$;>cIHrgubWIGFJ4F_eg)2Z1.4@Fj&9@0i*]_r/'D"Mh>,gG?R28/l0E6$e(8I5h_)G#!hV8%`CD[C,N2jCSH%%$0BrC7eR9W3Bgn+NhtrN,>nK!*=+jl-7P:G`kX,.f.KFcKK.j+8p!NTb;k:f=X`Qb%SWG[=*1PH8TVQJX8VouL%o"$F$mU%m!j?hgJ1#[]m,.^QhLFK]2IXbq.$M(kTMcVhN[cj2Sj(7aK=@SQLWMMnW**'E4[SA3oiX$)+1$sKJTk&uO:bDb8fsiKo%C3"<&"!D<lg%N::?Rq5pU$lgf7Y`,+o4bdDg>qb4Z3%qpP;b%Dae_W]TM&qaD%9T-'T-ogEI/A7Z8jIoV!M3G<aLNGl3H!!8<4a5%"enniI]u_3J*E2[glVZt[7Og#jZ;R(?cB\s`=uPcR/<DP?S@UED9OL/CG[cFgq\$frYA0tRB>mZZadZJ!l.EL>`Y/MgTr*$9.kL[%26!&F672qKR`c#JG4Y!^%Wn:I;``g=9tb\HF2._,0R]i4Zjp5N>_?P>]VMT&b?sC*9t#R7<cX_P@"@,';/4u;P1o8i)(88%C`'?.%)*6'->=6]G>>--0r:SM.(_Qen_!EKnCd"08$0V=-"r$GqqsG0S.Q=de,fgNJpO#k+[.a"lL6juj@f5d#\[U%O+Y@X9?cPqZEdolo%#DX_Z.oL&i"$,SAGfA`)NRGk<`?,ZE`K3-gr$s\98GdVWh\U_<>Q&JBk6a`5E^onc%HdGYD"KpY)qI,Nkg>H0aC"\.ROqn7\9)>r%6gCpD>OJfJ,U5N^9;RVJnD@[RXkX)0;Cfm][pDqZkAc6aja<$#^nS6([HBn(J]5+MV7Z&P6-8W1>o0:!`+qig>45APa*3-2)S<EB%%81%<l\CH<SM%Eo2t]gh$Z_G8[l1p0edGqNs+'lg\=)sAbPMQja5X`I$h$p#-*m7=NbQ)^KFQ2+[,bUaY#*7K%LXopW)2Q$_7f5*%<[qDtXH3R6O2JP)!dNW.*%"8e#F3M9)$;'q2a6%mGTr-q'K6RC;I-2mr!A1\.mV%=8Ve98r(aLiT.pgJQhn+b[\XB^43JQ)/2+/t%WF:Z\*85cnV#jiO//R<Zg=]OWkY'e:M6;Bln^hCiqH5Lok`#'%>NR!Q$IbBaR'-Qdo,Y.s9t43(o%S6t%$ccl>P1E1j;jjV/1:bY%9>p)r7#!$"mC]<e?jPl>;q3:MCT'_9CKGdsKE/a8)m+->Oemf7r:Dl"mkcR0)&`ns1c5)"Wi:']jBtl7R[#Y"$ar-$b7((4f`!;\%@g.q]ANB&6j&_"M+WVHS)kCS8lEfp+LOiSP)^P>C?[h$YkrqEt&cY>@g@KM,B2?Gu,1OO'nu5Xu]U-lD;dG5=9V6qJCg_NNQXA,6%AI0$,Miu2.EREq6/L=r@ib`7o`f_2jIc%RShY0$jZBrth=-rB%'Kqhu&WIk4`f**[+*/*O07fiMX!G]ZL![69e%S`H>;4T7gc-A<%T/QDSn=sW81)?bB_Zk:-Nh@[<e+g=*<op<Ak=F)K/WI],q@t5YB#8,L=P,iEUoHU;Us(Z@%9r':8TW+\b80rD'"+i*Ub&oJS`.H<%Qh:-U3p.<+O?2+H"gj4E,?>=_S/kJ,E%!an+L/4JrD"YgECS,b%@3W=f>:pLp^g^(T"fD%ke^Vl<gORK79j\oOVg"jDb?RUYcqq;%*O4n`ob_sX/7ThL,9q9idPA,&;ms8lpf_s>/]lF)nX6=o^HS.arIXe^9U19(HC\2Mj2f1j@,HS#nD#_/"j:K+B2XLU,:JQa.cAh$%fqGtG]OU9$Z.H]4!Kfm2*5QjtTeM&iWKb[S^M?h%AYnQk]G"tK=#jOGW+l)%[!0D-EK_%5cmedJ\VXK#2'P5HoUTjI?Es1$]N?iE%\U"%&W$1)h^*-!Fg0K?o5cL^;W_G'ZF-XX+H]l=5^5aUq8^i3<EXoH8-LFY&Q)?OG9;:TiWATVE\q6^!N"0&7\HMu]ZqME9pHD3a%5/s]Cde1st7C%-OGZ'd2M=hdbm(uT(WI?Qr7%kI4j;WNMjCHTd6T;]AeY+EiQBj6a*_s\Sm`N5-1aLK-TZsmH%uurj#idrDQ?MdK%a6;$sFADi'QhhK?V&]\f[#B&oHNm#(C2TF`r(c#8V-HJbalV`o>n;rn?RX7H*lG98D;uh6PN;.%jI3=/^J166dZh@M-KatVJNn@_%$$4iLIJ]'#e6B2^I:B19:Q5:qU+c<4Yp!iPLm^krGY)ZsrTMmN&"C1)qbg(Y@>B4hEN-IEH"ktTce`]q;".@tEi;L%@UZNrMoC4M%()=!Uo!L$lKVPG1)ff3_>q:sG3"c1=oH1=$:iL>"e0gOdLg3O:5@F*/-Z]5W)GOWT*=b?IM+Lh;l&nUK#2EgaMLndHG"&:LcoL3$%\^]!/:dl.j*/[FEJdP>5A/R#\8Tp`jGGqg_;Y-g_:g^IQ:?:L5&PM#)j6R4RQcB1A:K=e5_P2Z[Dp,^pqunS;k]meK,Bi]1_%m^'%j]kgU7&aq3YuK$!XNi*SWhDX#kA!,YSGdYpZXZQ22=4%#YU%\L0_bAFQG,MAZT$+PK_rsX/(b)9lVd6LNg]D;C"ULk4U)H>d6*^E%3)eET5n$ffR;**ZE(OT;^NEt!C3&CsVmGA^b/R++AD'p23^S/fho;@26]KR6MP#gmf>hoI-3W1'?>:);-FcBDZTEOJ]OQ8j&t!Ke%/$qL<Q#;2):_9l@#1g[9PVP:=D2WaA])(tepoL1'ZrF@9fgZfs.s"P@2Y_*<C(;n7=AE+=f7D*[rcC(jCkEmpZn_Oq6u?ks#+n)I%D'KH]2?D%I3ud@sD2$:Ob*lOC[$Att[4EK/p:SmhHO\d>6h\ffDMNf-;VS>'@8bSAE'eq6S1r]%_T&k:%S\d*C#+MGG<V(,Jgm<s%0RZKaoq>kE'rmEFQ'OD+FEb&#I-8t*_%tDHNm*+HkBQ]K1$WH;K=.8TN"6eQ[PLC6R5.Z8>3sONB8dV9;Nm[A=i26-Z'HAk\iH(]%mSil8,SlV>,e@j-dcMC6mmsXbrNBtQ3DVH\2THnVrdMgqK7"1*I/R<rO^t-/:TYI9=H04!HN&HJ8rP\AhZ6rJcRUgifB"ekY$@=`%2RfgO[P"1F-^V!Z-dS!(fN$aijhY(1SU=;7fWo+$Tfhu64q:=O]E2m^3*Bj^B'#2<&Mjar$X)J[j7\@``WYI#$RW+MjcM[3+'8r/%_"@O:#U>dc+s9IF[BQSaN;"`i9iJ;tlCg4iWKBX32DH%!FX')c[=nMl%]+*C1cT,#X4BrY*?VXaoLB`G$Dar;5-;];6@P!#s+^Go%[obEV-[YQr@(oar8C*Y4m/65UAii=ebrg_6=T3K2H?mQ$Qh9Ym2D!T`_F+LKDc=7&^Z+(nOY&GL!OH9nh@KdPrRgnIUEgP"m;YJN%V7_!);$54pM/G7#d6=an$g*GYg>`14_j8K>T;YL%.Nu4X\qF5B^P>sub5\.'#X**4M^k'Fe8COGT(&5_fKaOhLGBC.HE!c*M'<`l%nXHd+V7Bka$/[.B8B/\Ef-$MI[.h:@7csFqB!EKbn%BUNI[+8qr&]B+\,Yb)NtqK`hoDqjli/torJtU@aAMna,``iuCl]KsLll'E%?&3a\#h:G3B4!b?%.*W!D\=FLdIG"?$eVN:5j2@Z,7l!iOOu;0Q[H:;]"t'f$^\gN^n6%)Kn-;SIbe@97F)5*n#,ftU$``pVJ:mA%>gEUn/Q;T(n>$G9QY+>,Fr7P/G*Wor8MaBYH^1*khAS$k+nkPo#7%/u73J,%CKJR[!Q#Kb4rj+c7r!7u8<gZZ"**$R28Ou/e0/t\%92-2W=OQiSo<Pf>^o-fJT,j&orTDN@<!<IC_%/Q$`G\u]M2n-UpcOmc_:4E=(D"Q*%n-std:m'<)T%Np&SE_mF\V0o/e)d1Fr.#&%j6+TcEh?CI3Ti%%+Y*?CmQ:[(D2H8V%(t4ImG8Gm6AOcd"S'm)_rDPD^aUVYkE(q3VVL$o+fh_X)HI!i*e?"m86S(HK#1K2\&eMY%gS[&+E@ars%KX-IjN:-ph/*P2@;*R.\:T1ndObR%b5fp99r9)KOhK-+J^0%>gsW(>JYpKAQe`IoAWN%uJD>ViNiTT]0'5dnPr]))%Ne>J<AWNhGp%0/Y4pu>`_N9l/du(+<<s#On:&h&SMD#f`?OengT!W(o1388I0D-SP_Hn56?L!V.Q/f*Zjh5muNtR_Y?h$DQ7W`en%qMNtHdei^C*8;LUX4n^#Hf0+fV@DX)NL[G#Fa!ZSN!CD`FD.<[&8o$5-%@).8=+Z#r0$iLF/?Y"CDriB4'JVHn\L#s->1mAD%aU)%N)*IXV.!k#S/X4JFDV(Tp4SItFP8:te]M)Rr4"d+m\O/J,D7lM?<dHf.!:PjrTl.^D8;oATst;l/],'"a+jlJA5&#'(bGG,inp0?%p51`1(?s"<7*W=3bj-46k^R'SZ+eMbVdt--E@R;U4aG=[p#);eLD"UD.B'ZsUK_hll,b(mB2h0>42Gf6)>]g73'7S01)AejW3$Ir%R;_`?SM3-2M;jPkWR^Q)W]u^]=@`ViD#6Rt)7)M3oT6a1r`rSQlRSi-N<c?>&Db:Spnr11"h9Lp%$&1!-ZccLhuJ@2B)A_/;,o/N%L2fOMMHTLVp"1d%P++(o8<7_'FHc[Mo03.ImI`@:*HUH[1I0j&&`IK-+$MF0;%H>&=r;,ZM%0ho/%/pFWiN@1C^ou%DW)lbYS%Vc%`Hl4m;3XZk=TrT1q'9'qgQ!Q1CDfVhgPhMM"%s7d6:\au^@GAmS0'Fl)_Q1)M)7]rk]_dmVC.\\Se\]h-e;u/O^F<#(O=-\eZ_#5%Wj2V,N9S1Oh;_)Wk4(m8kg<.3=r>$jA^86_e5>44WK0rom;+X_p)SdUAGRa\0:H6$$`UX!%eC:%4FT)6DX;C:R.gYk3Rh)Ya0\Vg%P\g8R's=_Yi3TfGA-eW-8/`pU_Y0,i8J6X+8QW@HLYc'P/$%BrZ7WL#QPm-J,](S7]@`MW>-b\V2V!e@Fi\i>0;TZR2b_:199<YW%-RDUV7k@-,LKM6!-We=t.r$Ldor%r>2;<!DOsQgJAg3Gg>+6g7%pq70;2MKi<7+f[P=mcQaS+Ek*_Y"c+VSPmaJLs@B>dG'k)r>H%p'jZ)p(R<r,(eU8T[m&,a3BXYO5tuiW7@D&5@OPn`7VdIC<(5L]jl6/.JS>/;@T7#gsI\h?$aS\o/e2nUoD@UFRq[!<[AI&0Su0j%?r$65*ERXM;*>_TldLIG//A7"KAfahW1N$NNm[0?>\VPC7Hij>n4Sa^ZA!qi,fenN6i9%Z;)H-CoHgV@cO^#87oe@&Q/`gt=i2jk%:Co5SnurR+Wd:h\bLs)]QD2*30a_IKQ*BI?]PD[S##iNXcp^+dQq3GY&&PQ4%H5X"=E0Q-@9AC=IZ0Ga2cp,I7HuChE*ZT=83/?(%dPl"rAJ$:VrEp0V4dY5c6#\pl!8g/XRP><9\]oqkQ5O2tjB"AC<'s-&PIrZc/=)3,7n9u6aX]Jim)<Y?V]npb<U>(QB&A`JO`N6l%RbjhlFurl*oc,k2<LW3AQTj=Y;cemq_)8(MJY<k>(8WVm0KklD(LP:GCbaCtHFKh3*f!>l,FrPHEUFH`49)PS=[bAA$DYag6=T)>%e7NSEScp-9QqN4R!Lgi([C*#&lo]eo_'YpLjgLL*LFo2.6R[mrQg?F&9sJ\iS6Ib0I3pks%Ic)Z^L$',8%dO>^ZhNN$ot:W_S.fA%3\%jl_hMG\PjkB@*edB@I60bdT31*L`BaC?$@RX>N(ZHNArZEWe&,ISPos^([bs%QOlDU<n-e:+pm^AXc[Y\CN6r+*Y+@51)O-'l%'!(&%i7bEW@*6?=@ufQr%>Zj2[V0lM,T_]e<b\MfLkSc20Oj"J,HG:?II5kn3StUf@RjsCR1,L0W>;ogA'R^TQ"9D8`SrD`PP)n'%P!n;fpoQ^SoeJSC?SR9EQ"b+coaX#<:$5ZpV3ro#QFYCK1qrNU>P3ADQl;KnAd,l#'!5imH2_(i3/PFQ8g%.*AEM<"dU:]>pRuGk%NoDSeq)lqQ=83?WB1K,3P]J."Q=0uJ[qgZ^n><*]5/WYG$Sg0i5Bube;6KZ]P+^iE!R8a#/^*:C)\nCCq(O\QiWm]B]KUhBOl]r_%@;/GV0&Nm,rWC@4bodopALhQ:DaE.g`bKPFA/r`TJ[:c"X4XtI`0aCFlCf71>r@P?ej)u3Uk)Osej?V_/_AO_mpXG0Emuq,7.>#-%4PCOmrj7T,;<eQ)XctA;0@s:t2M:O!CaLUWr]@O20lOa(E=$nr8WM)Y9D].X>PfZ>R%)/7QW<Rb:ofqC5H^6\8O-Gl,iUo1K=?"A%o4ImV/obk>!^Jj.hFJcg[>sLBH_E5prYgJm_F2jO2W9DQXiDnPa#tWfg`/)U"XCfX)7<GM;n`t=W()$3YA6C?E7Mj*<R,sXU:kt<%p=^u"Vke?J@IgHESKjDBIHn8%*rC9J75L+PO]5S\Od%SinE8;'McVGF'n#l_`,]m)VOl[!GP(uX#L-f?dBM_)7$X&fFn\I,R[kF;%LO7a7Pj$P,rpAoo`)Rh'0M$lJBgYFgE(s)5:+F2Y=o1)-UhK))aj?Z/Qs`18Y\s(''=/GR>d5`+_u/762Jo'g[0te02Ds.2/.[d!%H:6f'+fpH%D<gp$#Kt-#39Gb`(;I7McKkR$a8+:ZK*gA6BG'WX7K'S3A!!YPHUI-L;.++2Y!8OGf+FA3F!A8,J)0tgIm,UmeqW70%ZfWfgNd[hLJ*h,dk>S(Gp[88Yhu;e'rmq[kAPTo8<9jB]#>?V*&!BSm8<G2!`Ac0f0/,?$mM/RhAe'*u[nBmOai]Fd'Ei&$VTt@_%?sq%_gmK$o%R+6W[!niNaf/3cA\#rB\1=jpbXDq!"7KueC)Hd.!(i^4D%@inXhNRF-XRLgk%A7#Ph#%N0DHFI[-T@,EDpb\1Zed>%P3-JC)k6Q0'c=peh!NGnF>\%I"OsYS/=qc0[WOsKqr^g(ZDoj/#^k>tm<-WmA!]DHGqJ(uT>)9G<qQK*8O%V6^F#tigGSbWXN:pF%oU<Q7-NXt#OBRYTC+Xj(X5/]54k5FR9Y>K!:9gpX%An,[R"a_"T':CheF#aoP./lu/6Q'/]nU3tCN7)Kfr&&K\#*[S1Uq5c^pdDn%VtrA!0j@"5,86PT/[ua'V^M>(4S=e\]pSWg>;'P[\Rk6OMhbrH]*/X]XC4':n31/orqr*fYWKu=9[]C#6A_LeCCOdV`8qRf[E2X@%[`cD*7h_uqR9mG<0r@4D:YS4mKSNr*=_bQ@nnZb%Ob&mCGIrPWQm?AD(@,HS&L"ZbMrYHB]e4$N4=V/(MM.usYZhSQoI]n:74.um%Vk%`r6$Dj%W^%)*S:cX$Wl6T*7:=0P*+E#MOj+AaF.ASP&<C"k$]eIcF-M$%hH4?t</)[L-$<Vb8QSup]4^*D@2P]VINgon`g728%MMHTJM0P(K*EKs.VM<'7SXhp%VcW>pkJe&A/!%[)dt'Z>Z$nBni@S59R5#p3K.nu!/^#\Beq#^#@>kND/q/()qk!HS4N*B/@&_8q%gj&XVQp+F*i6(8;2;f2=\nchcLQAB8][Vdu/Z0kl"et^!KBMN_(Dq&+0I_!o=%rD)4,)i\r35+D:*Faj>1SCAFJ`C2#^2Dc$/q*g%-65s.jVBPW&>s<_"*@'8N5]^AS72STh`UridPG6pdQkb+]d-[L]J"Q@\dmMG^i:@$$_Q.U:^J-l!=,l.(>V$+hGHUW`22QB+2^Ld%ZVG7k3ep2?].qB8H=M3;XXm2a=!c1@Kgl&@peSGF"Ul<C_pbZDkZ^r[,-rLbg^6FR*V9C)!#QW.Z@bL-8.X?#PE:5LQQWR6MBE\t%2&*oM.g0t9*!b^+lc5)jA5A+kg/B':D03Rb<T7!)fj4!OHRY:-*1^C'[0*1'49`N>IHb'RX$&r[9EL3B1j0Qcp#thl47g^?).I6F%BB>NQo\ulqG0@UULduk6*N^#=M+F,]#7Bqf`k\c;hHj0(kj9_1NMVWGc4'c4P]lOpZN-(qK.V-H!3%.lQ'`Eh9stpPf)HSnQTfA"%qB'5Ej=GKQh[Y'!46cbl$+[%><<$I.9P0kSp#!\(IW"EmqH=rJb3H`Ls%8E`qCec0WcIbCoe8$log\m5G67T'9'Cc;UdDI."p!).%[8$[.I#)^is7Zrcc'"m5rg,QR*r>otU:BH;H,VH&s(:^@LAE!>'kgPGGL&tn*EW9NX^SW+rl;&NCKLQ*V/nL'oe2(P]Cp/j]jt(A%YYDFs+*![;[/[DV&++jAV4Y,ED<7bqj^#o$qnm1FeGf;hq54*:2s!F(f0Q/YCO\P@\S;)\2q'_YDi8L6s2K%Zs0C'boj;6K5I>pH%$WTdqcdqJUUMKn[T'H@H@#M,cTq`[_^Pq\^rai=/6hrZQ_qgPA2Fu#/[^c%G/h3s(r?9(6ni%L2l$dnEi2QTRcY(e3Q:][+NUo9s%IWRV4-g?*%2SU\jU^1GEL@U+CP>"qIq<QKNS+9&h=3\;u"7f>ICs!jC(YA;Tr$u,@:$NfNl-utUl<b<8^%#Rs+0&J9'Qj"$>GRs)%LoGkl<%lh]l<c==;GaOqk@k8He3EASn2[.<rrZI=`D$7)PD$:=Dn9h!"/%tEFjpAp\u(;F?]SD<qj%tDgufIJOLKN0/b#t,r\jrD%X8hpTs8'e9pW*=4a85IYr1Cb'gOIJ)r36brHlpQ7e_#R'CtMMZ?\/'Fqfg&KmDC$Vp2_9UfI;u'>-:sbeo`_W]OTh:CK.[uq:dhZ%^4!gAO/"h`N:bi.k#WG3lYkFG3[XTSj:!'<iaD]bdCYXn'"5\3O;I0Bee4M55igm$=X0"<3$Fii4hjp30Rn&91mu-=eT['3,\R,Q%,B5U6U!hj=YOUUDj(P&/?d_B+5WfBr]DUlG?u4%WFo!(m@]F-ki*b?&e3(cV#YrJFjn0p>3`dqU@m'G-hKtj21&jZ\^nH%W5$)./%a<?N+9@H-e?AF`0*i98`+N><RaT)i>G,As$]r9J?C^jH^0Y;h/KQFf,kP?O3=f\4;'r";=]0eU!7(_Wueus[E4H.t&;Nj86.,c(A%?$h!`q6,E"<M,+f7oJpuF!2ADQ]p$eV!1"Pbai\@QY5c8^%A6lcH?UMlnNd6mIphL#[]<PjH3%sNEjS??$m.fY<8Ro^a(d$&Gf=B%<1`qepGP]b05-SL81ae'$-gA*Ak$ofG$EgP0UAR_S9LhD+:[@$K^S@?-(:d&m*AY_BlOK:UQ[/&'A"jXCK_@][m(U*)'qT`ACMC3%2P.QG:)P/r?2!sEMg:H)mWV:*NL&>fN(o33_tIhN;<n&?bAUT-md1]elW4NW,>EI_c`uqtl$kUkDcl$g>Oj"7+oR(RURA`<V.g=5%Bl<fL/@Eg\Fnc"/>19sQ=DEO_jUFj\q8DX0qU;13F!#jH$!pA=7:=fM0Jo76Jc-7g6>k:9bR1.ejr=ZU+L!OCinHCCIJ\kto[&;1%SRf&.=!+TiX?[p+[@%cQ!_LiBZgdPNAl^$2IVrad+L+*8B%f6nR0J`K6I,m<Adnn+Ahc^N_Q6l)(lCWbDk&(>pOKapAd.o)f4J'>%S*%qB)ittNOA!C2\<OY3,YMdl-#Qt7V`_RDVhOiZQq`.p2qhkBM!s=Q8\a6(ajMKRZlgDt&6$SJ-/L[#Rn42_1cmD?bYH6DGLRBH%5'ShE+S[j!+a9ng'Gq0gS@Ol/X0,,&q2ZR4Kj8<V.rg7n:PilcRJN+t[64e_I%m&@@PD;d%YhYYSt5TJdZJtb&(0^Or2D910cejt%#*ES:a_SU0'1cIn2e,0pTc_r_=FB+O)kY3+2"i]<kh'l9N;_&0FhU9a*-HPB1@Z?7Bj?G;Q3\t;\"g+Qm_P$R!7%spg_uJHm]H4M%/g7-&@SE&tW1>7'%^dTHqX!OE+6=@GS;?H0Oa*JT!kCTLfQY=f5P/6FY#-)1n3?tn%5"ani<"t-j:0/-]G/8]E%ljqljIPmc_sK@%SYk4h9LZLt15tqSGi;/*aMf=K9.OLk^#]ndLX5O*[o"-]c2=8B3M[87LM\9J4TJlj9VZHu[u2jrs5f(WhRo!.F4fqKQSe71;'9aO%SbhW?7**^?7nf4i@WLJtNeMJ)=8kZ>5@BbioI[_WWZ+mcoQ%jJ;le)U['X;Ah;FhY7jB36LXK"&a?!-Gl%;T%^.Q.-m]'i04VJH^%gTXOMeiXK1cIsj3Fm$QY?kr\uK1fJ4?=s*]`N8O>Dl$p!;s.K`VAUj.K/1B3Y2WhW-4hbdHT7R:Q0L*#^-62_j2K)p=X_,*&e:.8%4p"AhTqf^\9\=4uWZCeJ*Q%iiWI0H*Mdg^#ng$!XQ!+NX%2,EgXk+2c4E[@V*t,aZUP39B&6F&^;]@)];DT`OkJgEZ8kl>(\TVjI%cUWLjXc]s,.$P-),m:Pm5,p-u:^s:ZasS$M,W3n&(P5S+6$[lMSB:\/Tf_G:A%(6P]1;Ar[Ee9LR-'D8+"_heJB6"b)&@7\U1KAr%OCMNI9U(3Hm8cmiSO?%$Ti@Z=98P1,WY4Kp!ckcMSrh>rZGT2P<QP^m$+Yh7h5Y8)dO7n^RP+-t88=]*/d!?Z@e/690V'R-Gn!,.%]B.Fa?_?/Bnh+ieOl%+RUO0p=P&19'29`e&BTfi+>%+:n>_Y5D^IKnMoTBV<Icok+QC;E.3i0s-41G(SKt`M3R$rD23:WON[:KuJ%G$6)c7T$229rGpog/j,N(V;UZak_Z48u\Hr,o('mcXlNLNGqqCn`ut5^-4V7hrQt?BsI'koU42lQNO$52bA)4n7:X[cOf5EcFj&t%Uq,PLF@'HX#A2.b:pMB%lAL?P\?b3R34C1ng(t,SNp4i+1"VfBZq`89c:I9nU-;?<oMWO%12T:FcNa1hm::U,p<(hYGEuLn`jL$5%Zg/h34oN?$knT3j*H=&3S22f9/*o`4=>&&3^AM5EEU!nm88>VD^=kRn?P0ucZtqd)^::=bN,SgCSSH>)o%M5"OAW#kKTB&p>dXA\%>%6jq8:,^*[[OU^rD!Ig1`MtP%iQdiW$ru0r0Y-LBBtbBT)3iuc+eB'eqRkmD!WU4/NnZjRA[iM^rCH3VT#<::KsQ"@FB-Df1#^Q%*q4tGZrL7e03eHml3%`J&XZ;0TOdXNlAO=8>g4r1*qigF0,>(cm[K\@LiSP7j6TO]E2rBX'\Ckk=8J)!inT[G50$n8:+=l!>$mGj%F6-;l&(g#Xs7m"bs'dJa[S1iO_9iTbR[Ob%0b<$``4/>/BP#l`_"MWhCuYY]>4.d&`1UX^2<p);*F*k7S9%mREmNGHJe:kg6Hf5E%9/#_EF*6k('>Tu%pb4@.(up08o)^]k"=4kKf9aG?>e/4@EUT6,msVnAW0qt!p3%Wm[U-s5aBOM[,^.]IkVb;W0>njTP9Z8<>-k.7%2rc0"8fd:W<c<rcU$#<k`[R`?$kBJe)f/3=@;RLO#r-cT0JiESOI9*G>o6qbPaQ4$\.OPZL$1l0?HNH5PY)qAH@7DekGlJBTNHO_%SbMg*TouD9?IsVnW+-=)lU,e>,g79M^iUg'Nk$WC673CGhi5.L>9.dmFZ6\7h-D%:50$iV*2e9Xm*n3ZJ`o3McWlsu1cN`cS*&!O%f3FfMB!OK#E>MK,kaH;9p64d1UZN91h)>R4D/o6n#uYn<P@#GfY&rs"'1l1cP?(I!C)lNpI`'ACG@UBgr<[O@*+G_nQ2-0FG7NUK%[ZYhE4KE/G4"%/GP]Q:5&D_rLG>:2U[*1UU,AP/Wps'Hbrs7YSZ3$_o*\_I6:u,PC>BSaZs-5V0,j#Tg_*U"hFH*)s3@9$KQ-.$q%(WG125Jp2C"5Y%*n/#Ot9iZePk<ES2f?:8m)b6I\9$XkL@+fo`1g=pMr<J:k;/NOm&U.`fl=h^Vbn1uY`+Zf>SJUkEI&BQZA2GnC%@D)dVW\?-5KUe,A92So\<5Fb9?GX,DDR;$N^c5i'dSai,3unIR4q+r@RT\T3q-*6'4-CNFR#Aa/\X:%D,YR7@jaG,lW;"EjF)J_R%^R4hOke<hcUkQV)Z'fO*7'qR!)`OX0[TOo4p,ltK8PDZi[ps"R"XUL>U;!k0Jh+00JofBG\Q;L@N4L,$a;CA8q)4\DPc;58k.!1C%n'`W'*D+Lsb_=Cg,"Vsg@^UB![dZ,Qd&We[BtlcWn*?f?c$UJElA#,#0cf0s*::'0NU],*"ghm0alXMjI$&$-+c:;)9a.?8+Vf%(%bR$Fn;h8f+W</I[W*C^gXII#LGRHiM-:N&c9Ee@,EWtJUq"[$M9d9'n/g_r&Sk#ePhTh>ZM4/<(*V]6TRFtSqb=gW0H@T&54@#qW%hsGa"dc\(TU4qgtbB=C7U4jHLHe?ooH3h`IQ4h_,b_)Q"VX6[fDjZ8mn_5p2%MR;.\i21JYbnaZ(X20hhgT%6*A3[;/BQue;\qJ-%LRgg(8ut[H8ncTk-:gAcXfCBq9gI/@L^_P*Kne`ki%o6u0AQn1Y@=,,AUWih8&)2qf@Y))co@o"nNba>Sms5:;/s,t[q+9;"VKnW%:kV=FB,`.`\ebL[S;jQ^[Hh=D(YrSA1s1H/CC+uc*Kfd*P8A9*5].As*eDBQ%RK<aD$Y8$JWSB4[Vr"&Efe^p>S#ar`dqXm(b,'=%+Lo5m!9nt:R%?RbCMUs5QU`"UZJbkG+@BHuS%LPUhd%MX`c^ZCBt.lrge;bm_K2Dj[8`$-LZYS+l^(-`I:_E/GMo#>*a3N,Jnupc%Y8?*-$eXqVTtk3<`=k2Y+nA<h$o;_@6rY&?9eEr*'uM6ujt\j:B[>U^UUg*t]<P;2j[V1%6t>&>ITu7aqiNf+Su2-L+'%+0El4#)%;i*I$_#T<h(4o-eW@X0GWO/cDjE]Tb[U+Jo^)m)C+Cdlp)6i'EGD.Yi=hFP%GtIVWHU=O@`n'!OgKeLW_8&X6::Z$-Y>SA\?b&%k%SBLRC@+R[t3`eff[m)a?3sGW63c_.VfbGC.6SGsdO,kgU13cPU:n)JM#]&#5Rq'8!j<A_"/3KGl\B:/h6bLgr"!FT"7p8GTWg>L8%&)5XFP1;1_g/E3/@,\%BMmW"Fd`.4,^d]nlcZ.[_.]m^SY>UaI/Kp9A.jO4gLW-Pl`5V6)cWfsVl=;Xh60dGqKC!J7i1TB]@rcj"%&>UoJ9M%<tm?2og%#Jp2?`0-HD0!iIdlE_\_J=+:IQUTMN-TI2Cpe/]riN0]_G";/OX7U5]p,\VL"WOc`0JgMh<GsfNCRk\F)%?M%=!O?T!'fS2QS&GV(K]7/eiXEf%qFEccr1[/^LI4\BE"2Tj_X</ouXsTP,[5os-b#9<rPg([H(7bs0%k$)^bU\ro:q.c[!5k/HXgf%`E(sWSE9n[XO2NQ:Z[-PEKEjaG]2^RbE[Cpo/gQf!IV9?*K(3le#uq,H@gSRG&>lgQ&1oe(,(62U:8+*GL2-=o`m1^7BIqgg]e8%%eG$\YB&o2I!'aD\o"%pI<-e8#WbXGSq&Pl<*6#`Qge/7_mB&2*93TC2`[I\P5m3m!:@_@gf@]-A8]*oJD$-MHL3W<\MMoRA8qJmS%6JR$*aLgNdE?=#.s!$7u(5g_;k:;,j-ca1YmJ"r(#.e=q@JK*?(us9ZN>P'l4Lt*8gY.J0%3V,+:o+=6A9=A;FfC-l`@L;BZS5Li%WKDL*&Inkb.=.tmdip27NEO?q?$bHX\<>@'M/E23/Q9I=mM&ng?;HaCN(M`Q"hW.mceeMEks5^D7ae@Gar>g0b,c=Kd<3S,J7@CR%CZ8"ccC_g9n`:/Pf1ce<3g9Y-k'&&GhKteV:\Li6rkAVHlA:I"A-_&%a$%oU.nGWMI_^]7h`:MLkP,(IJ+>&%NP--!3.ApIR6nd(%C!?(JO:9kY;NqTDPY;"h6L*hGq7U;'O`Kj\!l;i9GcA`KcR>DXC7LU]^_G4Q>>hVOhQU7a.A%\9M`C`Mf/r]#OLbXTAVFYsXSo(=%Ru5Q(rRrTjk`IJr2`+69EblN,5l/AR2g$qedgno[PaL^:C_Xm`AT`Y_/J;(MC_+dD'9+dnl_>k>bC<>D-'@LL<>&Q9[L'qUnCB&L%&hkd^,-*/NdJ+#V)pcnTcYiVZ7pY0KZ8s`lf)IquoaNM#OTanu=X2bHaZ4?SS%cDg$m[bm@<+WrK]!n9Eb4:d1qp1N:;$tlCtn#A%*NDY28Q!Wp5Ys49Om=fWi_35."OmA))b)(kD^7Y7<`,1BN-VG/2O:+&T"XjjdZYbf8VV2dRp%T6HcP1mi-YLt%C9t[YZNa?)-hmo%.=6:(Vd$FP^n?NVj-b]k2$,c+4Y"cP$Era1UL(+"9BWEicLA(T-I5>@nuU^deutgE8EjZrnl/uHf-6b3br)-'Y&mO:[OLdD\lXsQ%][Vdtk!k299rJK3o1O2g]m6Id-++)ACE4X[J2ZI.*+si]5Ehq.;IS93ei-Tr-a.?:/%NG@7od&X"O:T))nkh/4't!ElZ'-4"^BpB%Cr*(a:(ipb]n>=TGFOqVih-S3W[=r2-VO-+ip"/GE2]ru"e"B<0gtn/iWl5XAJ-U,`utTd*f`MVVkc]a[NpFW/]0GcE=fR6GekM8%*)1=,%jK&UP#?V$C;PoQQi3?q<lA#Kn5RpdiH)8CWNW21?tf;]1Mhkj&$fiE;M>DY62_i67)m&lY1!RWh*5#>OAH8)=hDuF,+Y/6%)>j>,1%,3TNB;BD=,PPJK.3TP*^47-ja$X/<r8/.';>>pICDfZJ3l9;\JM7a2'M.=(T1pe1>@m7a1ps",6\8\(_T>jhaQJg4DA0p%ph&`#-Fu!.lZS6*)]ou[^?[/]Pf!W4Wq'\M^lq7QP+tk!4(X`lXh0:-%X.?l<ss[%/.(]aTsH5BZ-JZ4%s6mCp=\;I3j?js0a0c(%k1@e(rVP@ADIUq;&,=O1'AKbI`/^!h@cro(Ddq&4ADu4[T#q#,p@J`7*L_@+XD'eGrNs0+2XDF*^de%9V-Y)sVVeU_V&@acR'trM%V,d!:Mh-j]I(H@u9@^8NAnPc77+f.2Ot@!FN9=$&lIIc>$HmSI5kJ;AgXpbf\uUTX.BTgZ[(bW<ZCNLf"<qr?o,HX?HZ,N"fuB%M%B%$r1Z[?hBAfV+XC-Ms`#,Kffj<AOu/gdbQ$.Du`OW3'&/^M`>1p\bU7Q.R^$_)<_*l*Kk41ekW2X;4EU?,RT)pi72K%L^!g?mP3%W/Mjpp\e$-CYQo9:R?gp#N%F0[S@P_gY#HH%,7Fck&7EKN9&oSAot8Z^JiSqn`DnB(Qm=6j>^WZX0dlLk`KMmID,:7LS6<[\<Y=c%2Cog$;cCeL"8WI"hnEKJM$Dtm!A\@qV^+(?(fS[V"i(OpK*q'"/%,`>s&UctiJ0[si6H\"j$XE=aWG7`BXU1Bm\**ko&tsiKAZ4W%h@P,`=l5t#X^[b.*AsRe/I-uC0;V%4%inB-Y"t"]V2L(a-4h&%e\6)uNn&a0>Vo0g3ltdaD(@lC0FX'a;V8]YQGUb+[&qR2J/YjD%N_<:gapgTLCT0"oU``4a86%f'c>ZT_XXr#'dM=E07pG/#QY'n:CscuVa'JRm"tYS0=0\R<eqT&IKORsdhFM#8damp!''.KkQ>ad[%0m4-7_QU,;T",PeHV+hEMBP2;G"P%[Zq@uS<T2uf*Esg_\&EX[8EsPk(XeG))&=/tNMdX%"/p32]8j*c:Ro\P&0'unlaSn`NceU+%FbXQ?\+M/gC[XObUf<B?cn[Y.D1dT.>#upYnLh\CUj>;(oL#rHCM![-K@3D#h\jnbs8B5G]OUuc_2;bCS*;<9DYIk50`&H+hckJo%+6`HZ\c&Aeh&F9h!84qfWn'+&,2JF$LQ!,4@GSV+WCjMbI_bRf]?aNk@kSVT;@d9Gpsp;u(i:d6,9GI)/?fl"C>;Qg[M*Ua%W@^V%gDSmX,^;6Bn8,\sD?rQr;r^8gPKGa%HqSN>"Q,E2.T5RHanB&*1?6L`R0Aml1HR15;H#4#2B\H#Lc=4j\;7f#,Y2Rh`U-?K\;Q]c%MkASWr>3kJg"J55/?:(Zc=),Q%GOOa*\nP6m>u6@69G:rAqu-'O`<./`^QnC1=8k*oIS$Vi`YG6C7-:!dYh"8=Tp+X^N+a7V$0r-%j+;.H*A(4*g?oY[4C1gHiJ^pn>I*go-_C;0p!SU;<o-18r8X$fY\`E09XjuqmL>%,?a.eCHAPQ5\`0*)EtrK]:=LsBN]2Egh"T"$%SuC!Hheq,VTem/:i"Z"D&P`*C"CE:)/ZIl`]1R,#^LJ'H=mT?<=ud'gdk=H=,gCeS[^P/j-A7N[J9eimgJ9AhOTb4VWC3?!5BWnq%o)">,"OjB2D2L39FPXNnr*/iOa"d4GYRM6T(V95RdYtD%QQf6"6fk&0Ap@DUM?Mfl`KDj%a&8J.97OhN-)]($]jm]2'n6qd6IN&t%\LI\*ES7Maj?\D1>K/-''blWD&A9O])iRfQ!k80>C"F[dD-E?jBbY!UXQPcsAZ=EZf\+j"R&P(_,k[TuWA[D6<9J,kWFeh/;0aM.%"7XkZj<AOuP`aR^`9@-/YassTUWAQ.m>AXamn(,Pk1U6"gllfM#=RQp6GJ,_g.,gT1e4u;#t\uWXB?*md:onjVn2_:^Q9[O2KA,5%$?)CX8\_-#e)l?_;SBQiVqNkm'()*Sf&*H8MKn0PKZV:#8MZej93'EcnaSSqFl_kb+.jI;"*iG%Nd^BK3NgUkne5Wm^0lFfBd-Fj%cP'U92>'XYPee`*esO$K/$m@P#4f!^8(IrtG=L$N%Bra[*Q!"@JCIoU*?p\7&TrlMWtnP>mq:Tj%LM4IrGk-`Yn\P%T&u`6n23$/%.TZ;aF]ZZ)QA1u+3E!lUB-Y>+f\<o#QhPfpAEaDM#_$t[Z_cDm`,Wq(%TAF,:-QoH:M]`.W??tE,U][D,l!k,0R2#8*i7H4\Mg4H%0D4"+$'<HLb=nXUO3-!^DI*''%Rrnj";Q9`X(Pb/Vlf/;n2Ls($L+^sA9,abRHuqZD?(('U$$RX$?/C=!Je$7Q'-FB/1T?/.Y>lV%-Z;!@PM.^HA/&@mpVFc4EXT%69D=JmCs?EY<L;<KG"fc7P8&mW*-."9,J"EVT^a1>9K/P8q=,000R"QbJ0X4F\OJ3J^(m?koVc,'%hm.,j%Q7a1<^"X.b3$W8D@+,kiO%S0=OjVV-$0Y5)k,blic5q9*k\EYC^k7;*(u&2ejFFaFu*cQKnL&NFIXFb4sm@3K.9B2L@0?7%*>1YD;kHE[<?5T!Jp>OYRN(TUF>AkrVDnanJonDZa;q"`cSaJc3HZ2gdX?@EC21do1A!EdU+SZ9P^kl`?*dq9KdEDHD>>&uR!EV6%em:u(?@j/6WipJ_Go`6l/efq@nd7I,T1Z^J*Nc1%R\e+Qo/^0%KBI=CI`MGMbH&``4kI6tkD&BtH'Aa74I>tmq],;QT,(5T'umNt%j"Cu?l?q7IolNEI`h[t!5f^IJ*ldsoQ7Fh&r"Y^p8F'p#hQ[k!rD[u;2UKbf2D_Jo]6\bA,A^t;M"Y8Mj/L\lrke,DD&,16LO!&K%U11WR\68#q__IoE#u,E_N',3b^f?SPDUAm?3^^3,*i7()%SC=lkPEE0%^+=X%`SrKX]$W9?t;r%<`Kp20biV*VU)/Yc]M!:rL@C^%S*5T\6$uGqqnm6iK3E+Nd8-Vn%c\Mq.@Z0c)spbdlQAq-$e;aZWiVe3C2#4bMk$8rDUW+];*hLI*i7(1%SC=pkPEE<%^'Js#M]):%22t-`he9NQXJ.8b))G9(D(J2,4F?J]V'eKdF:")/@l)OBqqa&UBQa4G%C9t[0H02(ilO1@CdIZ+Uu1/NJUM14ir_)l>3C6XEY]kM%&[#sO\X07\Ca#Tt.;fK8GqQ9j]G<%9!ERgf\bN:=ctG3M0h%+k/dkVm)]B,kY-nQV!TP-6Mal#mPTS"bSrgtd-.Rl3XL>"'2'VqZ%=]o`Q@r7Wk<5bu>]!!Id4Ph:si3;mS*E2?i@Op)B-^57#-7]ZMHUN:,a6X%%4;#NM[XEc8f,X1i-Gk)Hj;cT1L(+`B_V:kn$I]A\%Oh',EKl'kN_0b=@!%j#m3.4Fe1D(-Kp83!J=67G'1H-S9?Eqds9qaDre$k`U(3&O)e`DDjZW0%n(0F,g;ED:\B;;Je5h#e)8'@_?%JTpWekZc/L]5V]6q;&`)R%ZC?>0$bO[cV11'cgDIPkLO<oeP;$W<njH<H/[%Sk]7:b6.(`KZYV@hLn4%Xg4QA!g?QWA1tV]rLd'4%k#,EUB%:1ieT?Js3^"\?=F,O=NFj^>JD#pPO%-fm0D8=CIp]XVRem*0<k/ffpa[m6Upk)ca;?TpG2]kAZAZ+1158!PXkNt11ME<*%Ei$_.qN4R6aAY=Q6Y1)kJ@sVJNADiL:Jo99'dmN=9s2ab*bS%RUL;f+BUBt"GUMJPZDt2INLpcjn_?<5\'83f:[@9EM_Ld*-c<f#%BjF))h4R%<ZXX@Y"!g#DL/IQc+c\ss*Er:>Mp^ec>^BB#O3Kj'QLt"8i4>EXd(>K,2P#0h(ca%8MV0er.PlC&+dtj9Z2TbQ.H'SO%&g83p-jt"6'NHk,_pK4F%f:S:`"0bbj.\nHS)Im[2OlIuYD4Ls'oR!;0H*]nFkZ]@_Y"q:bDu$:g?&k0&ia^9'gduM4U7"]Y76(r%V3oH$2aO5X,)?AOK2RDgRdC?YRo_,oncJa,bNoKY/<"I,+5#U/]9fUDr+O"/5r#9_pPh99T4o4Pdu9GU1RCclorZo,VS>@-dI`TY%Ah'3^2SPBgd8]Hudn;$VWFV_`,Z2ZQP0eiUPtM7T>bVHN:jMQ/fRoob9I*QY7.\:?T:I7$#=U/0#Y)?mDt,^FNSq)YN]2i%16G6V%e",&ochCa(RYEun[!KieR7elq(GeEp1_kAaoTG&C.[_mnaAZ_59uA"g"2&0kbU!qIPBXDmRYj7AHHAQ2PtX"bZRfrM'mn="P)3d#%R:p?L]8^D]hq1EI9.$+,A>0CLo,-qN4_T/`6o1+`/oM`>XL$;Rm,RYkQ:s,6ae3o&WrgVfS>K^VbpXGdF3-gk0VQf^;m?R%0:?LN%P)1N-rfa3g&"6f[d7bib395)J^`N&'lk'rr-%fe^R:p&r2>?oafRp&f9Jf\i7.]IohF:GK#>Hk>BVprL-CtD[%mC_Td.EKXAh'3^%2F]$31n-oaD`#.<U7"WnjqH(#STUEkNpW=^.-WRtP)1N[+Kh7\Ta+":QO$'k6uTlI]$hnrTP*@!]dT62iS`gB0W<WVU6eP!;oqFK%iKi^qNf#u5HHAQ2Pt\GYGkc-bNuWMb5'b8CR7elqa:*=[HlD^Okp7"f<&2ihY\r>i&pdB]Ef"1g9D%jFOH#oB%uO[KO\@'R-?;eN%k;FD&gM'.!TUAG"RKs0I&"8A=BR7cg1R1Wj4!OtgRYj7AHHAQ2PtX$TTBeLt%"$@nP)3d#R:ooVQLfFlWRuj#QV957a[GaWN+$A)%d8]Hudn;$VWT84dH,.ssBc?\b5,fi\AhKKbhM[9&O+O6<&"6f[d7bi"c%VCFqn+cP6.8IRR]0h</F%Y=9[g5$A'mpRc!3$OAG"#6%P0eiUPtM7T>b["\Cl`RHfRoob9I*QY6ke_qq_1q36.*h$Jl+/J6Q#cc8&ZM`]jr=T8g]u4CjtSR_]CYJA>5Jar_;,?o3Sb7]HQ=a%FYN&W@-@RXltpr`gPtO7-TLR6rWnU:cLm_*RUl8]KHu'W"5U62E.FSn#g;tb!qqc3ZI02sIEtcc^:<l!dS1,U^3cB\aC:8_<Y^Nm%-J/r32>6RYP8gKeJNSHg!)`>5aZX.RmuqNYSkGlY68D7X9VRMG<lbDe)lk1D*Pfu4B[pbpBY_s,E^QenE1L3OQlaM;-5>9$+!VF>%L^oD/;bU?`n\>nNnNKaLja\>B^$H/+lsn']lKTVgoShIA%k6@ZIKqCIi4<@,[R-(tNRXqaq]mI7O>W8D[IVW(k$>0Ke$>&H(EBVq%Z+)lJq0cG$a7:=1#t3btKITSg;`#a9kGLLBQ0nut=qUEU\]UDT`t'NRK]Clu6?IIU#?H=:@MUO:oQ<-u(j6NKit285$NOtJ]E1Ii%,ZCcn<[<4,&s6F4Lt.^k%CZ[Aa:VC1Pf0=UG"Ii7M=?0olTT74>?59"Z5>)V'Oj$@RZSf%rEsFR&/cK"M+DjtM7<Qi`(O0brCVbQ%34g;$A3Ot'#"3Nh-Hs^RR3d,gg.s%0QK=""/b!j'3f\nf)JE>bPJI'E&F0tgGTmsf+<md2!kAQf,]..F-JpW[@;<HS6&t1-P]@VM%qV2rbM9ucCl+j+rQD2S8\&tQ3?Oj_N[o+_AYY#LU;=[6/%r5MLM!m0]M[;eJ]>dp?2o`eL+:A%`/t)J0_9'A%9G5EU4V$m+@N@c+%KDi&$9GEYR8q1*3a$h@:BYq-r";ofo]+V@@Bf4p[6Z/pl:KKX2JV9tN'<E438LDt)2J-_UP&]aYe]rMW8D6[,*n16>X)\+c/t+]:%#G&)G9%m?b.!UGfqA6[iDj>Iplf,ia][@4o_0&<fi.J@qpj*eHa!:9kY;ikMmZKqN5Lg1c65i&`4t1.u8XTJ_h=cXgMEKt)ebfnX%)%=WZ8jL33eg47>7n/k4AkCV^&:"KjjMY9S)sC#e@8$499\&"O@n1-t0m5sjc>5!F+V[XPW0E!kZhQ"<WoY^oXj,N;a2tNf/uRmN%F[$HbI5k'i%aUmYH"EkM2l)I>OfQeUkm?Z<1Uc1)@0l"6AR?#g-E!4sBib^g6nIZr@Y`G)Ls&Zsp3R6M*fnMtHm;?p\MJ8lj0['!%$rIIfNH[riFX+"5BMA=+MA4<gE$.(*jQuK;1PA%/RB<LodQhUX7pc)X[C$`O@rD7)WDD0T)r@il^8-s#1'6d2aQ=t@Q=1jsFtJ=p%_Rht?LXK:"2R\XbKBN76PKEYr5A5pfHfESZ,u2k%W7!bX4E8^Qe$43dnif=-!R&L!>h"5D8L>k;:$r+r0Gd\i&uT=+6B^P/":X8J%,aF,T7sk`+FsQGf:9-S3]nFY/4tMu^#LoQkH+hd:`[VQ-5iaOoL,SZt>J,g.pa*I$[?rG]6Xi.lD#bdEi@tA>nk>1-(*Je7N/R)7%1khad6;!.FGJ$q+;WD\um!6hQM'POAN/D\T#cg"m1=r]\&9VlS/6Wspis7Dr*i`m#9_*64Z8AhQK],SYj4%%8M"&hK>V[c'Zp9SA%STB"u:.i+G:*Ncuh)P\pY8Q!5NlccIE/V:Y=>T1bR46K-ZIt$&aO?0dRZ6?9edF]-Da\>[Crfc&glC(5)dI*U?Nb[<[Y_M\6XO[H%gdhN%.BQ]E!Gc7P4D'XQIj^&XiRD`-?Vu2[A`3drc>,uOGU$e1p_q36cQjm0XKaP53#2E3R9^X.Ts:j6Bi68X>UdQ+oslQ_Nm.7'%b(i]aUkUssjdA4oFVo;LALZ^neV"HN@]$$?L)o!P+KA81gIG:8GA'#R+RPQMrFdO$.4.>jWCc9lifqK1)*+k;,`V*3>)cGl=c0Yg%V.jIT"2C`H$%9$OQ'_f9V_3ZPYcEb6>suFK`4"OaMo"'jDr<Q?g<jM?5g%RZJ>+Ip@@G6ZC+cl_mqLC$Bp)iccrZ<,M[CBbL5>,m%^E_=N^M'S![^+cZ6@CKbQ'0X5-Tg"@MpdBXJ+H`o@QAk3q:ee/F.HJdY$EqDVRIH>f&k>7<NI<u\A(;Wck>ILd"W0s[(D<_SlF#2%Xb<T4an#^P+AR:EeRR.4K]0Uoh%'-+#XP#`DS!_1<iOCmFnc9#?b5`V`0B,>LG:o$N;E'n"qspa92N*e[a`P8VEb$8Xmd2oTbP45%MVgR*dlg/q`WHpiKT?Q;45Va&-?DkFP"@FsV8b*jr'2[MEo2LKYo/nnUoj]'R\;)01\kK@it/"#;(,#F&irgr`?b[>b2&Vk,ZXfA%U)Jj7g^\@t'm#]ML-eG8/`eLV`VM_;lV7@M9Tk+K0IFu?Ls.aEMZ'VS:biu`H$S$S+r5?rC3PQ.BZqfD1M8R2kb.ZJHFlQe)"`Yq%rGrD$Y+`>Y>"LNLaQrH_r-3gd;Bo\J,a^V1cH'jLM>hUf9SJ^\]\GbEcnXDnj(IRB7bYG]o`RPciV=uBq]Zan1Zi%EL,WbDn6O\t%jV-3/RF4kBjC+r4;J=O3N4(RG\2&i;nHXS4"A6?da_l?(3`C^8LDiaL?8%8#AL:5;XC2QC#9Pd=LaF4hOOTC,6n0Mm344m&%*2Sm%q,u4VGBYG-OiF+;;\5rhMm9pHS;eIT$Eh-S`);-*TT9PNa#Om';SbtOK`602bNXF"UU,)Db6"4g)G&C]FfP8#>]O2A$o>IPo/EJF%;_2Ea*kUU$7Th87LG5O@<uXn70`@Tj9>=XaSN^tDf>GT^$^>;SFjW43:H?>`WGtY`_TM<>7kB,TY4O)XaqI]87XDh`O4AF,5r'p-%8"ME1LZ8Pt=B:l^m2_WCl\6%H_r_O]Y^5$#5!NN@\#S%E5`(T\k6!UQ)?<p,Gf'1MH,kBV/aE4iD`]k\j4o!,_N8g5loTns=JJ=X%OVGr./:Mq&^@Z`k\dQJQj*8Rm8oepgK]fbG@gg$KCMgh8`(lcnR1#).@3n2#d&q;KH:0)hq0<l7=nN6f,m31i!AlZHdIuk$+"7NU%S=MHR1`RC0D27Wj8U+O.2A<gaVRI$EqX_At:d$-)h^MYVMha%Q:X7/]V\!tW88#1nl(FI)*b<r0[ZB([6_BhR.TV:CY9N<i/.PGu%P*"(oN2B'$k]"Jt2%_cSZZ8"4^AWf1bO34]\p<-_RBCqR\Pd]=F^5gHj[-sae\Ma7j@2[&<@B;3X$@).][1^FEA&mYkFO<[O,&Ge%N;Z.VF\Pcb$f>Fg,o"ckR4n'2RW2&"!RQ^he9INq$1]t'dWh'[>-"ua@7'JA@dOPB+cV.-2p2m_rgC9O>'T(Of_l\YR&ant;nn)k%R^Fp=TaXNe;"9[YT"Q;^LJ$Cum?&(DhCtihO;M9C=M;LuB&F"oU<;8IY'VC1STYYm<@r,[Jr%BWedD!N1/AD8:h1Q/PZ/Z.]@uMr%7u$M8V]3WTs-UNDc>^7f48#BCamSPR#h_h;XKEnZfKCc4'[=]YV[^Kt#n)_(Ju.#__M>ZOZR)%&I?E3W[>Hc@CZ[]m1<lpF>SE:t%-bf/"jt1$194%JE?V#+1b3Ui1497@O"R/oHDi;H,W]$C"MjW)8C'cRrN_7SQc_;\AlJt&ic=p)65eUuAq`at'`-t;kiaO=R[geL)%nLP-`KB4M;p5$MLph"Y5@#-[7q@gqpJFYALIbQS\ie@VLVd=qn$r5ZiB1r0BUrm>o(iF2r-,'r5=nYueJo6j&@Yq;-ckNt-Dr<+C%rJ6d7NQo]Z?`sF0eICI-1LMnW\'8gL%Ut2$elS6t!(?^.1E;2s<H9mCa_=YYTZ'"h>'K%tC[IiT0p[PRZ<bc#&AO@%q0h'17g@24%,Wjd^8t&7=?D#j3`tS)D?9OP`lYdZYmb6Joc^7r_DG'@RVN1aF&_eEX@XuUtB:<LC5bqGbBjr3.[PG09##'F6c=nE/*p8P'V/GnP%NZtml>SR?[]'fp)=?GG=05">)JE\q]Wa\6i=c07h%_U5E<+t0aE`Me@Ps8ctT(eU%Q6B2G*-5+ROP-\8@PVER>"Ye3Ydbh:UuF8f%a?]EOE#FkG,4Pg;lLbQc%'ul)If,!%-9$.GMYT;P<QpTL]iZfql*C84=N\rl4Ej9PP&9IO;t:PT=K3?cghtb7`hj[u)/D!6+@rVh%"'+3.il2W(]FYXh(`.^\c,L<?Adl[WJHI"8BIb)pN[WZO@!)9<A0+rQ<OaR]X'I'PMTkJc_.&GiM>+u^q0W:I5&<Y9[Wj)Ac()X<%\R3h2Y_n!f)aSD*N_\rPWc!cqLp6G+_u68a#XG+jalB=n_nO2#b9@1cngp76r.q1`4S<IT%?l#DU&*+L8$8/.0N1=E#(;/td\H"]%3@*?JaHO`$iu)OtHkSOW94(?PX`/$omup;Rnf_rnJjH*,<HXQr5i]_'eI6Tug3oWB@Bif,H\ojj/:B<-b&(!e;#C[+d*>*ln@$\'%MGqH/7Nsf`TsSM\'=,;[&j-gX!m>ea2.P#XZEj>6UJ.s#@elDn/K1N@^Li0:1l9O6.E'#(3t2WB:W>+,KVh%LnmFlgG;/I4PQ@!A%M-R1+r/AaB+'ctrTP$iJc@`qZka`)l_[t2Ej=YhF#XX^2qI4EZlM@i`WN+4!OXYf=iJ*@D/V_OsjFUW/jq.:S8N'.ZJFL=6'_EmN%DQdX"<fR7'T3HR#/ba\-&O13cf>AAQ]<K.N(.j_f/O:c'=I.Ht=RcgC</R:ZjB=\'IeSNO`hBq'N/RuiIVJ)t)^]=*A#:R\+=RL^%<2"p!VBl?0r<Q=,^fYFYf&8rJ:t$G`>&n,Lq;PS`jBN[[+7)ulddU:!1*fqr)/PTdn^K(1KA]2&lO^)<Vn.K/-r;;Y>Y.^\I`8?*%e`5*%[Z[%8KHKFGAOGt:k;YC4R5m?rf!9%R<7@&9$>/*IX;]:0T:m\1>"LNLaQrH_r-3g6fRRKUj[3UkIQ,?=Vp*@5Ys#b>#LM`O%1E`Y7.D7PV5S>jsmV,&,;GAkJP$O>M9AU:$(oa]CcI?Els%:X,[6;ob0rE\pF]iI,]6DS.aOU4>Lg8k2=1Yp/R\/*R'HSA29:iVO%pp^t!UXteELU=h?7O9Oh>3V(#8Fs5X$V4%6_MhiQ9e+&M:@X![9"I_=H,:+`3mVY74[AP\OASf@;Z-&=MJ):Ro^p,!#a,Z<F6^OM%C/(8OVdst^O_aT">6D-V8_?Hk&I[#"%r/fdRM$1O.[n8r&WMq<FlomWoorWX#?C3;gfQk,TBo<t7V$W:r%A;Y5>t41QA(.o2"sX`%LtsO"b7+X:k>Ebrj"j(*)he\!PqgE#$>r=W_/gjDVo@kKT=S*MLdP=U:T@lZW]fY,"W>ok5[:re,aKUaGd62're5WB!F.buH('IZ%n#h/5^0PHHbn@`rl"B@$%"oO$PG+j5_1AE89\9ok\@7.A;\`_j"\4*RP"AWheN%ai+hCXtOr-hl&bU"`f_m=5O1""1N4t7s:/@IQ%Z/-'3fdG#9-C6Z8T+\)bAX-\Lk9I=][@>34:o.AQbEbZ"1X&7j@jNGZN_-H-YYe+H+2\$&e(b[EUoa-kf#8nr&B`T_rPQ'X6IrCH%n0<3(/$c_R>V:l@p@s'X.U0NcZH('<T]O>dq`pr$Ku`XDP5Q>SD/<Nb*7SWb!J8n:8*W<KY^#m*rAP./dLN)g%JqBEp[NH-(UaM*%!\6,umgDqC=a">_4aLIIBB89)biu]ZoKJB&g8"E(H*p%h><oU"(m!NtA7K\^X3<-"G2AV_);B>O3u6Zo0a"[jOb0k.M/H`"#HasD%cnOL#Z4%\63]%%d?2CLF*-PP2e]sdAgr%@eWmARmm2Nob/\sU)=(fSKUS41MkM/*S9d_@;G`G2",9.VOVN>iVj+/_Q??o/+fsApt%r"t_I9QG608]I?nYkY>SQTScK&I'2/ni3Y#8fH6RKs8B+p^uh'jf?3Ua`rY=3/q:I',%NU1pYSh..TuN/\]YppXBhI6e8[<`j1P[%TZPujM.B+u?tqM3M^\se5%4DF4d+k4fd>l&He/VXDEE5E"EmZMjSi@l5!+8k%)d9WH2Pm1m-QX+#XTQa\11K+H2S/)#n9VI)3B!T%pdeaVVhXj:o@BHrIh&3#eN)T>S:2%bf^YBkJUQ5io3l:ULRk[kG/4hM+*PI&G#L#^dY8Ln@bL?cYba\>o]OQ;bj.*XP!"5["9F;S%L?JrT&b5bq[.&!/-=)H$M7n<A+NK/MI?qT:pb0RZ$&Y`gHlYXi4uPf!p3PZfa!:;T.j<fEVT=Q"*1$A/_q'-Ds*$0oD6Wj;_olN6%5AdZEce.2FGqBg"&]:s1E(M2imKr/bVqfgrB4ts&IuB!W*bIXe\c7U6,(c.WfG*S>kNiN/B'(,g&hfQSJ,9u&(XG=<+o$+2i4%d*%Kpf6]pLQt\q"[S'^A$`%MEYSlrnFV\p'F+ff:faLDkS;Q0s8YH2j,UmdKWrI$#k%3nLUNRb7CJIZn>pO,[e1(7i0pEfO:j4lk_7c%mYI_ek3n+7pK9I1>Jea+G^4Mc_lL"'UZpY6qD4lc!b0<uCikt\pm">(O9\t=>l=.ZQ4%)[jg?Th&>R9K[IjWYl[`^m@F-.-,=/7D%/Ck.C,2SG_2ip.4a/6RNo9O:Vp!d+b<j"MTJs%E5-CnsEO$1p9OhpqEBmH?0O%2lE3th"i.I"bUM>`_oA@,``.?a[-<I_qL\$O#@%p,0R:SX,+>C7sTU(9gdTUP1#^%BRN+U4a&<7_n2-g)@I=MNm\5ndI)XaMLS*PfIC%>=Iu;8P*L8Bkq(LHnc]3b"PP<f&^l=eMtN4%%;[2;!ALXgN%F,WP%.ZrAfu4VSUjL1PW)QEpc!N"Qc3D=9f834YGT40=q$mQ;ZJp7%er!&UcS:\.p.X_WUg8-DbOnY`14UW\6,]$%'3FS@/jY+rq7I3OK5!sKcYMo8djq4p(U^,Y)+,6d@@[*]_s"DIp5:;s80AQZPP^HAYnm:]I]t<'6s$ET,m`00]08DFBJn7&>sE#$%[>M8J([[`tl]N.uQWB\BGgREK4cm$5$u:X\k4+1fVafMnHZtR7UY.CTQ8OO[?]=8N(hjUM1ZWE)kZ>bL,hnGX4(mZ71m;+_n9360%R'uQO*c+c!Q/c_Dk]D89@\,[`ESf^(abNc%h+GRWgc0&(]DS-mmn[4WhM?'V&>TR8?_s0lSXn(_di:@\,24ggm,![/J+"p/&PeK2%,Yk`h2Ej#\P$Vk88TN+RJJ`jOc*!CAIL+6EFRJt'Pa%nXVXnoh,2g,^RHmBbZX\0-HV8h-H[eU#E2m/KE6;I_pb^$pLO$q73(7c-%qUUKW>UW!32fe70kt@s!I.1EmCJ,1?qX&e/o)F)-jX\#Z;+Rc?9l\n;PV+/EUpb<+#Pu4eDpOF%KtN)AgmUs8PI6@LF\scK=$X9.%!ef0Gk937Q\XeCgN;KF<b_e#+G^pt1$"(,+pUO"mL0,N]\%G/4:iW[cX^Z>>o)9ApaCE1.Qr3qdbuqc']Wc'9;IT<@cs_cLmloiE%"/=j&Jc%*)LA&AWXm%Su=:LX^,fFmC?eti'N;<OOBl;+_e@j%Z7ifIcHJj<RioD+5YfcbC-Hd"Rd&]+qqW]7_27s5+':D"cidOqV%6fCbj'HOcV<@]/A!MlojH=l-FEa8]^l;K>uhAu0moG5P0b<mn5KP"bRKWbd4I29u913AhEV.@a7VcrF-\`>LXmn'o:fD)I9:]Q+e%;;+*W;?E$`c*GEFK\k7+kq2fX0TeOXetcblLVseI>19sP88lK:8Ycp8<$N]QI3h'TX<P_:3MU"Mb#I8]6g?f9CG7f)@.MYYf[-Te%T!qWRONJ5_aeR@s4e@ms!A`2e=.E8QkD!k">qioc?@p<nMeJA$S9R`JR>)rl*]uluW(qo1ENPtH/SA6":6J,6e[Rj^PWANnV)++s%i?:8c>*qM=X7dYLU5LfZ3>EeW.`<HBqIk8Po-)6U37A.4/=LPQpknj#MF8]PD0b)i[k.EA(h3M^HlZSon)N^uIDJ+=>m_H-NpW=W%Rp1T^S7/<d+6@,5WphOt=`!3ECPQ[F72N.kmn82Ip;R3V>6mc%(Zj)mOeh',%#>#j>nQ+f8CkT'6<UsWo70GZd:0Oh&@6V&6S;)O%ng:C)8e,3aZm*UL"KTJ0QEcg>aq4$<AHP3B@6R2DF1<]e)Z<>af2''-\.EC<7Ckg98t%PL3gC6=DVL#7'DV!'"ni=\K+>=;:Kr>Y%"=nY)gijs2&>:4Kkp@c*;MkI<6Lg._#9tPBLZDS?eoe_mP<C16F2;@aH;Tu2d6Kf2P/gR(Z)8L5f6%t"KnnZn,5Mc8Z+?!s5s`6g%ZTnM9@t=-`=9N[t'rt"01BqWK!Q,?Ur5CU<T"Kb]8-RT>)7Rt4Z<.d5V7Re#<atI:`@XbLMdU^r4.\-+U'N7UDH!hZ5kZrB+l:=:%m:*%n)M=F4c)AiK-7R?*%Zn`?.bJu6NCL"cM!8sX%6Q@G)-sJX#;/5P>u]VL8ch1ISON@7qft:<`s/"'PSt`L/j/4UDNj(iZQ^E5%f>Su6ecQE;+Xa@R>e<,t5[M9ZP-ErG%h#4>p?W<apI(*fO`Dn8H>jJV2&N-aDGeO$Lp[R%-Q+fk7BbEJNYW4,OEs@E:Z5'MXKL!6%j^bBP$R_LX+i[gVi/rdn9n[":S=MA3R@-Y<^JPQb1+K27pOZs2jFR!Kp"$at`\I7Wg8+P_,Os'g`@%]Y6&3&hggHJ3OJ%rQrBCWX%o/$(NQ5K;\J"p!@?dSQ(<5%a6H2mg(+2@aQbCBMs^Ad],^Ac`6HnMYoe:#1dC[<,aPfr\F[\bOEJ#32_/.i^V\!3X]q6je!Elo*d%B5DiC0W=1/^ReBtHf(LX<DTZ-U&l[M0sF*!i#.GZiU<`,H]X3Fj'c3==Bq&Ij1_h"l:';MEKEIc:C_Qd'NVH-TO.e(HFo(t[Je%i%e:7U@p'sJL:^34LFq"k:0Me]%g5ruXNUA-#ftY6HU,7?bU3gU?TGX1C0,ZGho(J2^Lsuuf5-DB_$>Ue3U5E3o-b9aXK+!JDn5c&L%hH/^4;rmj7U2<BVB$E\riZBXAs!F*a;oaP"gbn-TeFB28?FiT_ar<9QV$X+pI1'+bRlVITW>jhaG"c[\771"\gsd.#%R/_WMVuL)%Fqn!B^=[$r&?Z'`Z^8DkF9SJ+3k]fCJ"7(>+A/`E7'us,/Q>/\nD8gSa?'_U3]52sVq>YBIEl.0o,&:Sh^_E4`bZE_JS"@cBGR4X%$ND[I3H2[ek9`AKAeI^65b74&=GY:sV2DVW$nMN0&l7oS'BtZT>tglqe8,(8a>7GFo$b[OZ(FEgL*miZ:TZI=+MFs!(CL[965OK%%.cY!_"-\WM+=[Jr0WoP@W=&Tehh`4!63tjh+M*[f1QIfY;ap2f`GXZc,Xo7S<q$_gbaS_..fS!SGjp;)[bJb&7a;XLm_OZb$0coN%T.uc]d1U2F+YfL0esNk8]dZ6A`.u^pca4udQUbjkhDfI!E3@Vjb."AcZ:0%SFs&P:&N7E^fUI]^ER??k3u;4*E>#BbkMie>.Fr!3%l&<;cUCj7U5P,\Jn3D$',=.U:MP1>WYmd^0AobnU+6b0Z-J2/q:;MaB:[m"N#'\$6""-#2eR>d7c_Z:]&TH*0LFab$SqZEs&YE@L%#+oD%Q3JW\qcd<1@YKn7SZ'^o4,^q!Vkh2F&K>4Y6moLXIAH2Y)'o3-BipSR8ZFHCLtVGI)47j+V[;Kq'oleoH9p*^7?Ct#):O$6%nQ?Pg6@ZGHTXj["n.$uWDaUl#G%]aZ'&J^3KBKM8ScK4VrV_lX7`&%,\=T"D#*Vr*`l\_MgpFCjo62>37r'TBALF4)Oq2LSHA9G%%5(+=D=3J%pdMr;rDD`_*g_9GNemTM@WC(D@[csY]\Vu@ER(lSd;Q&&+@KgbXU)ROo\;a$"*i_X1?kbPu*rPo>^P`FlO^g''UG,$C%h*GBOqO/l@5@[R3(C>(0`La:nX$H5lhh*KQdF@6Q-]=Ube"j!]/kO/qKKM^o9S<Nmb1>"BS!XjIF_TQ`R<H4B:6Aq2`oI.H)QL@a%6n1iR`Fec5T?6S6k2d7rDhgB7k2o>CQ_K;5m42Q(U<T1e-X$hqW9!0i7<ZQ8+Zj<G>>U,Sg\0(]D/WuICGkM+c)fH32lN*MRUR_q%re7rA?aFHs";p=4@Mo/C>>]6r%%-H$Ql.F%OP)G@=kGi&OBG%=ZSBnK(#29`[aHq?OWhXi9cL)FA?b`-9dDeh`JuCFg6"5#KTQ;l%ORpP>98mtUSCpY\bX\6[\$6n`'+:qeXKDq2Ft?S^^Cf.#aZ?pT;2E)B=;nUbAk#8<O;0Qm-!F2n-@-&p-YP9a.-NQlS*&0&nnPhZ%9cpXMF_[hT;Na*,-L?\c@9_9=FsIMK@EJRgaI1O`"YrOc6-a;EfdGitem=srnh8^!ITr(#A:^Reg<k"9a'I<C3Mtc?Q#I9rVZE_b%9];-74fO#)V6_dE2%]&\H;][MGNeJU8I\55>kglB2g(KiT5l(F+),0!="I\1oMsM<7Ls56%Cm"u5n2$aZlIR\<-uuEH:.>C8=1IJ%5f?juK,Q!ae,6!W9RMY>=:=**OMd0S]1e9$i=tre5FSE=ZO/m+&NOfFeb3Y"cXok3mb;AJ%rBUj7[tLOJ<[Hf@*:f2F0BRIRV>NG%@*9OX4X^OnOHU%.(%\BF`dYt4mA-GU90ugHm`^Ta#<"TC-Zk\N7,.IR5unbSE]QN:o8M9!X'"[I*FsIq;GfQ/EDX(A]Tt-[?62,1%h_s$NI@!5$e8ina9pYa4'u-T2BC_+FS+aYQO;F`2L`S]o-j%eUjJG'o=laJS"&VNn[S)o,ibmHP;`2_3.cr'Yb8u1O#d`o<FX)X/%g\*l\;Ur,b^hpgp0oRTN;8YTjjedG;7/8>Y_ZG!I$q+\]8Sa.i&4u"+3S/?V!RX?qL-74rV/"]8o25t%g#g&J]=V57L`>hKGRsA"%("LE+r63gQ1*fUZ.8lXAk+CId_(%7c,tLHLNP>5:<q2Tm;,=Lg'jPnUJK"3ul#Vr$3DG&qYAVj.Lek*^C=K/Ie>R#0.Q,_S(TOY.%eSTW+gEa/1/Ig!BH<JpVqMb*J),&Jie4W_q'[:rlmj;SF>q\8NTlt>*bESCT<4cI;J.#!'oa,\trNdbo`r;K>cd7cT0.;pI"bEtV%^j)$7V'a\[pV<?X2r9`Br'X;.8S!U$WC-=YT$4^`13;-G]hVd2MgVL[(,R2TUS2GT790O&_Ue'tns)W+%T5R6Mu,N4PK<h[9Kth=%;7XqWK7]^A'*=T7#NbCo_sW\BFA5Uj["H4k,\iJ&m(cRH^3HdfPsnDsq2]:,Gd='4]J@?*m8/"WkQWf.X7UM\`^g;h8Li872gA4&%nKV7RmlAff*.R.=ltC+TKSUTk(nN_u24lc\3>b3[M);6UF>af#;AV1u;,3]nG"c9=jtjhWh1-!O>,Ri[PcOJ_PK*eVDB@PD-8%`&%?m/)2p5UM)_BpR0DuguJ?^&@7\uRK[CTM<8YB>T/=_)/NED3<YXihDbrMCTTCl!*?6tD8&JhE%Z2[Iie/2CrmpR,-ZS7Fs6iB'Mu%2)R4Tl?;su4,.mT*#X)&IT)5U'+'Wr%_re\6$-&[]n'Q54(dbl>rL[O;mI)>ip$^?Jp't3Q*&%/<n63071"O,9Uf_8-?@$uK8fWp%>]?rG9fnNpVeZXR,h;gk*'._+J!;JVYrO:E@;OQ55X\&(L2bkfb$T>FYF9EQVn<eIOep00B/5-:OD\ONQDTRT`BG?]pG:rl,Ur`8%F3m$@J5g48ipARTh76B7W&_CRJGI(CjPif'9GdCATGDjje16_$;U8)&cM]h].!5S;\rH_E\<s,dk$aD[Wo^1iTk`._lE6Q_j$Zo!%K9^<Vdbk0N")95Sas6@*ERH:VIdb"G:U=ZYV">2c9p4Y9h,s2,WuS*#3.SMdU(`3&A1Q22Z+bb0*d),<LA7,V;ggR37,L`(boJp'%-C(-YDH?qgI%%>`!?ZX+lW9OZ2mkL/9M56mDSRB0fYrnLXad723MN;C-CdH[;6\HIEF(`G4s07"p3N+J^[+_$YhQ6##*q,76aMs>%6+]?S:E3d_S!o0&;;744'2a_Q\C+*0<'2pKNN%c0R?_E"ib5o?CeBJs5KFL&\nV0C<=a9g[D^IF8j+[:3a$U=:eA;3="^n`Q6W(K%Ak\FW1h;B)<Y-/5kY`uEJIm"?;+h%WDL%&(LliAQVBh0C-9TU5%-=eTH>.RaP#)c';u/@.`%aqU2%;:%ck&!&h$CuC\ghAm&N+5V%CP\a`3!RbA0p&fFCeWWhhl07;YbPbmE`BB"9g]ogYmCkZeBkP#,*!qVW$3FoU2>,>!JN9gWh$=4k#W_KKPJ4I;\2GVo.q*!=OEug%%OKGtp%Tf7!UXMNhBl4p%T5TW-sCchRt?H-Z1K03Jr'(gB87pl)=^/aQl\ZCO=?"LcL11$6QCQS@iF?$[T[dM,,,@uWL#*3,%<pK%Raf?<*A_gL$\;gE0I=qB`6gr7Ul#Gh4IAQ;7$'WU=&IM+/MprF3FXII`r($5['Z3/%qhT>WZIHWomu%\Bbh=@UbS@9IUI/SI%)FI%md-=9P).)l9IEgd&PMS.BSaQ%9@FH'pj$IedtDfkM!oB]&c.?f]$6(M?H\;,M\=t^1gM2rn61id)r/)l@jP8,?;!BlBmL_7?H]Uj%[n3dbn4R$X8)iW,5=Zj"0.b2p'.-_C-pGmmH(DCWh//#C.#2OnijHFM8`#ih16?HnAW2XBDohjBd965rK-YSE?AEA`(Q?Oj9+ml?%<`Sug3ToCC7R3l0cY65l/j<oG""?F33T6/!F=[_k%?fBVMFMYn%QAiAHqr^#&t^\#<'dn8BJ\&G6GhGE*Hofn2qMK-f)1j_VH&O[%lQ,[T^\ac5GI`L^r0J9m'C>.'qCeTio3\6,VCk@0?XE.f0aB&BRgr`bFA9d=_LX_53Ao5d^0$q#.S.F-3Kd%-%a5p-7gGp@"B<K]%%a6Y%G(]rRY]*Wl&dlt;T64OjH3(7`$HPj)Vg"fubBG74c.Q`8eL6X1YL4g+D##$<ktZO&mc398QH)L17>6UC6*&NE`dIfP1#";-%l4_`S>2.grA&CpO8St3^8@gLH<?)TNobiZ"Y1"0E',LPdDkF6N8*7u.Apem>EcNTXerj#Yb^SG4D,QjW[t/-?UD/X>c=TkU&\^Kp%'F5(+7l&:E@-1d'B&Q6IjogM._Gq.8R6tC/"bMO/HM:FPAAGgd!m$jlj$k<=_q&2&4ml9LPC63:,ADN3,87^5kEC+V\Co`P60h7[%rA8ZbSqqk%pV^fY8(i0rP"JH4)1a++@Cog)Yah+uDhOl*q)uQKpn1:8%FNJqL=?_FI>,"8-*rjhKqR/$cTJ%9US9/8=,U%m)KpVk%/Iaf1;LcUD9oQ#:2(t*ZaL5Ou;\jUFcDD2oX0L)eEdg++4t#eTpNi3$h8+>=.*pRAH*V_:h@0n^oa\\o*6<8,5@Ga6Y-,>L&/<+b%ZLI8qLu][Kqj+0Ho(,-ub2[^9D;]7k]XHGM]C.4LA^1;F1[+k+mJ$t?%jldL><f#.a(55@kR]soI'2n%"1][rq*n,TQqKt[qH*Yk%Z!qjDdCeQ%p`=#K;][9hmm6qGbf+sa#4fL\>PqDd0>E-2ot-8Ymh5m7WE.!6/;1Bc;Y1fWE">K,!^n/o0,Vd'a920V"JBm?S]E^E%(R@>I8[Ze%e91uR>b_ABp/1;QbQrfEUd3u]^*)O=qQkGtLVs[jlRV`.^1q!c.p7fU7#(3?aFe*P<0HeQd)';H.Oj]f3E^=68o^)j%bM5Xj1>Em;OZ\P0o3UQdX&Qfqd8`Am:'_Kn;[Nc\=dhCZFL-2.q\/oOdH'@o[8SrNU+0#(R>`O':X-?"QOOT3Rup-VhJ32Ffdkf<%]5.l13Padkqid,0)j#9O,XH1&K2?j<01;4E\>0O=+DJoWiI*NXW=@gOD<_KDPVr$P#s'Ykb_ans055*E=Yd..\=DN=-g2q4K/Di!%15!k2NT6C_/F^N"WC.3SD7+ghX%%*EC4K$4h*#<I+L<]m5pQY"iD:Zf[,7"4KMf/.C]:?=HD%>p4F`^EY,,o-WuXe8(p]fbn,ll"%!Dl\-"j#V<3n!f]s7I[HE.D1%'@W7.onh2U@+#JWVc4*PM+Nrd/roJ@<_(=3o@cF?OR9tF[]o2,S_Pb?_e$>'GQ:(f0GY[l$j2ou%:hDQEVIT?Dd&7<sGR$Y^hlo_h"n2H4-m4Y!+r$Nl18?23KrW=2W#tHIUpap$Pl=sf-kZbDaB1qlb6+s-doTiDWZc>D=%38V`#fHr%=N=.Gc3(qD.E'`,SR3CI[#Ce`G-'-4Rp&]SC$Mm@8WZ]D8l)'Iq7Y@7N`a?"LsGQjalm*f=ocmR`qV+;VL#P9k8FLL0&9]oH:DN/%*XUHk6=jIGCUVliYD6ulnVI,h)$_DlNQ^!nJsB!=1MDD6?34(_Qhc3H?'K95g_P`8>3X=dHf6FQ]iUTG,o1\j[?HbK[[6&6OPCoA%X6t=d7Ga.p>lmj-XOabN9dIr)*=98mF?t(BQ45jSA;<o^-kM(OlT:1W,K5'/hnf5gE%=-sNTt:G3YU<-Dd>1?jT<f3e<Q08Y3\UJ%Xi1<6$;_kb9WE7p:f6m1.tEfLqeZ)/C?LO)J2+a2!D<'?Af@=kFdb48c8%-f)IQrer0f.uH^JjfaZecVGfKZjRKW-uCRuq"0Z6sY%ZN`_seX;m>#aOW!mIud98T"+,rfP!6AlTel4.rWmX?Kc*0n"3.m9$S2&)FD&ZPn;?R5o[LHWf@8,Djm0,qdtC4QPGp0FsV,he\k@%`U(&H89p3`@%gdtph_P=`D!`NR\-h2[o(uA4O)S_)AoMfXuMPpXK"'!e_"sJL7YVKH8/2D31coRZF>k!b93TX)4M'*V;p"*8Bqh!%lM*/8(1;6YC,$''a;\heGa!C"G6.Se&@rRp840g>:TegFUoN1)V!#<`l2EOS]E5i=Tn5c\YY:o1b,Spu<'I1f'a1h!kYcOZJC$ji%1X.eG1$pk[$QV2t1.=4E2J"oR2^?m6@?s+]<@5:JIoG8k_bu.[IT`bGSP=Ze-aR0t>UXPVXqk8<a>RMHbWN.Rb^bPa_TW=DbSU\e%c!Yjihq.$?rsR.Z+&fn\:\eN"iQIu4g>0O>bJ2t>/m.*GqR0-JGBNY9P<l?]'ES8O@@d7p*Qiq<'eE'snWG!afbm[\8KP27Yi<>D%*)r)*.jG\"L>P"'n%PPC]q%anF\B_l,RsU5'?rnN.E0(:H-'IKL&p91WbBKeG,3DYhS9@^VnThTU)cfm9:.KM)KHmEB8MgIP4RGM%[L%5K1k1E"s)@n/8Jn87P]2A=&973K9RMV#K$`Els+-Cj$jc=cE5RYT:3<U1TmF@=$RC_a0n!`!>11Ulk\]g4>5<Ma<qr=KBHI"T%/^L<-<th]JCgU2e,nV^doj$\J1`dgfA-mC1DF_.3WgNCn>B2oQJ&+f+ar0W#gQ]?Fg["H)>,qUsg+Z]oMmRCaVTX;()Nri1aknE5%R@!($IECq'9PNbi07Yri1#hY+(Rb0k1llJP8mXO=B%C0^(W1G04dX/1"O.78On!XU0iph^8L?:e-Ai:),XDZR!u&r!E$&19>fRmm%O>j-JB41#Gg$HZP<:G%mV[7]59O`Gh>qK/<,k;E7Tt(J[HJ"T6+f_CibnF*bn3fed,l,)2M4>/^k(/q>Mj@$:7Xm$9N?j^_6*n\e%(g)sBQHLBro$U@FON:)Ps!NZ9R(smknhQ6:7!9jCi.S't[YA$2HY7'74%V&eSa;`*D:2Z5a$55FAf9r;C5Z(;PCTl"&4qa]g6N:-%;_sDd3-$8RfeF:[hNEd]mk+o<-d"lWO_rN)c_nnGat]`R</HTXlDY(:;K#)c-s)[/duEQI@\Z#HZrS2'*^iZ@Vs)Hp)+5@_SSk!^%pM"u&Sk5-eeKVnsPTmtfXaH5DX>Z1CK.06(<<4roZ%P"P;JZ#47B.Ho`XigT,sCci5.E+BFus!#h47R2[lN]Xa7QF+WSu46,TNg&%Jght:9J(lbo0\jpVS9`;bL11d%?Ul!r1.<Adc1g!bk.o?P$!o^Q'!,`;l>sB6h#<M1K_kC60.SM87eYBajnYb`tFu<]:jTH1T!6>%;\JZ*I_nj<rPN_K,fqhfd3B`"5#2T00G79d<dN/("NpqNbm!-8lpg[p`3QA>)'b5dq,@O:J#5bGI)<,9V4COd"1&6*\&7@8lK7]>%BM@i!mJ]<qG;gZXOrKh==4t<&^<6,5BUZL:S[#aY(AcI%`l(d-5*p/8<d]8K:p3Z!lt9L!;Nc'<7[-3.%2Id2$'i:&)&AHQ-J%rR%V^gLHEuZ].3V-Wb;W_46Rat;Me[qh0^(1p@@N$TG3Cp>!`D^?G#,8,^>!p5cSYFt=[H#-8_dd_Ais&AYV>5/K:X/apUH:W2(5s#+%M>S=9WZB?SRT_4cG$6b#-g>/LCEhMq1cWOG"_Z=2<An!0M3g\20\klP8U6r>Ce3g*B[l!"ROP)(JI*KR+#-\T$m9YG>%*l0%A'_s%]eWk!r*`=AQOB^EUgZ>coT8R.:(<ffmZ96?D,-ege0sZ+g9Ml<1TFmX^dq[W<Vaul[8]$<<9d2%F/#V4*YhX9P/cXOF21rd/m3Cd%QUXq.g^&s$H(VY!_ecnAeS,7Z[U94bJ(l\1miF!9RgR,!jchqQh\PW1j<'GZM4Y,*+R"t&A"fLk)BCrBo/EtHUCClF>;q0pQP)$*%DMFfC!AZ)&bV@Xq]qO[+:RAiWA68AA%8Arlq1Y!tbk<b;B'Z]")eY,=j6TF03KoGm1_$PNq.[-@%hn_M8TCh'1=q/)<="/UJZg4F%Wn"S7R=`7R[DX.UcAdWC(h+qU=QtC)Ll7Qm%!m+h=?9;3;Oqcj\j!\NRAlp9@+M:2,a_T6hZU8cX:E(Jq9Y:4FsQHaa':<F9.lU6%^U33aW"@0FG+OkFij(S@s,uI69!sVgjCT+X<&pY[FZ*s.Q#2`/d56YN/ig4s>;;Iael'RTlRrQ;,:Xt=&aiOUc`,%KW\LO<.mFWJ%V0^//YhY2HZ[jCP@Y_XZ*CsA<NYr5++m5#4Q?_X>3QI\,T9W2npNi4Q[gK7;<!tPp);c(&j\Db6lT3YD5!K"pl^,Jikpj"bV9Ckq%0O<2QKBdi*;(PS(WQ>D/4@m;DE0)@d^4T!t'Dq#do1CN%XOh)9%IVYSrXn^-dk<poGnA8`-S2O`1\R0@0Y8rD((3K?A_aLq)ilX>%*RA*lCjisp@?U<R1.":h3eqWMVT'?]PRYZ+[&fAH(lp%G[>QB`8Vgsta9m4C/2YaPeL?FUlKMI2S>mN,hi(EmD:mBAbjcR6<V#q-%eDFr]FQD5LC!o;4D<.AFO?>_IS.!nGE6A%#r%tF*lY#uorCU[o^X#M4e..E[/*2Mr$;?5XlcA'4B!Od*UesNd;Cf>a?2-B;!GTo8%h5m;7_AfMD_:a19R^=?>jOHb8,Zf3Oq32Z(b$D?5Y>"hQQ:sfoh3fT11mtcmFLUa_qWJnT(0Er?-0m2TdYKZ%)qcqfn$D_6R)u.c%:Xa'P07;Lt?/([8]aXL[G3`/3#Ek9V/ePTq#7EHeMA-g"df&QKF>2&,p(^NAk*Ds;mJSd&GYg9],"\"H,]!I9j9=8gON_J)DKr2K%+Ne`m#3!jR+'rEi1Eh1CN:N9\9VV9JR''DbM.'8WpXsnAT$U"+4@s9hF%a)&nA/%8\AFbJc.-Qq5H]=EN!^hr]ji\`]Hro$hHuG9%:6j"(VqbjfO"X.@eTF5URlVO@g2uI.W(jT.6#G>"#\l`tY'/"m[C$^#gA9!^^o.T+Xb>k_fk9c[P+LdBl+4.d9HQ17@4H>a/uDa+%$o6r!`KUJZW/65HZ\Cdr>'F+m)G))\NGOru0rZ=s?.Z4CdQrrAF>E/b&cJ,4m6nMYm=[Qaf;rK)")GrfjIIT'3_@J4-e`4oe%E@8%k45j1mPgcPLO8[]%V2PJ9.?N8!ciGBdZXTF5B/*-XG!c.<ph_52#S/=kEoF2hU:BcYgf;rh,D?QWEMTc;Q^Lt(ga]R)QOXm2pIAu%'qT@jBSCNAdISt9dE6;W&h@L6q'<m@*._Bh*#oDjp3rAYa#s+LDEi4Z\jH#<079Sm]Z'<@G#>bogI_:`=/!oH.W_Q:Xtb2W&ANj8%g:qQp(70e+DS+0d@;hiM@T_73^D_:q^\$g7.R"VBWQ94TE?Mho@'Q5:`iHHV^fQR_RYab-Z/\7_pEDJobue@_'VXa?mDM@-[lsCX%>=Fp\_&'hXXQW'"A2cf'Yj-A)9IEKl!i!'6[&QNr8fL5D#$i@_k4peRJPUfNr;r[Y;6?oKY5-\R7Al-:2IAA+0&\k/"?&9mH0;qj%7BHRrVdtl:<GRc`FVbeY@a6i@3(0<^^P8kH_L9Y#.<aE4@VNto*AYXscR>KfCJGL8emVfE.6mG[dZ+Bp6&<AQq;-TT=.gT&eShM7%fG5O'To)DL_p@oKq_#prE.Qb%`4[t+Ic$NrLX#Z[@?NQcQ[3Nr\RE*A*aaXnT"k1@-Fk\kk1T`Bk__?;k,PfZ`m#.C_hOIAPGp:f%a[0`9A<4MkWOL9L,bY<`WWZpJo:qusQ;*]1;f%kb@k%8,@S>bMUP`=V(:]Yo3ctNm6OZ?7HF(,E+@m^k'%)`8Td@qNh6\><OnG%8%kTi0hSa<lZb7g0nE8m#Gh[TACEm+slB'JJ)E.5$5Su/G>>%Ro%C7pe,/<Rc=)Ihod&(r[1Ria4rB)Uq1AOhO(A3'L=DYO.MHs3\&%/-E-e>.U#oOH5-b(:-ZI0d\%lC0$qYM0:-R/Rcd%CWC^2I0C^`*bVq1>U+K6S$gl2M>Un62a+(Qm?fNk*\0e[jCU-@2IZ:J66=uc%HWA<tg7G_kj7(:Ye*P`b'lDd^&eFWJ5FuOSQ.a_SGs_EM+CT"0V3]n+pAQ>p9=DWeR4bP)V__W!Q[%t(87+BT[&(]:mk8ZdWCerk%HKODdHTfU;UCA9MfaZUM2bcJ\<KYKL:=J?KZcaE!X\Coh^m0Ah9[Z?s-4Q`^R3Tt@-ki[J[gCq/>S>G!a+f7*;`>u/)8oZGS(Sc*%g.^fDd>k"sSM5q7DobASGF/#R'BM"'k^L;GH^E.M%nT<])&l5o9\kdLAe6?K@TIOU+LA.:7O9;h=tu@fhNE^`mqlo:%asFDe`leN%V_k4sV;7;Ol&(A,Y.*I-EU(loAu!K8C*u*)ZsXQE5ulKrE@Eqi<X)"4n"@6=RqS;%f>DF=gYX5NHjL\cQEd,`Xq;O@4q?<uAg+YB%eb(0f:OhOGY%gSke#\uFB&cFg-1,&R7?Q(te,,3]?W/gEW+la>:6[i7j&>9^0JtZ!V.OJSpXeE1dAc\`;lADoPn21oeUn+sNO$Zq%EFu)nSE3LDROTW\II^h\G:U=Pd1O<2V:3([*O`!1I2d@oC)1b-6-*VA:G\n>N+4H-aTa"3#GgkpQT>O/`i2_!Gq,l=DPV'i%P8R<%XrIXudi*.sG!]\dH"s=uOmKbq\Y_bmA\_e"4!?dGa.*01'eO&q<F[[<;BI53FuKkdM&F\P?(X%c:PUK&[%2XePE0I]<jcL9b5HE;%);ETB0\+uS:`jgH,_%(hkEn;iX&emnGE`MIW]D]r[#ukEUpdWm@+D8S8ZqpV-0_Jh`TaFsCW@C"kbHqhi3Se=e7ICgkt[%q/n)nT%/%DR+)@tUC_+j%eYQ=X6]^IoJ7h`6$+W)N_G0Kgu0+H3o;]SC#/@=IDm&"YQo*k7MPpE]hl0n*7BBA*8g:;?[l^W<?NUI_t:$.rS%Z4l56:)NpehU#i#No&TW75JYhm(1rn^6js7%IWfPLX(JCOYY#tE`T'oN8IB.RM&Ns5&[W[\]d7$s6uBR-:mZaHl1OT@bC*-M(cbb%P/$qJTa[^C5ffW-L.0J)NC\&>#VFEY_64QpJDA!7$B5tVn7u<"e:;kA8;>Md?hTe?.>?X7LknqVlI'F0625$#P!1us?HJ`L?^]e&%=u'SOpLj"$6'Z.h6+J4SI#^3']VQMW,dkBpV\A/SGJ\c7hIl:u+N$0!J/lX<Qj4,V!:*9^E5<sjs76L!9-kTU$:sN2Q(F*pCra+M%n*u]#UN1H8ZD3:&Beo0Gok!l\Bi5+[V-&KIb/+@W-0'LCc9`(o-Atb-\fFA;F3Jpf/NKH9^VijEb$".sTC:afL:eSio928tmR3)&%D`agHg^O'!d@2C;s$s?d/)_b`Z$=`#F:jD[F`0WNW9076hp?/$S'dDa>A%,)]gR5Q-$#*<&/eaHV$qM%7mgoK41)WK$a9k5-fa5"%h9L6e>[k?e+FU(kns4SqU%d^iGH0)mkV^N[gq=ck',)tlGBN,*$6ol[e#SQ@\fO6KHGipOpd9MQRh_aca%?)]#s\5a*Q/[iJ-QhB%-R_$p'snM3';gEWGSo'hp/A[7B!qCnYAd8o2n=`kZ:dt@b"f\K8uoC\ONRDbcXP4+:'VCN5Hl1^VmIa3(Tar&4+\S:@=m\n0)%?2%33$Ap9U1&&Oinb`W6+qbXZ+_BK;*+M`i4,,NQj3@J@FTEZL3=.:6IEfa\EMTc!%PBq%%I=ft52TEM,Y*FVgK#5aJSOFAYI7h$#M#%-Ln`&KQJ?kW"nW,j(V/0-q&RLdA'WO#>@s3LJXF<4/qSc?M_b2H(uMheCo8u#FRm+V'Y>XCe)q3*-2lt6d@"D/@!VPEeZ[+4t1D+%p\I"?rt@>F':!^d\nSg3m2Bnj)&dGmo&lkp.@43u.3FCVRf*><o>R@K#V#B7f;+^%"IOo_CT<No-d;.IO<TD^<<n5X"dF:"G**Wt%[0YA08]V<)p`n4GjRHH7#=k^OZjlWf+460]=ic#^=sDf0dS(mBBLcNB%f,Ur*TrN.QM>,-"h0KV/)>mHZh>gk$3!B7:Dl_Do1R5!%MV)^!&.i8i%$j?cR"cMoWY(2E3DgcP&NaN!MPD1*&)LHqm.F,u1t0t]p6+/bRGG(9/ZVD<8i(smQHU).]//nWd%lLf'&AT/KrU4h%^tWiMH#JP'7[*DsLlT#jT<["c/A>aA_*;<VIG5o@#GQ#1YWDs3V#`uS&ldu2BnW=,VD'l3MP;>Q"",`sHS1r*&u-a3Zeg#6Yb%LX%du5Q@'4RDPJu#>C1ist2L4Yt%>+/"t@aG5&9oFN8P(VdQYfq(s5(=g4aj#p$HXFKeSK=C35!XUiZ.J/11nE4]QA_\[)e?OVW1`7"%`b$HfW&4'MR]<u9=JO?#\uI@th*W:KG390)r?AsFr:Jm_likW1a<%%I^A+IE&[V1+80bGLqFFG('j9!I!7KLq:%'3Vi)1q-1BHK,%0[+`'HULZ/\E]d#;Sc(Z`uVDSQ/*.umVX`A[:b]MoF==\i.(F,%JX/&YT0X.Z#mlGQ%R5r&rouRg_oNdC>D-I;_>Y^penNB,-IeH%,%QP_0)*;?VNVWQ4CWJsV*kfS=IOT]jR=1'H`TZi3qE<Ij:8sV)[?gH#\fb57e+c5FkGJ05)Y.N=Om\=p@^:4SF;KGLhPm%`jC(A%c0ZVeWm?A^rXRWP4cHK_=Ym>L%TtTmlji9\k3JO0LLk[kI=B2\gsU>BMJt@[gVP5ipXSS<YPlZZ&#lpnCSm,?[g7n+VV@G%gD@KO%g<74_jj$J>H`g$%Ph\:1Aj1l^CTkk,GB:'mV#d=u#_f1sYrS\:PVuI$dnY;X$qQ7a&sDNWb_`3-"4:cD3]KWm-T6CL:=%FQH:GCC%e:3pc;BK\K4<ZmPo>E['bRnVq1,j%3V"nGOhr]]"TA7Z6D>/6=m*_>Ufahkc4$E&)CWNhC7[Fqf$Ld4RRmuD)LNRmN#t;9g-VRke%BM2_TErrR)0Kg9RTEpYU\<L[V5Z%3Pc_r&0%@b(0LM(?n&*U,Wh:4fS3Y`:X$1Y9glQJ5qiZYgB^5U9/o>1^LbmPJ3nih,uLY;Ti%j^DF9d@N'gfAK:nS]6tni'ukj0j*5A=*f1Yeta^&U*f#&C2U$KPoR'VN+?9d*Ed]CTZ/T]KAqQo$Thd3je\8JR:KY?!hZF]`u[kB%8C.)kXMf&u\pop2U[9<:H=r)\8l(l`?N5GBZ.HlEm_7;L=7G*j9ObE8TCi6&=r1Kk7k</:dU![;jC67,l?asBXUe7reK(dL_.46%%%jQG@Ier\;*nq,oDS25N_VlW]DrpAmO3bT=r)Q"$f,hpZZ4c4CZ6gZd)-ON:?2PqUbTh"$jYtKM6hVmD)k4R"ItD9-&#R*h_U986%6_6!paCgI;kk)?;E:,O?11QcJ#nOnsa^&[lNfBc:Sfk3ibe)9Grmc-sqR\*=HOqN,oUC<pc`TW`Mr*9,$0Xm(B.jP=ORqGUA\Yi9%M8j`ZmG_44[?Rq45i[#`cmkJ;V)>cR0F]Fm!(<q5P_PBlklp0m\icHO;WoSD!iuf],jD]:U@FtjHojeeE1TVRS/j[;9,,T(%3<"H%6_kbh55qkkK&>D:-0*6W[Ed[W@g;#DLIEUa_k52Sjkc*Os3bhIR9U;6@Mbh[<e-_J+V-S`CXj7n#3Na#_P,_/)4aG.kdI9Y1`Kc$%ZirTOdWi\TiK3Q-77''bDM2B*_?(t#HCp'LX3Zcq'(&V"-OE>5'$d<ZkMT[?C]B9udL%Lc,iiM(r]GD?mN%STY+ZJiNe_[gLsFg:%q7@fTdSfV8o.)9*,"T,M9=aUE!0Rn6A#I_=JQ^;TcU(!nFfA&rTnsCOWO'_k:9emL;6nAE9Ki^00lA,>An&:#ZR:;QAZXZ/b+g?c%a/NjG6`Wo8Y<Q5aZ-g$@W:UO;5X"s-.?t4uAU;tdA4f]<=Ze*;"@NRtW4_CV.8m>-K<jsIj>`$KKJ:&i3jDR@UpWjbEpVWoeXA8[%PacM4j]#c48l7.-G.Q9/X&[sP[g\Dsmp+uI;RphSC)T!rIO@u_5f<c:,A6k-Pb+ep)@$0H<YctoT="ab.O,-)8I0@9QkVsC>%R).%nH)sWK4?P$3Wn@0g9KMKd[2a'1bPSspKBKF!nhu1p*[hI6CQrb+_En=;KsEZr5i,%4A:u:'\m[X9rhVDF&NCq9BU%^c:h2X]imT7%Vj35&Un@LiWelZ+1qaK#8_]=N"dV=o_]Or,-s)QuM8AtPI/LE_e?a^rNOtoC&<;-AIF^Yio"3>Se$cGJrW/-`Bcr3!nChO(hjp*O%BYai1%]c[(-V/l")T_!W;.-fqn!<<kMGb`F7^F>.U,ldOmZrDD-=]O(Ll\TP/FOu[Is5Rjn8VM.lo6h@pZRd&Wj%_R+Oc@Cq]qU3%Xi>ko@)pbe5F,I@hNglu7A.s,f[;njIJZM!n+#dA*JtOh4D1)Y1IFuH8,hopj#u+24!GD0oN-dtg%9K/D?(Q?BBdjsE%MkPfVmuf%=8'5cWr2`nWjU];,XYf/Xgd>*Uq;Lo"c-tY:jFm-ma:YYM259UW-=dePTA/\gOTh%^Q0E$a&E]HNoN#[LJf8k%mp;!*)8t%n?Npo%e#R@k\TH('0@.pWgf]Vi>,4700[oZJ<+9a@f3U9m@O8mkN2"P;P&4Bm"NW,g&^/tN[q.-DrujE6.%'uK&n_MXd5Z?$>cogDZo=3<%f=;/Ee@4C&ViMP&[niugc>S`,]#K$4^*-SG[[6&`471]h7l_D/*kYhr4ikEn9gTY5*B1R('+NJk:O(F_.>P:Thtd/d\L,(S,)gon%/,;D*<g.QW^KV*gcX5A;bU*r*mQW6S6gunEe8?jfFX*ds*_9H*rHE\+;f-&o#^2h<\u8H`%`m2-a#SiR"Z;fb+Da]rFMTL]W=#8V%e11M6@f=qCEma.T+O+t--D7N9$MUMQ/(Q[]4r!F1Y@lZ'b@-qr$C!M2/lb>,OJA[6_pL`I]Geh"]L3hi8h_#s1IfpOF:%9,:fu4B%YUP>/(d.DUfau4MrLIGVYNmtk$F06E4ZgWNK>5H("4;sn)U2"4l.!Ck[?f,W,tFBHB9PNdM?&+n:<J)cN^=p!YLE;/;)T:s??cO[%9A*?BSnCDu@d;8FV)?UpQ"&e-B6X:#e0u`"pVj?$WK#e%PHRVI=5B0W$/Xsun8Cd5qMj:?@:K`59hUXdRnV&>&+8%e%t;gDrAp:n%FE;=4OjFA$<'GE[qu0Sc_K-U<&BP,.I1dtUNU!L[J4a\"-e(5tcSHc!CH![HgI3uE/Q(g%FVPjZg-V,b2F+c^*Pjq,,EQ1CM3"Mt%ZQ-ObNhp[-L>IWBg/IgRX.NNR_DA@$AYcZfkGBiefGLWY_0?!boOk2R.ACTh2#WhY,$E?jC^oVAlT?+c>h%Ja[>RCLD7$Y?fS1@u%/Ts#F_d9h1gc;`-WT*bka0),URUZUh;qI#Y`KIP5^LTsZnTOK=F0nt3H)1G/9$2GLb[e6p8BSpT4g9,UGRiL!e<<m$J85V#NrXG$%do2>mU3)W4>*`*5*ST3*RNme*OC\0Z77.=1ipQqhkcPL(@%--6Y3D5n<40TZ3k62-$?Oo+VL.<4`s.F#\R*um69JtgS[HmF9-R@p%<i7ChV]m+_>V`\S;+I7Ur8SA&VkpnTA+eVH<&q/<#b%iZQBj&$^faQDSn*^p7Ss)a(B'e-.4Rg7o\mDuQ4]K,UQ1lF4fGb0h.?cJ%'lquNoo5JY^*1bqR:B^;-da_Q))*)7'@rq\5db2>Mnj5]bi3e<f$%#D/Beu#2L?d!V+UgI3oeEgc)pcD?@>rhnV,Hb`F"8"[NXW\%hA.DD8^EP/R\_2X<-LbhK-l)EDq[rck=ZT8EqpLe:$PJ*RMEr4eY5?-Vd\/F=u6W[j*N[lF>,d3%O70>5Np>efJ/t`hBS+CQ1b<,%*!g;DgNeb\k/N^48,^'bEV7]tK`,M3FU7mDNqD1P=rU8tO#LmB"Xl$+JLo&T:-KVkdj(3'?#k&7R_@#prS;Vh1p)?h^WHR3RJXT*%)K!0W_)q=&/_6M\EkpJkQ?=L+3S#-ib^K/,`/9r0I47O%KiN>VpbP!`XGWF4[2b'tluVNq?<R%XA71a=QqO?=l:-Oeb)73HW;A's%Q2ML:&7n30eMTb4bMS*VOb'3ULM)@u'>pcB#iCl<%9_g@1HbrpRIqBs`HlSn6`F=s\J`1EBGYUCSe#A-*M[L=&6Mk$(NgZ>A'Un)%(m9"\@/VKF[fKB$D3<:6OONh[.Q>/]L$tpu:j',cWPdD`fZAK,Nu\ng-hRaV\(>^c)3W=Dm40pPJIH\0l'R%3cV/_.\NBZO">L\8%q:$YP\t;dS/ieOJ3g^qemo+;-1W/UW?7\Nm>%LUA2lXe;JbeHLZSd3(F![6r5Vsf=[V'/oH?-N##A*#IeKV)RpD6N[<Q@3m;7Q.N%P\]YBGi3#8g<.uE<up"@lZRkVpZVoM-+S`[hS^:Rg:"`6bmgbsJI`^$&1E_H0=<o0e4`$GHMa^c6aT=7*,l+pZH][A*EO2!\R'b]%<8ES4Y^.+HJY[iJQD<:J3S?>SAZ5hLjp,.",B$FHFI@>!Et#0X:mR-e>>g1C7d@Xp/IJT?fkb\gfQO'#S=BJN)W\p`p/A91mt3mB%7DHNE'"&1E00Npk5]<kQjI#O%6L/!=[7Xom9AC(uKH$X\YGPs[/Y&.Fetql_SFkV^\o@1iS@f$HaB[Sf@;E5aD)ipJn>Til!1)39%=p;K:7i62J:);t\YXKLZ8RNkV8PCDd\T.kj'm]CelgC&DXX9cmn=IT1p%XKNImj;Q)BY`NV;2`4gg$R^[rbjYS+TE'gJqqs"A(SU%[OoR\Wo3RcjY"D^oe]L-3a>I;oBs'1`.A;P2L)^##TrO>]+-4N@n1Ki%ZfZ307&cBKLk@]obUVo*;i4)rtc"/#/VD@XB%`eNDnhD%Tp3%M/9h8?WA@SFh-F<?lB4/IOS%U[V2^7=1j/fk6\OH,SSiSQ/CDU$f*b[84iGVpW/Wr<(3UOY#L.$Z1FB7^^R%#W:>N$?l6W+9%qn\4%]sOp$&N3%:pGUGiE4PSq5rd2`&pU%4<S'gR$I\T0X9+0WP9$r1<STpDgoR:=32*gD0/rL0P*,MX3o&e"h8>A#WdX!]`Sr1d%kk'bbKRS>kq<&i745B[oS+IY8>0'1=o`>t!e^(i%.s#&i>pF0uNgf*Vc]!NY_X>P:mtmRhHp'k$cH+\^::/SUs*2Ec8%VM>F.,f]%28';-1VnI[Y`3).8HfnB40X_?pGeZ@Xk1YuLM998NFl8GXikfn]Z(+/FSAK*5nbI!@r9An;g!tNNHoJgafUdM6V@pRJl>(@D^:,^%s6c+B8K^[pYAXRp+e2?bBDP\3QP)O`7.`^ROP3.!0>B<=_['AlhpF:Ll+ZGK7JpFGJ'hE*GbET3E9YdeQB>sn$"qU5H5ik2gosTp%fY3p6'Fgp^-WZ"L2EQO6)WkFGUFbiC3Lc"&i`@6QVA:qOpHp)d&AsT[D$&-U[fNVuM"^sL3E6@?s'c!2IAn&c7;pl!:gqU>jjW'7%@N8nS-2qm^a=eAEIYlCaaIk:nZcQ2n(qr&WkkjQq3[rl1js_s;YgJf/a&Sl"\mDn&o35Z50]CP8a*Lgdh.NY_HUs5S(=.7@Q1a/E%6ll#=f)-7X'"2j]r[fk3,%]Qm^cR,82iU8dICR!Xo>G$(>uU@3IBAr4g>lX>]leIsjs73&=C9VN,cY7^UmQ9poX6b&GU&QdU3X!9%YVT9j8=Bai\Ot(os"GhN-dh*Z?["(5NfS[:ck\heZ0ahKq>.R-nYkOHo8cL-59JQ"Pt2Wkr5\QGoJW>UFR4?]I\oXXWl,:1^\taW%;Rn^eflHD<4S8(@0"ft:Ce;#6Kri[`6$#ro#L`DBC7/G>?KP!b#>\tT@q'ALYV$&o6F<IFJ#?CY6M&])k:;PU:[/CI_@T\KbC4)g%YK:m(0tnS=$SW_?h]dHhL_jEUi0#.B.;hOsCp=o"5f=]rCKP!K@#%-=U!>4(d\hI0MTi4*BtOY@I$C"e3I'R*S_`XDJ:CBPeN"FF%ccLquBf;+>XC'_,D2(7rZ(Jb[=mWh\'p8eI;-H9=`!ngsp!O)N'i3WGro5>!he)t"@)@n[USd%5YoF#_p1ji:aNS#:5X=\Y+5H^F%4@-k'lS;oP`*O_PjKg(=oKt6U'X1\pjq0lOF\\eY`>4"LQ.nGZUT&63B2*1&"[uO[Y`sfK'I)ZmCda#.'8Kc4rmd!)=[:MKKSY4a%o[';#3Nn9in^q,nE<ClT(74=?Qj_je&E@/+bi/:>9i3Y%+?m2"&a<Lm"]0?tat![i8Zk?V:VHX-`"GCdgg9U!n/>,R>7fbEk_t8;%XPTk/nj'sYqQOaX55tXM95OE66ss$[6nZaL#__MYC#iD`Hu9tP!]d6N_`"jqL0'!)OV4Jc;hO;5Gmn.qL6*^/ZfGIf/jfX03aXiq%r_k@O(?lBR)at_Ok*o/4mb]7OSkL);4LH+$V]GX("CW[YY<,DM^f35Ma%[A<9+X3OQ@tPVAagsibUeT_kFPF8Tkc),(MSGRg^D>Z%A$fe;ds=YRek'mZlt!`<p;*.nJ#*0EoQ.OD6LVqs88@AhR=c7/o.`&sqT2L,3B4d&=?2I4C60H_g4l/VhG$$oPnZGkSQJ+15L&KZ%@AYdZs4<TEr:du*eK=h`++Et\e*m;*qqq>AhnK*e)u:kF!rUq_IJrJ]psU=7p\WisrT154rN"Q9Ish.j5Q'b)q"1c(rbqOdDufh/%huEJ@O0?=re_dI3J+N&7rp[rmIJrg\rl=L-l!M4)rU544c[Xqu8=B;0n,DaqTBroXB:A_j+9(o15CDLHd-SLDiIC[@^[S<(rVk]@%p%=Z$p%?*!j-ROXop9%`l>QNKs,XqpVn`,R^]!rJJ+rEGr8JOmkAPhHj+$mbDgqHNiuc&6p0W=@s8Mfd2o#AU7el#Yh#Hs<[t">G%?iTbR5Q:HN?iTp4ru[@"-hd?hIdnN[O8nk6rs.PEPSO~>%AI9_PrivateDataEnd
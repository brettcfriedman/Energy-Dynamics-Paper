%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: no_n0_growthrates.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Troy Carter
%%CreationDate: 6/4/12
%%BoundingBox: 0 0 375 196
%%HiResBoundingBox: 0 0 374.2720 195.7764
%%CropBox: 0 0 374.2720 195.7764
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 68 8%%BeginData: 10614 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFF7D7DFF52FD047DFF7DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A8FD0AFF52FF7D7D52A852A8A8A87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8A87DA8%A8FD04FF527D7D7D527D52A87D7D7DA87DA87DA87D7D7DA87DA87DA87D7D%7DA87DA87DA87D7D7DA87DA87DA87D7D7DA87DA87DA87D7D7DA87DA87D7D%52FD09FFA8527D7D527D7D527D7D52A87DA87DA87D7D7DA87DA87DA87D7D%7DA87DA87DA87D7D7DA87DA87DA87D7D7DA87DA87DA87D7D7DA8FD047D52%7DFD07FFA8FD04FF7DA8FD29FF7DFFFFFF7D7DFD0AFFA8FD07FF7DFD2AFF%A852FFFF7D7DFD0CFF52A8FD28FFA87D7D52A87D52FD12FF7DA8FD28FF7D%A87D27A85252FD0CFF7DA8FD08FFA8FD1FFFA87D7D52A87D7DFD12FF7DFD%09FFA8FD1FFF7DA87D7D7D5252FD0CFF52A8FD04FFA87DA8FF7DFFA8A8FD%1DFF7DA8A8A87D52FD12FF7DA8FD05FF7DFF7DA8A8FFA8FD1DFF7DA87DA8%527DFD0CFF7DA8FD05FFA87D7DA8527D7DFFA8FD20FF7DFD12FF7DFD05FF%A87D7DA87D7D7DA8FD22FF7DFD0CFF52A8FD06FF7DA8A87D7DA8527DFD20%FF52FD12FF7DA8FD05FFA8A87DFF52A87D527DFD1FFFA87DFD04FFA8A8FF%7DA87DA8A87DA8FD07FFA8FFFFFFA8A8A8FD05FFCF8257A783FFAEFD14FF%7DFD0AFF7DFFFD04A87DFF7DFD07FFA8FD04FFA87DFD06FFCF5782A8A7FD%16FF7DFD04FF527D7DFD04527D7DA8FD10FFAEA75857587C2C575757A7A7%58FD11FF52FD09FFA8527DA85252527D7D7DA8FD11FF7C83588257585757%A8FD13FF7D7DFD04FFA8A8A87DFD04A87DA8FD0FFFA88283AEA8FFFF83A8%A87CAEFFFFFFA77CFD0EFF7DFD0AFF7DFD05A87DFF7DFD10FFA87CA8A8AE%AE8358AE8257AEFD13FF7DFD0CFF52A8FD0EFF7C57A7FD08FFAE57A8FFFF%A8CFFFA783FD0BFF52FD12FF7DA8FD0DFFA8827CFFFFA783AE838283A87C%82A8FD11FFA87DFD0CFF7DA8FD0DFF7CA7A8FD0BFF58AEFD05FF83FD0BFF%7DFD12FF7DFD0DFFA882A7FFA8FF83FD07FF5857AEFD11FF7DFD0CFF52A8%FD0BFFCF57A7FD0EFF58AEFD10FF52FD12FF7DA8FD0BFF8382FFFFA782FD%09FFA8A882AEFD0FFFA87DFD0CFF7DA8FD0AFFA85883FD0FFFCF82FD10FF%7DFD12FF7DFD0BFF8383FFFFFFAEA8FD0BFF82A8FD10FF7DFD0CFF52A8FD%09FFA757FD12FF82A8FFCFFFA883FD0AFF52FD12FF7DA8FD09FF7C83FFAE%57FD0DFF83837CFD0FFFA87DFD0CFF7DA8FD08FFAE82FD13FFA782A8FFFF%FF83FD0AFF7DFD0AFFA8FD07FF7DFD09FF7CA7CFA7FD10FFA8A77CFD0FFF%7DFD04FF52A8A87D525252A87DA8FD04FF83AEA8832CFFFF83AEFFFFFFCA%FFCACACAFD09FFA782FD0EFF52FD09FFA852A8A8527D527D7D7DA8FFFFFF%AEA8A8AE7CA7FF83A8FFFFFFCACFCACACAFFCAFD06FFA858A783FD0DFF7D%7DFFFFFFA87D7DA87D7D527D7D7DA8FFFFFF7C755183A783A8FF7CC39ABB%9AC393B593BC93C3FD08FF7CAEFD0CFFA87DFD0AFF52A87D7D527D7DA87D%FD04FF7C6F7C8283AEFFCFCAC3C39AC3A1C393BC9ABCA1FD05FFCFFFFF82%FD0DFFA87DFD04FFA8FFA8FFA8FFFFFF52CFFFFF8375CABC99C3C37C75A1%A1CA99CAFFCAA1CA9AC3A19A92C3FD05FFA858FFFFA7A8FD09FF52FD0BFF%A8FFFFFFA8FFFF7DA8FFFF7D75CA75CA7CA09AC3A1CACAFD05FFA8FFFFC2%9A9AA1FFFFFFA8AE7C83FD0CFFA87DFD0CFF7D7EA9A875C9FFCA9AA0C36F%5EA1FD0BFFC3CA9AC3A1CAFFFFFF83A8FF83AEFD09FF7DFD12FF537FA9A8%75CF7CA0A1C3C3FD07FFCAC9A1FFA0FFFFCACAC2C3FFFFCF58FF82FD0DFF%7DFD0CFF5255776E6F7F7FFFAEFFFFCA7CC3FD0EFF9AC3CAFFA1CBA857A8%FD0BFF52FD12FF534E9B4A4C55A2A1FFCAC3A1FFA1C3FFFF9AC9A1CFFFCA%A8FFA8CACA9AA1FD04FFA757FD0BFFA87DFD0CFF534DA0A7FFA9A3557EA9%FD13FF9ACAFFCA9AFF7CA7FD0BFF7DFD12FF5377A0A775A97F7F79FFCFFF%FFFFCAFD09FF9ACAA1CFCABCCAFFFFA7A782A8FD0BFF7DFD0CFF534582FD%04FFCF767F4FFFCAFD11FF9AC3FFFFFFCA6F8283FD09FF52FD12FF7744A1%A1C9FFFFA9A95579FD10FF9AC3CA9AA1FF57FFA858A8FD09FFA87DFD0CFF%7D75FFA9FFFFFFA7C9FFA9559ACAFD11FF9AC3FFFFFFA150AEFD09FF7DFD%12FF525175FD07FF7F55A9FD12FFBCA1AEA7FF8383FD0AFF7DFD04FF7DA8%A8FD047DA852764F5555FFFFFFAEFFFFFF54557FFD11FF93CAFFFFFF8358%FD09FF52FD09FFA87DA8FF7DA87DA8A87622A9FD08FFA9554FA9FD0EFFA1%C3A1BCA88383FF58A7FD08FFA87DFFFFA87D7D7DA8527D527D7D7D22A9FF%A955A9FD06FFA97F55FD11FF9AFFFFFFCA82A8FD07FFA87DFD08FF7DA852%A8A852527D7D84527DFFA9FD09FFCB557FFD0EFFCAFFCAC2FD04FF58FD08%FFA852FFFFA8FF7DFD05A87DA85277FFFFFFA97FBCA0FD06FF7F4EFD10FF%CA9AFFA1CA827CFD08FF52FD07FFA8FFFD04A87DA87D7D845276FF55A3FD%0AFF5579FD0EFFCFFFA0CAAEFFFFA87CFD07FFA87DFD0CFF7754FD05FF70%A2FD07FFA94FA9FD0FFFC3C3FFC3A77CA7FD07FF7DFD12FF52A1FFFFA9A9%A9FD09FF7F79A9FD0CFFC3CAFFBCA782FFFF8383FD07FF7DFD0CFF5278FD%05FF7E547FFD08FF4FA9FD0FFF9ACAFFAEFF7CAEFD06FF52FD12FF5276FF%FFFF7F55A9FD09FFA355FD0CFFCAC3FFCF9AAEAEFFFF82A8FD05FFA87DFD%0CFF7676FD05FFCAFF79CB55FD06FFCB55FD0FFFA1C3CAFFFFCF57CFFD05%FF7DFD12FF51A1FD04FFA9FFA9FD09FF7F79FD0DFFCAFFC2C3FFAEFFA757%CFFD05FF7DFD0CFF5276FD04FFA1A0AFFFA97FA9FD06FFA955FD0FFFA199%7CFFFFA87CFD05FF52FD12FF5276FD05FFA9557FFD09FF547FFD0CFF9ACA%FFC37B83FFFF83A7FD04FFA87DFD0CFF5353FD04FFCA50FD04FF4FA9FD06%FF79A9FD0FFF9A7CAEFFFF83A8FD04FF7DFD12FF52A1FD05FFA97FFF55CB%FD08FF55FD0DFFCAFFFF9AA7FFFFFF7CFD05FF7DFD04FFA8FFFFFFA8A8A8%FF5277FD04FF8358FD04FFA9A9A9FD05FFA379FD10FF75CAFFFF8357A7FF%FFFF7DFD0AFFA8FFFFA8FFA8FFAF5276FD05FFA9FFFFA37FFFA9FD06FF7F%7FFD0DFFA8FFCA75A7FFFF832CFFFFFFA87DFFFFFFA87D7DFF527D52527D%7D76FD04FFA1A8FD06FF797FFD05FF55FD11FF9AC3FFFF57A7FFFFA87DFD%08FFA8A852A8A87D527D52A9527CFD0AFFA979FD07FF79FD0CFFA199A1FF%8399C3FFA858A7FFFFA852FFFFA8A8527DA87D527D527D5276FD04FF9AA7%A8FD05FFA9A9FD05FF7F7FFD0FFF9A839ACAFFFF58FFFFFF52FD07FFA8A8%A87D7DA8527D52527D5276FD0BFF7FCBA9FD05FF54A9FD0CFFA199A8FFCA%7583FFA882FFFFA87DFD0CFF7777FD04FFCA82FD08FFA97FFFFFFFA955FD%0FFFC37CCF9AFFFFAE82A8FF7DFD12FF52A1FD0DFF7FA9FD04FFA955FD0D%FFCAFFFFFF2CA1FFFF83A7A8FF7DFD0CFF5277FD04FFA8FD09FFA95555FF%FFFF7F7FFD11FFC39AFFFFA757A777FD12FF5276FD0DFF7F79A9FD04FF7F%A3FD10FF839AC3FFFF7C827D7DFD0CFF7676FFFFFFA8A7FD0BFFA3A9FFFF%FF55FD0FFFCFFFFFC3A1FFFFFF5858FD12FF51A1FD0EFFA955A9FFFFFFA9%79FD0DFFCAA1FFFF8275CAFFFFAE5852FD0CFF529AFFFFFFA19AFD0CFFA9%55FFFFA955FD0DFFA1A182FFA8BC9AFFFFAE2DFD12FF5276FD0FFFA9A9A9%FFFFFF78A3FD0CFFA8C3FFFF577B93C3FFFF7D7CFD0CFF7776FFFFFFCAFD%0EFF7FA9FFFF7FFD0EFFC3AEFFFFFFC3A1FFFF7DFD12FF52A1FD11FF55A9%FFFFFF79FD0DFFCAFFCAFF57FF9ACAFFFF7DFD0CFF527DFFFFFFAEAEFD0F%FFA9FF79A9FD13FFC3C3FF7DFD12FF5276FD11FF7FFD04FF7FA9FD0DFF9A%C9FFAEFFFF9ACAA87DFFFFFFA87DA8FF7DA8FD047D6FFFFFFF7CFD10FF7F%A37E297E7DA87DA87DA87DA87DA87DA87DA87DA87DA87D6F9A7DFD0AFF7D%FFA8FD047DAF52A1FD13FF7FA9FF53547D7E7DA87DA87DA87DA87DA87D76%76A8A27D7D7D6EA17DFFFFA8A8527D7D7D527D277D526E76FFCAA0FD10FF%A97F7DCFA8CFA8FFA8CFA8FFA8A8A8FFA8FFA8FFA8A8A8FF7D6F4BFD07FF%A8A87D527DA8FD04527D5252FD13FF7E7FAE7DA8FFA8CFA8FFA8A8A8FFA8%FFA8FFA8FFA8FFA8FFA87D6F7DFD05FFA8FFA8FFA8FFAF7D77AEA0CACAFD%12FFA8FD10FF7DA8FFFFFFA8A87DFD0AFFA8FFA8A8A8FFA8FF52A1FD15FF%A97DFD10FF7DA8FFFFFF84A87DFD0CFF52A1FF7CA0FD13FF7DFFA97F557F%557FA9FFFFA827A8A8FD047DFFFFFF7DA853FD12FF5276FD15FF7E7DFFA9%557F557F7FFFFFFF7D52A8A87D7D527DFFFFFF7D837DFD0CFF7676FD16FF%A8A8FD09FFA87DA8FFA8FF7DA8FFFFFFA8A87DFD12FF51A1FD16FF7DFD0A%FFA87DFD04A87DA8FFFFFF527C7DFD0CFF5276FD16FF7DFD15FF7DA852FD%12FF5276FD15FFA87DFD15FF7D517DFD0CFF7676FD16FFA8FD15FFA8A87D%FD12FF52A1FD16FF7DFD15FF7DA87DFD0CFF5276FD16FF7DFD05FFAEFD05%FFA8FFA8FD05FF7DFF7DA87DFD12FF5276FD15FFA8A8FFFFA8FFFFFFAEFF%FFFFA8FFFFFFA8FFFFFFA8A8FFA8A87DFD04FFA8A8FF7DFFA8A8A87D9AFD%16FFA8FFFF82A7838383FFFFFF7D52A8A87DFD04A87DFFA8A87DFD0AFF7D%FFFFFD04A8FF51A1FD16FF7DFFA88383A783A8FFFFFF7D52FFFD06A87DFF%7DA87DFFFF7D7D527DA852527D27595276FD16FF7DFFFFFFA8FFAEFD04FF%A87DFD04A8FFA8FF7DFF7DA852FD07FFA87D7D527DA8FD04527D7676FD15%FFA87DFFFFAEFFA8FD05FFA87DA8FFA8FFA8FFA87DFF7D767DFFFFFFA8A8%7DA87DA87D7D7E7D76FD16FFA8FD15FFA8A87DFD08FFA8FF7DA8A8A87DA8%7DA852A1FD16FF7DFD15FF7DA17DFD0CFF52A0FD16FF7DFD15FF7DA852FD%12FF5276FD15FFA87DFD15FFA8A87DFD0CFF7676FD16FFA8A8FD0FFF7DFD%04FFA8A87DFD12FF51A1FD16FF7DFD0DFFA8FFFFA8A8FFFFFF7DA87DFD0C%FF5276FD16FF7DFFA8C39AA19AC3FFFFFFA827A8A87DA87D7DFFFFFF7DA8%52FD12FF5276FD15FFA87DFFCA9AC3A0A1A1FFFFFF7D52A8A87DFF7DA8FF%FFFF7D7D7DFD0CFF7676FD16FFA8FD0AFFA8A8A8FFA8FFA8FD04FFA8A87D%FD12FF52A1FD16FF7DFD0BFF7DA8A8A8FFA8A8FFFFFF7DA87DFD0CFF527C%FD16FF7DA8A8FFA8FFA8FFCFFFCFFFFFFFA8FFFFFFA8FFA8FF7DA87DFD12%FF527DFD15FFA87DFFFFA8FFA8FFCFFFCFFFA8FD05FFA8FFA8FFA87DA87D%FD0CFF7C76FD16FFA87DA87DA87DA84D7E7D54537E53A87DA87DA876A87D%7DA87DFD12FF4BA1FD16FF7DA87DA87DA87D547D7E537E7DA87DA87DA87D%A87DA8A8FF7DFFFFA8FF52A8A8527DA87D7D5151A8A87DA87DA87DA8A8A8%7DA87DA87DA8A8A87DA87DA87DA8A8A87DA87D2A53A85354777EA7A87DA8%7D767D7DA8A852FD07FFA8FFA87DA8A8FD057D524BA87DA87DA8A87D7DA8%7DA87DA87D7D7DA87DA87DA87DA87DA87DA87DA8027D7D54537E7DA87D7D%7DA87DA87DA87D7DFFFFA87D7D7DA852A87D7D7DFF7D7D7DA87D7D7DA87D%A87DA87D7D7DA87DA87DA87D7D7DA87DA87DA87DA77DA87DA87DA87DA87D%A87DA87DA77DA87DA8FD08FF7DA852A8FD057DA8A8FD047DA87DA87DA87D%7D7DA87DA87DA87D7D7DA87DA87DA87D7D7DA87DA87DA87D7D7D7E7DA87D%A87DA87DA87D7DA8FD04FFA8FFFD05A8FFA8A8FD05FFFD04A8FD05FFA8A8%A8FD04FFA87DA8A8FD04FFFD04A8FFFFFFFD04A87DFFFFFFA8A87DA87DFD%08FFA8A8FFA8A8A8FFA8A8A8FD05FF7DA87DFD05FFA8A87DFD05FF7DA87D%FD05FF7DA87DFD04FFA8FFA8A8A8FFFFFFA8A8A87DA8FD0AFF7D52FD05FF%A85252A8FD04FF525252A8FD04FF525252A8FD04FF275252A8FFFFFFA87D%7D5252A8FFFFA87DA85252A8FD0FFF527DFD05FF7D52527DFD04FF525252%A8FFFFFFA8525252A8FFFFFFA8525252A8FFFFFF7DA8525252FFFFFF52FF%7D7D52FD0AFF7DA8FD05FF7D7D7DA8FD04FFA87D7DA8FD04FFA87D7DA8FF%FFFFA87D7D7DA8FFFFFF7DA87DA87DFFFFFF7D7D527D7DFD0FFFA87DA8FD%05FF52A87DA8FD04FF7D7D7DFD05FF7DA87DFD05FF7DA87DFD04FF7D7DA8%7D7DA8FFFFFD057DFDA1FFA8527DA8FD3FFF52527DFD3AFF7D5252FD40FF%7D527DFD3BFFA8FD41FFA8FFA8FD18FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-04T10:56:30-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>136</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9B+bPJ8mu6lo99HdJA2l&#xA;SiURyRmQErc29yGQh04P/onpcv5JHHfFWMan+T15qN7d3surQxz3c63EhS1avMx3MZcsZql4Td1t&#xA;mP8Ad8AN+yqndeU9X0N9G0NPMF8IfMHmW4luL6F447sxNpN5clHkWMLVp7ZXai07AAYqyYeQNv8A&#xA;lJNdPv8AXf8AmzFVkn5fzc4vT8ya2FDH1Qb3crxPT4OvKmKqn+AP+/j1z/pN/wCbMVU5Py/m5xen&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5.375000</stDim:w>
            <stDim:h>2.768514</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -195.776 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 195.776 li
374.272 195.776 li
374.272 0 li
cp
clp
[1 0 0 1 0 0 ]ct
31.5522 175.856 mo
171.052 175.856 li
171.052 3.05615 li
31.5522 3.05615 li
31.5522 175.856 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
31.5522 175.856 mo
171.052 175.856 li
171.052 3.05615 li
31.5522 3.05615 li
31.5522 175.856 li
cp
clp
1.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
142.78 198.456 mo
143.152 192.627 li
144.097 198.456 li
32.7021 198.456 mo
32.7148 61.1372 li
33.8774 61.3882 li
35.0396 61.5439 li
36.2021 61.2129 li
37.3647 61.728 li
38.5273 61.8291 li
39.6899 62.291 li
40.8521 62.2588 li
42.0146 62.9482 li
43.1772 62.9053 li
44.3398 63.9312 li
45.5024 64.0449 li
46.6646 63.6401 li
47.8271 63.8579 li
48.9897 65.0762 li
50.1523 65.2881 li
51.3149 65.2661 li
52.4771 66.3882 li
53.6396 66.145 li
54.8022 66.752 li
55.9648 67.793 li
57.1274 67.6812 li
58.2896 68.666 li
59.4521 69.4063 li
60.6147 69.1582 li
61.7773 71.0601 li
62.9399 72.1641 li
64.1021 72.5161 li
65.2646 73.5879 li
66.4272 73.853 li
67.5898 75.0771 li
68.7524 74.0142 li
69.9146 74.8701 li
71.0771 76.5742 li
72.2397 77.1592 li
73.4023 77.4092 li
74.5649 77.9502 li
75.7271 79.0991 li
76.8896 81.124 li
78.0522 82.063 li
79.2144 82.1909 li
80.3774 83.2861 li
81.54 83.9912 li
82.7021 84.8701 li
83.8643 87.3081 li
85.0273 87.8828 li
86.1904 89.2256 li
87.3521 90.1963 li
88.5151 92.3418 li
89.6772 95.335 li
90.8394 96.7236 li
92.0024 99.4199 li
93.165 101.946 li
94.3271 107.175 li
95.4902 107.305 li
96.6523 109.355 li
97.8154 112.687 li
98.9771 113.646 li
100.14 115.784 li
101.302 120.246 li
102.465 124.238 li
103.627 125.518 li
104.79 123.74 li
105.952 130.467 li
107.114 125.89 li
108.277 124.101 li
109.439 134.673 li
110.602 131.386 li
111.765 128.225 li
112.927 142.847 li
114.09 137.979 li
115.252 145.11 li
116.415 145.249 li
117.577 153.888 li
118.74 151.83 li
119.902 147.631 li
121.064 173.157 li
122.227 174.787 li
123.39 167.653 li
124.552 164.075 li
125.715 166.573 li
126.877 162.277 li
128.04 165.094 li
129.202 172.626 li
130.364 163.862 li
131.527 164.849 li
132.689 179.199 li
133.852 184.233 li
135.015 195.149 li
136.177 184.093 li
137.34 181.494 li
138.502 188.446 li
139.665 197.244 li
140.827 186.845 li
141.389 198.456 li
.883665 .769161 0 0 cmyk
@
32.5459 198.456 mo
32.7148 72.0962 li
33.8774 71.2988 li
35.0396 69.7178 li
36.2021 66.771 li
37.3647 63.9038 li
38.5273 63.3862 li
39.6899 64.7109 li
40.8521 60.5908 li
42.0146 60.8491 li
43.1772 57.7969 li
44.3398 56.9971 li
45.5024 55.2549 li
46.6646 52.731 li
47.8271 53.1392 li
48.9897 52.354 li
50.1523 52.5859 li
51.3149 54.4341 li
52.4771 54.2891 li
53.6396 52.9868 li
54.8022 53.2271 li
55.9648 52.748 li
57.1274 52.3999 li
58.2896 51.4868 li
59.4521 49.791 li
60.6147 50.0352 li
61.7773 48.4053 li
62.9399 46.6631 li
64.1021 46.335 li
65.2646 45.0991 li
66.4272 43.9502 li
67.5898 42.7949 li
68.7524 41.7559 li
69.9146 40.897 li
71.0771 39.7813 li
72.2397 39.6353 li
73.4023 37.8369 li
74.5649 36.416 li
75.7271 35.7422 li
76.8896 34.959 li
78.0522 35.2661 li
79.2144 33.5122 li
80.3774 33.373 li
81.54 31.7803 li
82.7021 31.0132 li
83.8643 30.3999 li
85.0273 29.9858 li
86.1904 28.9619 li
87.3521 29.3501 li
88.5151 28.3428 li
89.6772 27.6621 li
90.8394 28.5723 li
92.0024 29.5161 li
93.165 28.6372 li
94.3271 24.8281 li
95.4902 27.0552 li
96.6523 23.9702 li
97.8154 28.1499 li
98.9771 24.7861 li
100.14 27.1318 li
101.302 31.3311 li
102.465 26.582 li
103.627 24.9961 li
104.79 27.7261 li
105.952 30.2988 li
107.114 27.4009 li
108.277 28.4678 li
109.439 28.9302 li
110.602 32.4849 li
111.765 31.6938 li
112.927 33.8682 li
114.09 35.1621 li
115.252 34.7168 li
116.415 37.7832 li
117.577 38.082 li
118.74 38.6191 li
119.902 40.9932 li
121.064 43.1719 li
122.227 48.0288 li
123.39 47.7402 li
124.552 49.5942 li
125.715 48.8242 li
126.877 51.3291 li
128.04 56.2549 li
129.202 55.3911 li
130.364 59.4619 li
131.527 61.4692 li
132.689 64.7402 li
133.852 62.8452 li
135.015 66.7402 li
136.177 68.9751 li
137.34 71.312 li
138.502 69.2129 li
139.665 75.5469 li
140.827 76.0381 li
141.99 75.147 li
143.152 78.063 li
144.314 81.8901 li
145.477 82.6641 li
146.64 82.7651 li
147.802 84.4883 li
148.965 88.2778 li
150.127 89.7949 li
151.29 88.1509 li
152.452 91.3506 li
153.614 94.8037 li
154.777 97.0518 li
155.939 101.629 li
157.102 96.3691 li
158.265 98.9893 li
159.427 104.437 li
160.59 106.283 li
161.752 108.575 li
162.915 109.132 li
164.077 108.8 li
165.24 107.014 li
166.402 110.966 li
167.565 110.957 li
168.727 111.718 li
169.89 114.506 li
171.052 117.413 li
172.215 118.312 li
.873045 .242161 1 .129244 cmyk
@
32.5435 198.456 mo
32.7148 69.814 li
33.8774 69.7891 li
35.0396 66.9741 li
36.2021 64.5269 li
37.3647 62.915 li
38.5273 64.0171 li
39.6899 62.2129 li
40.8521 63.3252 li
42.0146 63.291 li
43.1772 61.3931 li
44.3398 58.8872 li
45.5024 56.8232 li
46.6646 55.1289 li
47.8271 54.1938 li
48.9897 54.7549 li
50.1523 54.6929 li
51.3149 57.5698 li
52.4771 58.5713 li
53.6396 58.3062 li
54.8022 59.7549 li
55.9648 58.6899 li
57.1274 59.5791 li
58.2896 59.3101 li
59.4521 58.6372 li
60.6147 58.7612 li
61.7773 57.7422 li
62.9399 57.3291 li
64.1021 57.3369 li
65.2646 57.7222 li
66.4272 56.9741 li
67.5898 56.3232 li
68.7524 56.4312 li
69.9146 55.0112 li
71.0771 55.3672 li
72.2397 55.438 li
73.4023 55.0078 li
74.5649 54.9341 li
75.7271 54.8501 li
76.8896 53.4419 li
78.0522 55.0601 li
79.2144 53.9019 li
80.3774 54.2002 li
81.54 53.998 li
82.7021 53.1758 li
83.8643 53.3022 li
85.0273 53.855 li
86.1904 53.8579 li
87.3521 53.7959 li
88.5151 53.2402 li
89.6772 54.3311 li
90.8394 51.8921 li
92.0024 56.0488 li
93.165 53.272 li
94.3271 53.5879 li
95.4902 53.1172 li
96.6523 55.1372 li
97.8154 53.4912 li
98.9771 53.1641 li
100.14 54.835 li
101.302 54.707 li
102.465 58.272 li
103.627 57.8511 li
104.79 59.1011 li
105.952 57.0112 li
107.114 56.1982 li
108.277 58.7451 li
109.439 57.397 li
110.602 59.814 li
111.765 61.147 li
112.927 61.416 li
114.09 62.9551 li
115.252 64.6919 li
116.415 66.0259 li
117.577 67.9692 li
118.74 67.52 li
119.902 68.6421 li
121.064 69.3633 li
122.227 72.5508 li
123.39 74.2202 li
124.552 72.1631 li
125.715 76.3579 li
126.877 76.0669 li
128.04 78.2651 li
129.202 80.5688 li
130.364 82.6309 li
131.527 84.123 li
132.689 84.3579 li
133.852 89.7627 li
135.015 88.8989 li
136.177 91.1113 li
137.34 91.624 li
138.502 94.6523 li
139.665 95.1641 li
140.827 97.6074 li
141.99 96.2656 li
143.152 99.1104 li
144.314 100.458 li
145.477 100.749 li
146.64 100.166 li
147.802 102.454 li
148.965 104.337 li
150.127 107.551 li
151.29 107.555 li
152.452 110.623 li
153.614 109.894 li
154.777 114.137 li
155.939 115.248 li
157.102 113.52 li
158.265 115.282 li
159.427 117.955 li
160.59 116.671 li
161.752 120.287 li
162.915 121.519 li
164.077 123.438 li
165.24 122.452 li
166.402 127.35 li
167.565 123.764 li
168.727 127.04 li
169.89 127.899 li
171.052 127.784 li
172.215 129.716 li
0 .993988 1 0 cmyk
@
0 lc
[6 6 ] 0 dsh
31.5522 135.682 mo
32.7148 78.0142 li
33.8774 76.8511 li
35.0396 78.3633 li
36.2021 72.6992 li
37.3647 76.4448 li
38.5273 72.5391 li
39.6899 76.563 li
40.8521 78.9321 li
42.0146 73.7822 li
43.1772 79.6353 li
44.3398 78.3223 li
45.5024 76.373 li
46.6646 78.6631 li
47.8271 81.5371 li
48.9897 81.4893 li
50.1523 81.3418 li
51.3149 86.3662 li
52.4771 84.8032 li
53.6396 87.6553 li
54.8022 83.9692 li
55.9648 87.4482 li
57.1274 87.9712 li
58.2896 90.2422 li
59.4521 89.5723 li
60.6147 88.5688 li
61.7773 91.6064 li
62.9399 88.7451 li
64.1021 96.3457 li
65.2646 94.415 li
66.4272 94.1953 li
67.5898 99.0723 li
68.7524 97.9336 li
69.9146 99.4746 li
71.0771 99.1641 li
72.2397 100.952 li
73.4023 101.754 li
74.5649 102.276 li
75.7271 102.586 li
76.8896 103.152 li
78.0522 107.25 li
79.2144 108.999 li
80.3774 108.219 li
81.54 111.332 li
82.7021 107.076 li
83.8643 111.85 li
85.0273 115.467 li
86.1904 116.195 li
87.3521 114.063 li
88.5151 115.105 li
89.6772 118.317 li
90.8394 119.159 li
92.0024 121.043 li
93.165 122.278 li
94.3271 123.286 li
95.4902 124.464 li
96.6523 125.055 li
97.8154 126.238 li
98.9771 128.365 li
100.14 130.612 li
101.302 131.438 li
102.465 130.658 li
103.627 137.609 li
104.79 132.538 li
105.952 136.283 li
107.114 142.248 li
108.277 140.293 li
109.439 140.691 li
110.602 141.971 li
111.765 144.267 li
112.927 142.401 li
114.09 145.598 li
115.252 149.769 li
116.415 146.053 li
117.577 148.477 li
118.74 148.428 li
119.902 152.215 li
121.064 154.411 li
122.227 153.944 li
123.39 154.827 li
124.552 156.271 li
125.715 158.171 li
126.877 160.596 li
128.04 160.21 li
129.202 161.144 li
130.364 168.515 li
131.527 164.822 li
132.689 170.155 li
133.852 167.769 li
135.015 173.376 li
136.177 171.421 li
137.34 173.916 li
138.502 170.438 li
139.665 171.95 li
140.827 176.607 li
141.99 178.183 li
143.152 180.627 li
144.314 181.057 li
145.477 181.196 li
146.64 185.004 li
147.802 186.966 li
148.965 186.257 li
150.127 186.173 li
151.29 188.813 li
152.452 186.468 li
153.614 189.974 li
154.777 192.359 li
155.939 191.314 li
157.102 195.415 li
158.265 193.3 li
159.427 196.293 li
160.59 197.944 li
161.752 197.904 li
162.014 198.456 li
.883665 .769161 0 0 cmyk
@
31.8911 198.456 mo
32.7148 128.509 li
33.8774 127.244 li
35.0396 126.455 li
36.2021 126.923 li
37.3647 134.296 li
38.5273 131.363 li
39.6899 131.471 li
40.8521 133.354 li
42.0146 130.589 li
43.1772 129.81 li
44.3398 129.51 li
45.5024 125.518 li
46.6646 116.122 li
47.8271 113.21 li
48.9897 102.748 li
50.1523 92.8506 li
51.3149 107.718 li
52.4771 73.7329 li
53.6396 66.8398 li
54.8022 61.5161 li
55.9648 55.1069 li
57.1274 52.7891 li
58.2896 51.791 li
59.4521 53.1318 li
60.6147 52.208 li
61.7773 54.437 li
62.9399 60.6929 li
64.1021 57.1821 li
65.2646 64.6621 li
66.4272 60.6812 li
67.5898 52.8188 li
68.7524 54.5908 li
69.9146 45.9893 li
71.0771 44.1553 li
72.2397 40.293 li
73.4023 39.7871 li
74.5649 38.269 li
75.7271 37.9331 li
76.8896 36.5742 li
78.0522 35.4951 li
79.2144 35.7358 li
80.3774 33.9248 li
81.54 32.9702 li
82.7021 32.5469 li
83.8643 32.312 li
85.0273 31.189 li
86.1904 30.6392 li
87.3521 29.5898 li
88.5151 29.7339 li
89.6772 29.0049 li
90.8394 28.6201 li
92.0024 27.7632 li
93.165 27.2622 li
94.3271 28.1621 li
95.4902 27.9248 li
96.6523 26.6611 li
97.8154 26.2871 li
98.9771 27.001 li
100.14 26.3481 li
101.302 26.1572 li
102.465 27.1621 li
103.627 26.689 li
104.79 26.1089 li
105.952 26.6382 li
107.114 25.9761 li
108.277 27.3618 li
109.439 26.3481 li
110.602 27.7939 li
111.765 27.0469 li
112.927 28.563 li
114.09 27.8022 li
115.252 30.3418 li
116.415 27.1602 li
117.577 27.833 li
118.74 28.7642 li
119.902 28.2813 li
121.064 28.5928 li
122.227 30.603 li
123.39 30.3931 li
124.552 29.7939 li
125.715 31.625 li
126.877 30.6191 li
128.04 31.625 li
129.202 32.7969 li
130.364 32.8472 li
131.527 31.9209 li
132.689 33.3491 li
133.852 33.1392 li
135.015 34.8418 li
136.177 36.3369 li
137.34 39.4292 li
138.502 50.9219 li
139.665 55.6851 li
140.827 70.251 li
141.99 78.2212 li
143.152 101.431 li
144.314 101.682 li
145.477 111.393 li
146.64 111.58 li
147.802 117.981 li
148.965 121.169 li
150.127 125.421 li
151.29 138.317 li
152.452 139.142 li
153.614 149.591 li
154.777 147.754 li
155.939 154.435 li
157.102 157.279 li
158.265 167.998 li
159.427 166.81 li
160.59 175.14 li
161.752 173.961 li
162.915 178.757 li
164.077 186.604 li
165.24 183.114 li
166.402 184.838 li
167.565 191.486 li
168.727 190.827 li
169.89 196.392 li
170.118 198.456 li
.873045 .242161 1 .129244 cmyk
@
31.8979 198.456 mo
32.7148 130.517 li
33.8774 127.161 li
35.0396 124.9 li
36.2021 129.912 li
37.3647 131.915 li
38.5273 130.483 li
39.6899 131.135 li
40.8521 130.189 li
42.0146 134.752 li
43.1772 132.308 li
44.3398 131.505 li
45.5024 119.099 li
46.6646 117.509 li
47.8271 107.381 li
48.9897 99.5547 li
50.1523 89.6924 li
51.3149 79.938 li
52.4771 86.437 li
53.6396 65.2202 li
54.8022 56.644 li
55.9648 56.4351 li
57.1274 57.188 li
58.2896 57.7393 li
59.4521 56.6538 li
60.6147 57.5869 li
61.7773 58.9858 li
62.9399 61.5811 li
64.1021 62.188 li
65.2646 68.7939 li
66.4272 72.6528 li
67.5898 69.0811 li
68.7524 62.395 li
69.9146 58.9971 li
71.0771 57.5449 li
72.2397 57.5239 li
73.4023 56.9668 li
74.5649 56.9312 li
75.7271 56.1431 li
76.8896 55.811 li
78.0522 57.2671 li
79.2144 55.7969 li
80.3774 55.1309 li
81.54 55.355 li
82.7021 55.6689 li
83.8643 54.7622 li
85.0273 55.208 li
86.1904 55.7739 li
87.3521 54.6152 li
88.5151 55.7998 li
89.6772 55.3569 li
90.8394 55.2051 li
92.0024 55.2061 li
93.165 54.9409 li
94.3271 54.9702 li
95.4902 57.5991 li
96.6523 55.5752 li
97.8154 55.8779 li
98.9771 56.667 li
100.14 55.9189 li
101.302 56.061 li
102.465 56.584 li
103.627 56.564 li
104.79 56.5649 li
105.952 56.7778 li
107.114 57.7739 li
108.277 58.311 li
109.439 57.811 li
110.602 59.0181 li
111.765 58.8042 li
112.927 60.5181 li
114.09 59.5879 li
115.252 60.1538 li
116.415 60.7271 li
117.577 61.9438 li
118.74 61.0049 li
119.902 62.2871 li
121.064 62.6553 li
122.227 63.604 li
123.39 62.98 li
124.552 64.0103 li
125.715 64.5469 li
126.877 64.5332 li
128.04 66.168 li
129.202 66.5332 li
130.364 66.4053 li
131.527 68.4609 li
132.689 68.1538 li
133.852 68.4531 li
135.015 68.646 li
136.177 70.0889 li
137.34 79.3389 li
138.502 86.7642 li
139.665 89.0596 li
140.827 102.754 li
141.99 105.508 li
143.152 114.997 li
144.314 119.677 li
145.477 131.034 li
146.64 136.683 li
147.802 141.417 li
148.965 144.443 li
150.127 145.597 li
151.29 154.507 li
152.452 162.199 li
153.614 160.649 li
154.777 166.389 li
155.939 170.038 li
157.102 178.896 li
158.265 176.789 li
159.427 184.846 li
160.59 189.66 li
161.752 188.012 li
162.915 190.854 li
164.077 192.383 li
164.928 198.456 li
0 .993988 1 0 cmyk
@
grestore
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
31.5522 3.05615 mo
31.5522 7.05615 li
31.5522 175.856 mo
31.5522 171.856 li
0 0 0 1 cmyk
@
32.1763 185.8 mo
31.5361 185.8 31.04 185.536 30.6885 185.008 cv
30.3364 184.48 30.1602 183.744 30.1602 182.784 cv
30.1602 181.832 30.3364 181.088 30.6885 180.56 cv
31.04 180.032 31.5361 179.76 32.1763 179.76 cv
32.8081 179.76 33.3042 180.032 33.6563 180.56 cv
34.0083 181.088 34.1924 181.832 34.1924 182.784 cv
34.1924 183.744 34.0083 184.48 33.6563 185.008 cv
33.3042 185.536 32.8081 185.8 32.1763 185.8 cv
32.1763 185.8 li
cp
32.1763 185.424 mo
32.5762 185.424 32.8721 185.208 33.0723 184.768 cv
33.2642 184.336 33.3682 183.672 33.3682 182.784 cv
33.3682 181.904 33.2642 181.24 33.0723 180.8 cv
32.8721 180.368 32.5762 180.144 32.1763 180.144 cv
31.7764 180.144 31.4722 180.368 31.2803 180.8 cv
31.0801 181.24 30.9844 181.904 30.9844 182.784 cv
30.9844 183.672 31.0801 184.336 31.2803 184.768 cv
31.4722 185.208 31.7764 185.424 32.1763 185.424 cv
ef
54.8022 3.05615 mo
54.8022 7.05615 li
54.8022 175.856 mo
54.8022 171.856 li
@
51.2964 181.256 mo
50.8564 181.256 li
50.8564 180.216 li
51.1284 180.072 51.4082 179.96 51.6963 179.88 cv
51.9761 179.8 52.2563 179.76 52.5283 179.76 cv
53.1362 179.76 53.6162 179.912 53.9683 180.2 cv
54.3203 180.496 54.4961 180.896 54.4961 181.4 cv
54.4961 181.976 54.0962 182.656 53.2964 183.448 cv
53.2324 183.512 53.1924 183.552 53.1602 183.584 cv
51.6885 185.056 li
54.1201 185.056 li
54.1201 184.336 li
54.5762 184.336 li
54.5762 185.696 li
50.8164 185.696 li
50.8164 185.272 li
52.5845 183.504 li
52.9683 183.12 53.248 182.76 53.416 182.432 cv
53.5845 182.104 53.6724 181.76 53.6724 181.4 cv
53.6724 181.008 53.5684 180.704 53.3604 180.48 cv
53.1523 180.256 52.8721 180.144 52.52 180.144 cv
52.144 180.144 51.8564 180.24 51.6563 180.424 cv
51.4482 180.608 51.3281 180.888 51.2964 181.256 cv
51.2964 181.256 li
cp
ef
57.8564 185.8 mo
57.2163 185.8 56.7202 185.536 56.3682 185.008 cv
56.0161 184.48 55.8403 183.744 55.8403 182.784 cv
55.8403 181.832 56.0161 181.088 56.3682 180.56 cv
56.7202 180.032 57.2163 179.76 57.8564 179.76 cv
58.4883 179.76 58.9844 180.032 59.3364 180.56 cv
59.6885 181.088 59.8721 181.832 59.8721 182.784 cv
59.8721 183.744 59.6885 184.48 59.3364 185.008 cv
58.9844 185.536 58.4883 185.8 57.8564 185.8 cv
57.8564 185.8 li
cp
57.8564 185.424 mo
58.2563 185.424 58.5522 185.208 58.7524 184.768 cv
58.9443 184.336 59.0483 183.672 59.0483 182.784 cv
59.0483 181.904 58.9443 181.24 58.7524 180.8 cv
58.5522 180.368 58.2563 180.144 57.8564 180.144 cv
57.4561 180.144 57.1523 180.368 56.9604 180.8 cv
56.7603 181.24 56.6641 181.904 56.6641 182.784 cv
56.6641 183.672 56.7603 184.336 56.9604 184.768 cv
57.1523 185.208 57.4561 185.424 57.8564 185.424 cv
ef
78.0522 3.05615 mo
78.0522 7.05615 li
78.0522 175.856 mo
78.0522 171.856 li
@
77.8242 185.696 mo
75.1685 185.696 li
75.1685 185.28 li
76.104 185.28 li
76.104 184.136 li
73.5601 184.136 li
73.5601 183.712 li
76.1123 179.76 li
76.8882 179.76 li
76.8882 183.72 li
78.0005 183.72 li
78.0005 184.136 li
76.8882 184.136 li
76.8882 185.28 li
77.8242 185.28 li
77.8242 185.696 li
77.8242 185.696 li
cp
76.104 183.72 mo
76.104 180.616 li
74.1123 183.72 li
76.104 183.72 li
ef
80.896 185.8 mo
80.2563 185.8 79.7603 185.536 79.4082 185.008 cv
79.0562 184.48 78.8804 183.744 78.8804 182.784 cv
78.8804 181.832 79.0562 181.088 79.4082 180.56 cv
79.7603 180.032 80.2563 179.76 80.896 179.76 cv
81.5283 179.76 82.0244 180.032 82.3765 180.56 cv
82.728 181.088 82.9121 181.832 82.9121 182.784 cv
82.9121 183.744 82.728 184.48 82.3765 185.008 cv
82.0244 185.536 81.5283 185.8 80.896 185.8 cv
80.896 185.8 li
cp
80.896 185.424 mo
81.2964 185.424 81.5923 185.208 81.7925 184.768 cv
81.9844 184.336 82.0884 183.672 82.0884 182.784 cv
82.0884 181.904 81.9844 181.24 81.7925 180.8 cv
81.5923 180.368 81.2964 180.144 80.896 180.144 cv
80.4961 180.144 80.1924 180.368 80.0005 180.8 cv
79.8003 181.24 79.7041 181.904 79.7041 182.784 cv
79.7041 183.672 79.8003 184.336 80.0005 184.768 cv
80.1924 185.208 80.4961 185.424 80.896 185.424 cv
ef
101.302 3.05615 mo
101.302 7.05615 li
101.302 175.856 mo
101.302 171.856 li
@
98.1763 182.488 mo
98.3521 182.296 98.5522 182.144 98.7764 182.048 cv
99.0005 181.952 99.248 181.904 99.5361 181.904 cv
100.112 181.904 100.576 182.08 100.912 182.432 cv
101.248 182.784 101.416 183.256 101.416 183.856 cv
101.416 184.448 101.232 184.92 100.872 185.272 cv
100.504 185.624 100.024 185.8 99.416 185.8 cv
98.7603 185.8 98.248 185.56 97.896 185.072 cv
97.5444 184.584 97.3682 183.88 97.3682 182.968 cv
97.3682 181.952 97.5762 181.16 97.9922 180.6 cv
98.4082 180.04 99.0005 179.76 99.7681 179.76 cv
99.9761 179.76 100.192 179.784 100.416 179.816 cv
100.64 179.856 100.872 179.912 101.112 179.992 cv
101.112 180.952 li
100.672 180.952 li
100.64 180.696 100.536 180.496 100.368 180.352 cv
100.2 180.216 99.9761 180.144 99.688 180.144 cv
99.1763 180.144 98.8003 180.336 98.5522 180.72 cv
98.3042 181.104 98.1763 181.696 98.1763 182.488 cv
98.1763 182.488 li
cp
99.4482 185.424 mo
99.8164 185.424 100.096 185.296 100.296 185.024 cv
100.488 184.752 100.592 184.368 100.592 183.856 cv
100.592 183.352 100.488 182.968 100.296 182.696 cv
100.096 182.424 99.8164 182.288 99.4482 182.288 cv
99.0723 182.288 98.7842 182.424 98.5923 182.68 cv
98.4004 182.944 98.3042 183.32 98.3042 183.808 cv
98.3042 184.328 98.4004 184.728 98.6001 185.008 cv
98.7925 185.288 99.0801 185.424 99.4482 185.424 cv
ef
104.416 185.8 mo
103.776 185.8 103.28 185.536 102.928 185.008 cv
102.576 184.48 102.4 183.744 102.4 182.784 cv
102.4 181.832 102.576 181.088 102.928 180.56 cv
103.28 180.032 103.776 179.76 104.416 179.76 cv
105.048 179.76 105.544 180.032 105.896 180.56 cv
106.248 181.088 106.432 181.832 106.432 182.784 cv
106.432 183.744 106.248 184.48 105.896 185.008 cv
105.544 185.536 105.048 185.8 104.416 185.8 cv
104.416 185.8 li
cp
104.416 185.424 mo
104.816 185.424 105.112 185.208 105.312 184.768 cv
105.504 184.336 105.608 183.672 105.608 182.784 cv
105.608 181.904 105.504 181.24 105.312 180.8 cv
105.112 180.368 104.816 180.144 104.416 180.144 cv
104.016 180.144 103.712 180.368 103.52 180.8 cv
103.32 181.24 103.224 181.904 103.224 182.784 cv
103.224 183.672 103.32 184.336 103.52 184.768 cv
103.712 185.208 104.016 185.424 104.416 185.424 cv
ef
124.552 3.05615 mo
124.552 7.05615 li
124.552 175.856 mo
124.552 171.856 li
@
123.44 181.272 mo
123.44 180.92 123.344 180.64 123.168 180.44 cv
122.984 180.248 122.736 180.144 122.416 180.144 cv
122.096 180.144 121.84 180.248 121.664 180.44 cv
121.48 180.64 121.392 180.92 121.392 181.272 cv
121.392 181.632 121.48 181.912 121.664 182.104 cv
121.84 182.304 122.096 182.4 122.416 182.4 cv
122.736 182.4 122.984 182.304 123.168 182.104 cv
123.344 181.912 123.44 181.632 123.44 181.272 cv
123.44 181.272 li
cp
123.016 182.592 mo
123.456 182.656 123.8 182.816 124.048 183.08 cv
124.296 183.352 124.424 183.688 124.424 184.104 cv
124.424 184.648 124.248 185.072 123.904 185.36 cv
123.552 185.656 123.056 185.8 122.416 185.8 cv
121.768 185.8 121.272 185.656 120.928 185.36 cv
120.576 185.072 120.408 184.648 120.408 184.104 cv
120.408 183.688 120.528 183.352 120.776 183.08 cv
121.024 182.816 121.368 182.656 121.816 182.592 cv
121.416 182.528 121.12 182.376 120.912 182.144 cv
120.704 181.92 120.6 181.624 120.6 181.272 cv
120.6 180.808 120.76 180.44 121.08 180.168 cv
121.4 179.896 121.848 179.76 122.416 179.76 cv
122.976 179.76 123.424 179.896 123.744 180.168 cv
124.064 180.44 124.232 180.808 124.232 181.272 cv
124.232 181.624 124.12 181.92 123.912 182.144 cv
123.704 182.376 123.4 182.528 123.016 182.592 cv
123.6 184.104 mo
123.6 183.688 123.496 183.368 123.288 183.136 cv
123.08 182.904 122.784 182.784 122.416 182.784 cv
122.04 182.784 121.752 182.904 121.544 183.136 cv
121.336 183.368 121.232 183.688 121.232 184.104 cv
121.232 184.521 121.336 184.848 121.544 185.08 cv
121.752 185.312 122.04 185.424 122.416 185.424 cv
122.784 185.424 123.08 185.312 123.288 185.08 cv
123.496 184.848 123.6 184.521 123.6 184.104 cv
ef
127.696 185.8 mo
127.056 185.8 126.56 185.536 126.208 185.008 cv
125.856 184.48 125.68 183.744 125.68 182.784 cv
125.68 181.832 125.856 181.088 126.208 180.56 cv
126.56 180.032 127.056 179.76 127.696 179.76 cv
128.328 179.76 128.824 180.032 129.176 180.56 cv
129.528 181.088 129.712 181.832 129.712 182.784 cv
129.712 183.744 129.528 184.48 129.176 185.008 cv
128.824 185.536 128.328 185.8 127.696 185.8 cv
127.696 185.8 li
cp
127.696 185.424 mo
128.096 185.424 128.392 185.208 128.592 184.768 cv
128.784 184.336 128.888 183.672 128.888 182.784 cv
128.888 181.904 128.784 181.24 128.592 180.8 cv
128.392 180.368 128.096 180.144 127.696 180.144 cv
127.296 180.144 126.992 180.368 126.8 180.8 cv
126.6 181.24 126.504 181.904 126.504 182.784 cv
126.504 183.672 126.6 184.336 126.8 184.768 cv
126.992 185.208 127.296 185.424 127.696 185.424 cv
ef
147.802 3.05615 mo
147.802 7.05615 li
147.802 175.856 mo
147.802 171.856 li
@
142.128 185.696 mo
142.128 185.28 li
143.144 185.28 li
143.144 180.432 li
141.968 181.192 li
141.968 180.68 li
143.392 179.76 li
143.928 179.76 li
143.928 185.28 li
144.944 185.28 li
144.944 185.696 li
142.128 185.696 li
142.128 185.696 li
cp
ef
148.576 185.8 mo
147.936 185.8 147.44 185.536 147.088 185.008 cv
146.736 184.48 146.56 183.744 146.56 182.784 cv
146.56 181.832 146.736 181.088 147.088 180.56 cv
147.44 180.032 147.936 179.76 148.576 179.76 cv
149.208 179.76 149.704 180.032 150.056 180.56 cv
150.408 181.088 150.592 181.832 150.592 182.784 cv
150.592 183.744 150.408 184.48 150.056 185.008 cv
149.704 185.536 149.208 185.8 148.576 185.8 cv
148.576 185.8 li
cp
148.576 185.424 mo
148.976 185.424 149.272 185.208 149.472 184.768 cv
149.664 184.336 149.768 183.672 149.768 182.784 cv
149.768 181.904 149.664 181.24 149.472 180.8 cv
149.272 180.368 148.976 180.144 148.576 180.144 cv
148.176 180.144 147.872 180.368 147.68 180.8 cv
147.48 181.24 147.384 181.904 147.384 182.784 cv
147.384 183.672 147.48 184.336 147.68 184.768 cv
147.872 185.208 148.176 185.424 148.576 185.424 cv
ef
153.616 185.8 mo
152.976 185.8 152.48 185.536 152.128 185.008 cv
151.776 184.48 151.6 183.744 151.6 182.784 cv
151.6 181.832 151.776 181.088 152.128 180.56 cv
152.48 180.032 152.976 179.76 153.616 179.76 cv
154.248 179.76 154.744 180.032 155.096 180.56 cv
155.448 181.088 155.632 181.832 155.632 182.784 cv
155.632 183.744 155.448 184.48 155.096 185.008 cv
154.744 185.536 154.248 185.8 153.616 185.8 cv
153.616 185.8 li
cp
153.616 185.424 mo
154.016 185.424 154.312 185.208 154.512 184.768 cv
154.704 184.336 154.808 183.672 154.808 182.784 cv
154.808 181.904 154.704 181.24 154.512 180.8 cv
154.312 180.368 154.016 180.144 153.616 180.144 cv
153.216 180.144 152.912 180.368 152.72 180.8 cv
152.52 181.24 152.424 181.904 152.424 182.784 cv
152.424 183.672 152.52 184.336 152.72 184.768 cv
152.912 185.208 153.216 185.424 153.616 185.424 cv
ef
171.052 3.05615 mo
171.052 7.05615 li
171.052 175.856 mo
171.052 171.856 li
@
165.408 185.696 mo
165.408 185.28 li
166.424 185.28 li
166.424 180.432 li
165.248 181.192 li
165.248 180.68 li
166.672 179.76 li
167.208 179.76 li
167.208 185.28 li
168.224 185.28 li
168.224 185.696 li
165.408 185.696 li
165.408 185.696 li
cp
ef
170.336 181.256 mo
169.896 181.256 li
169.896 180.216 li
170.168 180.072 170.448 179.96 170.736 179.88 cv
171.016 179.8 171.296 179.76 171.568 179.76 cv
172.176 179.76 172.656 179.912 173.008 180.2 cv
173.36 180.496 173.536 180.896 173.536 181.4 cv
173.536 181.976 173.136 182.656 172.336 183.448 cv
172.272 183.512 172.232 183.552 172.2 183.584 cv
170.728 185.056 li
173.16 185.056 li
173.16 184.336 li
173.616 184.336 li
173.616 185.696 li
169.856 185.696 li
169.856 185.272 li
171.624 183.504 li
172.008 183.12 172.288 182.76 172.456 182.432 cv
172.624 182.104 172.712 181.76 172.712 181.4 cv
172.712 181.008 172.608 180.704 172.4 180.48 cv
172.192 180.256 171.912 180.144 171.56 180.144 cv
171.184 180.144 170.896 180.24 170.696 180.424 cv
170.488 180.608 170.368 180.888 170.336 181.256 cv
170.336 181.256 li
cp
ef
176.896 185.8 mo
176.256 185.8 175.76 185.536 175.408 185.008 cv
175.056 184.48 174.88 183.744 174.88 182.784 cv
174.88 181.832 175.056 181.088 175.408 180.56 cv
175.76 180.032 176.256 179.76 176.896 179.76 cv
177.528 179.76 178.024 180.032 178.376 180.56 cv
178.728 181.088 178.912 181.832 178.912 182.784 cv
178.912 183.744 178.728 184.48 178.376 185.008 cv
178.024 185.536 177.528 185.8 176.896 185.8 cv
176.896 185.8 li
cp
176.896 185.424 mo
177.296 185.424 177.592 185.208 177.792 184.768 cv
177.984 184.336 178.088 183.672 178.088 182.784 cv
178.088 181.904 177.984 181.24 177.792 180.8 cv
177.592 180.368 177.296 180.144 176.896 180.144 cv
176.496 180.144 176.192 180.368 176 180.8 cv
175.8 181.24 175.704 181.904 175.704 182.784 cv
175.704 183.672 175.8 184.336 176 184.768 cv
176.192 185.208 176.496 185.424 176.896 185.424 cv
ef
101.974 192.014 mo
102.127 191.672 102.325 191.42 102.568 191.24 cv
102.811 191.069 103.09 190.979 103.414 190.979 cv
103.9 190.979 104.269 191.132 104.512 191.438 cv
104.746 191.744 104.872 192.194 104.872 192.806 cv
104.872 195.308 li
105.601 195.308 li
105.601 195.776 li
103.36 195.776 li
103.36 195.308 li
104.062 195.308 li
104.062 192.896 li
104.062 192.428 103.99 192.086 103.846 191.879 cv
103.702 191.681 103.477 191.573 103.153 191.573 cv
102.793 191.573 102.514 191.717 102.325 191.987 cv
102.136 192.257 102.046 192.653 102.046 193.175 cv
102.046 195.308 li
102.748 195.308 li
102.748 195.776 li
100.534 195.776 li
100.534 195.308 li
101.236 195.308 li
101.236 192.869 li
101.236 192.401 101.164 192.068 101.02 191.87 cv
100.876 191.672 100.651 191.573 100.327 191.573 cv
99.9673 191.573 99.688 191.717 99.499 191.987 cv
99.3101 192.257 99.2202 192.653 99.2202 193.175 cv
99.2202 195.308 li
99.9224 195.308 li
99.9224 195.776 li
97.6812 195.776 li
97.6812 195.308 li
98.4102 195.308 li
98.4102 191.564 li
97.6362 191.564 li
97.6362 191.105 li
99.2202 191.105 li
99.2202 191.933 li
99.3643 191.627 99.5532 191.384 99.7871 191.222 cv
100.021 191.06 100.282 190.979 100.579 190.979 cv
100.939 190.979 101.236 191.069 101.479 191.249 cv
101.722 191.429 101.884 191.69 101.974 192.014 cv
101.974 192.014 li
cp
ef
171.052 175.856 mo
167.052 175.856 li
31.5522 175.856 mo
35.5522 175.856 li
@
.240234 175.912 mo
5.24805 175.912 li
5.24805 176.544 li
.240234 176.544 li
.240234 175.912 li
.240234 175.912 li
cp
ef
8.65625 178.84 mo
8.01611 178.84 7.52002 178.576 7.16846 178.048 cv
6.81641 177.521 6.64014 176.784 6.64014 175.824 cv
6.64014 174.872 6.81641 174.128 7.16846 173.6 cv
7.52002 173.072 8.01611 172.8 8.65625 172.8 cv
9.28809 172.8 9.78418 173.072 10.1362 173.6 cv
10.4883 174.128 10.6724 174.872 10.6724 175.824 cv
10.6724 176.784 10.4883 177.521 10.1362 178.048 cv
9.78418 178.576 9.28809 178.84 8.65625 178.84 cv
8.65625 178.84 li
cp
8.65625 178.464 mo
9.05615 178.464 9.35205 178.248 9.55225 177.808 cv
9.74414 177.376 9.84814 176.712 9.84814 175.824 cv
9.84814 174.944 9.74414 174.28 9.55225 173.84 cv
9.35205 173.408 9.05615 173.184 8.65625 173.184 cv
8.25635 173.184 7.95215 173.408 7.76025 173.84 cv
7.56006 174.28 7.46436 174.944 7.46436 175.824 cv
7.46436 176.712 7.56006 177.376 7.76025 177.808 cv
7.95215 178.248 8.25635 178.464 8.65625 178.464 cv
ef
11.9043 178.328 mo
11.9043 178.184 11.9521 178.064 12.0483 177.96 cv
12.144 177.864 12.2725 177.808 12.4243 177.808 cv
12.5684 177.808 12.6885 177.864 12.7925 177.96 cv
12.8882 178.064 12.9443 178.184 12.9443 178.328 cv
12.9443 178.472 12.8882 178.6 12.7925 178.696 cv
12.6885 178.792 12.5684 178.84 12.4243 178.84 cv
12.2725 178.84 12.144 178.792 12.0483 178.696 cv
11.9521 178.6 11.9043 178.48 11.9043 178.328 cv
11.9043 178.328 li
cp
ef
16.0962 178.84 mo
15.4561 178.84 14.9604 178.576 14.6084 178.048 cv
14.2563 177.521 14.0801 176.784 14.0801 175.824 cv
14.0801 174.872 14.2563 174.128 14.6084 173.6 cv
14.9604 173.072 15.4561 172.8 16.0962 172.8 cv
16.728 172.8 17.2241 173.072 17.5762 173.6 cv
17.9282 174.128 18.1123 174.872 18.1123 175.824 cv
18.1123 176.784 17.9282 177.521 17.5762 178.048 cv
17.2241 178.576 16.728 178.84 16.0962 178.84 cv
16.0962 178.84 li
cp
16.0962 178.464 mo
16.4961 178.464 16.7925 178.248 16.9922 177.808 cv
17.1841 177.376 17.2881 176.712 17.2881 175.824 cv
17.2881 174.944 17.1841 174.28 16.9922 173.84 cv
16.7925 173.408 16.4961 173.184 16.0962 173.184 cv
15.6963 173.184 15.3921 173.408 15.2002 173.84 cv
15.0005 174.28 14.9043 174.944 14.9043 175.824 cv
14.9043 176.712 15.0005 177.376 15.2002 177.808 cv
15.3921 178.248 15.6963 178.464 16.0962 178.464 cv
ef
19.9683 178.736 mo
19.9683 178.32 li
20.9844 178.32 li
20.9844 173.472 li
19.8081 174.232 li
19.8081 173.72 li
21.2324 172.8 li
21.7681 172.8 li
21.7681 178.32 li
22.7842 178.32 li
22.7842 178.736 li
19.9683 178.736 li
19.9683 178.736 li
cp
ef
26.416 178.84 mo
25.7764 178.84 25.2803 178.576 24.9282 178.048 cv
24.5762 177.521 24.4004 176.784 24.4004 175.824 cv
24.4004 174.872 24.5762 174.128 24.9282 173.6 cv
25.2803 173.072 25.7764 172.8 26.416 172.8 cv
27.0483 172.8 27.5444 173.072 27.896 173.6 cv
28.248 174.128 28.4321 174.872 28.4321 175.824 cv
28.4321 176.784 28.248 177.521 27.896 178.048 cv
27.5444 178.576 27.0483 178.84 26.416 178.84 cv
26.416 178.84 li
cp
26.416 178.464 mo
26.8164 178.464 27.1123 178.248 27.312 177.808 cv
27.5044 177.376 27.6084 176.712 27.6084 175.824 cv
27.6084 174.944 27.5044 174.28 27.312 173.84 cv
27.1123 173.408 26.8164 173.184 26.416 173.184 cv
26.0161 173.184 25.7124 173.408 25.52 173.84 cv
25.3203 174.28 25.2241 174.944 25.2241 175.824 cv
25.2241 176.712 25.3203 177.376 25.52 177.808 cv
25.7124 178.248 26.0161 178.464 26.416 178.464 cv
ef
171.052 151.17 mo
167.052 151.17 li
31.5522 151.17 mo
35.5522 151.17 li
@
.240234 151.192 mo
5.24805 151.192 li
5.24805 151.824 li
.240234 151.824 li
.240234 151.192 li
.240234 151.192 li
cp
ef
8.65625 154.12 mo
8.01611 154.12 7.52002 153.856 7.16846 153.328 cv
6.81641 152.8 6.64014 152.064 6.64014 151.104 cv
6.64014 150.152 6.81641 149.408 7.16846 148.88 cv
7.52002 148.352 8.01611 148.08 8.65625 148.08 cv
9.28809 148.08 9.78418 148.352 10.1362 148.88 cv
10.4883 149.408 10.6724 150.152 10.6724 151.104 cv
10.6724 152.064 10.4883 152.8 10.1362 153.328 cv
9.78418 153.856 9.28809 154.12 8.65625 154.12 cv
8.65625 154.12 li
cp
8.65625 153.744 mo
9.05615 153.744 9.35205 153.528 9.55225 153.088 cv
9.74414 152.656 9.84814 151.992 9.84814 151.104 cv
9.84814 150.224 9.74414 149.56 9.55225 149.12 cv
9.35205 148.688 9.05615 148.464 8.65625 148.464 cv
8.25635 148.464 7.95215 148.688 7.76025 149.12 cv
7.56006 149.56 7.46436 150.224 7.46436 151.104 cv
7.46436 151.992 7.56006 152.656 7.76025 153.088 cv
7.95215 153.528 8.25635 153.744 8.65625 153.744 cv
ef
11.9043 153.608 mo
11.9043 153.464 11.9521 153.344 12.0483 153.24 cv
12.144 153.144 12.2725 153.088 12.4243 153.088 cv
12.5684 153.088 12.6885 153.144 12.7925 153.24 cv
12.8882 153.344 12.9443 153.464 12.9443 153.608 cv
12.9443 153.752 12.8882 153.88 12.7925 153.976 cv
12.6885 154.072 12.5684 154.12 12.4243 154.12 cv
12.2725 154.12 12.144 154.072 12.0483 153.976 cv
11.9521 153.88 11.9043 153.76 11.9043 153.608 cv
11.9043 153.608 li
cp
ef
16.0962 154.12 mo
15.4561 154.12 14.9604 153.856 14.6084 153.328 cv
14.2563 152.8 14.0801 152.064 14.0801 151.104 cv
14.0801 150.152 14.2563 149.408 14.6084 148.88 cv
14.9604 148.352 15.4561 148.08 16.0962 148.08 cv
16.728 148.08 17.2241 148.352 17.5762 148.88 cv
17.9282 149.408 18.1123 150.152 18.1123 151.104 cv
18.1123 152.064 17.9282 152.8 17.5762 153.328 cv
17.2241 153.856 16.728 154.12 16.0962 154.12 cv
16.0962 154.12 li
cp
16.0962 153.744 mo
16.4961 153.744 16.7925 153.528 16.9922 153.088 cv
17.1841 152.656 17.2881 151.992 17.2881 151.104 cv
17.2881 150.224 17.1841 149.56 16.9922 149.12 cv
16.7925 148.688 16.4961 148.464 16.0962 148.464 cv
15.6963 148.464 15.3921 148.688 15.2002 149.12 cv
15.0005 149.56 14.9043 150.224 14.9043 151.104 cv
14.9043 151.992 15.0005 152.656 15.2002 153.088 cv
15.3921 153.528 15.6963 153.744 16.0962 153.744 cv
ef
21.3765 154.12 mo
20.7363 154.12 20.2402 153.856 19.8882 153.328 cv
19.5361 152.8 19.3604 152.064 19.3604 151.104 cv
19.3604 150.152 19.5361 149.408 19.8882 148.88 cv
20.2402 148.352 20.7363 148.08 21.3765 148.08 cv
22.0083 148.08 22.5044 148.352 22.8564 148.88 cv
23.208 149.408 23.3921 150.152 23.3921 151.104 cv
23.3921 152.064 23.208 152.8 22.8564 153.328 cv
22.5044 153.856 22.0083 154.12 21.3765 154.12 cv
21.3765 154.12 li
cp
21.3765 153.744 mo
21.7764 153.744 22.0723 153.528 22.2725 153.088 cv
22.4644 152.656 22.5684 151.992 22.5684 151.104 cv
22.5684 150.224 22.4644 149.56 22.2725 149.12 cv
22.0723 148.688 21.7764 148.464 21.3765 148.464 cv
20.9761 148.464 20.6724 148.688 20.4805 149.12 cv
20.2803 149.56 20.1841 150.224 20.1841 151.104 cv
20.1841 151.992 20.2803 152.656 20.4805 153.088 cv
20.6724 153.528 20.9761 153.744 21.3765 153.744 cv
ef
27.4404 149.592 mo
27.4404 149.24 27.3442 148.96 27.1685 148.76 cv
26.9844 148.568 26.7363 148.464 26.416 148.464 cv
26.0962 148.464 25.8403 148.568 25.6641 148.76 cv
25.4805 148.96 25.3921 149.24 25.3921 149.592 cv
25.3921 149.952 25.4805 150.232 25.6641 150.424 cv
25.8403 150.624 26.0962 150.72 26.416 150.72 cv
26.7363 150.72 26.9844 150.624 27.1685 150.424 cv
27.3442 150.232 27.4404 149.952 27.4404 149.592 cv
27.4404 149.592 li
cp
27.0161 150.912 mo
27.4561 150.976 27.8003 151.136 28.0483 151.4 cv
28.2964 151.672 28.4243 152.008 28.4243 152.424 cv
28.4243 152.968 28.248 153.392 27.9043 153.68 cv
27.5522 153.976 27.0562 154.12 26.416 154.12 cv
25.7681 154.12 25.2725 153.976 24.9282 153.68 cv
24.5762 153.392 24.4082 152.968 24.4082 152.424 cv
24.4082 152.008 24.5283 151.672 24.7764 151.4 cv
25.0244 151.136 25.3682 150.976 25.8164 150.912 cv
25.416 150.848 25.1201 150.696 24.9121 150.464 cv
24.7041 150.24 24.6001 149.944 24.6001 149.592 cv
24.6001 149.128 24.7603 148.76 25.0801 148.488 cv
25.4004 148.216 25.8481 148.08 26.416 148.08 cv
26.9761 148.08 27.4243 148.216 27.7441 148.488 cv
28.0645 148.76 28.2324 149.128 28.2324 149.592 cv
28.2324 149.944 28.1201 150.24 27.9121 150.464 cv
27.7041 150.696 27.4004 150.848 27.0161 150.912 cv
27.6001 152.424 mo
27.6001 152.008 27.4961 151.688 27.2881 151.456 cv
27.0801 151.224 26.7842 151.104 26.416 151.104 cv
26.04 151.104 25.7524 151.224 25.5444 151.456 cv
25.3364 151.688 25.2324 152.008 25.2324 152.424 cv
25.2324 152.84 25.3364 153.168 25.5444 153.4 cv
25.7524 153.632 26.04 153.744 26.416 153.744 cv
26.7842 153.744 27.0801 153.632 27.2881 153.4 cv
27.4961 153.168 27.6001 152.84 27.6001 152.424 cv
ef
171.052 126.484 mo
167.052 126.484 li
31.5522 126.484 mo
35.5522 126.484 li
@
0 126.472 mo
5.0083 126.472 li
5.0083 127.104 li
0 127.104 li
0 126.472 li
0 126.472 li
cp
ef
8.41602 129.4 mo
7.77637 129.4 7.28027 129.136 6.92822 128.608 cv
6.57617 128.08 6.40039 127.344 6.40039 126.384 cv
6.40039 125.432 6.57617 124.688 6.92822 124.16 cv
7.28027 123.632 7.77637 123.36 8.41602 123.36 cv
9.04834 123.36 9.54443 123.632 9.896 124.16 cv
10.248 124.688 10.4321 125.432 10.4321 126.384 cv
10.4321 127.344 10.248 128.08 9.896 128.608 cv
9.54443 129.136 9.04834 129.4 8.41602 129.4 cv
8.41602 129.4 li
cp
8.41602 129.024 mo
8.81641 129.024 9.1123 128.808 9.31201 128.368 cv
9.50439 127.937 9.6084 127.272 9.6084 126.384 cv
9.6084 125.504 9.50439 124.84 9.31201 124.4 cv
9.1123 123.968 8.81641 123.744 8.41602 123.744 cv
8.01611 123.744 7.7124 123.968 7.52002 124.4 cv
7.32031 124.84 7.22412 125.504 7.22412 126.384 cv
7.22412 127.272 7.32031 127.937 7.52002 128.368 cv
7.7124 128.808 8.01611 129.024 8.41602 129.024 cv
ef
11.9043 128.888 mo
11.9043 128.744 11.9521 128.624 12.0483 128.521 cv
12.144 128.424 12.2725 128.368 12.4243 128.368 cv
12.5684 128.368 12.6885 128.424 12.7925 128.521 cv
12.8882 128.624 12.9443 128.744 12.9443 128.888 cv
12.9443 129.032 12.8882 129.16 12.7925 129.256 cv
12.6885 129.352 12.5684 129.4 12.4243 129.4 cv
12.2725 129.4 12.144 129.352 12.0483 129.256 cv
11.9521 129.16 11.9043 129.04 11.9043 128.888 cv
11.9043 128.888 li
cp
ef
16.0962 129.4 mo
15.4561 129.4 14.9604 129.136 14.6084 128.608 cv
14.2563 128.08 14.0801 127.344 14.0801 126.384 cv
14.0801 125.432 14.2563 124.688 14.6084 124.16 cv
14.9604 123.632 15.4561 123.36 16.0962 123.36 cv
16.728 123.36 17.2241 123.632 17.5762 124.16 cv
17.9282 124.688 18.1123 125.432 18.1123 126.384 cv
18.1123 127.344 17.9282 128.08 17.5762 128.608 cv
17.2241 129.136 16.728 129.4 16.0962 129.4 cv
16.0962 129.4 li
cp
16.0962 129.024 mo
16.4961 129.024 16.7925 128.808 16.9922 128.368 cv
17.1841 127.937 17.2881 127.272 17.2881 126.384 cv
17.2881 125.504 17.1841 124.84 16.9922 124.4 cv
16.7925 123.968 16.4961 123.744 16.0962 123.744 cv
15.6963 123.744 15.3921 123.968 15.2002 124.4 cv
15.0005 124.84 14.9043 125.504 14.9043 126.384 cv
14.9043 127.272 15.0005 127.937 15.2002 128.368 cv
15.3921 128.808 15.6963 129.024 16.0962 129.024 cv
ef
21.1362 129.4 mo
20.4961 129.4 20 129.136 19.6484 128.608 cv
19.2964 128.08 19.1201 127.344 19.1201 126.384 cv
19.1201 125.432 19.2964 124.688 19.6484 124.16 cv
20 123.632 20.4961 123.36 21.1362 123.36 cv
21.7681 123.36 22.2642 123.632 22.6162 124.16 cv
22.9683 124.688 23.1523 125.432 23.1523 126.384 cv
23.1523 127.344 22.9683 128.08 22.6162 128.608 cv
22.2642 129.136 21.7681 129.4 21.1362 129.4 cv
21.1362 129.4 li
cp
21.1362 129.024 mo
21.5361 129.024 21.832 128.808 22.0322 128.368 cv
22.2241 127.937 22.3281 127.272 22.3281 126.384 cv
22.3281 125.504 22.2241 124.84 22.0322 124.4 cv
21.832 123.968 21.5361 123.744 21.1362 123.744 cv
20.7363 123.744 20.4321 123.968 20.2402 124.4 cv
20.04 124.84 19.9443 125.504 19.9443 126.384 cv
19.9443 127.272 20.04 127.937 20.2402 128.368 cv
20.4321 128.808 20.7363 129.024 21.1362 129.024 cv
ef
25.2163 126.088 mo
25.3921 125.896 25.5923 125.744 25.8164 125.648 cv
26.04 125.552 26.2881 125.504 26.5762 125.504 cv
27.1523 125.504 27.6162 125.68 27.9521 126.032 cv
28.2881 126.384 28.4561 126.856 28.4561 127.456 cv
28.4561 128.048 28.2725 128.521 27.9121 128.872 cv
27.5444 129.224 27.0645 129.4 26.4561 129.4 cv
25.8003 129.4 25.2881 129.16 24.936 128.672 cv
24.5845 128.184 24.4082 127.48 24.4082 126.568 cv
24.4082 125.552 24.6162 124.76 25.0322 124.2 cv
25.4482 123.64 26.04 123.36 26.8081 123.36 cv
27.0161 123.36 27.2324 123.384 27.4561 123.416 cv
27.6802 123.456 27.9121 123.512 28.1523 123.592 cv
28.1523 124.552 li
27.7124 124.552 li
27.6802 124.296 27.5762 124.096 27.4082 123.952 cv
27.2402 123.816 27.0161 123.744 26.728 123.744 cv
26.2163 123.744 25.8403 123.937 25.5923 124.32 cv
25.3442 124.704 25.2163 125.296 25.2163 126.088 cv
25.2163 126.088 li
cp
26.4883 129.024 mo
26.8564 129.024 27.1362 128.896 27.3364 128.624 cv
27.5283 128.352 27.6323 127.968 27.6323 127.456 cv
27.6323 126.952 27.5283 126.568 27.3364 126.296 cv
27.1362 126.024 26.8564 125.888 26.4883 125.888 cv
26.1123 125.888 25.8242 126.024 25.6323 126.28 cv
25.4404 126.544 25.3442 126.92 25.3442 127.408 cv
25.3442 127.928 25.4404 128.328 25.6401 128.608 cv
25.832 128.888 26.1201 129.024 26.4883 129.024 cv
ef
171.052 101.799 mo
167.052 101.799 li
31.5522 101.799 mo
35.5522 101.799 li
@
0 101.992 mo
5.0083 101.992 li
5.0083 102.624 li
0 102.624 li
0 101.992 li
0 101.992 li
cp
ef
8.41602 104.92 mo
7.77637 104.92 7.28027 104.656 6.92822 104.128 cv
6.57617 103.6 6.40039 102.864 6.40039 101.904 cv
6.40039 100.952 6.57617 100.208 6.92822 99.6797 cv
7.28027 99.1523 7.77637 98.8799 8.41602 98.8799 cv
9.04834 98.8799 9.54443 99.1523 9.896 99.6797 cv
10.248 100.208 10.4321 100.952 10.4321 101.904 cv
10.4321 102.864 10.248 103.6 9.896 104.128 cv
9.54443 104.656 9.04834 104.92 8.41602 104.92 cv
8.41602 104.92 li
cp
8.41602 104.544 mo
8.81641 104.544 9.1123 104.328 9.31201 103.888 cv
9.50439 103.456 9.6084 102.792 9.6084 101.904 cv
9.6084 101.024 9.50439 100.36 9.31201 99.9199 cv
9.1123 99.4883 8.81641 99.2637 8.41602 99.2637 cv
8.01611 99.2637 7.7124 99.4883 7.52002 99.9199 cv
7.32031 100.36 7.22412 101.024 7.22412 101.904 cv
7.22412 102.792 7.32031 103.456 7.52002 103.888 cv
7.7124 104.328 8.01611 104.544 8.41602 104.544 cv
ef
11.6641 104.408 mo
11.6641 104.264 11.7124 104.144 11.8081 104.04 cv
11.9043 103.944 12.0322 103.888 12.1841 103.888 cv
12.3281 103.888 12.4482 103.944 12.5522 104.04 cv
12.6484 104.144 12.7041 104.264 12.7041 104.408 cv
12.7041 104.552 12.6484 104.68 12.5522 104.776 cv
12.4482 104.872 12.3281 104.92 12.1841 104.92 cv
12.0322 104.92 11.9043 104.872 11.8081 104.776 cv
11.7124 104.68 11.6641 104.56 11.6641 104.408 cv
11.6641 104.408 li
cp
ef
16.0962 104.92 mo
15.4561 104.92 14.9604 104.656 14.6084 104.128 cv
14.2563 103.6 14.0801 102.864 14.0801 101.904 cv
14.0801 100.952 14.2563 100.208 14.6084 99.6797 cv
14.9604 99.1523 15.4561 98.8799 16.0962 98.8799 cv
16.728 98.8799 17.2241 99.1523 17.5762 99.6797 cv
17.9282 100.208 18.1123 100.952 18.1123 101.904 cv
18.1123 102.864 17.9282 103.6 17.5762 104.128 cv
17.2241 104.656 16.728 104.92 16.0962 104.92 cv
16.0962 104.92 li
cp
16.0962 104.544 mo
16.4961 104.544 16.7925 104.328 16.9922 103.888 cv
17.1841 103.456 17.2881 102.792 17.2881 101.904 cv
17.2881 101.024 17.1841 100.36 16.9922 99.9199 cv
16.7925 99.4883 16.4961 99.2637 16.0962 99.2637 cv
15.6963 99.2637 15.3921 99.4883 15.2002 99.9199 cv
15.0005 100.36 14.9043 101.024 14.9043 101.904 cv
14.9043 102.792 15.0005 103.456 15.2002 103.888 cv
15.3921 104.328 15.6963 104.544 16.0962 104.544 cv
ef
21.1362 104.92 mo
20.4961 104.92 20 104.656 19.6484 104.128 cv
19.2964 103.6 19.1201 102.864 19.1201 101.904 cv
19.1201 100.952 19.2964 100.208 19.6484 99.6797 cv
20 99.1523 20.4961 98.8799 21.1362 98.8799 cv
21.7681 98.8799 22.2642 99.1523 22.6162 99.6797 cv
22.9683 100.208 23.1523 100.952 23.1523 101.904 cv
23.1523 102.864 22.9683 103.6 22.6162 104.128 cv
22.2642 104.656 21.7681 104.92 21.1362 104.92 cv
21.1362 104.92 li
cp
21.1362 104.544 mo
21.5361 104.544 21.832 104.328 22.0322 103.888 cv
22.2241 103.456 22.3281 102.792 22.3281 101.904 cv
22.3281 101.024 22.2241 100.36 22.0322 99.9199 cv
21.832 99.4883 21.5361 99.2637 21.1362 99.2637 cv
20.7363 99.2637 20.4321 99.4883 20.2402 99.9199 cv
20.04 100.36 19.9443 101.024 19.9443 101.904 cv
19.9443 102.792 20.04 103.456 20.2402 103.888 cv
20.4321 104.328 20.7363 104.544 21.1362 104.544 cv
ef
28.144 104.816 mo
25.4883 104.816 li
25.4883 104.4 li
26.4243 104.4 li
26.4243 103.256 li
23.8804 103.256 li
23.8804 102.832 li
26.4321 98.8799 li
27.2085 98.8799 li
27.2085 102.84 li
28.3203 102.84 li
28.3203 103.256 li
27.2085 103.256 li
27.2085 104.4 li
28.144 104.4 li
28.144 104.816 li
28.144 104.816 li
cp
26.4243 102.84 mo
26.4243 99.7363 li
24.4321 102.84 li
26.4243 102.84 li
ef
171.052 77.1133 mo
167.052 77.1133 li
31.5522 77.1133 mo
35.5522 77.1133 li
@
.480469 77.272 mo
5.48828 77.272 li
5.48828 77.9038 li
.480469 77.9038 li
.480469 77.272 li
.480469 77.272 li
cp
ef
8.896 80.2002 mo
8.25635 80.2002 7.76025 79.936 7.4082 79.4082 cv
7.05615 78.8799 6.88037 78.144 6.88037 77.1841 cv
6.88037 76.2319 7.05615 75.4883 7.4082 74.96 cv
7.76025 74.4321 8.25635 74.1602 8.896 74.1602 cv
9.52832 74.1602 10.0244 74.4321 10.3765 74.96 cv
10.728 75.4883 10.9121 76.2319 10.9121 77.1841 cv
10.9121 78.144 10.728 78.8799 10.3765 79.4082 cv
10.0244 79.936 9.52832 80.2002 8.896 80.2002 cv
8.896 80.2002 li
cp
8.896 79.8242 mo
9.29639 79.8242 9.59229 79.6079 9.79248 79.168 cv
9.98438 78.7358 10.0884 78.0723 10.0884 77.1841 cv
10.0884 76.3042 9.98438 75.6401 9.79248 75.2002 cv
9.59229 74.7681 9.29639 74.5439 8.896 74.5439 cv
8.49609 74.5439 8.19238 74.7681 8 75.2002 cv
7.80029 75.6401 7.7041 76.3042 7.7041 77.1841 cv
7.7041 78.0723 7.80029 78.7358 8 79.168 cv
8.19238 79.6079 8.49609 79.8242 8.896 79.8242 cv
ef
12.144 79.688 mo
12.144 79.5439 12.1924 79.4238 12.2881 79.3198 cv
12.3843 79.2241 12.5122 79.168 12.6641 79.168 cv
12.8081 79.168 12.9282 79.2241 13.0322 79.3198 cv
13.1284 79.4238 13.1841 79.5439 13.1841 79.688 cv
13.1841 79.832 13.1284 79.96 13.0322 80.0562 cv
12.9282 80.1519 12.8081 80.2002 12.6641 80.2002 cv
12.5122 80.2002 12.3843 80.1519 12.2881 80.0562 cv
12.1924 79.96 12.144 79.8398 12.144 79.688 cv
12.144 79.688 li
cp
ef
16.3364 80.2002 mo
15.6963 80.2002 15.2002 79.936 14.8481 79.4082 cv
14.4961 78.8799 14.3203 78.144 14.3203 77.1841 cv
14.3203 76.2319 14.4961 75.4883 14.8481 74.96 cv
15.2002 74.4321 15.6963 74.1602 16.3364 74.1602 cv
16.9683 74.1602 17.4644 74.4321 17.8164 74.96 cv
18.1685 75.4883 18.3521 76.2319 18.3521 77.1841 cv
18.3521 78.144 18.1685 78.8799 17.8164 79.4082 cv
17.4644 79.936 16.9683 80.2002 16.3364 80.2002 cv
16.3364 80.2002 li
cp
16.3364 79.8242 mo
16.7363 79.8242 17.0322 79.6079 17.2324 79.168 cv
17.4243 78.7358 17.5283 78.0723 17.5283 77.1841 cv
17.5283 76.3042 17.4243 75.6401 17.2324 75.2002 cv
17.0322 74.7681 16.7363 74.5439 16.3364 74.5439 cv
15.936 74.5439 15.6323 74.7681 15.4404 75.2002 cv
15.2402 75.6401 15.144 76.3042 15.144 77.1841 cv
15.144 78.0723 15.2402 78.7358 15.4404 79.168 cv
15.6323 79.6079 15.936 79.8242 16.3364 79.8242 cv
ef
21.6162 80.2002 mo
20.9761 80.2002 20.4805 79.936 20.1284 79.4082 cv
19.7764 78.8799 19.6001 78.144 19.6001 77.1841 cv
19.6001 76.2319 19.7764 75.4883 20.1284 74.96 cv
20.4805 74.4321 20.9761 74.1602 21.6162 74.1602 cv
22.248 74.1602 22.7441 74.4321 23.0962 74.96 cv
23.4482 75.4883 23.6323 76.2319 23.6323 77.1841 cv
23.6323 78.144 23.4482 78.8799 23.0962 79.4082 cv
22.7441 79.936 22.248 80.2002 21.6162 80.2002 cv
21.6162 80.2002 li
cp
21.6162 79.8242 mo
22.0161 79.8242 22.312 79.6079 22.5122 79.168 cv
22.7041 78.7358 22.8081 78.0723 22.8081 77.1841 cv
22.8081 76.3042 22.7041 75.6401 22.5122 75.2002 cv
22.312 74.7681 22.0161 74.5439 21.6162 74.5439 cv
21.2163 74.5439 20.9121 74.7681 20.7202 75.2002 cv
20.52 75.6401 20.4243 76.3042 20.4243 77.1841 cv
20.4243 78.0723 20.52 78.7358 20.7202 79.168 cv
20.9121 79.6079 21.2163 79.8242 21.6162 79.8242 cv
ef
25.1362 75.6563 mo
24.6963 75.6563 li
24.6963 74.6162 li
24.9683 74.4722 25.248 74.3599 25.5361 74.2803 cv
25.8164 74.2002 26.0962 74.1602 26.3682 74.1602 cv
26.9761 74.1602 27.4561 74.312 27.8081 74.6001 cv
28.1602 74.896 28.3364 75.2959 28.3364 75.7998 cv
28.3364 76.376 27.936 77.0562 27.1362 77.8481 cv
27.0723 77.9121 27.0322 77.9521 27.0005 77.9839 cv
25.5283 79.4561 li
27.9604 79.4561 li
27.9604 78.7358 li
28.416 78.7358 li
28.416 80.0962 li
24.6563 80.0962 li
24.6563 79.6719 li
26.4243 77.9038 li
26.8081 77.52 27.0884 77.1602 27.2563 76.832 cv
27.4243 76.5039 27.5122 76.1602 27.5122 75.7998 cv
27.5122 75.4082 27.4082 75.104 27.2002 74.8799 cv
26.9922 74.6563 26.7124 74.5439 26.3604 74.5439 cv
25.9844 74.5439 25.6963 74.6401 25.4961 74.8242 cv
25.2881 75.0078 25.1685 75.2881 25.1362 75.6563 cv
25.1362 75.6563 li
cp
ef
171.052 52.4272 mo
167.052 52.4272 li
31.5522 52.4272 mo
35.5522 52.4272 li
@
8.17627 55.48 mo
7.53613 55.48 7.04004 55.2158 6.68848 54.688 cv
6.33643 54.1602 6.16016 53.4238 6.16016 52.4639 cv
6.16016 51.5122 6.33643 50.7681 6.68848 50.2402 cv
7.04004 49.7119 7.53613 49.4399 8.17627 49.4399 cv
8.80811 49.4399 9.3042 49.7119 9.65625 50.2402 cv
10.0083 50.7681 10.1924 51.5122 10.1924 52.4639 cv
10.1924 53.4238 10.0083 54.1602 9.65625 54.688 cv
9.3042 55.2158 8.80811 55.48 8.17627 55.48 cv
8.17627 55.48 li
cp
8.17627 55.104 mo
8.57617 55.104 8.87207 54.8882 9.07227 54.4482 cv
9.26416 54.0161 9.36816 53.3521 9.36816 52.4639 cv
9.36816 51.584 9.26416 50.9199 9.07227 50.48 cv
8.87207 50.0479 8.57617 49.8242 8.17627 49.8242 cv
7.77637 49.8242 7.47217 50.0479 7.28027 50.48 cv
7.08008 50.9199 6.98438 51.584 6.98438 52.4639 cv
6.98438 53.3521 7.08008 54.0161 7.28027 54.4482 cv
7.47217 54.8882 7.77637 55.104 8.17627 55.104 cv
ef
11.4243 54.9678 mo
11.4243 54.8242 11.4722 54.7041 11.5684 54.6001 cv
11.6641 54.5039 11.7925 54.4482 11.9443 54.4482 cv
12.0884 54.4482 12.2085 54.5039 12.312 54.6001 cv
12.4082 54.7041 12.4644 54.8242 12.4644 54.9678 cv
12.4644 55.1118 12.4082 55.2402 12.312 55.3359 cv
12.2085 55.4321 12.0884 55.48 11.9443 55.48 cv
11.7925 55.48 11.6641 55.4321 11.5684 55.3359 cv
11.4722 55.2402 11.4243 55.1201 11.4243 54.9678 cv
11.4243 54.9678 li
cp
ef
15.8564 55.48 mo
15.2163 55.48 14.7202 55.2158 14.3682 54.688 cv
14.0161 54.1602 13.8403 53.4238 13.8403 52.4639 cv
13.8403 51.5122 14.0161 50.7681 14.3682 50.2402 cv
14.7202 49.7119 15.2163 49.4399 15.8564 49.4399 cv
16.4883 49.4399 16.9844 49.7119 17.3364 50.2402 cv
17.6885 50.7681 17.8721 51.5122 17.8721 52.4639 cv
17.8721 53.4238 17.6885 54.1602 17.3364 54.688 cv
16.9844 55.2158 16.4883 55.48 15.8564 55.48 cv
15.8564 55.48 li
cp
15.8564 55.104 mo
16.2563 55.104 16.5522 54.8882 16.7524 54.4482 cv
16.9443 54.0161 17.0483 53.3521 17.0483 52.4639 cv
17.0483 51.584 16.9443 50.9199 16.7524 50.48 cv
16.5522 50.0479 16.2563 49.8242 15.8564 49.8242 cv
15.4561 49.8242 15.1523 50.0479 14.9604 50.48 cv
14.7603 50.9199 14.6641 51.584 14.6641 52.4639 cv
14.6641 53.3521 14.7603 54.0161 14.9604 54.4482 cv
15.1523 54.8882 15.4561 55.104 15.8564 55.104 cv
ef
20.896 55.48 mo
20.2563 55.48 19.7603 55.2158 19.4082 54.688 cv
19.0562 54.1602 18.8804 53.4238 18.8804 52.4639 cv
18.8804 51.5122 19.0562 50.7681 19.4082 50.2402 cv
19.7603 49.7119 20.2563 49.4399 20.896 49.4399 cv
21.5283 49.4399 22.0244 49.7119 22.3765 50.2402 cv
22.728 50.7681 22.9121 51.5122 22.9121 52.4639 cv
22.9121 53.4238 22.728 54.1602 22.3765 54.688 cv
22.0244 55.2158 21.5283 55.48 20.896 55.48 cv
20.896 55.48 li
cp
20.896 55.104 mo
21.2964 55.104 21.5923 54.8882 21.7925 54.4482 cv
21.9844 54.0161 22.0884 53.3521 22.0884 52.4639 cv
22.0884 51.584 21.9844 50.9199 21.7925 50.48 cv
21.5923 50.0479 21.2964 49.8242 20.896 49.8242 cv
20.4961 49.8242 20.1924 50.0479 20 50.48 cv
19.8003 50.9199 19.7041 51.584 19.7041 52.4639 cv
19.7041 53.3521 19.8003 54.0161 20 54.4482 cv
20.1924 54.8882 20.4961 55.104 20.896 55.104 cv
ef
25.936 55.48 mo
25.2964 55.48 24.8003 55.2158 24.4482 54.688 cv
24.0962 54.1602 23.9204 53.4238 23.9204 52.4639 cv
23.9204 51.5122 24.0962 50.7681 24.4482 50.2402 cv
24.8003 49.7119 25.2964 49.4399 25.936 49.4399 cv
26.5684 49.4399 27.0645 49.7119 27.416 50.2402 cv
27.7681 50.7681 27.9521 51.5122 27.9521 52.4639 cv
27.9521 53.4238 27.7681 54.1602 27.416 54.688 cv
27.0645 55.2158 26.5684 55.48 25.936 55.48 cv
25.936 55.48 li
cp
25.936 55.104 mo
26.3364 55.104 26.6323 54.8882 26.832 54.4482 cv
27.0244 54.0161 27.1284 53.3521 27.1284 52.4639 cv
27.1284 51.584 27.0244 50.9199 26.832 50.48 cv
26.6323 50.0479 26.3364 49.8242 25.936 49.8242 cv
25.5361 49.8242 25.2324 50.0479 25.04 50.48 cv
24.8403 50.9199 24.7441 51.584 24.7441 52.4639 cv
24.7441 53.3521 24.8403 54.0161 25.04 54.4482 cv
25.2324 54.8882 25.5361 55.104 25.936 55.104 cv
ef
171.052 27.7422 mo
167.052 27.7422 li
31.5522 27.7422 mo
35.5522 27.7422 li
@
8.41602 30.7598 mo
7.77637 30.7598 7.28027 30.4961 6.92822 29.9678 cv
6.57617 29.4399 6.40039 28.7041 6.40039 27.7441 cv
6.40039 26.792 6.57617 26.0479 6.92822 25.52 cv
7.28027 24.9922 7.77637 24.7202 8.41602 24.7202 cv
9.04834 24.7202 9.54443 24.9922 9.896 25.52 cv
10.248 26.0479 10.4321 26.792 10.4321 27.7441 cv
10.4321 28.7041 10.248 29.4399 9.896 29.9678 cv
9.54443 30.4961 9.04834 30.7598 8.41602 30.7598 cv
8.41602 30.7598 li
cp
8.41602 30.3838 mo
8.81641 30.3838 9.1123 30.168 9.31201 29.728 cv
9.50439 29.2959 9.6084 28.6318 9.6084 27.7441 cv
9.6084 26.8643 9.50439 26.2002 9.31201 25.7598 cv
9.1123 25.3281 8.81641 25.104 8.41602 25.104 cv
8.01611 25.104 7.7124 25.3281 7.52002 25.7598 cv
7.32031 26.2002 7.22412 26.8643 7.22412 27.7441 cv
7.22412 28.6318 7.32031 29.2959 7.52002 29.728 cv
7.7124 30.168 8.01611 30.3838 8.41602 30.3838 cv
ef
11.9043 30.248 mo
11.9043 30.104 11.9521 29.9839 12.0483 29.8799 cv
12.144 29.7842 12.2725 29.728 12.4243 29.728 cv
12.5684 29.728 12.6885 29.7842 12.7925 29.8799 cv
12.8882 29.9839 12.9443 30.104 12.9443 30.248 cv
12.9443 30.3921 12.8882 30.52 12.7925 30.6162 cv
12.6885 30.7119 12.5684 30.7598 12.4243 30.7598 cv
12.2725 30.7598 12.144 30.7119 12.0483 30.6162 cv
11.9521 30.52 11.9043 30.3999 11.9043 30.248 cv
11.9043 30.248 li
cp
ef
16.0962 30.7598 mo
15.4561 30.7598 14.9604 30.4961 14.6084 29.9678 cv
14.2563 29.4399 14.0801 28.7041 14.0801 27.7441 cv
14.0801 26.792 14.2563 26.0479 14.6084 25.52 cv
14.9604 24.9922 15.4561 24.7202 16.0962 24.7202 cv
16.728 24.7202 17.2241 24.9922 17.5762 25.52 cv
17.9282 26.0479 18.1123 26.792 18.1123 27.7441 cv
18.1123 28.7041 17.9282 29.4399 17.5762 29.9678 cv
17.2241 30.4961 16.728 30.7598 16.0962 30.7598 cv
16.0962 30.7598 li
cp
16.0962 30.3838 mo
16.4961 30.3838 16.7925 30.168 16.9922 29.728 cv
17.1841 29.2959 17.2881 28.6318 17.2881 27.7441 cv
17.2881 26.8643 17.1841 26.2002 16.9922 25.7598 cv
16.7925 25.3281 16.4961 25.104 16.0962 25.104 cv
15.6963 25.104 15.3921 25.3281 15.2002 25.7598 cv
15.0005 26.2002 14.9043 26.8643 14.9043 27.7441 cv
14.9043 28.6318 15.0005 29.2959 15.2002 29.728 cv
15.3921 30.168 15.6963 30.3838 16.0962 30.3838 cv
ef
21.1362 30.7598 mo
20.4961 30.7598 20 30.4961 19.6484 29.9678 cv
19.2964 29.4399 19.1201 28.7041 19.1201 27.7441 cv
19.1201 26.792 19.2964 26.0479 19.6484 25.52 cv
20 24.9922 20.4961 24.7202 21.1362 24.7202 cv
21.7681 24.7202 22.2642 24.9922 22.6162 25.52 cv
22.9683 26.0479 23.1523 26.792 23.1523 27.7441 cv
23.1523 28.7041 22.9683 29.4399 22.6162 29.9678 cv
22.2642 30.4961 21.7681 30.7598 21.1362 30.7598 cv
21.1362 30.7598 li
cp
21.1362 30.3838 mo
21.5361 30.3838 21.832 30.168 22.0322 29.728 cv
22.2241 29.2959 22.3281 28.6318 22.3281 27.7441 cv
22.3281 26.8643 22.2241 26.2002 22.0322 25.7598 cv
21.832 25.3281 21.5361 25.104 21.1362 25.104 cv
20.7363 25.104 20.4321 25.3281 20.2402 25.7598 cv
20.04 26.2002 19.9443 26.8643 19.9443 27.7441 cv
19.9443 28.6318 20.04 29.2959 20.2402 29.728 cv
20.4321 30.168 20.7363 30.3838 21.1362 30.3838 cv
ef
24.896 26.2158 mo
24.4561 26.2158 li
24.4561 25.1758 li
24.728 25.0322 25.0083 24.9199 25.2964 24.8398 cv
25.5762 24.7598 25.8564 24.7202 26.1284 24.7202 cv
26.7363 24.7202 27.2163 24.8721 27.5684 25.1602 cv
27.9204 25.4561 28.0962 25.856 28.0962 26.3599 cv
28.0962 26.936 27.6963 27.6162 26.896 28.4082 cv
26.832 28.4722 26.7925 28.5122 26.7603 28.5439 cv
25.2881 30.0161 li
27.7202 30.0161 li
27.7202 29.2959 li
28.1763 29.2959 li
28.1763 30.6563 li
24.416 30.6563 li
24.416 30.2319 li
26.1841 28.4639 li
26.5684 28.0801 26.8481 27.7202 27.0161 27.3921 cv
27.1841 27.064 27.2725 26.7202 27.2725 26.3599 cv
27.2725 25.9678 27.1685 25.6641 26.9604 25.4399 cv
26.7524 25.2158 26.4722 25.104 26.1201 25.104 cv
25.7441 25.104 25.4561 25.2002 25.2563 25.3838 cv
25.0483 25.5679 24.9282 25.8481 24.896 26.2158 cv
24.896 26.2158 li
cp
ef
171.052 3.05615 mo
167.052 3.05615 li
31.5522 3.05615 mo
35.5522 3.05615 li
@
8.17627 6.04004 mo
7.53613 6.04004 7.04004 5.77588 6.68848 5.24805 cv
6.33643 4.72021 6.16016 3.98389 6.16016 3.02393 cv
6.16016 2.07227 6.33643 1.32813 6.68848 .799805 cv
7.04004 .271973 7.53613 0 8.17627 0 cv
8.80811 0 9.3042 .271973 9.65625 .799805 cv
10.0083 1.32813 10.1924 2.07227 10.1924 3.02393 cv
10.1924 3.98389 10.0083 4.72021 9.65625 5.24805 cv
9.3042 5.77588 8.80811 6.04004 8.17627 6.04004 cv
8.17627 6.04004 li
cp
8.17627 5.66406 mo
8.57617 5.66406 8.87207 5.44824 9.07227 5.00781 cv
9.26416 4.57617 9.36816 3.91211 9.36816 3.02393 cv
9.36816 2.14404 9.26416 1.47998 9.07227 1.04004 cv
8.87207 .60791 8.57617 .383789 8.17627 .383789 cv
7.77637 .383789 7.47217 .60791 7.28027 1.04004 cv
7.08008 1.47998 6.98438 2.14404 6.98438 3.02393 cv
6.98438 3.91211 7.08008 4.57617 7.28027 5.00781 cv
7.47217 5.44824 7.77637 5.66406 8.17627 5.66406 cv
ef
11.4243 5.52783 mo
11.4243 5.38379 11.4722 5.26416 11.5684 5.16016 cv
11.6641 5.06396 11.7925 5.00781 11.9443 5.00781 cv
12.0884 5.00781 12.2085 5.06396 12.312 5.16016 cv
12.4082 5.26416 12.4644 5.38379 12.4644 5.52783 cv
12.4644 5.67188 12.4082 5.7998 12.312 5.896 cv
12.2085 5.99219 12.0884 6.04004 11.9443 6.04004 cv
11.7925 6.04004 11.6641 5.99219 11.5684 5.896 cv
11.4722 5.7998 11.4243 5.68018 11.4243 5.52783 cv
11.4243 5.52783 li
cp
ef
15.8564 6.04004 mo
15.2163 6.04004 14.7202 5.77588 14.3682 5.24805 cv
14.0161 4.72021 13.8403 3.98389 13.8403 3.02393 cv
13.8403 2.07227 14.0161 1.32813 14.3682 .799805 cv
14.7202 .271973 15.2163 0 15.8564 0 cv
16.4883 0 16.9844 .271973 17.3364 .799805 cv
17.6885 1.32813 17.8721 2.07227 17.8721 3.02393 cv
17.8721 3.98389 17.6885 4.72021 17.3364 5.24805 cv
16.9844 5.77588 16.4883 6.04004 15.8564 6.04004 cv
15.8564 6.04004 li
cp
15.8564 5.66406 mo
16.2563 5.66406 16.5522 5.44824 16.7524 5.00781 cv
16.9443 4.57617 17.0483 3.91211 17.0483 3.02393 cv
17.0483 2.14404 16.9443 1.47998 16.7524 1.04004 cv
16.5522 .60791 16.2563 .383789 15.8564 .383789 cv
15.4561 .383789 15.1523 .60791 14.9604 1.04004 cv
14.7603 1.47998 14.6641 2.14404 14.6641 3.02393 cv
14.6641 3.91211 14.7603 4.57617 14.9604 5.00781 cv
15.1523 5.44824 15.4561 5.66406 15.8564 5.66406 cv
ef
20.896 6.04004 mo
20.2563 6.04004 19.7603 5.77588 19.4082 5.24805 cv
19.0562 4.72021 18.8804 3.98389 18.8804 3.02393 cv
18.8804 2.07227 19.0562 1.32813 19.4082 .799805 cv
19.7603 .271973 20.2563 0 20.896 0 cv
21.5283 0 22.0244 .271973 22.3765 .799805 cv
22.728 1.32813 22.9121 2.07227 22.9121 3.02393 cv
22.9121 3.98389 22.728 4.72021 22.3765 5.24805 cv
22.0244 5.77588 21.5283 6.04004 20.896 6.04004 cv
20.896 6.04004 li
cp
20.896 5.66406 mo
21.2964 5.66406 21.5923 5.44824 21.7925 5.00781 cv
21.9844 4.57617 22.0884 3.91211 22.0884 3.02393 cv
22.0884 2.14404 21.9844 1.47998 21.7925 1.04004 cv
21.5923 .60791 21.2964 .383789 20.896 .383789 cv
20.4961 .383789 20.1924 .60791 20 1.04004 cv
19.8003 1.47998 19.7041 2.14404 19.7041 3.02393 cv
19.7041 3.91211 19.8003 4.57617 20 5.00781 cv
20.1924 5.44824 20.4961 5.66406 20.896 5.66406 cv
ef
27.9043 5.93604 mo
25.248 5.93604 li
25.248 5.52002 li
26.1841 5.52002 li
26.1841 4.37598 li
23.6401 4.37598 li
23.6401 3.95215 li
26.1924 0 li
26.9683 0 li
26.9683 3.95996 li
28.0801 3.95996 li
28.0801 4.37598 li
26.9683 4.37598 li
26.9683 5.52002 li
27.9043 5.52002 li
27.9043 5.93604 li
27.9043 5.93604 li
cp
26.1841 3.95996 mo
26.1841 .855957 li
24.1924 3.95996 li
26.1841 3.95996 li
ef
1.5 lw
2 lc
31.5522 175.856 mo
31.5522 3.05615 li
31.5522 175.856 mo
171.052 175.856 li
171.052 175.856 mo
171.052 3.05615 li
31.5522 3.05615 mo
171.052 3.05615 li
@
52.6123 23.876 mo
52.6123 23.6841 52.6484 23.4199 52.7324 23.084 cv
52.8042 22.7358 52.9004 22.376 53.02 21.9922 cv
53.1401 21.6079 53.2363 21.2959 53.3203 21.0439 cv
53.3442 20.6479 53.3682 20.3481 53.3682 20.144 cv
53.3682 19.6279 53.3081 19.1479 53.2124 18.7041 cv
53.1162 18.2598 52.9243 17.8882 52.6362 17.5879 cv
52.3481 17.2998 51.9644 17.144 51.4604 17.144 cv
51.1963 17.144 50.9321 17.2041 50.6685 17.312 cv
50.4043 17.4321 50.1763 17.5879 49.9844 17.792 cv
49.7925 17.9961 49.6724 18.2241 49.6001 18.4761 cv
49.5762 18.5239 49.5522 18.5479 49.5044 18.5479 cv
49.3604 18.5479 li
49.2881 18.5479 49.2642 18.5122 49.2642 18.4399 cv
49.2642 18.4038 li
49.3481 18.0439 49.5044 17.6958 49.7324 17.3599 cv
49.9604 17.0239 50.2363 16.7598 50.5723 16.5439 cv
50.9082 16.3398 51.2563 16.2319 51.6284 16.2319 cv
52.0005 16.2319 52.3242 16.3643 52.6001 16.6162 cv
52.8643 16.8799 53.0801 17.2041 53.248 17.5879 cv
53.416 17.9722 53.5361 18.3682 53.6084 18.7642 cv
53.6802 19.1719 53.7163 19.5439 53.7163 19.8921 cv
54.124 18.7998 54.5684 17.7681 55.0723 16.7842 cv
55.2524 16.3999 li
55.2764 16.376 55.3003 16.3643 55.3364 16.3643 cv
55.4805 16.3643 li
55.54 16.3643 55.5762 16.3999 55.5762 16.4722 cv
55.5762 16.4961 55.5645 16.52 55.5522 16.5439 cv
55.3721 16.916 li
55.0122 17.6118 54.7002 18.3198 54.4121 19.0278 cv
54.124 19.7358 53.8721 20.4199 53.6685 21.0801 cv
53.6323 21.356 53.5723 21.7158 53.4883 22.1841 cv
53.3921 22.6401 53.2842 23.0723 53.1641 23.48 cv
53.0444 23.8882 52.9121 24.0918 52.7925 24.1162 cv
52.6724 24.1162 52.6123 24.0322 52.6123 23.876 cv
52.6123 23.876 li
cp
ef
55.9844 24.2842 mo
55.9844 24.2598 55.9844 24.2358 55.9961 24.2358 cv
60.1724 12.6802 li
60.1841 12.6318 60.2085 12.5962 60.2563 12.5723 cv
60.2925 12.5479 60.3403 12.5361 60.3882 12.5361 cv
60.4604 12.5361 60.5083 12.5601 60.5562 12.6079 cv
60.604 12.6563 60.6284 12.7041 60.6284 12.7759 cv
60.6284 12.8242 li
56.4521 24.3799 li
56.4043 24.4761 56.3203 24.5239 56.2241 24.5239 cv
56.1523 24.5239 56.104 24.5 56.0562 24.4521 cv
56.0083 24.4038 55.9844 24.3442 55.9844 24.2842 cv
55.9844 24.2842 li
cp
ef
62.7642 21.6563 mo
62.3081 21.6563 61.9722 21.5 61.7803 21.1641 cv
61.5762 20.8398 61.4805 20.4321 61.4805 19.9521 cv
61.4805 19.6401 61.5044 19.3398 61.5645 19.0278 cv
61.6123 18.728 61.6963 18.416 61.8164 18.104 cv
61.936 17.792 62.0684 17.5039 62.2124 17.228 cv
62.3564 16.9639 62.5244 16.7002 62.7163 16.436 cv
62.7524 16.3882 62.8003 16.3643 62.8604 16.3643 cv
62.9082 16.3643 62.9443 16.3882 62.9805 16.4121 cv
63.0044 16.4482 63.0283 16.4839 63.0283 16.52 cv
63.0283 16.5679 63.0161 16.604 62.9922 16.6401 cv
62.2603 17.6479 61.9004 18.5723 61.9004 19.4121 cv
61.9004 19.7842 61.9844 20.0962 62.1523 20.3599 cv
62.3203 20.624 62.5723 20.7559 62.9321 20.7559 cv
63.2202 20.7559 63.4961 20.6719 63.7603 20.4922 cv
64.0122 20.3242 64.2402 20.0962 64.4321 19.8198 cv
64.4321 19.6758 64.4561 19.46 64.5044 19.1602 cv
64.5522 18.8721 64.624 18.6079 64.7324 18.3682 cv
64.8281 18.1401 64.9604 18.02 65.104 18.02 cv
65.2842 18.02 65.3804 18.1279 65.3804 18.3442 cv
65.3804 18.4761 65.3442 18.6318 65.2964 18.8242 cv
65.248 19.0161 65.1885 19.1841 65.1284 19.3521 cv
65.0562 19.52 64.9844 19.7002 64.8882 19.9038 cv
64.9844 20.48 65.2603 20.7559 65.7402 20.7559 cv
66.0161 20.7559 66.2925 20.6841 66.5801 20.5161 cv
66.8564 20.3599 67.0962 20.1563 67.312 19.8921 cv
67.5283 19.6279 67.6963 19.3521 67.8164 19.0518 cv
67.936 18.752 68.0083 18.4639 68.0083 18.188 cv
68.0083 17.9482 67.9604 17.7681 67.8882 17.624 cv
67.8164 17.4922 67.7085 17.3481 67.5884 17.2041 cv
67.4683 17.0601 67.4082 16.9399 67.4082 16.8442 cv
67.4082 16.688 67.4683 16.5439 67.6001 16.4121 cv
67.7324 16.292 67.8765 16.2202 68.0322 16.2202 cv
68.2241 16.2202 68.3564 16.3159 68.4404 16.4961 cv
68.5244 16.6758 68.5723 16.8799 68.5723 17.0962 cv
68.5723 17.4678 68.4883 17.936 68.3442 18.4883 cv
68.2002 19.04 68.0322 19.5078 67.8521 19.8799 cv
67.5884 20.3838 67.2642 20.8159 66.8804 21.1519 cv
66.4961 21.4883 66.0522 21.6563 65.5723 21.6563 cv
65.2603 21.6563 65.0083 21.5601 64.8164 21.3921 cv
64.624 21.2119 64.5044 20.96 64.4561 20.6362 cv
64.228 20.9482 63.9761 21.2002 63.6885 21.3799 cv
63.4004 21.5601 63.1001 21.6563 62.7642 21.6563 cv
62.7642 21.6563 li
cp
ef
69.7349 23.6563 mo
69.7349 23.8999 69.7939 24.1099 69.9199 24.2778 cv
70.0459 24.4458 70.2222 24.5303 70.4575 24.5303 cv
70.7935 24.5303 71.1128 24.4546 71.4233 24.3032 cv
71.7261 24.1519 71.978 23.9336 72.1709 23.665 cv
72.188 23.6479 72.2046 23.6396 72.2383 23.6396 cv
72.2637 23.6396 72.2886 23.6563 72.3223 23.6899 cv
72.3477 23.7236 72.3643 23.749 72.3643 23.7739 cv
72.3643 23.7993 72.356 23.8159 72.3477 23.8242 cv
72.146 24.1099 71.8687 24.3369 71.5244 24.4966 cv
71.1714 24.6563 70.8101 24.7402 70.4404 24.7402 cv
70.1719 24.7402 69.9282 24.6729 69.7266 24.5552 cv
69.5249 24.4375 69.3652 24.2695 69.2563 24.0513 cv
69.1387 23.8413 69.0884 23.5977 69.0884 23.3286 cv
69.0884 22.9507 69.189 22.5728 69.3989 22.2031 cv
69.6089 21.8335 69.8862 21.5313 70.2393 21.2959 cv
70.5918 21.061 70.9614 20.9434 71.3477 20.9434 cv
71.5996 20.9434 71.8267 21.0103 72.0283 21.1279 cv
72.23 21.2539 72.3306 21.4307 72.3306 21.6655 cv
72.3306 21.8169 72.2803 21.9512 72.1963 22.0605 cv
72.104 22.1694 71.9863 22.2202 71.835 22.2202 cv
71.7427 22.2202 71.667 22.1948 71.6084 22.1362 cv
71.541 22.0854 71.5156 22.0098 71.5156 21.9175 cv
71.5156 21.7832 71.5576 21.6738 71.6587 21.5815 cv
71.751 21.4893 71.8604 21.439 71.9946 21.439 cv
72.0112 21.439 li
71.9443 21.3467 71.8433 21.2793 71.7261 21.229 cv
71.5996 21.187 71.4736 21.1616 71.3394 21.1616 cv
71.0117 21.1616 70.7261 21.3042 70.4824 21.5815 cv
70.2305 21.8672 70.0459 22.2031 69.9199 22.5898 cv
69.7939 22.9761 69.7349 23.3374 69.7349 23.6563 cv
69.7349 23.6563 li
cp
ef
73.9565 19.5654 mo
73.9565 19.4482 73.9985 19.3472 74.0996 19.2466 cv
74.2002 19.1538 74.3096 19.1035 74.4272 19.1035 cv
74.5195 19.1035 74.5952 19.1372 74.6621 19.1958 cv
74.7212 19.2549 74.7544 19.3306 74.7544 19.4146 cv
74.7544 19.5405 74.7041 19.6494 74.6035 19.7422 cv
74.5024 19.8428 74.3936 19.8848 74.2759 19.8848 cv
74.1836 19.8848 74.1079 19.8594 74.0488 19.7925 cv
73.9819 19.7334 73.9565 19.6582 73.9565 19.5654 cv
73.9565 19.5654 li
cp
73.0073 24.0513 mo
73.0073 23.9502 73.0244 23.8413 73.0747 23.7236 cv
73.7549 21.9175 li
73.8223 21.7158 73.8643 21.5479 73.8643 21.4136 cv
73.8643 21.2456 73.7969 21.1616 73.6792 21.1616 cv
73.4609 21.1616 73.2764 21.2793 73.1333 21.5059 cv
72.9824 21.7412 72.8813 21.9932 72.8145 22.2705 cv
72.7974 22.3042 72.7808 22.3208 72.7471 22.3208 cv
72.646 22.3208 li
72.5957 22.3208 72.5791 22.2954 72.5791 22.2451 cv
72.5791 22.2202 li
72.6631 21.8838 72.8057 21.5898 72.9907 21.3296 cv
73.1753 21.0776 73.4106 20.9434 73.6963 20.9434 cv
73.8979 20.9434 74.0659 21.0103 74.2002 21.145 cv
74.3345 21.2793 74.4102 21.439 74.4102 21.6406 cv
74.4102 21.7495 74.3853 21.8589 74.3433 21.9678 cv
73.6626 23.7739 li
73.5786 23.959 73.5449 24.127 73.5449 24.2778 cv
73.5449 24.4458 73.604 24.5303 73.7383 24.5303 cv
73.9565 24.5303 74.1328 24.4126 74.2842 24.1772 cv
74.4272 23.9419 74.5278 23.6899 74.5952 23.4214 cv
74.6035 23.3877 74.6284 23.3706 74.6621 23.3706 cv
74.7632 23.3706 li
74.7798 23.3706 74.7964 23.3794 74.8135 23.396 cv
74.8301 23.4131 74.8389 23.4297 74.8389 23.4463 cv
74.8389 23.4551 74.8301 23.4634 74.8301 23.4717 cv
74.7461 23.791 74.6118 24.085 74.4272 24.3452 cv
74.2339 24.6143 73.9985 24.7402 73.7212 24.7402 cv
73.52 24.7402 73.3521 24.6729 73.2173 24.5469 cv
73.0747 24.4126 73.0073 24.2529 73.0073 24.0513 cv
ef
157.54 17.1563 mo
156.58 16.7241 155.86 16.0518 155.38 15.1401 cv
154.9 14.228 154.66 13.064 154.66 11.6719 cv
154.66 10.2803 154.9 9.12793 155.38 8.2041 cv
155.86 7.28027 156.58 6.60791 157.54 6.17578 cv
157.54 6.75195 li
156.94 7.17188 156.508 7.75977 156.244 8.50391 cv
155.98 9.25977 155.848 10.3159 155.848 11.6719 cv
155.848 13.04 155.98 14.0962 156.244 14.8398 cv
156.508 15.584 156.94 16.1602 157.54 16.5801 cv
157.54 17.1563 li
157.54 17.1563 li
cp
ef
164.128 11.4082 mo
164.128 14.6719 li
165.088 14.6719 li
165.088 15.2959 li
163.048 15.2959 li
163.048 14.624 li
162.808 14.9121 162.532 15.1279 162.22 15.2598 cv
161.908 15.3799 161.536 15.4521 161.128 15.4521 cv
160.432 15.4521 159.88 15.272 159.472 14.9121 cv
159.064 14.5518 158.872 14.0479 158.872 13.4238 cv
158.872 12.7881 159.1 12.2959 159.568 11.936 cv
160.024 11.5762 160.684 11.396 161.536 11.396 cv
163.048 11.396 li
163.048 10.9639 li
163.048 10.4961 162.904 10.1362 162.616 9.87207 cv
162.328 9.60791 161.92 9.47607 161.404 9.47607 cv
160.972 9.47607 160.636 9.58398 160.384 9.77588 cv
160.12 9.96777 159.964 10.2559 159.904 10.6401 cv
159.352 10.6401 li
159.352 9.37988 li
159.724 9.22412 160.084 9.104 160.444 9.02002 cv
160.792 8.94824 161.14 8.8999 161.476 8.8999 cv
162.34 8.8999 162.988 9.11621 163.444 9.54785 cv
163.9 9.97998 164.128 10.5918 164.128 11.4082 cv
164.128 11.4082 li
cp
163.048 13.3398 mo
163.048 12.02 li
161.656 12.02 li
161.116 12.02 160.72 12.1401 160.456 12.3682 cv
160.192 12.6079 160.072 12.9561 160.072 13.4238 cv
160.072 13.856 160.204 14.2041 160.468 14.4561 cv
160.732 14.7202 161.092 14.8398 161.548 14.8398 cv
161.992 14.8398 162.352 14.708 162.628 14.4321 cv
162.904 14.1563 163.048 13.7959 163.048 13.3398 cv
ef
166.324 17.1563 mo
166.324 16.5801 li
166.924 16.1602 167.356 15.584 167.62 14.8398 cv
167.884 14.0962 168.016 13.04 168.016 11.6719 cv
168.016 10.3159 167.884 9.25977 167.62 8.50391 cv
167.356 7.75977 166.924 7.17188 166.324 6.75195 cv
166.324 6.17578 li
167.272 6.60791 167.992 7.28027 168.472 8.2041 cv
168.952 9.12793 169.204 10.2803 169.204 11.6719 cv
169.204 13.064 168.952 14.228 168.472 15.1401 cv
167.992 16.0518 167.272 16.7241 166.324 17.1563 cv
166.324 17.1563 li
cp
ef
101.052 170.856 mo
166.052 170.856 li
166.052 124.919 li
101.052 124.919 li
101.052 170.856 li
101.052 170.856 li
cp
0 0 0 0 cmyk
f
1 lw
101.052 170.856 mo
166.052 170.856 li
166.052 124.919 li
101.052 124.919 li
101.052 170.856 li
101.052 170.856 li
cp
0 0 0 1 cmyk
@
1.5 lw
108.052 133.013 mo
122.052 133.013 li
.883665 .769161 0 0 cmyk
@
133.842 136.086 mo
133.842 136.046 133.842 136.016 133.852 135.996 cv
134.602 133.016 li
134.642 132.836 134.672 132.666 134.672 132.526 cv
134.672 132.246 134.572 132.096 134.382 132.096 cv
134.172 132.096 134.012 132.226 133.912 132.476 cv
133.812 132.726 133.712 133.036 133.622 133.416 cv
133.622 133.437 133.612 133.456 133.592 133.466 cv
133.572 133.476 133.552 133.476 133.542 133.476 cv
133.422 133.476 li
133.402 133.476 133.382 133.466 133.362 133.446 cv
133.342 133.426 133.342 133.396 133.342 133.376 cv
133.412 133.086 133.482 132.836 133.552 132.636 cv
133.612 132.437 133.722 132.256 133.862 132.086 cv
134.002 131.926 134.172 131.836 134.392 131.836 cv
134.632 131.836 134.852 131.916 135.052 132.076 cv
135.242 132.236 135.342 132.437 135.342 132.676 cv
135.542 132.416 135.772 132.216 136.042 132.066 cv
136.302 131.916 136.592 131.836 136.892 131.836 cv
137.122 131.836 137.322 131.886 137.502 131.966 cv
137.672 132.046 137.802 132.176 137.902 132.336 cv
138.002 132.496 138.052 132.696 138.052 132.916 cv
138.052 133.196 137.982 133.526 137.862 133.906 cv
137.742 134.296 137.592 134.726 137.412 135.206 cv
137.312 135.426 137.272 135.626 137.272 135.806 cv
137.272 136.006 137.342 136.106 137.502 136.106 cv
137.762 136.106 137.972 135.966 138.152 135.687 cv
138.322 135.406 138.442 135.106 138.522 134.786 cv
138.532 134.746 138.562 134.726 138.602 134.726 cv
138.722 134.726 li
138.742 134.726 138.762 134.736 138.782 134.756 cv
138.802 134.776 138.812 134.796 138.812 134.816 cv
138.812 134.826 138.802 134.836 138.802 134.846 cv
138.712 135.226 138.552 135.576 138.332 135.886 cv
138.102 136.206 137.822 136.356 137.482 136.356 cv
137.242 136.356 137.042 136.276 136.882 136.126 cv
136.712 135.966 136.632 135.776 136.632 135.536 cv
136.632 135.416 136.652 135.286 136.712 135.146 cv
136.792 134.926 136.882 134.666 136.992 134.366 cv
137.102 134.066 137.192 133.786 137.262 133.506 cv
137.332 133.226 137.372 132.986 137.372 132.766 cv
137.372 132.586 137.332 132.426 137.252 132.296 cv
137.172 132.166 137.052 132.096 136.872 132.096 cv
136.622 132.096 136.392 132.156 136.192 132.256 cv
135.992 132.366 135.812 132.506 135.662 132.687 cv
135.502 132.866 135.362 133.076 135.242 133.316 cv
134.562 136.036 li
134.542 136.136 134.492 136.206 134.412 136.266 cv
134.332 136.326 134.242 136.356 134.142 136.356 cv
134.062 136.356 133.992 136.326 133.932 136.286 cv
133.872 136.246 133.842 136.176 133.842 136.086 cv
133.842 136.086 li
cp
0 0 0 1 cmyk
ef
141.502 132.986 mo
141.442 132.986 141.402 132.966 141.362 132.926 cv
141.322 132.886 141.312 132.846 141.312 132.786 cv
141.312 132.746 141.322 132.696 141.362 132.656 cv
141.402 132.616 141.442 132.586 141.502 132.586 cv
147.782 132.586 li
147.822 132.586 147.862 132.616 147.902 132.656 cv
147.942 132.696 147.962 132.746 147.962 132.786 cv
147.962 132.846 147.942 132.886 147.902 132.926 cv
147.862 132.966 147.822 132.986 147.782 132.986 cv
141.502 132.986 li
141.502 132.986 li
cp
141.502 134.926 mo
141.442 134.926 141.402 134.906 141.362 134.866 cv
141.322 134.826 141.312 134.776 141.312 134.726 cv
141.312 134.676 141.322 134.626 141.362 134.586 cv
141.402 134.546 141.442 134.526 141.502 134.526 cv
147.782 134.526 li
147.822 134.526 147.862 134.546 147.902 134.586 cv
147.942 134.626 147.962 134.676 147.962 134.726 cv
147.962 134.776 147.942 134.826 147.902 134.866 cv
147.862 134.906 147.822 134.926 147.782 134.926 cv
141.502 134.926 li
ef
151.652 136.216 mo
152.022 136.216 152.302 136.026 152.482 135.646 cv
152.662 135.266 152.772 134.846 152.812 134.386 cv
152.852 133.926 152.882 133.426 152.882 132.906 cv
152.882 132.406 152.852 131.946 152.812 131.526 cv
152.772 131.106 152.662 130.716 152.482 130.376 cv
152.302 130.036 152.022 129.856 151.652 129.856 cv
151.272 129.856 150.992 130.036 150.812 130.376 cv
150.632 130.716 150.512 131.106 150.472 131.526 cv
150.432 131.946 150.412 132.406 150.412 132.906 cv
150.412 133.286 150.412 133.636 150.432 133.956 cv
150.452 134.286 150.502 134.626 150.582 134.976 cv
150.662 135.326 150.782 135.616 150.962 135.856 cv
151.132 136.096 151.362 136.216 151.652 136.216 cv
151.652 136.216 li
cp
151.652 136.466 mo
150.832 136.466 150.272 136.136 149.982 135.466 cv
149.682 134.796 149.542 133.996 149.542 133.066 cv
149.542 132.486 149.592 131.946 149.702 131.437 cv
149.802 130.926 150.012 130.496 150.332 130.136 cv
150.642 129.776 151.082 129.596 151.652 129.596 cv
152.092 129.596 152.452 129.706 152.732 129.916 cv
153.012 130.136 153.222 130.406 153.372 130.746 cv
153.512 131.086 153.612 131.456 153.672 131.846 cv
153.722 132.236 153.752 132.646 153.752 133.066 cv
153.752 133.646 153.692 134.176 153.592 134.676 cv
153.482 135.176 153.272 135.606 152.962 135.946 cv
152.652 136.286 152.212 136.466 151.652 136.466 cv
ef
108.052 147.685 mo
122.052 147.685 li
.873045 .242161 1 .129244 cmyk
@
133.842 150.726 mo
133.842 150.687 133.842 150.656 133.852 150.636 cv
134.602 147.656 li
134.642 147.476 134.672 147.306 134.672 147.166 cv
134.672 146.886 134.572 146.736 134.382 146.736 cv
134.172 146.736 134.012 146.866 133.912 147.116 cv
133.812 147.366 133.712 147.676 133.622 148.056 cv
133.622 148.076 133.612 148.096 133.592 148.106 cv
133.572 148.116 133.552 148.116 133.542 148.116 cv
133.422 148.116 li
133.402 148.116 133.382 148.106 133.362 148.086 cv
133.342 148.066 133.342 148.036 133.342 148.016 cv
133.412 147.726 133.482 147.476 133.552 147.276 cv
133.612 147.076 133.722 146.896 133.862 146.726 cv
134.002 146.566 134.172 146.476 134.392 146.476 cv
134.632 146.476 134.852 146.556 135.052 146.716 cv
135.242 146.876 135.342 147.076 135.342 147.316 cv
135.542 147.056 135.772 146.856 136.042 146.706 cv
136.302 146.556 136.592 146.476 136.892 146.476 cv
137.122 146.476 137.322 146.526 137.502 146.606 cv
137.672 146.687 137.802 146.816 137.902 146.976 cv
138.002 147.136 138.052 147.336 138.052 147.556 cv
138.052 147.836 137.982 148.166 137.862 148.546 cv
137.742 148.937 137.592 149.366 137.412 149.846 cv
137.312 150.066 137.272 150.266 137.272 150.446 cv
137.272 150.646 137.342 150.746 137.502 150.746 cv
137.762 150.746 137.972 150.606 138.152 150.326 cv
138.322 150.046 138.442 149.746 138.522 149.426 cv
138.532 149.386 138.562 149.366 138.602 149.366 cv
138.722 149.366 li
138.742 149.366 138.762 149.376 138.782 149.396 cv
138.802 149.416 138.812 149.437 138.812 149.456 cv
138.812 149.466 138.802 149.476 138.802 149.486 cv
138.712 149.866 138.552 150.216 138.332 150.526 cv
138.102 150.846 137.822 150.996 137.482 150.996 cv
137.242 150.996 137.042 150.916 136.882 150.766 cv
136.712 150.606 136.632 150.416 136.632 150.176 cv
136.632 150.056 136.652 149.926 136.712 149.786 cv
136.792 149.566 136.882 149.306 136.992 149.006 cv
137.102 148.706 137.192 148.426 137.262 148.146 cv
137.332 147.866 137.372 147.626 137.372 147.406 cv
137.372 147.226 137.332 147.066 137.252 146.937 cv
137.172 146.806 137.052 146.736 136.872 146.736 cv
136.622 146.736 136.392 146.796 136.192 146.896 cv
135.992 147.006 135.812 147.146 135.662 147.326 cv
135.502 147.506 135.362 147.716 135.242 147.956 cv
134.562 150.676 li
134.542 150.776 134.492 150.846 134.412 150.906 cv
134.332 150.966 134.242 150.996 134.142 150.996 cv
134.062 150.996 133.992 150.966 133.932 150.926 cv
133.872 150.886 133.842 150.816 133.842 150.726 cv
133.842 150.726 li
cp
0 0 0 1 cmyk
ef
141.502 147.626 mo
141.442 147.626 141.402 147.606 141.362 147.566 cv
141.322 147.526 141.312 147.486 141.312 147.426 cv
141.312 147.386 141.322 147.336 141.362 147.296 cv
141.402 147.256 141.442 147.226 141.502 147.226 cv
147.782 147.226 li
147.822 147.226 147.862 147.256 147.902 147.296 cv
147.942 147.336 147.962 147.386 147.962 147.426 cv
147.962 147.486 147.942 147.526 147.902 147.566 cv
147.862 147.606 147.822 147.626 147.782 147.626 cv
141.502 147.626 li
141.502 147.626 li
cp
141.502 149.566 mo
141.442 149.566 141.402 149.546 141.362 149.506 cv
141.322 149.466 141.312 149.416 141.312 149.366 cv
141.312 149.316 141.322 149.266 141.362 149.226 cv
141.402 149.187 141.442 149.166 141.502 149.166 cv
147.782 149.166 li
147.822 149.166 147.862 149.187 147.902 149.226 cv
147.942 149.266 147.962 149.316 147.962 149.366 cv
147.962 149.416 147.942 149.466 147.902 149.506 cv
147.862 149.546 147.822 149.566 147.782 149.566 cv
141.502 149.566 li
ef
150.172 148.596 mo
150.112 148.596 150.072 148.576 150.032 148.536 cv
149.992 148.496 149.982 148.446 149.982 148.396 cv
149.982 148.356 149.992 148.306 150.032 148.266 cv
150.072 148.226 150.112 148.196 150.172 148.196 cv
155.912 148.196 li
155.962 148.196 156.002 148.226 156.042 148.266 cv
156.072 148.306 156.092 148.356 156.092 148.396 cv
156.092 148.446 156.072 148.496 156.042 148.536 cv
156.002 148.576 155.962 148.596 155.912 148.596 cv
150.172 148.596 li
150.172 148.596 li
cp
ef
158.002 150.896 mo
158.002 150.546 li
158.832 150.546 159.252 150.446 159.252 150.226 cv
159.252 144.976 li
158.902 145.146 158.462 145.226 157.942 145.226 cv
157.942 144.876 li
158.752 144.876 159.372 144.666 159.792 144.236 cv
159.932 144.236 li
159.952 144.236 159.982 144.246 160.002 144.266 cv
160.022 144.286 160.032 144.306 160.032 144.326 cv
160.032 150.226 li
160.032 150.446 160.442 150.546 161.282 150.546 cv
161.282 150.896 li
158.002 150.896 li
158.002 150.896 li
cp
ef
108.052 162.356 mo
122.052 162.356 li
0 .993988 1 0 cmyk
@
133.842 165.366 mo
133.842 165.326 133.842 165.296 133.852 165.276 cv
134.602 162.296 li
134.642 162.116 134.672 161.946 134.672 161.806 cv
134.672 161.526 134.572 161.376 134.382 161.376 cv
134.172 161.376 134.012 161.506 133.912 161.756 cv
133.812 162.006 133.712 162.316 133.622 162.696 cv
133.622 162.716 133.612 162.736 133.592 162.746 cv
133.572 162.756 133.552 162.756 133.542 162.756 cv
133.422 162.756 li
133.402 162.756 133.382 162.746 133.362 162.726 cv
133.342 162.706 133.342 162.676 133.342 162.656 cv
133.412 162.366 133.482 162.116 133.552 161.916 cv
133.612 161.716 133.722 161.536 133.862 161.366 cv
134.002 161.206 134.172 161.116 134.392 161.116 cv
134.632 161.116 134.852 161.196 135.052 161.356 cv
135.242 161.516 135.342 161.716 135.342 161.956 cv
135.542 161.696 135.772 161.496 136.042 161.346 cv
136.302 161.196 136.592 161.116 136.892 161.116 cv
137.122 161.116 137.322 161.166 137.502 161.246 cv
137.672 161.326 137.802 161.456 137.902 161.616 cv
138.002 161.776 138.052 161.976 138.052 162.196 cv
138.052 162.476 137.982 162.806 137.862 163.187 cv
137.742 163.576 137.592 164.006 137.412 164.486 cv
137.312 164.706 137.272 164.906 137.272 165.086 cv
137.272 165.286 137.342 165.386 137.502 165.386 cv
137.762 165.386 137.972 165.246 138.152 164.966 cv
138.322 164.687 138.442 164.386 138.522 164.066 cv
138.532 164.026 138.562 164.006 138.602 164.006 cv
138.722 164.006 li
138.742 164.006 138.762 164.016 138.782 164.036 cv
138.802 164.056 138.812 164.076 138.812 164.096 cv
138.812 164.106 138.802 164.116 138.802 164.126 cv
138.712 164.506 138.552 164.856 138.332 165.166 cv
138.102 165.486 137.822 165.636 137.482 165.636 cv
137.242 165.636 137.042 165.556 136.882 165.406 cv
136.712 165.246 136.632 165.056 136.632 164.816 cv
136.632 164.696 136.652 164.566 136.712 164.426 cv
136.792 164.206 136.882 163.946 136.992 163.646 cv
137.102 163.346 137.192 163.066 137.262 162.786 cv
137.332 162.506 137.372 162.266 137.372 162.046 cv
137.372 161.866 137.332 161.706 137.252 161.576 cv
137.172 161.446 137.052 161.376 136.872 161.376 cv
136.622 161.376 136.392 161.437 136.192 161.536 cv
135.992 161.646 135.812 161.786 135.662 161.966 cv
135.502 162.146 135.362 162.356 135.242 162.596 cv
134.562 165.316 li
134.542 165.416 134.492 165.486 134.412 165.546 cv
134.332 165.606 134.242 165.636 134.142 165.636 cv
134.062 165.636 133.992 165.606 133.932 165.566 cv
133.872 165.526 133.842 165.456 133.842 165.366 cv
133.842 165.366 li
cp
0 0 0 1 cmyk
ef
141.502 162.266 mo
141.442 162.266 141.402 162.246 141.362 162.206 cv
141.322 162.166 141.312 162.126 141.312 162.066 cv
141.312 162.026 141.322 161.976 141.362 161.937 cv
141.402 161.896 141.442 161.866 141.502 161.866 cv
147.782 161.866 li
147.822 161.866 147.862 161.896 147.902 161.937 cv
147.942 161.976 147.962 162.026 147.962 162.066 cv
147.962 162.126 147.942 162.166 147.902 162.206 cv
147.862 162.246 147.822 162.266 147.782 162.266 cv
141.502 162.266 li
141.502 162.266 li
cp
141.502 164.206 mo
141.442 164.206 141.402 164.187 141.362 164.146 cv
141.322 164.106 141.312 164.056 141.312 164.006 cv
141.312 163.956 141.322 163.906 141.362 163.866 cv
141.402 163.826 141.442 163.806 141.502 163.806 cv
147.782 163.806 li
147.822 163.806 147.862 163.826 147.902 163.866 cv
147.942 163.906 147.962 163.956 147.962 164.006 cv
147.962 164.056 147.942 164.106 147.902 164.146 cv
147.862 164.187 147.822 164.206 147.782 164.206 cv
141.502 164.206 li
ef
150.082 165.536 mo
150.082 165.187 li
150.912 165.187 151.332 165.086 151.332 164.866 cv
151.332 159.616 li
150.982 159.786 150.542 159.866 150.022 159.866 cv
150.022 159.516 li
150.832 159.516 151.452 159.306 151.872 158.876 cv
152.012 158.876 li
152.032 158.876 152.062 158.886 152.082 158.906 cv
152.102 158.926 152.112 158.946 152.112 158.966 cv
152.112 164.866 li
152.112 165.086 152.522 165.187 153.362 165.187 cv
153.362 165.536 li
150.082 165.536 li
150.082 165.536 li
cp
ef
226.852 175.856 mo
366.352 175.856 li
366.352 3.05615 li
226.852 3.05615 li
226.852 175.856 li
0 0 0 0 cmyk
f
gsave
226.852 175.856 mo
366.352 175.856 li
366.352 3.05615 li
226.852 3.05615 li
226.852 175.856 li
cp
clp
338.081 198.456 mo
338.453 192.627 li
339.397 198.456 li
228.002 198.456 mo
228.015 61.1372 li
229.177 61.3882 li
230.34 61.5439 li
231.502 61.2129 li
232.666 61.728 li
233.828 61.8291 li
234.99 62.291 li
236.152 62.2588 li
237.315 62.9482 li
238.477 62.9053 li
239.64 63.9312 li
240.802 64.0449 li
241.965 63.6401 li
243.127 63.8579 li
244.291 65.0762 li
245.453 65.2881 li
246.615 65.2661 li
247.777 66.3882 li
248.94 66.145 li
250.102 66.752 li
251.265 67.793 li
252.427 67.6812 li
253.59 68.666 li
254.752 69.4063 li
255.916 69.1582 li
257.078 71.0601 li
258.24 72.1641 li
259.402 72.5161 li
260.565 73.5879 li
261.727 73.853 li
262.89 75.0771 li
264.052 74.0142 li
265.215 74.8701 li
266.377 76.5742 li
267.541 77.1592 li
268.703 77.4092 li
269.865 77.9502 li
271.027 79.0991 li
272.19 81.124 li
273.352 82.063 li
274.515 82.1909 li
275.677 83.2861 li
276.84 83.9912 li
278.002 84.8701 li
279.166 87.3081 li
280.328 87.8828 li
281.49 89.2256 li
282.652 90.1963 li
283.815 92.3418 li
284.977 95.335 li
286.14 96.7236 li
287.302 99.4199 li
288.465 101.946 li
289.627 107.175 li
290.791 107.305 li
291.953 109.355 li
293.115 112.687 li
294.277 113.646 li
295.44 115.784 li
296.602 120.246 li
297.765 124.238 li
298.927 125.518 li
300.09 123.74 li
301.252 130.467 li
302.416 125.89 li
303.578 124.101 li
304.74 134.673 li
305.902 131.386 li
307.065 128.225 li
308.227 142.847 li
309.39 137.979 li
310.552 145.11 li
311.715 145.249 li
312.877 153.888 li
314.041 151.83 li
315.203 147.631 li
316.365 173.157 li
317.527 174.787 li
318.69 167.653 li
319.852 164.075 li
321.015 166.573 li
322.177 162.277 li
323.34 165.094 li
324.502 172.626 li
325.666 163.862 li
326.828 164.849 li
327.99 179.199 li
329.152 184.233 li
330.315 195.149 li
331.477 184.093 li
332.64 181.494 li
333.802 188.446 li
334.965 197.244 li
336.127 186.845 li
336.689 198.456 li
.883665 .769161 0 0 cmyk
@
227.846 198.456 mo
228.015 72.0962 li
229.177 71.2988 li
230.34 69.7178 li
231.502 66.771 li
232.666 63.9038 li
233.828 63.3862 li
234.99 64.7109 li
236.152 60.5908 li
237.315 60.8491 li
238.477 57.7969 li
239.64 56.9971 li
240.802 55.2549 li
241.965 52.731 li
243.127 53.1392 li
244.291 52.354 li
245.453 52.5859 li
246.615 54.4341 li
247.777 54.2891 li
248.94 52.9868 li
250.102 53.2271 li
251.265 52.748 li
252.427 52.3999 li
253.59 51.4868 li
254.752 49.791 li
255.916 50.0352 li
257.078 48.4053 li
258.24 46.6631 li
259.402 46.335 li
260.565 45.0991 li
261.727 43.9502 li
262.89 42.7949 li
264.052 41.7559 li
265.215 40.897 li
266.377 39.7813 li
267.541 39.6353 li
268.703 37.8369 li
269.865 36.416 li
271.027 35.7422 li
272.19 34.959 li
273.352 35.2661 li
274.515 33.5122 li
275.677 33.373 li
276.84 31.7803 li
278.002 31.0132 li
279.166 30.3999 li
280.328 29.9858 li
281.49 28.9619 li
282.652 29.3501 li
283.815 28.3428 li
284.977 27.6621 li
286.14 28.5723 li
287.302 29.5161 li
288.465 28.6372 li
289.627 24.8281 li
290.791 27.0552 li
291.953 23.9702 li
293.115 28.1499 li
294.277 24.7861 li
295.44 27.1318 li
296.602 31.3311 li
297.765 26.582 li
298.927 24.9961 li
300.09 27.7261 li
301.252 30.2988 li
302.416 27.4009 li
303.578 28.4678 li
304.74 28.9302 li
305.902 32.4849 li
307.065 31.6938 li
308.227 33.8682 li
309.39 35.1621 li
310.552 34.7168 li
311.715 37.7832 li
312.877 38.082 li
314.041 38.6191 li
315.203 40.9932 li
316.365 43.1719 li
317.527 48.0288 li
318.69 47.7402 li
319.852 49.5942 li
321.015 48.8242 li
322.177 51.3291 li
323.34 56.2549 li
324.502 55.3911 li
325.666 59.4619 li
326.828 61.4692 li
327.99 64.7402 li
329.152 62.8452 li
330.315 66.7402 li
331.477 68.9751 li
332.64 71.312 li
333.802 69.2129 li
334.965 75.5469 li
336.127 76.0381 li
337.291 75.147 li
338.453 78.063 li
339.615 81.8901 li
340.777 82.6641 li
341.94 82.7651 li
343.102 84.4883 li
344.265 88.2778 li
345.427 89.7949 li
346.59 88.1509 li
347.752 91.3506 li
348.916 94.8037 li
350.078 97.0518 li
351.24 101.629 li
352.402 96.3691 li
353.565 98.9893 li
354.727 104.437 li
355.89 106.283 li
357.052 108.575 li
358.215 109.132 li
359.377 108.8 li
360.541 107.014 li
361.703 110.966 li
362.865 110.957 li
364.027 111.718 li
365.19 114.506 li
366.352 117.413 li
367.515 118.312 li
.873045 .242161 1 .129244 cmyk
@
227.843 198.456 mo
228.015 69.814 li
229.177 69.7891 li
230.34 66.9741 li
231.502 64.5269 li
232.666 62.915 li
233.828 64.0171 li
234.99 62.2129 li
236.152 63.3252 li
237.315 63.291 li
238.477 61.3931 li
239.64 58.8872 li
240.802 56.8232 li
241.965 55.1289 li
243.127 54.1938 li
244.291 54.7549 li
245.453 54.6929 li
246.615 57.5698 li
247.777 58.5713 li
248.94 58.3062 li
250.102 59.7549 li
251.265 58.6899 li
252.427 59.5791 li
253.59 59.3101 li
254.752 58.6372 li
255.916 58.7612 li
257.078 57.7422 li
258.24 57.3291 li
259.402 57.3369 li
260.565 57.7222 li
261.727 56.9741 li
262.89 56.3232 li
264.052 56.4312 li
265.215 55.0112 li
266.377 55.3672 li
267.541 55.438 li
268.703 55.0078 li
269.865 54.9341 li
271.027 54.8501 li
272.19 53.4419 li
273.352 55.0601 li
274.515 53.9019 li
275.677 54.2002 li
276.84 53.998 li
278.002 53.1758 li
279.166 53.3022 li
280.328 53.855 li
281.49 53.8579 li
282.652 53.7959 li
283.815 53.2402 li
284.977 54.3311 li
286.14 51.8921 li
287.302 56.0488 li
288.465 53.272 li
289.627 53.5879 li
290.791 53.1172 li
291.953 55.1372 li
293.115 53.4912 li
294.277 53.1641 li
295.44 54.835 li
296.602 54.707 li
297.765 58.272 li
298.927 57.8511 li
300.09 59.1011 li
301.252 57.0112 li
302.416 56.1982 li
303.578 58.7451 li
304.74 57.397 li
305.902 59.814 li
307.065 61.147 li
308.227 61.416 li
309.39 62.9551 li
310.552 64.6919 li
311.715 66.0259 li
312.877 67.9692 li
314.041 67.52 li
315.203 68.6421 li
316.365 69.3633 li
317.527 72.5508 li
318.69 74.2202 li
319.852 72.1631 li
321.015 76.3579 li
322.177 76.0669 li
323.34 78.2651 li
324.502 80.5688 li
325.666 82.6309 li
326.828 84.123 li
327.99 84.3579 li
329.152 89.7627 li
330.315 88.8989 li
331.477 91.1113 li
332.64 91.624 li
333.802 94.6523 li
334.965 95.1641 li
336.127 97.6074 li
337.291 96.2656 li
338.453 99.1104 li
339.615 100.458 li
340.777 100.749 li
341.94 100.166 li
343.102 102.454 li
344.265 104.337 li
345.427 107.551 li
346.59 107.555 li
347.752 110.623 li
348.916 109.894 li
350.078 114.137 li
351.24 115.248 li
352.402 113.52 li
353.565 115.282 li
354.727 117.955 li
355.89 116.671 li
357.052 120.287 li
358.215 121.519 li
359.377 123.438 li
360.541 122.452 li
361.703 127.35 li
362.865 123.764 li
364.027 127.04 li
365.19 127.899 li
366.352 127.784 li
367.515 129.716 li
0 .993988 1 0 cmyk
@
0 lc
[6 6 ] 0 dsh
345.753 198.456 mo
346.59 187.396 li
347.752 190.11 li
348.792 198.456 li
226.852 74.4619 mo
228.015 73.4839 li
229.177 72.9341 li
230.34 74.5161 li
231.502 75.4932 li
232.666 75.8042 li
233.828 79.0869 li
234.99 77.9551 li
236.152 79.4951 li
237.315 82.6162 li
238.477 82.4741 li
239.64 81.2759 li
240.802 83.8188 li
241.965 84.1421 li
243.127 86.1982 li
244.291 86.625 li
245.453 87.3931 li
246.615 89.0732 li
247.777 88.5161 li
248.94 97.6104 li
250.102 94.1387 li
251.265 90.3125 li
252.427 96.5332 li
253.59 95.0996 li
254.752 94.3076 li
255.916 93.8691 li
257.078 97.584 li
258.24 96.5977 li
259.402 98.627 li
260.565 98.623 li
261.727 98.2871 li
262.89 98.6416 li
264.052 100.679 li
265.215 102.978 li
266.377 103.079 li
267.541 104.643 li
268.703 105.756 li
269.865 104.755 li
271.027 106.752 li
272.19 109.513 li
273.352 112.252 li
274.515 109.297 li
275.677 112.793 li
276.84 112.679 li
278.002 113.983 li
279.166 112.726 li
280.328 116.171 li
281.49 116.365 li
282.652 120.331 li
283.815 118.928 li
284.977 120.277 li
286.14 121.859 li
287.302 123.974 li
288.465 125.837 li
289.627 125.254 li
290.791 128.049 li
291.953 128.411 li
293.115 132.23 li
294.277 131.438 li
295.44 132.072 li
296.602 133.789 li
297.765 130.548 li
298.927 135.971 li
300.09 141.608 li
301.252 135.629 li
302.416 138.63 li
303.578 136.952 li
304.74 143.083 li
305.902 142.467 li
307.065 142.934 li
308.227 150.077 li
309.39 146.41 li
310.552 147.106 li
311.715 150.291 li
312.877 152.151 li
314.041 150.347 li
315.203 153.876 li
316.365 158.413 li
317.527 153.306 li
318.69 160.74 li
319.852 162.944 li
321.015 161.248 li
322.177 165.51 li
323.34 158.166 li
324.502 162.641 li
325.666 170.08 li
326.828 171.861 li
327.99 170.038 li
329.152 169.718 li
330.315 171.098 li
331.477 171.875 li
332.64 180.352 li
333.802 175.615 li
334.965 179.242 li
336.127 176.707 li
337.291 177.977 li
338.453 179.095 li
339.615 191.079 li
340.777 194.518 li
341.94 183.949 li
343.102 183.439 li
344.265 187.847 li
345.091 198.456 li
.883665 .769161 0 0 cmyk
@
227.675 198.456 mo
228.015 71.043 li
229.177 69.0991 li
230.34 71.5112 li
231.502 72.7119 li
232.666 70.5269 li
233.828 72.5933 li
234.99 68.5742 li
236.152 68.6792 li
237.315 64.2998 li
238.477 62.4312 li
239.64 62.0952 li
240.802 62.3042 li
241.965 60.9819 li
243.127 60.2832 li
244.291 59.1318 li
245.453 58.6782 li
246.615 58.9722 li
247.777 57.311 li
248.94 58.395 li
250.102 58.6729 li
251.265 56.2271 li
252.427 55.2061 li
253.59 55.938 li
254.752 55.561 li
255.916 55.7432 li
257.078 53.7212 li
258.24 53.4849 li
259.402 52.939 li
260.565 51.9429 li
261.727 51.5112 li
262.89 50.6299 li
264.052 48.377 li
265.215 48.1299 li
266.377 48.873 li
267.541 45.2998 li
268.703 45.3062 li
269.865 46.292 li
271.027 43.6992 li
272.19 43.769 li
273.352 42.293 li
274.515 41.332 li
275.677 40.6479 li
276.84 41.6641 li
278.002 40.2988 li
279.166 39.001 li
280.328 35.7778 li
281.49 34.938 li
282.652 35.6001 li
283.815 36.25 li
284.977 36.4731 li
286.14 34.604 li
287.302 32.582 li
288.465 32.8311 li
289.627 34.3989 li
290.791 31.8931 li
291.953 33.127 li
293.115 30.6211 li
294.277 33.3159 li
295.44 29.8618 li
296.602 32.3579 li
297.765 34.458 li
298.927 32.3652 li
300.09 31.9893 li
301.252 31.7202 li
302.416 35.3901 li
303.578 33.5498 li
304.74 30.6689 li
305.902 34.563 li
307.065 37.3188 li
308.227 37.9648 li
309.39 37.9038 li
310.552 36.7891 li
311.715 35.8799 li
312.877 47.2969 li
314.041 45.5781 li
315.203 47.7803 li
316.365 53.165 li
317.527 50.856 li
318.69 58.834 li
319.852 60.4102 li
321.015 59.9521 li
322.177 63.7778 li
323.34 73.8901 li
324.502 65.2529 li
325.666 74.1782 li
326.828 73.0708 li
327.99 73.0151 li
329.152 76.918 li
330.315 83.6729 li
331.477 83.6133 li
332.64 84.749 li
333.802 87.709 li
334.965 89.0674 li
336.127 93.6143 li
337.291 91.4697 li
338.453 101.051 li
339.615 99.127 li
340.777 99.8311 li
341.94 102.276 li
343.102 107.382 li
344.265 112.194 li
345.427 103.734 li
346.59 116.557 li
347.752 111.033 li
348.916 122.714 li
350.078 117.146 li
351.24 121.974 li
352.402 124.786 li
353.565 123.556 li
354.727 131.104 li
355.89 129.356 li
357.052 131.861 li
358.215 137.873 li
359.377 131.507 li
360.541 127.518 li
361.703 139.952 li
362.865 134.892 li
364.027 139.445 li
365.19 143.835 li
366.352 139.564 li
367.515 141.433 li
.873045 .242161 1 .129244 cmyk
@
227.681 198.456 mo
228.015 73.958 li
229.177 71.7632 li
230.34 72.6108 li
231.502 68.8008 li
232.666 71.9502 li
233.828 66.6992 li
234.99 67.1602 li
236.152 68.5112 li
237.315 68.6401 li
238.477 65.4492 li
239.64 64.7061 li
240.802 65.0381 li
241.965 61.5332 li
243.127 60.8232 li
244.291 60.7822 li
245.453 61.3379 li
246.615 61.645 li
247.777 62.4561 li
248.94 62.543 li
250.102 62.5112 li
251.265 62.373 li
252.427 61.7651 li
253.59 62.0981 li
254.752 63.083 li
255.916 63.8101 li
257.078 63.3262 li
258.24 63.6519 li
259.402 63.708 li
260.565 63.001 li
261.727 64.4819 li
262.89 63.292 li
264.052 63.1509 li
265.215 62.7002 li
266.377 64.2319 li
267.541 63.4482 li
268.703 63.3271 li
269.865 63.3311 li
271.027 63.3062 li
272.19 63.9448 li
273.352 63.853 li
274.515 63.4199 li
275.677 62.3521 li
276.84 62.8853 li
278.002 62.1309 li
279.166 62.0771 li
280.328 60.356 li
281.49 63.6411 li
282.652 60.5522 li
283.815 61.3291 li
284.977 59.6338 li
286.14 59.7002 li
287.302 60.5869 li
288.465 60.7041 li
289.627 60.7998 li
290.791 59.376 li
291.953 62.605 li
293.115 60.5288 li
294.277 61.6328 li
295.44 62.272 li
296.602 65.2769 li
297.765 66.3452 li
298.927 63.1538 li
300.09 63.3599 li
301.252 62.3081 li
302.416 60.2441 li
303.578 67.374 li
304.74 64.4229 li
305.902 66.9902 li
307.065 69.4878 li
308.227 67.6973 li
309.39 69.4219 li
310.552 72.2031 li
311.715 72.0879 li
312.877 75.3589 li
314.041 74.7603 li
315.203 77.1182 li
316.365 81.3911 li
317.527 82.7603 li
318.69 83.9521 li
319.852 86.665 li
321.015 90.4219 li
322.177 91.1729 li
323.34 89.2109 li
324.502 97.4141 li
325.666 97.417 li
326.828 101.42 li
327.99 102.53 li
329.152 96.6309 li
330.315 100.181 li
331.477 107.031 li
332.64 102.285 li
333.802 109.507 li
334.965 111.514 li
336.127 111.851 li
337.291 116.14 li
338.453 118.738 li
339.615 118.664 li
340.777 126.752 li
341.94 119.267 li
343.102 124.222 li
344.265 126.992 li
345.427 127.407 li
346.59 126.387 li
347.752 132.229 li
348.916 128.323 li
350.078 136.689 li
351.24 141.301 li
352.402 139.506 li
353.565 137.014 li
354.727 141.713 li
355.89 144.335 li
357.052 141.425 li
358.215 145.246 li
359.377 146.225 li
360.541 148.805 li
361.703 148.367 li
362.865 152.437 li
364.027 154.051 li
365.19 155.407 li
366.352 160.174 li
367.515 165.084 li
0 .993988 1 0 cmyk
@
grestore
.5 lw
0 lc
226.852 3.05615 mo
226.852 7.05615 li
226.852 175.856 mo
226.852 171.856 li
0 0 0 1 cmyk
@
227.296 185.8 mo
226.656 185.8 226.161 185.536 225.808 185.008 cv
225.457 184.48 225.28 183.744 225.28 182.784 cv
225.28 181.832 225.457 181.088 225.808 180.56 cv
226.161 180.032 226.656 179.76 227.296 179.76 cv
227.928 179.76 228.424 180.032 228.776 180.56 cv
229.128 181.088 229.312 181.832 229.312 182.784 cv
229.312 183.744 229.128 184.48 228.776 185.008 cv
228.424 185.536 227.928 185.8 227.296 185.8 cv
227.296 185.8 li
cp
227.296 185.424 mo
227.696 185.424 227.993 185.208 228.192 184.768 cv
228.384 184.336 228.488 183.672 228.488 182.784 cv
228.488 181.904 228.384 181.24 228.192 180.8 cv
227.993 180.368 227.696 180.144 227.296 180.144 cv
226.896 180.144 226.592 180.368 226.4 180.8 cv
226.201 181.24 226.104 181.904 226.104 182.784 cv
226.104 183.672 226.201 184.336 226.4 184.768 cv
226.592 185.208 226.896 185.424 227.296 185.424 cv
ef
250.102 3.05615 mo
250.102 7.05615 li
250.102 175.856 mo
250.102 171.856 li
@
246.656 181.256 mo
246.216 181.256 li
246.216 180.216 li
246.488 180.072 246.768 179.96 247.056 179.88 cv
247.336 179.8 247.617 179.76 247.888 179.76 cv
248.497 179.76 248.976 179.912 249.329 180.2 cv
249.68 180.496 249.856 180.896 249.856 181.4 cv
249.856 181.976 249.457 182.656 248.656 183.448 cv
248.592 183.512 248.552 183.552 248.52 183.584 cv
247.048 185.056 li
249.48 185.056 li
249.48 184.336 li
249.936 184.336 li
249.936 185.696 li
246.176 185.696 li
246.176 185.272 li
247.944 183.504 li
248.329 183.12 248.608 182.76 248.776 182.432 cv
248.944 182.104 249.033 181.76 249.033 181.4 cv
249.033 181.008 248.928 180.704 248.72 180.48 cv
248.512 180.256 248.232 180.144 247.88 180.144 cv
247.504 180.144 247.216 180.24 247.016 180.424 cv
246.808 180.608 246.688 180.888 246.656 181.256 cv
246.656 181.256 li
cp
ef
253.216 185.8 mo
252.577 185.8 252.081 185.536 251.728 185.008 cv
251.376 184.48 251.201 183.744 251.201 182.784 cv
251.201 181.832 251.376 181.088 251.728 180.56 cv
252.081 180.032 252.577 179.76 253.216 179.76 cv
253.848 179.76 254.344 180.032 254.696 180.56 cv
255.048 181.088 255.232 181.832 255.232 182.784 cv
255.232 183.744 255.048 184.48 254.696 185.008 cv
254.344 185.536 253.848 185.8 253.216 185.8 cv
253.216 185.8 li
cp
253.216 185.424 mo
253.617 185.424 253.913 185.208 254.112 184.768 cv
254.304 184.336 254.409 183.672 254.409 182.784 cv
254.409 181.904 254.304 181.24 254.112 180.8 cv
253.913 180.368 253.617 180.144 253.216 180.144 cv
252.816 180.144 252.512 180.368 252.32 180.8 cv
252.121 181.24 252.024 181.904 252.024 182.784 cv
252.024 183.672 252.121 184.336 252.32 184.768 cv
252.512 185.208 252.816 185.424 253.216 185.424 cv
ef
273.352 3.05615 mo
273.352 7.05615 li
273.352 175.856 mo
273.352 171.856 li
@
273.184 185.696 mo
270.528 185.696 li
270.528 185.28 li
271.464 185.28 li
271.464 184.136 li
268.92 184.136 li
268.92 183.712 li
271.472 179.76 li
272.249 179.76 li
272.249 183.72 li
273.36 183.72 li
273.36 184.136 li
272.249 184.136 li
272.249 185.28 li
273.184 185.28 li
273.184 185.696 li
273.184 185.696 li
cp
271.464 183.72 mo
271.464 180.616 li
269.472 183.72 li
271.464 183.72 li
ef
276.256 185.8 mo
275.617 185.8 275.121 185.536 274.768 185.008 cv
274.417 184.48 274.24 183.744 274.24 182.784 cv
274.24 181.832 274.417 181.088 274.768 180.56 cv
275.121 180.032 275.617 179.76 276.256 179.76 cv
276.888 179.76 277.384 180.032 277.736 180.56 cv
278.088 181.088 278.272 181.832 278.272 182.784 cv
278.272 183.744 278.088 184.48 277.736 185.008 cv
277.384 185.536 276.888 185.8 276.256 185.8 cv
276.256 185.8 li
cp
276.256 185.424 mo
276.656 185.424 276.953 185.208 277.152 184.768 cv
277.344 184.336 277.449 183.672 277.449 182.784 cv
277.449 181.904 277.344 181.24 277.152 180.8 cv
276.953 180.368 276.656 180.144 276.256 180.144 cv
275.856 180.144 275.552 180.368 275.36 180.8 cv
275.161 181.24 275.064 181.904 275.064 182.784 cv
275.064 183.672 275.161 184.336 275.36 184.768 cv
275.552 185.208 275.856 185.424 276.256 185.424 cv
ef
296.602 3.05615 mo
296.602 7.05615 li
296.602 175.856 mo
296.602 171.856 li
@
293.296 182.488 mo
293.472 182.296 293.672 182.144 293.896 182.048 cv
294.121 181.952 294.369 181.904 294.656 181.904 cv
295.232 181.904 295.696 182.08 296.033 182.432 cv
296.369 182.784 296.537 183.256 296.537 183.856 cv
296.537 184.448 296.352 184.92 295.993 185.272 cv
295.625 185.624 295.144 185.8 294.537 185.8 cv
293.88 185.8 293.369 185.56 293.016 185.072 cv
292.665 184.584 292.488 183.88 292.488 182.968 cv
292.488 181.952 292.696 181.16 293.112 180.6 cv
293.528 180.04 294.121 179.76 294.888 179.76 cv
295.096 179.76 295.312 179.784 295.537 179.816 cv
295.76 179.856 295.993 179.912 296.232 179.992 cv
296.232 180.952 li
295.792 180.952 li
295.76 180.696 295.656 180.496 295.488 180.352 cv
295.32 180.216 295.096 180.144 294.808 180.144 cv
294.296 180.144 293.92 180.336 293.672 180.72 cv
293.424 181.104 293.296 181.696 293.296 182.488 cv
293.296 182.488 li
cp
294.568 185.424 mo
294.936 185.424 295.216 185.296 295.417 185.024 cv
295.608 184.752 295.712 184.368 295.712 183.856 cv
295.712 183.352 295.608 182.968 295.417 182.696 cv
295.216 182.424 294.936 182.288 294.568 182.288 cv
294.192 182.288 293.904 182.424 293.712 182.68 cv
293.52 182.944 293.424 183.32 293.424 183.808 cv
293.424 184.328 293.52 184.728 293.72 185.008 cv
293.913 185.288 294.201 185.424 294.568 185.424 cv
ef
299.776 185.8 mo
299.136 185.8 298.64 185.536 298.289 185.008 cv
297.936 184.48 297.76 183.744 297.76 182.784 cv
297.76 181.832 297.936 181.088 298.289 180.56 cv
298.64 180.032 299.136 179.76 299.776 179.76 cv
300.409 179.76 300.904 180.032 301.256 180.56 cv
301.608 181.088 301.792 181.832 301.792 182.784 cv
301.792 183.744 301.608 184.48 301.256 185.008 cv
300.904 185.536 300.409 185.8 299.776 185.8 cv
299.776 185.8 li
cp
299.776 185.424 mo
300.176 185.424 300.472 185.208 300.672 184.768 cv
300.865 184.336 300.968 183.672 300.968 182.784 cv
300.968 181.904 300.865 181.24 300.672 180.8 cv
300.472 180.368 300.176 180.144 299.776 180.144 cv
299.376 180.144 299.072 180.368 298.88 180.8 cv
298.68 181.24 298.584 181.904 298.584 182.784 cv
298.584 183.672 298.68 184.336 298.88 184.768 cv
299.072 185.208 299.376 185.424 299.776 185.424 cv
ef
319.852 3.05615 mo
319.852 7.05615 li
319.852 175.856 mo
319.852 171.856 li
@
318.8 181.272 mo
318.8 180.92 318.705 180.64 318.528 180.44 cv
318.344 180.248 318.096 180.144 317.776 180.144 cv
317.457 180.144 317.201 180.248 317.024 180.44 cv
316.84 180.64 316.752 180.92 316.752 181.272 cv
316.752 181.632 316.84 181.912 317.024 182.104 cv
317.201 182.304 317.457 182.4 317.776 182.4 cv
318.096 182.4 318.344 182.304 318.528 182.104 cv
318.705 181.912 318.8 181.632 318.8 181.272 cv
318.8 181.272 li
cp
318.376 182.592 mo
318.816 182.656 319.161 182.816 319.409 183.08 cv
319.656 183.352 319.785 183.688 319.785 184.104 cv
319.785 184.648 319.608 185.072 319.264 185.36 cv
318.913 185.656 318.417 185.8 317.776 185.8 cv
317.128 185.8 316.632 185.656 316.289 185.36 cv
315.936 185.072 315.768 184.648 315.768 184.104 cv
315.768 183.688 315.888 183.352 316.136 183.08 cv
316.384 182.816 316.728 182.656 317.176 182.592 cv
316.776 182.528 316.48 182.376 316.272 182.144 cv
316.064 181.92 315.96 181.624 315.96 181.272 cv
315.96 180.808 316.121 180.44 316.44 180.168 cv
316.76 179.896 317.208 179.76 317.776 179.76 cv
318.336 179.76 318.785 179.896 319.104 180.168 cv
319.424 180.44 319.592 180.808 319.592 181.272 cv
319.592 181.624 319.48 181.92 319.272 182.144 cv
319.064 182.376 318.76 182.528 318.376 182.592 cv
318.96 184.104 mo
318.96 183.688 318.856 183.368 318.648 183.136 cv
318.44 182.904 318.144 182.784 317.776 182.784 cv
317.4 182.784 317.112 182.904 316.904 183.136 cv
316.696 183.368 316.592 183.688 316.592 184.104 cv
316.592 184.521 316.696 184.848 316.904 185.08 cv
317.112 185.312 317.4 185.424 317.776 185.424 cv
318.144 185.424 318.44 185.312 318.648 185.08 cv
318.856 184.848 318.96 184.521 318.96 184.104 cv
ef
322.816 185.8 mo
322.176 185.8 321.68 185.536 321.329 185.008 cv
320.976 184.48 320.8 183.744 320.8 182.784 cv
320.8 181.832 320.976 181.088 321.329 180.56 cv
321.68 180.032 322.176 179.76 322.816 179.76 cv
323.449 179.76 323.944 180.032 324.296 180.56 cv
324.648 181.088 324.833 181.832 324.833 182.784 cv
324.833 183.744 324.648 184.48 324.296 185.008 cv
323.944 185.536 323.449 185.8 322.816 185.8 cv
322.816 185.8 li
cp
322.816 185.424 mo
323.216 185.424 323.512 185.208 323.712 184.768 cv
323.904 184.336 324.008 183.672 324.008 182.784 cv
324.008 181.904 323.904 181.24 323.712 180.8 cv
323.512 180.368 323.216 180.144 322.816 180.144 cv
322.417 180.144 322.112 180.368 321.92 180.8 cv
321.72 181.24 321.625 181.904 321.625 182.784 cv
321.625 183.672 321.72 184.336 321.92 184.768 cv
322.112 185.208 322.417 185.424 322.816 185.424 cv
ef
343.102 3.05615 mo
343.102 7.05615 li
343.102 175.856 mo
343.102 171.856 li
@
337.249 185.696 mo
337.249 185.28 li
338.264 185.28 li
338.264 180.432 li
337.088 181.192 li
337.088 180.68 li
338.512 179.76 li
339.048 179.76 li
339.048 185.28 li
340.064 185.28 li
340.064 185.696 li
337.249 185.696 li
337.249 185.696 li
cp
ef
343.936 185.8 mo
343.296 185.8 342.8 185.536 342.449 185.008 cv
342.096 184.48 341.92 183.744 341.92 182.784 cv
341.92 181.832 342.096 181.088 342.449 180.56 cv
342.8 180.032 343.296 179.76 343.936 179.76 cv
344.568 179.76 345.064 180.032 345.417 180.56 cv
345.768 181.088 345.953 181.832 345.953 182.784 cv
345.953 183.744 345.768 184.48 345.417 185.008 cv
345.064 185.536 344.568 185.8 343.936 185.8 cv
343.936 185.8 li
cp
343.936 185.424 mo
344.336 185.424 344.632 185.208 344.833 184.768 cv
345.024 184.336 345.128 183.672 345.128 182.784 cv
345.128 181.904 345.024 181.24 344.833 180.8 cv
344.632 180.368 344.336 180.144 343.936 180.144 cv
343.537 180.144 343.232 180.368 343.041 180.8 cv
342.84 181.24 342.745 181.904 342.745 182.784 cv
342.745 183.672 342.84 184.336 343.041 184.768 cv
343.232 185.208 343.537 185.424 343.936 185.424 cv
ef
348.976 185.8 mo
348.336 185.8 347.84 185.536 347.488 185.008 cv
347.136 184.48 346.96 183.744 346.96 182.784 cv
346.96 181.832 347.136 181.088 347.488 180.56 cv
347.84 180.032 348.336 179.76 348.976 179.76 cv
349.608 179.76 350.104 180.032 350.457 180.56 cv
350.808 181.088 350.993 181.832 350.993 182.784 cv
350.993 183.744 350.808 184.48 350.457 185.008 cv
350.104 185.536 349.608 185.8 348.976 185.8 cv
348.976 185.8 li
cp
348.976 185.424 mo
349.376 185.424 349.672 185.208 349.873 184.768 cv
350.064 184.336 350.168 183.672 350.168 182.784 cv
350.168 181.904 350.064 181.24 349.873 180.8 cv
349.672 180.368 349.376 180.144 348.976 180.144 cv
348.577 180.144 348.272 180.368 348.081 180.8 cv
347.88 181.24 347.785 181.904 347.785 182.784 cv
347.785 183.672 347.88 184.336 348.081 184.768 cv
348.272 185.208 348.577 185.424 348.976 185.424 cv
ef
366.352 3.05615 mo
366.352 7.05615 li
366.352 175.856 mo
366.352 171.856 li
@
360.528 185.696 mo
360.528 185.28 li
361.544 185.28 li
361.544 180.432 li
360.369 181.192 li
360.369 180.68 li
361.792 179.76 li
362.329 179.76 li
362.329 185.28 li
363.344 185.28 li
363.344 185.696 li
360.528 185.696 li
360.528 185.696 li
cp
ef
365.696 181.256 mo
365.256 181.256 li
365.256 180.216 li
365.528 180.072 365.808 179.96 366.096 179.88 cv
366.376 179.8 366.656 179.76 366.928 179.76 cv
367.537 179.76 368.016 179.912 368.369 180.2 cv
368.72 180.496 368.896 180.896 368.896 181.4 cv
368.896 181.976 368.497 182.656 367.696 183.448 cv
367.632 183.512 367.592 183.552 367.56 183.584 cv
366.088 185.056 li
368.52 185.056 li
368.52 184.336 li
368.976 184.336 li
368.976 185.696 li
365.216 185.696 li
365.216 185.272 li
366.984 183.504 li
367.369 183.12 367.648 182.76 367.816 182.432 cv
367.984 182.104 368.072 181.76 368.072 181.4 cv
368.072 181.008 367.968 180.704 367.76 180.48 cv
367.552 180.256 367.272 180.144 366.92 180.144 cv
366.544 180.144 366.256 180.24 366.056 180.424 cv
365.848 180.608 365.728 180.888 365.696 181.256 cv
365.696 181.256 li
cp
ef
372.256 185.8 mo
371.617 185.8 371.121 185.536 370.768 185.008 cv
370.417 184.48 370.24 183.744 370.24 182.784 cv
370.24 181.832 370.417 181.088 370.768 180.56 cv
371.121 180.032 371.617 179.76 372.256 179.76 cv
372.888 179.76 373.384 180.032 373.736 180.56 cv
374.088 181.088 374.272 181.832 374.272 182.784 cv
374.272 183.744 374.088 184.48 373.736 185.008 cv
373.384 185.536 372.888 185.8 372.256 185.8 cv
372.256 185.8 li
cp
372.256 185.424 mo
372.656 185.424 372.953 185.208 373.152 184.768 cv
373.344 184.336 373.449 183.672 373.449 182.784 cv
373.449 181.904 373.344 181.24 373.152 180.8 cv
372.953 180.368 372.656 180.144 372.256 180.144 cv
371.856 180.144 371.552 180.368 371.36 180.8 cv
371.161 181.24 371.064 181.904 371.064 182.784 cv
371.064 183.672 371.161 184.336 371.36 184.768 cv
371.552 185.208 371.856 185.424 372.256 185.424 cv
ef
297.334 192.014 mo
297.487 191.672 297.685 191.42 297.928 191.24 cv
298.171 191.069 298.451 190.979 298.774 190.979 cv
299.26 190.979 299.629 191.132 299.873 191.438 cv
300.106 191.744 300.232 192.194 300.232 192.806 cv
300.232 195.308 li
300.961 195.308 li
300.961 195.776 li
298.72 195.776 li
298.72 195.308 li
299.422 195.308 li
299.422 192.896 li
299.422 192.428 299.35 192.086 299.207 191.879 cv
299.062 191.681 298.837 191.573 298.513 191.573 cv
298.153 191.573 297.875 191.717 297.685 191.987 cv
297.497 192.257 297.406 192.653 297.406 193.175 cv
297.406 195.308 li
298.108 195.308 li
298.108 195.776 li
295.894 195.776 li
295.894 195.308 li
296.596 195.308 li
296.596 192.869 li
296.596 192.401 296.524 192.068 296.38 191.87 cv
296.236 191.672 296.011 191.573 295.687 191.573 cv
295.328 191.573 295.048 191.717 294.859 191.987 cv
294.67 192.257 294.581 192.653 294.581 193.175 cv
294.581 195.308 li
295.283 195.308 li
295.283 195.776 li
293.042 195.776 li
293.042 195.308 li
293.77 195.308 li
293.77 191.564 li
292.997 191.564 li
292.997 191.105 li
294.581 191.105 li
294.581 191.933 li
294.724 191.627 294.914 191.384 295.147 191.222 cv
295.381 191.06 295.642 190.979 295.939 190.979 cv
296.299 190.979 296.596 191.069 296.839 191.249 cv
297.083 191.429 297.245 191.69 297.334 192.014 cv
297.334 192.014 li
cp
ef
366.352 175.856 mo
362.352 175.856 li
226.852 175.856 mo
230.852 175.856 li
@
195.36 175.912 mo
200.369 175.912 li
200.369 176.544 li
195.36 176.544 li
195.36 175.912 li
195.36 175.912 li
cp
ef
203.776 178.84 mo
203.136 178.84 202.64 178.576 202.289 178.048 cv
201.936 177.521 201.76 176.784 201.76 175.824 cv
201.76 174.872 201.936 174.128 202.289 173.6 cv
202.64 173.072 203.136 172.8 203.776 172.8 cv
204.409 172.8 204.904 173.072 205.256 173.6 cv
205.608 174.128 205.792 174.872 205.792 175.824 cv
205.792 176.784 205.608 177.521 205.256 178.048 cv
204.904 178.576 204.409 178.84 203.776 178.84 cv
203.776 178.84 li
cp
203.776 178.464 mo
204.176 178.464 204.472 178.248 204.672 177.808 cv
204.865 177.376 204.968 176.712 204.968 175.824 cv
204.968 174.944 204.865 174.28 204.672 173.84 cv
204.472 173.408 204.176 173.184 203.776 173.184 cv
203.376 173.184 203.072 173.408 202.88 173.84 cv
202.68 174.28 202.584 174.944 202.584 175.824 cv
202.584 176.712 202.68 177.376 202.88 177.808 cv
203.072 178.248 203.376 178.464 203.776 178.464 cv
ef
207.264 178.328 mo
207.264 178.184 207.312 178.064 207.409 177.96 cv
207.504 177.864 207.632 177.808 207.785 177.808 cv
207.928 177.808 208.048 177.864 208.152 177.96 cv
208.249 178.064 208.304 178.184 208.304 178.328 cv
208.304 178.472 208.249 178.6 208.152 178.696 cv
208.048 178.792 207.928 178.84 207.785 178.84 cv
207.632 178.84 207.504 178.792 207.409 178.696 cv
207.312 178.6 207.264 178.48 207.264 178.328 cv
207.264 178.328 li
cp
ef
211.457 178.84 mo
210.816 178.84 210.32 178.576 209.968 178.048 cv
209.617 177.521 209.44 176.784 209.44 175.824 cv
209.44 174.872 209.617 174.128 209.968 173.6 cv
210.32 173.072 210.816 172.8 211.457 172.8 cv
212.088 172.8 212.584 173.072 212.936 173.6 cv
213.289 174.128 213.472 174.872 213.472 175.824 cv
213.472 176.784 213.289 177.521 212.936 178.048 cv
212.584 178.576 212.088 178.84 211.457 178.84 cv
211.457 178.84 li
cp
211.457 178.464 mo
211.856 178.464 212.152 178.248 212.352 177.808 cv
212.544 177.376 212.648 176.712 212.648 175.824 cv
212.648 174.944 212.544 174.28 212.352 173.84 cv
212.152 173.408 211.856 173.184 211.457 173.184 cv
211.056 173.184 210.752 173.408 210.56 173.84 cv
210.36 174.28 210.264 174.944 210.264 175.824 cv
210.264 176.712 210.36 177.376 210.56 177.808 cv
210.752 178.248 211.056 178.464 211.457 178.464 cv
ef
215.088 178.736 mo
215.088 178.32 li
216.104 178.32 li
216.104 173.472 li
214.928 174.232 li
214.928 173.72 li
216.352 172.8 li
216.888 172.8 li
216.888 178.32 li
217.904 178.32 li
217.904 178.736 li
215.088 178.736 li
215.088 178.736 li
cp
ef
221.776 178.84 mo
221.136 178.84 220.64 178.576 220.289 178.048 cv
219.936 177.521 219.76 176.784 219.76 175.824 cv
219.76 174.872 219.936 174.128 220.289 173.6 cv
220.64 173.072 221.136 172.8 221.776 172.8 cv
222.409 172.8 222.904 173.072 223.256 173.6 cv
223.608 174.128 223.792 174.872 223.792 175.824 cv
223.792 176.784 223.608 177.521 223.256 178.048 cv
222.904 178.576 222.409 178.84 221.776 178.84 cv
221.776 178.84 li
cp
221.776 178.464 mo
222.176 178.464 222.472 178.248 222.672 177.808 cv
222.865 177.376 222.968 176.712 222.968 175.824 cv
222.968 174.944 222.865 174.28 222.672 173.84 cv
222.472 173.408 222.176 173.184 221.776 173.184 cv
221.376 173.184 221.072 173.408 220.88 173.84 cv
220.68 174.28 220.584 174.944 220.584 175.824 cv
220.584 176.712 220.68 177.376 220.88 177.808 cv
221.072 178.248 221.376 178.464 221.776 178.464 cv
ef
366.352 151.17 mo
362.352 151.17 li
226.852 151.17 mo
230.852 151.17 li
@
195.36 151.192 mo
200.369 151.192 li
200.369 151.824 li
195.36 151.824 li
195.36 151.192 li
195.36 151.192 li
cp
ef
203.776 154.12 mo
203.136 154.12 202.64 153.856 202.289 153.328 cv
201.936 152.8 201.76 152.064 201.76 151.104 cv
201.76 150.152 201.936 149.408 202.289 148.88 cv
202.64 148.352 203.136 148.08 203.776 148.08 cv
204.409 148.08 204.904 148.352 205.256 148.88 cv
205.608 149.408 205.792 150.152 205.792 151.104 cv
205.792 152.064 205.608 152.8 205.256 153.328 cv
204.904 153.856 204.409 154.12 203.776 154.12 cv
203.776 154.12 li
cp
203.776 153.744 mo
204.176 153.744 204.472 153.528 204.672 153.088 cv
204.865 152.656 204.968 151.992 204.968 151.104 cv
204.968 150.224 204.865 149.56 204.672 149.12 cv
204.472 148.688 204.176 148.464 203.776 148.464 cv
203.376 148.464 203.072 148.688 202.88 149.12 cv
202.68 149.56 202.584 150.224 202.584 151.104 cv
202.584 151.992 202.68 152.656 202.88 153.088 cv
203.072 153.528 203.376 153.744 203.776 153.744 cv
ef
207.264 153.608 mo
207.264 153.464 207.312 153.344 207.409 153.24 cv
207.504 153.144 207.632 153.088 207.785 153.088 cv
207.928 153.088 208.048 153.144 208.152 153.24 cv
208.249 153.344 208.304 153.464 208.304 153.608 cv
208.304 153.752 208.249 153.88 208.152 153.976 cv
208.048 154.072 207.928 154.12 207.785 154.12 cv
207.632 154.12 207.504 154.072 207.409 153.976 cv
207.312 153.88 207.264 153.76 207.264 153.608 cv
207.264 153.608 li
cp
ef
211.457 154.12 mo
210.816 154.12 210.32 153.856 209.968 153.328 cv
209.617 152.8 209.44 152.064 209.44 151.104 cv
209.44 150.152 209.617 149.408 209.968 148.88 cv
210.32 148.352 210.816 148.08 211.457 148.08 cv
212.088 148.08 212.584 148.352 212.936 148.88 cv
213.289 149.408 213.472 150.152 213.472 151.104 cv
213.472 152.064 213.289 152.8 212.936 153.328 cv
212.584 153.856 212.088 154.12 211.457 154.12 cv
211.457 154.12 li
cp
211.457 153.744 mo
211.856 153.744 212.152 153.528 212.352 153.088 cv
212.544 152.656 212.648 151.992 212.648 151.104 cv
212.648 150.224 212.544 149.56 212.352 149.12 cv
212.152 148.688 211.856 148.464 211.457 148.464 cv
211.056 148.464 210.752 148.688 210.56 149.12 cv
210.36 149.56 210.264 150.224 210.264 151.104 cv
210.264 151.992 210.36 152.656 210.56 153.088 cv
210.752 153.528 211.056 153.744 211.457 153.744 cv
ef
216.497 154.12 mo
215.856 154.12 215.36 153.856 215.008 153.328 cv
214.656 152.8 214.48 152.064 214.48 151.104 cv
214.48 150.152 214.656 149.408 215.008 148.88 cv
215.36 148.352 215.856 148.08 216.497 148.08 cv
217.128 148.08 217.625 148.352 217.976 148.88 cv
218.329 149.408 218.512 150.152 218.512 151.104 cv
218.512 152.064 218.329 152.8 217.976 153.328 cv
217.625 153.856 217.128 154.12 216.497 154.12 cv
216.497 154.12 li
cp
216.497 153.744 mo
216.896 153.744 217.192 153.528 217.392 153.088 cv
217.584 152.656 217.688 151.992 217.688 151.104 cv
217.688 150.224 217.584 149.56 217.392 149.12 cv
217.192 148.688 216.896 148.464 216.497 148.464 cv
216.096 148.464 215.792 148.688 215.6 149.12 cv
215.4 149.56 215.304 150.224 215.304 151.104 cv
215.304 151.992 215.4 152.656 215.6 153.088 cv
215.792 153.528 216.096 153.744 216.497 153.744 cv
ef
222.8 149.592 mo
222.8 149.24 222.705 148.96 222.528 148.76 cv
222.344 148.568 222.096 148.464 221.776 148.464 cv
221.457 148.464 221.201 148.568 221.024 148.76 cv
220.84 148.96 220.752 149.24 220.752 149.592 cv
220.752 149.952 220.84 150.232 221.024 150.424 cv
221.201 150.624 221.457 150.72 221.776 150.72 cv
222.096 150.72 222.344 150.624 222.528 150.424 cv
222.705 150.232 222.8 149.952 222.8 149.592 cv
222.8 149.592 li
cp
222.376 150.912 mo
222.816 150.976 223.161 151.136 223.409 151.4 cv
223.656 151.672 223.785 152.008 223.785 152.424 cv
223.785 152.968 223.608 153.392 223.264 153.68 cv
222.913 153.976 222.417 154.12 221.776 154.12 cv
221.128 154.12 220.632 153.976 220.289 153.68 cv
219.936 153.392 219.768 152.968 219.768 152.424 cv
219.768 152.008 219.888 151.672 220.136 151.4 cv
220.384 151.136 220.728 150.976 221.176 150.912 cv
220.776 150.848 220.48 150.696 220.272 150.464 cv
220.064 150.24 219.96 149.944 219.96 149.592 cv
219.96 149.128 220.121 148.76 220.44 148.488 cv
220.76 148.216 221.208 148.08 221.776 148.08 cv
222.336 148.08 222.785 148.216 223.104 148.488 cv
223.424 148.76 223.592 149.128 223.592 149.592 cv
223.592 149.944 223.48 150.24 223.272 150.464 cv
223.064 150.696 222.76 150.848 222.376 150.912 cv
222.96 152.424 mo
222.96 152.008 222.856 151.688 222.648 151.456 cv
222.44 151.224 222.144 151.104 221.776 151.104 cv
221.4 151.104 221.112 151.224 220.904 151.456 cv
220.696 151.688 220.592 152.008 220.592 152.424 cv
220.592 152.84 220.696 153.168 220.904 153.4 cv
221.112 153.632 221.4 153.744 221.776 153.744 cv
222.144 153.744 222.44 153.632 222.648 153.4 cv
222.856 153.168 222.96 152.84 222.96 152.424 cv
ef
366.352 126.484 mo
362.352 126.484 li
226.852 126.484 mo
230.852 126.484 li
@
195.36 126.472 mo
200.369 126.472 li
200.369 127.104 li
195.36 127.104 li
195.36 126.472 li
195.36 126.472 li
cp
ef
203.776 129.4 mo
203.136 129.4 202.64 129.136 202.289 128.608 cv
201.936 128.08 201.76 127.344 201.76 126.384 cv
201.76 125.432 201.936 124.688 202.289 124.16 cv
202.64 123.632 203.136 123.36 203.776 123.36 cv
204.409 123.36 204.904 123.632 205.256 124.16 cv
205.608 124.688 205.792 125.432 205.792 126.384 cv
205.792 127.344 205.608 128.08 205.256 128.608 cv
204.904 129.136 204.409 129.4 203.776 129.4 cv
203.776 129.4 li
cp
203.776 129.024 mo
204.176 129.024 204.472 128.808 204.672 128.368 cv
204.865 127.937 204.968 127.272 204.968 126.384 cv
204.968 125.504 204.865 124.84 204.672 124.4 cv
204.472 123.968 204.176 123.744 203.776 123.744 cv
203.376 123.744 203.072 123.968 202.88 124.4 cv
202.68 124.84 202.584 125.504 202.584 126.384 cv
202.584 127.272 202.68 127.937 202.88 128.368 cv
203.072 128.808 203.376 129.024 203.776 129.024 cv
ef
207.024 128.888 mo
207.024 128.744 207.072 128.624 207.168 128.521 cv
207.264 128.424 207.392 128.368 207.544 128.368 cv
207.688 128.368 207.808 128.424 207.913 128.521 cv
208.008 128.624 208.064 128.744 208.064 128.888 cv
208.064 129.032 208.008 129.16 207.913 129.256 cv
207.808 129.352 207.688 129.4 207.544 129.4 cv
207.392 129.4 207.264 129.352 207.168 129.256 cv
207.072 129.16 207.024 129.04 207.024 128.888 cv
207.024 128.888 li
cp
ef
211.457 129.4 mo
210.816 129.4 210.32 129.136 209.968 128.608 cv
209.617 128.08 209.44 127.344 209.44 126.384 cv
209.44 125.432 209.617 124.688 209.968 124.16 cv
210.32 123.632 210.816 123.36 211.457 123.36 cv
212.088 123.36 212.584 123.632 212.936 124.16 cv
213.289 124.688 213.472 125.432 213.472 126.384 cv
213.472 127.344 213.289 128.08 212.936 128.608 cv
212.584 129.136 212.088 129.4 211.457 129.4 cv
211.457 129.4 li
cp
211.457 129.024 mo
211.856 129.024 212.152 128.808 212.352 128.368 cv
212.544 127.937 212.648 127.272 212.648 126.384 cv
212.648 125.504 212.544 124.84 212.352 124.4 cv
212.152 123.968 211.856 123.744 211.457 123.744 cv
211.056 123.744 210.752 123.968 210.56 124.4 cv
210.36 124.84 210.264 125.504 210.264 126.384 cv
210.264 127.272 210.36 127.937 210.56 128.368 cv
210.752 128.808 211.056 129.024 211.457 129.024 cv
ef
216.497 129.4 mo
215.856 129.4 215.36 129.136 215.008 128.608 cv
214.656 128.08 214.48 127.344 214.48 126.384 cv
214.48 125.432 214.656 124.688 215.008 124.16 cv
215.36 123.632 215.856 123.36 216.497 123.36 cv
217.128 123.36 217.625 123.632 217.976 124.16 cv
218.329 124.688 218.512 125.432 218.512 126.384 cv
218.512 127.344 218.329 128.08 217.976 128.608 cv
217.625 129.136 217.128 129.4 216.497 129.4 cv
216.497 129.4 li
cp
216.497 129.024 mo
216.896 129.024 217.192 128.808 217.392 128.368 cv
217.584 127.937 217.688 127.272 217.688 126.384 cv
217.688 125.504 217.584 124.84 217.392 124.4 cv
217.192 123.968 216.896 123.744 216.497 123.744 cv
216.096 123.744 215.792 123.968 215.6 124.4 cv
215.4 124.84 215.304 125.504 215.304 126.384 cv
215.304 127.272 215.4 127.937 215.6 128.368 cv
215.792 128.808 216.096 129.024 216.497 129.024 cv
ef
220.336 126.088 mo
220.512 125.896 220.712 125.744 220.936 125.648 cv
221.161 125.552 221.409 125.504 221.696 125.504 cv
222.272 125.504 222.736 125.68 223.072 126.032 cv
223.409 126.384 223.577 126.856 223.577 127.456 cv
223.577 128.048 223.392 128.521 223.033 128.872 cv
222.665 129.224 222.184 129.4 221.577 129.4 cv
220.92 129.4 220.409 129.16 220.056 128.672 cv
219.705 128.184 219.528 127.48 219.528 126.568 cv
219.528 125.552 219.736 124.76 220.152 124.2 cv
220.568 123.64 221.161 123.36 221.928 123.36 cv
222.136 123.36 222.352 123.384 222.577 123.416 cv
222.8 123.456 223.033 123.512 223.272 123.592 cv
223.272 124.552 li
222.833 124.552 li
222.8 124.296 222.696 124.096 222.528 123.952 cv
222.36 123.816 222.136 123.744 221.848 123.744 cv
221.336 123.744 220.96 123.937 220.712 124.32 cv
220.464 124.704 220.336 125.296 220.336 126.088 cv
220.336 126.088 li
cp
221.608 129.024 mo
221.976 129.024 222.256 128.896 222.457 128.624 cv
222.648 128.352 222.752 127.968 222.752 127.456 cv
222.752 126.952 222.648 126.568 222.457 126.296 cv
222.256 126.024 221.976 125.888 221.608 125.888 cv
221.232 125.888 220.944 126.024 220.752 126.28 cv
220.56 126.544 220.464 126.92 220.464 127.408 cv
220.464 127.928 220.56 128.328 220.76 128.608 cv
220.953 128.888 221.24 129.024 221.608 129.024 cv
ef
366.352 101.799 mo
362.352 101.799 li
226.852 101.799 mo
230.852 101.799 li
@
195.36 101.992 mo
200.369 101.992 li
200.369 102.624 li
195.36 102.624 li
195.36 101.992 li
195.36 101.992 li
cp
ef
203.776 104.92 mo
203.136 104.92 202.64 104.656 202.289 104.128 cv
201.936 103.6 201.76 102.864 201.76 101.904 cv
201.76 100.952 201.936 100.208 202.289 99.6797 cv
202.64 99.1523 203.136 98.8799 203.776 98.8799 cv
204.409 98.8799 204.904 99.1523 205.256 99.6797 cv
205.608 100.208 205.792 100.952 205.792 101.904 cv
205.792 102.864 205.608 103.6 205.256 104.128 cv
204.904 104.656 204.409 104.92 203.776 104.92 cv
203.776 104.92 li
cp
203.776 104.544 mo
204.176 104.544 204.472 104.328 204.672 103.888 cv
204.865 103.456 204.968 102.792 204.968 101.904 cv
204.968 101.024 204.865 100.36 204.672 99.9199 cv
204.472 99.4883 204.176 99.2637 203.776 99.2637 cv
203.376 99.2637 203.072 99.4883 202.88 99.9199 cv
202.68 100.36 202.584 101.024 202.584 101.904 cv
202.584 102.792 202.68 103.456 202.88 103.888 cv
203.072 104.328 203.376 104.544 203.776 104.544 cv
ef
207.024 104.408 mo
207.024 104.264 207.072 104.144 207.168 104.04 cv
207.264 103.944 207.392 103.888 207.544 103.888 cv
207.688 103.888 207.808 103.944 207.913 104.04 cv
208.008 104.144 208.064 104.264 208.064 104.408 cv
208.064 104.552 208.008 104.68 207.913 104.776 cv
207.808 104.872 207.688 104.92 207.544 104.92 cv
207.392 104.92 207.264 104.872 207.168 104.776 cv
207.072 104.68 207.024 104.56 207.024 104.408 cv
207.024 104.408 li
cp
ef
211.457 104.92 mo
210.816 104.92 210.32 104.656 209.968 104.128 cv
209.617 103.6 209.44 102.864 209.44 101.904 cv
209.44 100.952 209.617 100.208 209.968 99.6797 cv
210.32 99.1523 210.816 98.8799 211.457 98.8799 cv
212.088 98.8799 212.584 99.1523 212.936 99.6797 cv
213.289 100.208 213.472 100.952 213.472 101.904 cv
213.472 102.864 213.289 103.6 212.936 104.128 cv
212.584 104.656 212.088 104.92 211.457 104.92 cv
211.457 104.92 li
cp
211.457 104.544 mo
211.856 104.544 212.152 104.328 212.352 103.888 cv
212.544 103.456 212.648 102.792 212.648 101.904 cv
212.648 101.024 212.544 100.36 212.352 99.9199 cv
212.152 99.4883 211.856 99.2637 211.457 99.2637 cv
211.056 99.2637 210.752 99.4883 210.56 99.9199 cv
210.36 100.36 210.264 101.024 210.264 101.904 cv
210.264 102.792 210.36 103.456 210.56 103.888 cv
210.752 104.328 211.056 104.544 211.457 104.544 cv
ef
216.497 104.92 mo
215.856 104.92 215.36 104.656 215.008 104.128 cv
214.656 103.6 214.48 102.864 214.48 101.904 cv
214.48 100.952 214.656 100.208 215.008 99.6797 cv
215.36 99.1523 215.856 98.8799 216.497 98.8799 cv
217.128 98.8799 217.625 99.1523 217.976 99.6797 cv
218.329 100.208 218.512 100.952 218.512 101.904 cv
218.512 102.864 218.329 103.6 217.976 104.128 cv
217.625 104.656 217.128 104.92 216.497 104.92 cv
216.497 104.92 li
cp
216.497 104.544 mo
216.896 104.544 217.192 104.328 217.392 103.888 cv
217.584 103.456 217.688 102.792 217.688 101.904 cv
217.688 101.024 217.584 100.36 217.392 99.9199 cv
217.192 99.4883 216.896 99.2637 216.497 99.2637 cv
216.096 99.2637 215.792 99.4883 215.6 99.9199 cv
215.4 100.36 215.304 101.024 215.304 101.904 cv
215.304 102.792 215.4 103.456 215.6 103.888 cv
215.792 104.328 216.096 104.544 216.497 104.544 cv
ef
223.504 104.816 mo
220.848 104.816 li
220.848 104.4 li
221.785 104.4 li
221.785 103.256 li
219.24 103.256 li
219.24 102.832 li
221.792 98.8799 li
222.568 98.8799 li
222.568 102.84 li
223.68 102.84 li
223.68 103.256 li
222.568 103.256 li
222.568 104.4 li
223.504 104.4 li
223.504 104.816 li
223.504 104.816 li
cp
221.785 102.84 mo
221.785 99.7363 li
219.792 102.84 li
221.785 102.84 li
ef
366.352 77.1133 mo
362.352 77.1133 li
226.852 77.1133 mo
230.852 77.1133 li
@
195.6 77.272 mo
200.608 77.272 li
200.608 77.9038 li
195.6 77.9038 li
195.6 77.272 li
195.6 77.272 li
cp
ef
204.016 80.2002 mo
203.376 80.2002 202.88 79.936 202.528 79.4082 cv
202.176 78.8799 202 78.144 202 77.1841 cv
202 76.2319 202.176 75.4883 202.528 74.96 cv
202.88 74.4321 203.376 74.1602 204.016 74.1602 cv
204.648 74.1602 205.144 74.4321 205.497 74.96 cv
205.848 75.4883 206.033 76.2319 206.033 77.1841 cv
206.033 78.144 205.848 78.8799 205.497 79.4082 cv
205.144 79.936 204.648 80.2002 204.016 80.2002 cv
204.016 80.2002 li
cp
204.016 79.8242 mo
204.417 79.8242 204.712 79.6079 204.913 79.168 cv
205.104 78.7358 205.208 78.0723 205.208 77.1841 cv
205.208 76.3042 205.104 75.6401 204.913 75.2002 cv
204.712 74.7681 204.417 74.5439 204.016 74.5439 cv
203.617 74.5439 203.312 74.7681 203.121 75.2002 cv
202.92 75.6401 202.825 76.3042 202.825 77.1841 cv
202.825 78.0723 202.92 78.7358 203.121 79.168 cv
203.312 79.6079 203.617 79.8242 204.016 79.8242 cv
ef
207.504 79.688 mo
207.504 79.5439 207.552 79.4238 207.648 79.3198 cv
207.745 79.2241 207.873 79.168 208.024 79.168 cv
208.168 79.168 208.289 79.2241 208.392 79.3198 cv
208.488 79.4238 208.544 79.5439 208.544 79.688 cv
208.544 79.832 208.488 79.96 208.392 80.0562 cv
208.289 80.1519 208.168 80.2002 208.024 80.2002 cv
207.873 80.2002 207.745 80.1519 207.648 80.0562 cv
207.552 79.96 207.504 79.8398 207.504 79.688 cv
207.504 79.688 li
cp
ef
211.696 80.2002 mo
211.056 80.2002 210.56 79.936 210.208 79.4082 cv
209.856 78.8799 209.68 78.144 209.68 77.1841 cv
209.68 76.2319 209.856 75.4883 210.208 74.96 cv
210.56 74.4321 211.056 74.1602 211.696 74.1602 cv
212.329 74.1602 212.825 74.4321 213.176 74.96 cv
213.528 75.4883 213.712 76.2319 213.712 77.1841 cv
213.712 78.144 213.528 78.8799 213.176 79.4082 cv
212.825 79.936 212.329 80.2002 211.696 80.2002 cv
211.696 80.2002 li
cp
211.696 79.8242 mo
212.096 79.8242 212.392 79.6079 212.592 79.168 cv
212.785 78.7358 212.888 78.0723 212.888 77.1841 cv
212.888 76.3042 212.785 75.6401 212.592 75.2002 cv
212.392 74.7681 212.096 74.5439 211.696 74.5439 cv
211.296 74.5439 210.993 74.7681 210.8 75.2002 cv
210.6 75.6401 210.504 76.3042 210.504 77.1841 cv
210.504 78.0723 210.6 78.7358 210.8 79.168 cv
210.993 79.6079 211.296 79.8242 211.696 79.8242 cv
ef
216.736 80.2002 mo
216.096 80.2002 215.6 79.936 215.249 79.4082 cv
214.896 78.8799 214.72 78.144 214.72 77.1841 cv
214.72 76.2319 214.896 75.4883 215.249 74.96 cv
215.6 74.4321 216.096 74.1602 216.736 74.1602 cv
217.369 74.1602 217.865 74.4321 218.216 74.96 cv
218.568 75.4883 218.752 76.2319 218.752 77.1841 cv
218.752 78.144 218.568 78.8799 218.216 79.4082 cv
217.865 79.936 217.369 80.2002 216.736 80.2002 cv
216.736 80.2002 li
cp
216.736 79.8242 mo
217.136 79.8242 217.432 79.6079 217.632 79.168 cv
217.825 78.7358 217.928 78.0723 217.928 77.1841 cv
217.928 76.3042 217.825 75.6401 217.632 75.2002 cv
217.432 74.7681 217.136 74.5439 216.736 74.5439 cv
216.336 74.5439 216.033 74.7681 215.84 75.2002 cv
215.64 75.6401 215.544 76.3042 215.544 77.1841 cv
215.544 78.0723 215.64 78.7358 215.84 79.168 cv
216.033 79.6079 216.336 79.8242 216.736 79.8242 cv
ef
220.497 75.6563 mo
220.056 75.6563 li
220.056 74.6162 li
220.329 74.4722 220.608 74.3599 220.896 74.2803 cv
221.176 74.2002 221.457 74.1602 221.728 74.1602 cv
222.336 74.1602 222.816 74.312 223.168 74.6001 cv
223.52 74.896 223.696 75.2959 223.696 75.7998 cv
223.696 76.376 223.296 77.0562 222.497 77.8481 cv
222.432 77.9121 222.392 77.9521 222.36 77.9839 cv
220.888 79.4561 li
223.32 79.4561 li
223.32 78.7358 li
223.776 78.7358 li
223.776 80.0962 li
220.016 80.0962 li
220.016 79.6719 li
221.785 77.9038 li
222.168 77.52 222.449 77.1602 222.617 76.832 cv
222.785 76.5039 222.873 76.1602 222.873 75.7998 cv
222.873 75.4082 222.768 75.104 222.56 74.8799 cv
222.352 74.6563 222.072 74.5439 221.72 74.5439 cv
221.344 74.5439 221.056 74.6401 220.856 74.8242 cv
220.648 75.0078 220.528 75.2881 220.497 75.6563 cv
220.497 75.6563 li
cp
ef
366.352 52.4272 mo
362.352 52.4272 li
226.852 52.4272 mo
230.852 52.4272 li
@
203.537 55.48 mo
202.896 55.48 202.4 55.2158 202.048 54.688 cv
201.696 54.1602 201.52 53.4238 201.52 52.4639 cv
201.52 51.5122 201.696 50.7681 202.048 50.2402 cv
202.4 49.7119 202.896 49.4399 203.537 49.4399 cv
204.168 49.4399 204.665 49.7119 205.016 50.2402 cv
205.369 50.7681 205.552 51.5122 205.552 52.4639 cv
205.552 53.4238 205.369 54.1602 205.016 54.688 cv
204.665 55.2158 204.168 55.48 203.537 55.48 cv
203.537 55.48 li
cp
203.537 55.104 mo
203.936 55.104 204.232 54.8882 204.432 54.4482 cv
204.625 54.0161 204.728 53.3521 204.728 52.4639 cv
204.728 51.584 204.625 50.9199 204.432 50.48 cv
204.232 50.0479 203.936 49.8242 203.537 49.8242 cv
203.136 49.8242 202.833 50.0479 202.64 50.48 cv
202.44 50.9199 202.344 51.584 202.344 52.4639 cv
202.344 53.3521 202.44 54.0161 202.64 54.4482 cv
202.833 54.8882 203.136 55.104 203.537 55.104 cv
ef
206.785 54.9678 mo
206.785 54.8242 206.833 54.7041 206.928 54.6001 cv
207.024 54.5039 207.152 54.4482 207.304 54.4482 cv
207.449 54.4482 207.568 54.5039 207.672 54.6001 cv
207.768 54.7041 207.825 54.8242 207.825 54.9678 cv
207.825 55.1118 207.768 55.2402 207.672 55.3359 cv
207.568 55.4321 207.449 55.48 207.304 55.48 cv
207.152 55.48 207.024 55.4321 206.928 55.3359 cv
206.833 55.2402 206.785 55.1201 206.785 54.9678 cv
206.785 54.9678 li
cp
ef
211.216 55.48 mo
210.577 55.48 210.081 55.2158 209.728 54.688 cv
209.376 54.1602 209.201 53.4238 209.201 52.4639 cv
209.201 51.5122 209.376 50.7681 209.728 50.2402 cv
210.081 49.7119 210.577 49.4399 211.216 49.4399 cv
211.848 49.4399 212.344 49.7119 212.696 50.2402 cv
213.048 50.7681 213.232 51.5122 213.232 52.4639 cv
213.232 53.4238 213.048 54.1602 212.696 54.688 cv
212.344 55.2158 211.848 55.48 211.216 55.48 cv
211.216 55.48 li
cp
211.216 55.104 mo
211.617 55.104 211.913 54.8882 212.112 54.4482 cv
212.304 54.0161 212.409 53.3521 212.409 52.4639 cv
212.409 51.584 212.304 50.9199 212.112 50.48 cv
211.913 50.0479 211.617 49.8242 211.216 49.8242 cv
210.816 49.8242 210.512 50.0479 210.32 50.48 cv
210.121 50.9199 210.024 51.584 210.024 52.4639 cv
210.024 53.3521 210.121 54.0161 210.32 54.4482 cv
210.512 54.8882 210.816 55.104 211.216 55.104 cv
ef
216.256 55.48 mo
215.617 55.48 215.121 55.2158 214.768 54.688 cv
214.417 54.1602 214.24 53.4238 214.24 52.4639 cv
214.24 51.5122 214.417 50.7681 214.768 50.2402 cv
215.121 49.7119 215.617 49.4399 216.256 49.4399 cv
216.888 49.4399 217.384 49.7119 217.736 50.2402 cv
218.088 50.7681 218.272 51.5122 218.272 52.4639 cv
218.272 53.4238 218.088 54.1602 217.736 54.688 cv
217.384 55.2158 216.888 55.48 216.256 55.48 cv
216.256 55.48 li
cp
216.256 55.104 mo
216.656 55.104 216.953 54.8882 217.152 54.4482 cv
217.344 54.0161 217.449 53.3521 217.449 52.4639 cv
217.449 51.584 217.344 50.9199 217.152 50.48 cv
216.953 50.0479 216.656 49.8242 216.256 49.8242 cv
215.856 49.8242 215.552 50.0479 215.36 50.48 cv
215.161 50.9199 215.064 51.584 215.064 52.4639 cv
215.064 53.3521 215.161 54.0161 215.36 54.4482 cv
215.552 54.8882 215.856 55.104 216.256 55.104 cv
ef
221.296 55.48 mo
220.656 55.48 220.161 55.2158 219.808 54.688 cv
219.457 54.1602 219.28 53.4238 219.28 52.4639 cv
219.28 51.5122 219.457 50.7681 219.808 50.2402 cv
220.161 49.7119 220.656 49.4399 221.296 49.4399 cv
221.928 49.4399 222.424 49.7119 222.776 50.2402 cv
223.128 50.7681 223.312 51.5122 223.312 52.4639 cv
223.312 53.4238 223.128 54.1602 222.776 54.688 cv
222.424 55.2158 221.928 55.48 221.296 55.48 cv
221.296 55.48 li
cp
221.296 55.104 mo
221.696 55.104 221.993 54.8882 222.192 54.4482 cv
222.384 54.0161 222.488 53.3521 222.488 52.4639 cv
222.488 51.584 222.384 50.9199 222.192 50.48 cv
221.993 50.0479 221.696 49.8242 221.296 49.8242 cv
220.896 49.8242 220.592 50.0479 220.4 50.48 cv
220.201 50.9199 220.104 51.584 220.104 52.4639 cv
220.104 53.3521 220.201 54.0161 220.4 54.4482 cv
220.592 54.8882 220.896 55.104 221.296 55.104 cv
ef
366.352 27.7422 mo
362.352 27.7422 li
226.852 27.7422 mo
230.852 27.7422 li
@
203.776 30.7598 mo
203.136 30.7598 202.64 30.4961 202.289 29.9678 cv
201.936 29.4399 201.76 28.7041 201.76 27.7441 cv
201.76 26.792 201.936 26.0479 202.289 25.52 cv
202.64 24.9922 203.136 24.7202 203.776 24.7202 cv
204.409 24.7202 204.904 24.9922 205.256 25.52 cv
205.608 26.0479 205.792 26.792 205.792 27.7441 cv
205.792 28.7041 205.608 29.4399 205.256 29.9678 cv
204.904 30.4961 204.409 30.7598 203.776 30.7598 cv
203.776 30.7598 li
cp
203.776 30.3838 mo
204.176 30.3838 204.472 30.168 204.672 29.728 cv
204.865 29.2959 204.968 28.6318 204.968 27.7441 cv
204.968 26.8643 204.865 26.2002 204.672 25.7598 cv
204.472 25.3281 204.176 25.104 203.776 25.104 cv
203.376 25.104 203.072 25.3281 202.88 25.7598 cv
202.68 26.2002 202.584 26.8643 202.584 27.7441 cv
202.584 28.6318 202.68 29.2959 202.88 29.728 cv
203.072 30.168 203.376 30.3838 203.776 30.3838 cv
ef
207.024 30.248 mo
207.024 30.104 207.072 29.9839 207.168 29.8799 cv
207.264 29.7842 207.392 29.728 207.544 29.728 cv
207.688 29.728 207.808 29.7842 207.913 29.8799 cv
208.008 29.9839 208.064 30.104 208.064 30.248 cv
208.064 30.3921 208.008 30.52 207.913 30.6162 cv
207.808 30.7119 207.688 30.7598 207.544 30.7598 cv
207.392 30.7598 207.264 30.7119 207.168 30.6162 cv
207.072 30.52 207.024 30.3999 207.024 30.248 cv
207.024 30.248 li
cp
ef
211.457 30.7598 mo
210.816 30.7598 210.32 30.4961 209.968 29.9678 cv
209.617 29.4399 209.44 28.7041 209.44 27.7441 cv
209.44 26.792 209.617 26.0479 209.968 25.52 cv
210.32 24.9922 210.816 24.7202 211.457 24.7202 cv
212.088 24.7202 212.584 24.9922 212.936 25.52 cv
213.289 26.0479 213.472 26.792 213.472 27.7441 cv
213.472 28.7041 213.289 29.4399 212.936 29.9678 cv
212.584 30.4961 212.088 30.7598 211.457 30.7598 cv
211.457 30.7598 li
cp
211.457 30.3838 mo
211.856 30.3838 212.152 30.168 212.352 29.728 cv
212.544 29.2959 212.648 28.6318 212.648 27.7441 cv
212.648 26.8643 212.544 26.2002 212.352 25.7598 cv
212.152 25.3281 211.856 25.104 211.457 25.104 cv
211.056 25.104 210.752 25.3281 210.56 25.7598 cv
210.36 26.2002 210.264 26.8643 210.264 27.7441 cv
210.264 28.6318 210.36 29.2959 210.56 29.728 cv
210.752 30.168 211.056 30.3838 211.457 30.3838 cv
ef
216.497 30.7598 mo
215.856 30.7598 215.36 30.4961 215.008 29.9678 cv
214.656 29.4399 214.48 28.7041 214.48 27.7441 cv
214.48 26.792 214.656 26.0479 215.008 25.52 cv
215.36 24.9922 215.856 24.7202 216.497 24.7202 cv
217.128 24.7202 217.625 24.9922 217.976 25.52 cv
218.329 26.0479 218.512 26.792 218.512 27.7441 cv
218.512 28.7041 218.329 29.4399 217.976 29.9678 cv
217.625 30.4961 217.128 30.7598 216.497 30.7598 cv
216.497 30.7598 li
cp
216.497 30.3838 mo
216.896 30.3838 217.192 30.168 217.392 29.728 cv
217.584 29.2959 217.688 28.6318 217.688 27.7441 cv
217.688 26.8643 217.584 26.2002 217.392 25.7598 cv
217.192 25.3281 216.896 25.104 216.497 25.104 cv
216.096 25.104 215.792 25.3281 215.6 25.7598 cv
215.4 26.2002 215.304 26.8643 215.304 27.7441 cv
215.304 28.6318 215.4 29.2959 215.6 29.728 cv
215.792 30.168 216.096 30.3838 216.497 30.3838 cv
ef
220.016 26.2158 mo
219.577 26.2158 li
219.577 25.1758 li
219.848 25.0322 220.128 24.9199 220.417 24.8398 cv
220.696 24.7598 220.976 24.7202 221.249 24.7202 cv
221.856 24.7202 222.336 24.8721 222.688 25.1602 cv
223.041 25.4561 223.216 25.856 223.216 26.3599 cv
223.216 26.936 222.816 27.6162 222.016 28.4082 cv
221.953 28.4722 221.913 28.5122 221.88 28.5439 cv
220.409 30.0161 li
222.84 30.0161 li
222.84 29.2959 li
223.296 29.2959 li
223.296 30.6563 li
219.537 30.6563 li
219.537 30.2319 li
221.304 28.4639 li
221.688 28.0801 221.968 27.7202 222.136 27.3921 cv
222.304 27.064 222.392 26.7202 222.392 26.3599 cv
222.392 25.9678 222.289 25.6641 222.081 25.4399 cv
221.873 25.2158 221.592 25.104 221.24 25.104 cv
220.865 25.104 220.577 25.2002 220.376 25.3838 cv
220.168 25.5679 220.048 25.8481 220.016 26.2158 cv
220.016 26.2158 li
cp
ef
366.352 3.05615 mo
362.352 3.05615 li
226.852 3.05615 mo
230.852 3.05615 li
@
203.296 6.04004 mo
202.656 6.04004 202.161 5.77588 201.808 5.24805 cv
201.457 4.72021 201.28 3.98389 201.28 3.02393 cv
201.28 2.07227 201.457 1.32813 201.808 .799805 cv
202.161 .271973 202.656 0 203.296 0 cv
203.928 0 204.424 .271973 204.776 .799805 cv
205.128 1.32813 205.312 2.07227 205.312 3.02393 cv
205.312 3.98389 205.128 4.72021 204.776 5.24805 cv
204.424 5.77588 203.928 6.04004 203.296 6.04004 cv
203.296 6.04004 li
cp
203.296 5.66406 mo
203.696 5.66406 203.993 5.44824 204.192 5.00781 cv
204.384 4.57617 204.488 3.91211 204.488 3.02393 cv
204.488 2.14404 204.384 1.47998 204.192 1.04004 cv
203.993 .60791 203.696 .383789 203.296 .383789 cv
202.896 .383789 202.592 .60791 202.4 1.04004 cv
202.201 1.47998 202.104 2.14404 202.104 3.02393 cv
202.104 3.91211 202.201 4.57617 202.4 5.00781 cv
202.592 5.44824 202.896 5.66406 203.296 5.66406 cv
ef
206.785 5.52783 mo
206.785 5.38379 206.833 5.26416 206.928 5.16016 cv
207.024 5.06396 207.152 5.00781 207.304 5.00781 cv
207.449 5.00781 207.568 5.06396 207.672 5.16016 cv
207.768 5.26416 207.825 5.38379 207.825 5.52783 cv
207.825 5.67188 207.768 5.7998 207.672 5.896 cv
207.568 5.99219 207.449 6.04004 207.304 6.04004 cv
207.152 6.04004 207.024 5.99219 206.928 5.896 cv
206.833 5.7998 206.785 5.68018 206.785 5.52783 cv
206.785 5.52783 li
cp
ef
210.976 6.04004 mo
210.336 6.04004 209.84 5.77588 209.488 5.24805 cv
209.136 4.72021 208.96 3.98389 208.96 3.02393 cv
208.96 2.07227 209.136 1.32813 209.488 .799805 cv
209.84 .271973 210.336 0 210.976 0 cv
211.608 0 212.104 .271973 212.457 .799805 cv
212.808 1.32813 212.993 2.07227 212.993 3.02393 cv
212.993 3.98389 212.808 4.72021 212.457 5.24805 cv
212.104 5.77588 211.608 6.04004 210.976 6.04004 cv
210.976 6.04004 li
cp
210.976 5.66406 mo
211.376 5.66406 211.672 5.44824 211.873 5.00781 cv
212.064 4.57617 212.168 3.91211 212.168 3.02393 cv
212.168 2.14404 212.064 1.47998 211.873 1.04004 cv
211.672 .60791 211.376 .383789 210.976 .383789 cv
210.577 .383789 210.272 .60791 210.081 1.04004 cv
209.88 1.47998 209.785 2.14404 209.785 3.02393 cv
209.785 3.91211 209.88 4.57617 210.081 5.00781 cv
210.272 5.44824 210.577 5.66406 210.976 5.66406 cv
ef
216.016 6.04004 mo
215.376 6.04004 214.88 5.77588 214.528 5.24805 cv
214.176 4.72021 214 3.98389 214 3.02393 cv
214 2.07227 214.176 1.32813 214.528 .799805 cv
214.88 .271973 215.376 0 216.016 0 cv
216.648 0 217.144 .271973 217.497 .799805 cv
217.848 1.32813 218.033 2.07227 218.033 3.02393 cv
218.033 3.98389 217.848 4.72021 217.497 5.24805 cv
217.144 5.77588 216.648 6.04004 216.016 6.04004 cv
216.016 6.04004 li
cp
216.016 5.66406 mo
216.417 5.66406 216.712 5.44824 216.913 5.00781 cv
217.104 4.57617 217.208 3.91211 217.208 3.02393 cv
217.208 2.14404 217.104 1.47998 216.913 1.04004 cv
216.712 .60791 216.417 .383789 216.016 .383789 cv
215.617 .383789 215.312 .60791 215.121 1.04004 cv
214.92 1.47998 214.825 2.14404 214.825 3.02393 cv
214.825 3.91211 214.92 4.57617 215.121 5.00781 cv
215.312 5.44824 215.617 5.66406 216.016 5.66406 cv
ef
223.264 5.93604 mo
220.608 5.93604 li
220.608 5.52002 li
221.544 5.52002 li
221.544 4.37598 li
219 4.37598 li
219 3.95215 li
221.552 0 li
222.329 0 li
222.329 3.95996 li
223.44 3.95996 li
223.44 4.37598 li
222.329 4.37598 li
222.329 5.52002 li
223.264 5.52002 li
223.264 5.93604 li
223.264 5.93604 li
cp
221.544 3.95996 mo
221.544 .855957 li
219.552 3.95996 li
221.544 3.95996 li
ef
1.5 lw
2 lc
226.852 175.856 mo
226.852 3.05615 li
226.852 175.856 mo
366.352 175.856 li
366.352 175.856 mo
366.352 3.05615 li
226.852 3.05615 mo
366.352 3.05615 li
@
247.732 23.876 mo
247.732 23.6841 247.768 23.4199 247.852 23.084 cv
247.924 22.7358 248.02 22.376 248.14 21.9922 cv
248.26 21.6079 248.356 21.2959 248.44 21.0439 cv
248.464 20.6479 248.488 20.3481 248.488 20.144 cv
248.488 19.6279 248.428 19.1479 248.333 18.7041 cv
248.236 18.2598 248.044 17.8882 247.756 17.5879 cv
247.468 17.2998 247.084 17.144 246.581 17.144 cv
246.316 17.144 246.052 17.2041 245.789 17.312 cv
245.524 17.4321 245.296 17.5879 245.104 17.792 cv
244.913 17.9961 244.792 18.2241 244.72 18.4761 cv
244.696 18.5239 244.672 18.5479 244.625 18.5479 cv
244.48 18.5479 li
244.409 18.5479 244.384 18.5122 244.384 18.4399 cv
244.384 18.4038 li
244.468 18.0439 244.625 17.6958 244.852 17.3599 cv
245.081 17.0239 245.356 16.7598 245.692 16.5439 cv
246.028 16.3398 246.376 16.2319 246.749 16.2319 cv
247.121 16.2319 247.444 16.3643 247.72 16.6162 cv
247.984 16.8799 248.201 17.2041 248.369 17.5879 cv
248.537 17.9722 248.656 18.3682 248.728 18.7642 cv
248.8 19.1719 248.836 19.5439 248.836 19.8921 cv
249.245 18.7998 249.688 17.7681 250.192 16.7842 cv
250.373 16.3999 li
250.396 16.376 250.42 16.3643 250.457 16.3643 cv
250.6 16.3643 li
250.661 16.3643 250.696 16.3999 250.696 16.4722 cv
250.696 16.4961 250.684 16.52 250.672 16.5439 cv
250.493 16.916 li
250.132 17.6118 249.82 18.3198 249.533 19.0278 cv
249.245 19.7358 248.993 20.4199 248.789 21.0801 cv
248.752 21.356 248.692 21.7158 248.608 22.1841 cv
248.512 22.6401 248.404 23.0723 248.285 23.48 cv
248.165 23.8882 248.033 24.0918 247.913 24.1162 cv
247.792 24.1162 247.732 24.0322 247.732 23.876 cv
247.732 23.876 li
cp
ef
251.104 24.2842 mo
251.104 24.2598 251.104 24.2358 251.117 24.2358 cv
255.292 12.6802 li
255.304 12.6318 255.329 12.5962 255.376 12.5723 cv
255.413 12.5479 255.46 12.5361 255.508 12.5361 cv
255.581 12.5361 255.628 12.5601 255.676 12.6079 cv
255.724 12.6563 255.749 12.7041 255.749 12.7759 cv
255.749 12.8242 li
251.572 24.3799 li
251.524 24.4761 251.44 24.5239 251.344 24.5239 cv
251.272 24.5239 251.224 24.5 251.176 24.4521 cv
251.128 24.4038 251.104 24.3442 251.104 24.2842 cv
251.104 24.2842 li
cp
ef
257.884 21.6563 mo
257.428 21.6563 257.092 21.5 256.9 21.1641 cv
256.696 20.8398 256.6 20.4321 256.6 19.9521 cv
256.6 19.6401 256.625 19.3398 256.684 19.0278 cv
256.732 18.728 256.816 18.416 256.936 18.104 cv
257.056 17.792 257.188 17.5039 257.333 17.228 cv
257.476 16.9639 257.644 16.7002 257.836 16.436 cv
257.873 16.3882 257.92 16.3643 257.98 16.3643 cv
258.028 16.3643 258.064 16.3882 258.1 16.4121 cv
258.125 16.4482 258.148 16.4839 258.148 16.52 cv
258.148 16.5679 258.136 16.604 258.112 16.6401 cv
257.38 17.6479 257.02 18.5723 257.02 19.4121 cv
257.02 19.7842 257.104 20.0962 257.272 20.3599 cv
257.44 20.624 257.692 20.7559 258.052 20.7559 cv
258.34 20.7559 258.617 20.6719 258.88 20.4922 cv
259.132 20.3242 259.36 20.0962 259.552 19.8198 cv
259.552 19.6758 259.577 19.46 259.625 19.1602 cv
259.672 18.8721 259.745 18.6079 259.852 18.3682 cv
259.949 18.1401 260.081 18.02 260.224 18.02 cv
260.404 18.02 260.5 18.1279 260.5 18.3442 cv
260.5 18.4761 260.464 18.6318 260.417 18.8242 cv
260.369 19.0161 260.308 19.1841 260.249 19.3521 cv
260.176 19.52 260.104 19.7002 260.008 19.9038 cv
260.104 20.48 260.38 20.7559 260.86 20.7559 cv
261.136 20.7559 261.413 20.6841 261.701 20.5161 cv
261.976 20.3599 262.216 20.1563 262.432 19.8921 cv
262.648 19.6279 262.816 19.3521 262.936 19.0518 cv
263.056 18.752 263.128 18.4639 263.128 18.188 cv
263.128 17.9482 263.081 17.7681 263.008 17.624 cv
262.936 17.4922 262.829 17.3481 262.708 17.2041 cv
262.588 17.0601 262.528 16.9399 262.528 16.8442 cv
262.528 16.688 262.588 16.5439 262.72 16.4121 cv
262.852 16.292 262.997 16.2202 263.152 16.2202 cv
263.344 16.2202 263.476 16.3159 263.56 16.4961 cv
263.644 16.6758 263.692 16.8799 263.692 17.0962 cv
263.692 17.4678 263.608 17.936 263.464 18.4883 cv
263.32 19.04 263.152 19.5078 262.972 19.8799 cv
262.708 20.3838 262.384 20.8159 262 21.1519 cv
261.617 21.4883 261.172 21.6563 260.692 21.6563 cv
260.38 21.6563 260.128 21.5601 259.936 21.3921 cv
259.745 21.2119 259.625 20.96 259.577 20.6362 cv
259.348 20.9482 259.096 21.2002 258.808 21.3799 cv
258.52 21.5601 258.22 21.6563 257.884 21.6563 cv
257.884 21.6563 li
cp
ef
264.855 23.6563 mo
264.855 23.8999 264.914 24.1099 265.04 24.2778 cv
265.166 24.4458 265.342 24.5303 265.578 24.5303 cv
265.914 24.5303 266.233 24.4546 266.543 24.3032 cv
266.846 24.1519 267.098 23.9336 267.292 23.665 cv
267.308 23.6479 267.325 23.6396 267.358 23.6396 cv
267.383 23.6396 267.409 23.6563 267.442 23.6899 cv
267.467 23.7236 267.484 23.749 267.484 23.7739 cv
267.484 23.7993 267.476 23.8159 267.467 23.8242 cv
267.266 24.1099 266.989 24.3369 266.644 24.4966 cv
266.292 24.6563 265.93 24.7402 265.561 24.7402 cv
265.292 24.7402 265.048 24.6729 264.846 24.5552 cv
264.645 24.4375 264.486 24.2695 264.376 24.0513 cv
264.258 23.8413 264.208 23.5977 264.208 23.3286 cv
264.208 22.9507 264.309 22.5728 264.519 22.2031 cv
264.729 21.8335 265.006 21.5313 265.359 21.2959 cv
265.711 21.061 266.082 20.9434 266.468 20.9434 cv
266.72 20.9434 266.947 21.0103 267.148 21.1279 cv
267.35 21.2539 267.451 21.4307 267.451 21.6655 cv
267.451 21.8169 267.4 21.9512 267.316 22.0605 cv
267.224 22.1694 267.106 22.2202 266.955 22.2202 cv
266.863 22.2202 266.787 22.1948 266.728 22.1362 cv
266.661 22.0854 266.636 22.0098 266.636 21.9175 cv
266.636 21.7832 266.678 21.6738 266.779 21.5815 cv
266.871 21.4893 266.98 21.439 267.115 21.439 cv
267.131 21.439 li
267.064 21.3467 266.963 21.2793 266.846 21.229 cv
266.72 21.187 266.594 21.1616 266.459 21.1616 cv
266.132 21.1616 265.846 21.3042 265.603 21.5815 cv
265.351 21.8672 265.166 22.2031 265.04 22.5898 cv
264.914 22.9761 264.855 23.3374 264.855 23.6563 cv
264.855 23.6563 li
cp
ef
269.077 19.5654 mo
269.077 19.4482 269.119 19.3472 269.219 19.2466 cv
269.32 19.1538 269.429 19.1035 269.547 19.1035 cv
269.639 19.1035 269.715 19.1372 269.783 19.1958 cv
269.841 19.2549 269.875 19.3306 269.875 19.4146 cv
269.875 19.5405 269.825 19.6494 269.723 19.7422 cv
269.623 19.8428 269.513 19.8848 269.396 19.8848 cv
269.303 19.8848 269.228 19.8594 269.169 19.7925 cv
269.102 19.7334 269.077 19.6582 269.077 19.5654 cv
269.077 19.5654 li
cp
268.127 24.0513 mo
268.127 23.9502 268.144 23.8413 268.195 23.7236 cv
268.875 21.9175 li
268.942 21.7158 268.984 21.5479 268.984 21.4136 cv
268.984 21.2456 268.917 21.1616 268.799 21.1616 cv
268.582 21.1616 268.396 21.2793 268.253 21.5059 cv
268.102 21.7412 268.001 21.9932 267.934 22.2705 cv
267.917 22.3042 267.901 22.3208 267.867 22.3208 cv
267.766 22.3208 li
267.716 22.3208 267.699 22.2954 267.699 22.2451 cv
267.699 22.2202 li
267.783 21.8838 267.926 21.5898 268.111 21.3296 cv
268.295 21.0776 268.531 20.9434 268.816 20.9434 cv
269.018 20.9434 269.186 21.0103 269.32 21.145 cv
269.455 21.2793 269.53 21.439 269.53 21.6406 cv
269.53 21.7495 269.505 21.8589 269.463 21.9678 cv
268.783 23.7739 li
268.699 23.959 268.666 24.127 268.666 24.2778 cv
268.666 24.4458 268.724 24.5303 268.858 24.5303 cv
269.077 24.5303 269.253 24.4126 269.404 24.1772 cv
269.547 23.9419 269.648 23.6899 269.715 23.4214 cv
269.723 23.3877 269.749 23.3706 269.783 23.3706 cv
269.883 23.3706 li
269.9 23.3706 269.917 23.3794 269.933 23.396 cv
269.951 23.4131 269.958 23.4297 269.958 23.4463 cv
269.958 23.4551 269.951 23.4634 269.951 23.4717 cv
269.867 23.791 269.732 24.085 269.547 24.3452 cv
269.354 24.6143 269.119 24.7402 268.841 24.7402 cv
268.64 24.7402 268.472 24.6729 268.337 24.5469 cv
268.195 24.4126 268.127 24.2529 268.127 24.0513 cv
ef
352.661 17.1563 mo
351.701 16.7241 350.98 16.0518 350.5 15.1401 cv
350.02 14.228 349.781 13.064 349.781 11.6719 cv
349.781 10.2803 350.02 9.12793 350.5 8.2041 cv
350.98 7.28027 351.701 6.60791 352.661 6.17578 cv
352.661 6.75195 li
352.06 7.17188 351.628 7.75977 351.365 8.50391 cv
351.1 9.25977 350.968 10.3159 350.968 11.6719 cv
350.968 13.04 351.1 14.0962 351.365 14.8398 cv
351.628 15.584 352.06 16.1602 352.661 16.5801 cv
352.661 17.1563 li
352.661 17.1563 li
cp
ef
356.092 12.4883 mo
356.092 13.2441 356.236 13.8198 356.524 14.2041 cv
356.812 14.6001 357.22 14.792 357.772 14.792 cv
358.325 14.792 358.732 14.5762 359.02 14.1318 cv
359.308 13.7002 359.453 13.04 359.453 12.1758 cv
359.453 11.312 359.308 10.6641 359.02 10.2319 cv
358.732 9.7998 358.325 9.57227 357.772 9.57227 cv
357.22 9.57227 356.812 9.77588 356.524 10.1719 cv
356.236 10.5679 356.092 11.1318 356.092 11.876 cv
356.092 12.4883 li
356.092 12.4883 li
cp
355.012 14.6719 mo
355.012 6.7998 li
353.98 6.7998 li
353.98 6.17578 li
356.092 6.17578 li
356.092 10.04 li
356.296 9.65625 356.56 9.36816 356.896 9.17578 cv
357.22 8.99609 357.628 8.8999 358.108 8.8999 cv
358.876 8.8999 359.5 9.21191 359.98 9.81201 cv
360.46 10.4121 360.712 11.2041 360.712 12.1758 cv
360.712 13.1602 360.46 13.9521 359.98 14.5518 cv
359.5 15.1519 358.876 15.4521 358.108 15.4521 cv
357.628 15.4521 357.22 15.356 356.896 15.188 cv
356.56 15.0078 356.296 14.7202 356.092 14.3242 cv
356.092 15.2959 li
353.98 15.2959 li
353.98 14.6719 li
355.012 14.6719 li
ef
362.165 17.1563 mo
362.165 16.5801 li
362.764 16.1602 363.196 15.584 363.46 14.8398 cv
363.724 14.0962 363.856 13.04 363.856 11.6719 cv
363.856 10.3159 363.724 9.25977 363.46 8.50391 cv
363.196 7.75977 362.764 7.17188 362.165 6.75195 cv
362.165 6.17578 li
363.112 6.60791 363.833 7.28027 364.312 8.2041 cv
364.792 9.12793 365.044 10.2803 365.044 11.6719 cv
365.044 13.064 364.792 14.228 364.312 15.1401 cv
363.833 16.0518 363.112 16.7241 362.165 17.1563 cv
362.165 17.1563 li
cp
ef
296.352 170.856 mo
361.352 170.856 li
361.352 124.919 li
296.352 124.919 li
296.352 170.856 li
296.352 170.856 li
cp
0 0 0 0 cmyk
f
1 lw
296.352 170.856 mo
361.352 170.856 li
361.352 124.919 li
296.352 124.919 li
296.352 170.856 li
296.352 170.856 li
cp
0 0 0 1 cmyk
@
1.5 lw
303.352 133.013 mo
317.352 133.013 li
.883665 .769161 0 0 cmyk
@
329.203 136.086 mo
329.203 136.046 329.203 136.016 329.212 135.996 cv
329.962 133.016 li
330.002 132.836 330.033 132.666 330.033 132.526 cv
330.033 132.246 329.932 132.096 329.743 132.096 cv
329.533 132.096 329.373 132.226 329.272 132.476 cv
329.172 132.726 329.072 133.036 328.982 133.416 cv
328.982 133.437 328.972 133.456 328.953 133.466 cv
328.932 133.476 328.913 133.476 328.902 133.476 cv
328.783 133.476 li
328.762 133.476 328.743 133.466 328.722 133.446 cv
328.703 133.426 328.703 133.396 328.703 133.376 cv
328.772 133.086 328.842 132.836 328.913 132.636 cv
328.972 132.437 329.083 132.256 329.222 132.086 cv
329.362 131.926 329.533 131.836 329.752 131.836 cv
329.993 131.836 330.212 131.916 330.413 132.076 cv
330.602 132.236 330.703 132.437 330.703 132.676 cv
330.902 132.416 331.132 132.216 331.402 132.066 cv
331.663 131.916 331.953 131.836 332.252 131.836 cv
332.482 131.836 332.682 131.886 332.862 131.966 cv
333.033 132.046 333.163 132.176 333.262 132.336 cv
333.362 132.496 333.413 132.696 333.413 132.916 cv
333.413 133.196 333.342 133.526 333.222 133.906 cv
333.102 134.296 332.953 134.726 332.772 135.206 cv
332.672 135.426 332.632 135.626 332.632 135.806 cv
332.632 136.006 332.703 136.106 332.862 136.106 cv
333.123 136.106 333.333 135.966 333.512 135.687 cv
333.682 135.406 333.802 135.106 333.882 134.786 cv
333.892 134.746 333.922 134.726 333.962 134.726 cv
334.083 134.726 li
334.102 134.726 334.123 134.736 334.142 134.756 cv
334.163 134.776 334.172 134.796 334.172 134.816 cv
334.172 134.826 334.163 134.836 334.163 134.846 cv
334.072 135.226 333.913 135.576 333.692 135.886 cv
333.462 136.206 333.182 136.356 332.842 136.356 cv
332.602 136.356 332.402 136.276 332.243 136.126 cv
332.072 135.966 331.993 135.776 331.993 135.536 cv
331.993 135.416 332.012 135.286 332.072 135.146 cv
332.152 134.926 332.243 134.666 332.352 134.366 cv
332.462 134.066 332.552 133.786 332.623 133.506 cv
332.692 133.226 332.732 132.986 332.732 132.766 cv
332.732 132.586 332.692 132.426 332.612 132.296 cv
332.533 132.166 332.413 132.096 332.232 132.096 cv
331.982 132.096 331.752 132.156 331.552 132.256 cv
331.352 132.366 331.172 132.506 331.022 132.687 cv
330.862 132.866 330.722 133.076 330.602 133.316 cv
329.922 136.036 li
329.902 136.136 329.852 136.206 329.772 136.266 cv
329.692 136.326 329.602 136.356 329.502 136.356 cv
329.422 136.356 329.352 136.326 329.292 136.286 cv
329.232 136.246 329.203 136.176 329.203 136.086 cv
329.203 136.086 li
cp
0 0 0 1 cmyk
ef
336.862 132.986 mo
336.802 132.986 336.762 132.966 336.722 132.926 cv
336.682 132.886 336.672 132.846 336.672 132.786 cv
336.672 132.746 336.682 132.696 336.722 132.656 cv
336.762 132.616 336.802 132.586 336.862 132.586 cv
343.142 132.586 li
343.182 132.586 343.222 132.616 343.262 132.656 cv
343.302 132.696 343.322 132.746 343.322 132.786 cv
343.322 132.846 343.302 132.886 343.262 132.926 cv
343.222 132.966 343.182 132.986 343.142 132.986 cv
336.862 132.986 li
336.862 132.986 li
cp
336.862 134.926 mo
336.802 134.926 336.762 134.906 336.722 134.866 cv
336.682 134.826 336.672 134.776 336.672 134.726 cv
336.672 134.676 336.682 134.626 336.722 134.586 cv
336.762 134.546 336.802 134.526 336.862 134.526 cv
343.142 134.526 li
343.182 134.526 343.222 134.546 343.262 134.586 cv
343.302 134.626 343.322 134.676 343.322 134.726 cv
343.322 134.776 343.302 134.826 343.262 134.866 cv
343.222 134.906 343.182 134.926 343.142 134.926 cv
336.862 134.926 li
ef
347.012 136.216 mo
347.382 136.216 347.663 136.026 347.842 135.646 cv
348.022 135.266 348.132 134.846 348.172 134.386 cv
348.212 133.926 348.243 133.426 348.243 132.906 cv
348.243 132.406 348.212 131.946 348.172 131.526 cv
348.132 131.106 348.022 130.716 347.842 130.376 cv
347.663 130.036 347.382 129.856 347.012 129.856 cv
346.632 129.856 346.352 130.036 346.172 130.376 cv
345.993 130.716 345.873 131.106 345.833 131.526 cv
345.792 131.946 345.772 132.406 345.772 132.906 cv
345.772 133.286 345.772 133.636 345.792 133.956 cv
345.812 134.286 345.862 134.626 345.942 134.976 cv
346.022 135.326 346.142 135.616 346.322 135.856 cv
346.493 136.096 346.722 136.216 347.012 136.216 cv
347.012 136.216 li
cp
347.012 136.466 mo
346.192 136.466 345.632 136.136 345.342 135.466 cv
345.042 134.796 344.902 133.996 344.902 133.066 cv
344.902 132.486 344.953 131.946 345.062 131.437 cv
345.163 130.926 345.373 130.496 345.692 130.136 cv
346.002 129.776 346.442 129.596 347.012 129.596 cv
347.453 129.596 347.812 129.706 348.092 129.916 cv
348.373 130.136 348.583 130.406 348.732 130.746 cv
348.873 131.086 348.972 131.456 349.033 131.846 cv
349.083 132.236 349.112 132.646 349.112 133.066 cv
349.112 133.646 349.052 134.176 348.953 134.676 cv
348.842 135.176 348.632 135.606 348.322 135.946 cv
348.012 136.286 347.572 136.466 347.012 136.466 cv
ef
303.352 147.685 mo
317.352 147.685 li
.873045 .242161 1 .129244 cmyk
@
329.203 150.726 mo
329.203 150.687 329.203 150.656 329.212 150.636 cv
329.962 147.656 li
330.002 147.476 330.033 147.306 330.033 147.166 cv
330.033 146.886 329.932 146.736 329.743 146.736 cv
329.533 146.736 329.373 146.866 329.272 147.116 cv
329.172 147.366 329.072 147.676 328.982 148.056 cv
328.982 148.076 328.972 148.096 328.953 148.106 cv
328.932 148.116 328.913 148.116 328.902 148.116 cv
328.783 148.116 li
328.762 148.116 328.743 148.106 328.722 148.086 cv
328.703 148.066 328.703 148.036 328.703 148.016 cv
328.772 147.726 328.842 147.476 328.913 147.276 cv
328.972 147.076 329.083 146.896 329.222 146.726 cv
329.362 146.566 329.533 146.476 329.752 146.476 cv
329.993 146.476 330.212 146.556 330.413 146.716 cv
330.602 146.876 330.703 147.076 330.703 147.316 cv
330.902 147.056 331.132 146.856 331.402 146.706 cv
331.663 146.556 331.953 146.476 332.252 146.476 cv
332.482 146.476 332.682 146.526 332.862 146.606 cv
333.033 146.687 333.163 146.816 333.262 146.976 cv
333.362 147.136 333.413 147.336 333.413 147.556 cv
333.413 147.836 333.342 148.166 333.222 148.546 cv
333.102 148.937 332.953 149.366 332.772 149.846 cv
332.672 150.066 332.632 150.266 332.632 150.446 cv
332.632 150.646 332.703 150.746 332.862 150.746 cv
333.123 150.746 333.333 150.606 333.512 150.326 cv
333.682 150.046 333.802 149.746 333.882 149.426 cv
333.892 149.386 333.922 149.366 333.962 149.366 cv
334.083 149.366 li
334.102 149.366 334.123 149.376 334.142 149.396 cv
334.163 149.416 334.172 149.437 334.172 149.456 cv
334.172 149.466 334.163 149.476 334.163 149.486 cv
334.072 149.866 333.913 150.216 333.692 150.526 cv
333.462 150.846 333.182 150.996 332.842 150.996 cv
332.602 150.996 332.402 150.916 332.243 150.766 cv
332.072 150.606 331.993 150.416 331.993 150.176 cv
331.993 150.056 332.012 149.926 332.072 149.786 cv
332.152 149.566 332.243 149.306 332.352 149.006 cv
332.462 148.706 332.552 148.426 332.623 148.146 cv
332.692 147.866 332.732 147.626 332.732 147.406 cv
332.732 147.226 332.692 147.066 332.612 146.937 cv
332.533 146.806 332.413 146.736 332.232 146.736 cv
331.982 146.736 331.752 146.796 331.552 146.896 cv
331.352 147.006 331.172 147.146 331.022 147.326 cv
330.862 147.506 330.722 147.716 330.602 147.956 cv
329.922 150.676 li
329.902 150.776 329.852 150.846 329.772 150.906 cv
329.692 150.966 329.602 150.996 329.502 150.996 cv
329.422 150.996 329.352 150.966 329.292 150.926 cv
329.232 150.886 329.203 150.816 329.203 150.726 cv
329.203 150.726 li
cp
0 0 0 1 cmyk
ef
336.862 147.626 mo
336.802 147.626 336.762 147.606 336.722 147.566 cv
336.682 147.526 336.672 147.486 336.672 147.426 cv
336.672 147.386 336.682 147.336 336.722 147.296 cv
336.762 147.256 336.802 147.226 336.862 147.226 cv
343.142 147.226 li
343.182 147.226 343.222 147.256 343.262 147.296 cv
343.302 147.336 343.322 147.386 343.322 147.426 cv
343.322 147.486 343.302 147.526 343.262 147.566 cv
343.222 147.606 343.182 147.626 343.142 147.626 cv
336.862 147.626 li
336.862 147.626 li
cp
336.862 149.566 mo
336.802 149.566 336.762 149.546 336.722 149.506 cv
336.682 149.466 336.672 149.416 336.672 149.366 cv
336.672 149.316 336.682 149.266 336.722 149.226 cv
336.762 149.187 336.802 149.166 336.862 149.166 cv
343.142 149.166 li
343.182 149.166 343.222 149.187 343.262 149.226 cv
343.302 149.266 343.322 149.316 343.322 149.366 cv
343.322 149.416 343.302 149.466 343.262 149.506 cv
343.222 149.546 343.182 149.566 343.142 149.566 cv
336.862 149.566 li
ef
345.533 148.596 mo
345.472 148.596 345.432 148.576 345.392 148.536 cv
345.352 148.496 345.342 148.446 345.342 148.396 cv
345.342 148.356 345.352 148.306 345.392 148.266 cv
345.432 148.226 345.472 148.196 345.533 148.196 cv
351.272 148.196 li
351.322 148.196 351.362 148.226 351.402 148.266 cv
351.432 148.306 351.453 148.356 351.453 148.396 cv
351.453 148.446 351.432 148.496 351.402 148.536 cv
351.362 148.576 351.322 148.596 351.272 148.596 cv
345.533 148.596 li
345.533 148.596 li
cp
ef
353.123 150.896 mo
353.123 150.546 li
353.953 150.546 354.373 150.446 354.373 150.226 cv
354.373 144.976 li
354.022 145.146 353.583 145.226 353.062 145.226 cv
353.062 144.876 li
353.873 144.876 354.493 144.666 354.913 144.236 cv
355.052 144.236 li
355.072 144.236 355.102 144.246 355.123 144.266 cv
355.142 144.286 355.152 144.306 355.152 144.326 cv
355.152 150.226 li
355.152 150.446 355.562 150.546 356.402 150.546 cv
356.402 150.896 li
353.123 150.896 li
353.123 150.896 li
cp
ef
303.352 162.356 mo
317.352 162.356 li
0 .993988 1 0 cmyk
@
329.203 165.366 mo
329.203 165.326 329.203 165.296 329.212 165.276 cv
329.962 162.296 li
330.002 162.116 330.033 161.946 330.033 161.806 cv
330.033 161.526 329.932 161.376 329.743 161.376 cv
329.533 161.376 329.373 161.506 329.272 161.756 cv
329.172 162.006 329.072 162.316 328.982 162.696 cv
328.982 162.716 328.972 162.736 328.953 162.746 cv
328.932 162.756 328.913 162.756 328.902 162.756 cv
328.783 162.756 li
328.762 162.756 328.743 162.746 328.722 162.726 cv
328.703 162.706 328.703 162.676 328.703 162.656 cv
328.772 162.366 328.842 162.116 328.913 161.916 cv
328.972 161.716 329.083 161.536 329.222 161.366 cv
329.362 161.206 329.533 161.116 329.752 161.116 cv
329.993 161.116 330.212 161.196 330.413 161.356 cv
330.602 161.516 330.703 161.716 330.703 161.956 cv
330.902 161.696 331.132 161.496 331.402 161.346 cv
331.663 161.196 331.953 161.116 332.252 161.116 cv
332.482 161.116 332.682 161.166 332.862 161.246 cv
333.033 161.326 333.163 161.456 333.262 161.616 cv
333.362 161.776 333.413 161.976 333.413 162.196 cv
333.413 162.476 333.342 162.806 333.222 163.187 cv
333.102 163.576 332.953 164.006 332.772 164.486 cv
332.672 164.706 332.632 164.906 332.632 165.086 cv
332.632 165.286 332.703 165.386 332.862 165.386 cv
333.123 165.386 333.333 165.246 333.512 164.966 cv
333.682 164.687 333.802 164.386 333.882 164.066 cv
333.892 164.026 333.922 164.006 333.962 164.006 cv
334.083 164.006 li
334.102 164.006 334.123 164.016 334.142 164.036 cv
334.163 164.056 334.172 164.076 334.172 164.096 cv
334.172 164.106 334.163 164.116 334.163 164.126 cv
334.072 164.506 333.913 164.856 333.692 165.166 cv
333.462 165.486 333.182 165.636 332.842 165.636 cv
332.602 165.636 332.402 165.556 332.243 165.406 cv
332.072 165.246 331.993 165.056 331.993 164.816 cv
331.993 164.696 332.012 164.566 332.072 164.426 cv
332.152 164.206 332.243 163.946 332.352 163.646 cv
332.462 163.346 332.552 163.066 332.623 162.786 cv
332.692 162.506 332.732 162.266 332.732 162.046 cv
332.732 161.866 332.692 161.706 332.612 161.576 cv
332.533 161.446 332.413 161.376 332.232 161.376 cv
331.982 161.376 331.752 161.437 331.552 161.536 cv
331.352 161.646 331.172 161.786 331.022 161.966 cv
330.862 162.146 330.722 162.356 330.602 162.596 cv
329.922 165.316 li
329.902 165.416 329.852 165.486 329.772 165.546 cv
329.692 165.606 329.602 165.636 329.502 165.636 cv
329.422 165.636 329.352 165.606 329.292 165.566 cv
329.232 165.526 329.203 165.456 329.203 165.366 cv
329.203 165.366 li
cp
0 0 0 1 cmyk
ef
336.862 162.266 mo
336.802 162.266 336.762 162.246 336.722 162.206 cv
336.682 162.166 336.672 162.126 336.672 162.066 cv
336.672 162.026 336.682 161.976 336.722 161.937 cv
336.762 161.896 336.802 161.866 336.862 161.866 cv
343.142 161.866 li
343.182 161.866 343.222 161.896 343.262 161.937 cv
343.302 161.976 343.322 162.026 343.322 162.066 cv
343.322 162.126 343.302 162.166 343.262 162.206 cv
343.222 162.246 343.182 162.266 343.142 162.266 cv
336.862 162.266 li
336.862 162.266 li
cp
336.862 164.206 mo
336.802 164.206 336.762 164.187 336.722 164.146 cv
336.682 164.106 336.672 164.056 336.672 164.006 cv
336.672 163.956 336.682 163.906 336.722 163.866 cv
336.762 163.826 336.802 163.806 336.862 163.806 cv
343.142 163.806 li
343.182 163.806 343.222 163.826 343.262 163.866 cv
343.302 163.906 343.322 163.956 343.322 164.006 cv
343.322 164.056 343.302 164.106 343.262 164.146 cv
343.222 164.187 343.182 164.206 343.142 164.206 cv
336.862 164.206 li
ef
345.442 165.536 mo
345.442 165.187 li
346.272 165.187 346.692 165.086 346.692 164.866 cv
346.692 159.616 li
346.342 159.786 345.902 159.866 345.382 159.866 cv
345.382 159.516 li
346.192 159.516 346.812 159.306 347.232 158.876 cv
347.373 158.876 li
347.392 158.876 347.422 158.886 347.442 158.906 cv
347.462 158.926 347.472 158.946 347.472 158.966 cv
347.472 164.866 li
347.472 165.086 347.882 165.187 348.722 165.187 cv
348.722 165.536 li
345.442 165.536 li
345.442 165.536 li
cp
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.2%%For: (Troy Carter) ()%%Title: (no_n0_growthrates.eps)%%CreationDate: 6/4/12 10:56 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6pKHTJf.VGf_"V4=-=\P2Z6M@dWIZD'!<[4uD/;#s45V.Wg<Wq;Ulqh?0RM,0cfo_pfM\]cMSE=p99ma;gY]-"7dI2/rpOTJ%`A5n_>-[G$Cn%D?G.2Hln+fQm3D!;:[%*=SgT[BUPuF>44CR;eh2pU#Er5\0Zeju>G2(@9?E_jr[_'6'FQr6t.t(BDK0-L59tf4r%s!M)get,*(fts?[=D]n\eTU\nekaJ0:;VppnlYg-1gc9X5G.5se[0)GGZfG?<F5Bl/uTQ#e'!*?kN;M3r=g``^[-Bcm2k+<+3F9K%HG:!NJ=^-r91LoG@L#u`;U3c<7>AP]%*_\l(J01o8i^+=%4saCl`C*:kk2QqI\Y`1?XTGh[QC+hmKZ_(!^ojbGVZDRn?daWZ1//Q%Gu=V.1i*%N+f-`X3?::8o'(O7-%Qnti//iB/?!SX#"kqrQI^.8-UZ.YAO6b/HbcJ'rNA]h5HF&)HL7QcV5,\bqr`t=!F!U6-;!in%hDtINf"79N7NXZe0%lJt8*uXhP7WU7?Z"AUEYA1DG!B\lMd#kWh?RJ'2ntJ3X(dL$!5(CprE\mc=Ddcl8Z1FVBO?m.XsfH"7Zg_F%M1/=NZ=PM">6j+B84,jMehs@>g%f/1@!u,rD[%N^'_m+)D7h`0X/qie\C5<-\2"%Y=S.5FQ*Z/DD>lce0T<^&YIE-a5U]8qDEX/I%4$'8K>eG]Z[V?6sS78<(.r@RRMBF[VEii\9Q5d+6SG@*7pidfk;hBM!MP#WST=0`OV%UNMP,%"ahGmRgX/bf0[>Ic/V[NZ#!V$Tr%`);>@V$s,&j`T98QEb9XA)!qPp_QTV2O;3upkbh>,qN%GiKL)NhC4_o9XTb%X&['QVlNh1?`hahBTHkWBn'fSoI`>Ln"VYr-^MV(%i?sr.1%CCSHT35I`%j:rr5<Sr9$h3j9_aIZE('JX2,QE^RW1ajM;uUjGSS8PD,P,sp9><l$U:mi[>NQqJ$A+#`fu@F9)(uMUa)eN%VgYIkUTJ%P3KJCkq@?6Xq!\r4U)]u(VY;LZn1U*EnSo%;WmGBuI/&Q5E-.?Epdogm=7?kriV;o+Efis#V(6C)>N@Pi4m2CRGt.[$%WK*f'h)J^(aD(+JkHnU'?!9&I(G3K'@2U%*QV8A>5#"OAn)F-3'2)3u`plopctDk^bM_S^=YAB4G:;Qd$WO^J%!,S1dY9o_P!W`2%lNQH#V*"&bV)iI[dLCQK3Prg+qi7Ltla1j34M=Pjd@O:]Us_q^:2*(2W02X0IU-fgc_RjO>@#M5FE1rb8iN)`=8q]'=,+5^]3OJt%G56YOifqBZ?#&lCo)A3'Bta.1=dI,nr(F/dbl0$u^#T*gs3QJY5PHi0QceSS^#K$fs%JXUG5p!?Q:6:-(2qr:rsApUa8J[2'oV^n%qj7:TA]nY2`ViI0<@[XMqj7;GS:B%[,Ob,cns04:^Z]#AT;%T-*P\(TZWsWt9!p3aprt?+XQ]]#:W8QSHQ(TfO>]\r\l,d%J,Ctf%q,DO%<dDrkD%57>QEb;\55cck2>Gq`G5N$1V[8>K<cPLZD>3XoBUeQl=7Br!DIV@Br:I.$j#8G$6k0K08/[WH.4YRd(@8;&VM+Rd%cWaN*m6?V-<h.kqr'mMO0sM3TJJ,^N=gTcklE(6ETX@bXBhC*`arQsU([VNhM2n-e#W[o@b=nY0"F0ekl*N"TcWUo;!'/'>lTRU]%^j/JC;C't#hJ4Z4a6huC_XG,82L,+:X]QZK^VSdTEqEKa3A0ta%<*SqZnRqfhNNGR)RRL^eP^Lq?s6r6$PfU7UJFf[+L2%@dT6<%%`*,S;?.DXW2:s022cs3QcgX$p7VF>]>6Rs7FSO`E.4+b)@P8(=\ofPI1Q1=-$^Dd9[09UN/6Suji<Vt[-Im$;FX0uIUSY^FC(Mjs%MPWX(#Z]e%Ymt@PW'I=mRO'@b@:La*cFUA*j1m%HKaKqJ_;;sT;RF=<iSc]G<l0tSl*%mHMd#1n<?eOH-d#>,JGWp3A$]-GV6Dg4%!pDp"CFPc#CoerQ8a)p@^14hlp'l;n>GD%=A=']'?kPh!RJ7a@Q0]M+81LSBAUo`?_V7?PpdS-!qCI>[6#lReZrl:WnVr(O,iH"$%n"\+Tg3l,^[B#79'rOKS9:_CgXDO%<=pHKX/Q(1t*?QU$hki/a[=b9DPZl]dOd2TR'/#LJWcZIThi+iE=2%)793Wl2[7F4GBhT_O%NeV:j,h*UfIu\nl7%u1k%].,)S&ofP5`etHs'ls:3'm<dkT&/H]q_?D$p.k1..PqSW]@`S'!Jc:l8C'JQqWjG2rO[)[#Y,Db`\sk%1=U-gg._R#Foek1?%?j.;2>0E[TZQXKo+@nW\aJf\;fQl;rkcB?cbPc.[29UcRRLQ;@>7Z]``2;$8T)PKRO8R]'Qi4mf3&X='/VU%e4WU?i**&qa&9]5^K`8('g`l1S[<#GCk[g7VmN1e_.AVqUI_KhVcoA]60=6%-1ZPb+L)MT^?W@I8O9B0d&(=O.n#+\H4bE[.o=HA%g(8,]'2hCZ&1^ce/PsJfhJXA=\!p(&W6@#Fe5`i4[/n&8'(SOZg6S*XJNhf?T7Y#BVGKT/&D]eo&:#fgE_\G,Z+!R2cG>"K=-4k-%18sPK^T^ed:9f>Xb-=WFLNQUtfL;p8Q#s^4@/D6*(@hlJh'W(M0eK*3`SM3l;4\G:J[N(RK6k]p5.$Z"6%sah*O0J2GaiE"?(h$f%T,";8ifbK.2NGtfWP"pZ1**Z7*S;m,.8"gVPgl`'g/pR]AlCRga#)#?`p,jjN>1B@C/e(0>q%!VcI=ZtWFSI%S[Mr`2RPc6^/U,7%PA.JEm02q\Em-r)Zagmk]!*5B$"#n(Z7^us"5#m_]U#6$C(%)X/"?5CFV8ZrZgt9dA9aE8H\S:(XbnnmmL>PDC-$O0p-Wu!=JsSV%M`-Zl8I%g)MLp7"2B>8_<QVEONW\Fs+A'pIMg?N%EdYMg/Y7k&7B9$q7/aRY3/PneER^LZS7@N8VF,4O2amDi<ms)]K!_PbD^\CM%3b%G'Q,Sp'HjB1;-u0g[1\Amf%dBt7kQcNfd7FbO<j`;/^f7bi+qSi_qF,)=&Z:8nSDHO@0Ns`4.U$R2A#+V,Op'3>@2(5;7Z:Bj%"L:teNWE;>Nm2fG,rQ+*/1Ps=_?3``2hbF$P\d-UP<@2Ro"@FC*0E(AU(eqgVMH6dMB/o3'jW&kKlO[eTK6GY3.As\C_.IIeSd(p%7+tW$39^IkNY9hCZ<j6=8"=pf[ZM1,e3lG6l@FqBAn[]`X&?Q!AK9*#$%&[^gC?AWa0+*u`"5!uln=J;@[XJK"bNsm/KT3TX:Ddk%lm/mrb-Kb<N!M098i`sLkX*='1O2DpUsptnRM+DMRRN,'&04`hGmL[*\k9/k$G&X?0tnK8gpYBNNqA/5@l?`:'%Rj5IpF]BM02)*%em6F+/Hq=_(4ds(J$)4QF/I'AREfGAka65<QHCd2qK$86&5dL_ED^1F^`FQ>OZP&_O#GThTQueI(ZI/lg1QES>mnVg'V2X/HU@)0%b?mGC[7qtOY+;:FSb?0I</]2?`MmC6DsPnR'F9\8VI<.';,U4d@9/#cGa5$p=td?aHsXn[,lb3B,%$]rcmb4tGH.IrKQEGOop")p%l5L_D`TDc([2/$tNse"gldW=ofPc[W#FLUQF<9OAKA%t2"_]R"04@2cZj!Btlkj+LB)ciT_/6M$TnoWrV_punaqW[\qNMW#GGm$P%D(gaOk]h'9qFYXn\;s$_9`6qkehfPD=r(qP7V*%23m'.MY"CRhi\:FN[CBgf,c)8YPb%&?Q(r5Sc7"`E>emaM(#!:*B:s*]X;2b_%_DMY^fp3R1i]\+)2rgEf&RUk,6sH<)jBf[>q#INc.=9'AjVggl#,AL3%^+sj?l$jHKkN0&Gq&uV$AaOhh\F.&6@7i&h&.0,JsZ?[%7\U9-M`/140cHBtJaZjm.s/3o]YD]CUTAM9BmN6@k586)jT95>#!"'pY!QtKd+r2'3-q<dN").V8n-n<[$VTI2Clo/\-?,R-Pf'h%$c@=]-7Yo<GQJ=e1r2&;i!i?^,`n]R"(jM4V=DVJ[4.asnCOT]^L2F%7m.!YQV5D4ArHIl-^NulNP3r$e@nbl7dHrsi&6=LTE8W%%;#1XPbJrrH+7&*P8'`3?3YT"Td<Qm(fPWf>oM_K>&]__$X0Zf4rQeZ9i.23O1'pihnLoW0Ol,rU]Te*^@Eq(a)/*keO5(>+7I-UB%j8[n<dWi#YbNDr8r[h<CZ>=KKH]budT,n?L2TCS`(+@Ej0gt.Y@!;"T62VVKF5f@<=UcGbCPS/$jh\YDmPrU#16ZgfhH,2GlU2(0%*:<:K[M\K,kr3C;dXbU.mL?h6#@>i<Wq%Z&mZ,od!fmJjpo8qN*&fqAnrD2K.t^g9X).Lfj%,H\Z?UJIf1/FPZn<C#B6LcN`fO&q%Fk]8:B68f=)NW_G[e\Q85P^8VYJH0M\g&ecMB[B@CG"eAiV(+"_F6%YYZt0'qMDGj_4M4%("nieU7FYCWmdh@;L(*iTfju*O30)$%Fns&CAJj)3\W#_S]sJG+?rhnYa/susXp+I3as'k!qXXa@A,=L`[L]8q<2WdEA(f&n=G&Jq7V:GR#"MAS#C5$+"`gGl7%pW0c#Ym?%C!<MV(.UJhLF[qYj>dh"&rF(YUD5qg7c[@sFR[bj.bliDe"S/9MXK]I>,WO_)SF\t.PfU.a4CU<*pk2nODeFWY9efOa6mlBJGgg.%^bdQtK"72?f$Ud4[)2&@cjSq<7O?PVTC?Q."D3e[g90Ru5%l7/j!?nHi8;(5MX@ohmr9knJCXsO,coc_GH4%UM3$Eabhf7Q=n1Xh%q8g7]#.WKjnedMWBF0f#Ap^(K:Nto,i/m*t#M3%5[Znt53tE)!fPSm\8^YsHf85fLV4?2QX4=AsEW8J'9'<8<mOC)$W<rD)Sr*HH%Eg]1]]@U^(c4a3\qm:Rs]8?3<lNU*WJ\QKDFEUCQAl*r?E>0B<YId]sng!(ZK,o=i4,sI5h`MZXFk4kG:41<uU?1$?+3-d`\/OY>%8L1lN-?4KmHYg)^BnU][!iKA4XKbboG,IlJV^B$!?Y8VJfh1Q62e:?TV=l9SSF,jKR]"tbZi*A^3T%rLo6UGK6hd+6hiGfp.,ARq%:=.KF\RRdo2S\5%::L2Xfk\:0;tG^0p/=,&dB,Q!Z1Q/eTDEVY+[+.(\DPTH)uY)cf'"YQ<`Eqe](Inn#nN5lr,;M^jn`c)qrp:>%Y?"hVeXPrd:p"f8ep9pfXE?Vp<M)0bX]dYXXueK_2ZA:i25$(9[sK\mV=e`0!sBj0O<VCC+pnUb&i<SR^Sd"7HL%Eje4kF=4&2uu%f6@4QH\T/s@e[M/T"\mIRngBJ>>FSP1:`;(ruGsHOp>/</P;\PQ<40;98.9`?e5XL%W;AcrgR[VeXFb&>IW1/D`e7^&9-N@M;B1@%Yl=WLC,[*F:KO-@/#Tdm^[^*\TE!a5f0?$F6Ya7l=t_"S`4ELmD1?^_XX&>o?L-*4Sc/:4.=(>\W'>k;(2`E\9!n,rkoIukkl9J?%pJUg><r5*5nfti:Rf<QBYP-f=h_1esa0j6>H9%6TDgZ_9.'/5h5"S=4VLb8OY/,gu<.&QhIH\8(ioq'Ej)=^t%q#=OV>m?&.=IH[%FYBRui:?PDMH'V=b#@oAQ:g>6J+/e`"GZ?),F01E[:UEnK_568.<0;)q(-(+fDh$QaE'@i:7W/kDXc53@E'Hi-ZWU&Pbc)C>aHa_%Mi&o`oDc&<:m(3U8EHqV4GSZ#K?$+S%>'/G)UCs6>5)t+)^ZDZQ-Sj7m<PWR%8-0?Y'"+"c^6q\<mkpBH6'A2)9NjY9Okr_b$s%L%=jKZ""[r!qhaPI;s&%FLIQ*b/2cnqgTHA->4s1doE0s_P99j7o^M5pUqOsbVf11V:m?]luqu$'o.jd+Ehp5mB$EW/U$abOM(OZ7d%>4\3uYZ]H7mJbu`hJAn?X\j[qHgk2,f3X!Qj**a0XTO('\rGEB'=5Q%s+X;H+7I,I:+E?UAY.cuc'L&LI_V0T"T\XG)c,@>m-$48%2(7(+XnHLCcV]>p2`!A^OM!`rB6pV.`HH?P[af^-<qY$1M@+c4rqE_7*Q'!eaK9!*HiEI+gRnMsiH]m+MrTUkctkpre6h5"e7uJX%s#pMSh?W7SXUAlg9El%e[\j=$1RA&hitFrQ:J/G7b49JZ":9qG*II8J5QAbd@'A7.rr7ZK,6KrEIs7ON,]!Ee3@8[2s3l5W^W1Lr%278r`Ji'+MCX%?g['RIWo&7:=G^GKAFQD6X3#ha=%?'sE^mi@Saa$+h^M?C?%3!Ji]+9GPYl<@SD[M<`=#s])\,SUd)B?QN+TII7%R?CJXl/*h@J,a:h/U4/mb<>7Rgs(L508(E0HA,4coIG@E7_P;ZFR-VdpTJnSrE$\e_2(g(n,YOtb)9QTs4^=N?5idr;kr%01D,e?%fEd^a698X/-[f*4]m\MhlKQc@#M0C^0Yo[tN7lXp%AM@q<oY&%a9BK#LSddPc!mP%=e]hc+hDgML(U*)SL8>]&Tq.:g36^[oCfcN%k]N?%^Q3-c%jkuV`A3TQkuk]Fd6=<?Op4\9]`rYMgf9`5ZZjm&2prt#>kZQmYK*WXJpAOoAdmfJ#V!Fh_RJV@](K6X/Bg*J!X57q%h/>2TolM8mS#g/(hedkm"2mSYr7l+1da)b='`9oGXhV\Cq%Jo6/`J#2>-D<%Y5D:Lm^KgmVcpFXHKLZ7.'gja&sf'WD)75dRs3Z?%Sh<$Np(aYeg[4E#VtTJ5Xf@a:3.]VCdV!sM'jJ!-==HtRbcngEU1.c;d,*cd.f\lt$62q8%'bJ`CiiMb%E,bj?tkB#;H,)hr)'76%7>:8e<JbWeipnDm2;;L5r41D><l("8YR%ZMpC'soWn(qWhSH@V@^H4-XJKWf._sS:QinNsn5j&P6WA'QmKh-odDRJ_e`\lhnNH?m%qXs'MLr9c&Qs`)O=tfRK<ZBk$9`P$OSCaCfXVYlWFWd_7%p8)C6'gf\VC9lY@4("c&[ATC955<-[r*3mjso>i\_HO1rhnT+'kRYb%BON0I]C6s/;<:D(9m(^tAK+u`HhCJS6Em]OJjd\]@m>(Y[cE6rXpI\D.[4K36^dTV2j=%91(Xc]p3kQ!BVD6>/lc]5og7uH)-`Kt%gK-Ga?A>MVV5_RY`N@1a/5gd_Q_`9slem*J#N:)m`[Du4\8X.2m!*RNJm0p>FjNIYe)iE'E11rb0<V4H`BJ'##0BQqR?pYna1/sg%5^QeoF1#Vt7DablFQ'jh:7i,Gi@']H!Os+$Va"APk7<)(kr62m`U>#Rf+stud>_G;luI69s)h:jBmbE-h,jI/%jKjQ6sXpX'7o9D%[#5D]#1\5>5es%bFV4]:B#E"2m-7H]p[/TLk`sN&KS4;6(J>""A3upUFJm]@EV16Bhp%VEXt"^CHLfn\!/I<GWX,a$]<t\C;hM(!%oA@@9`XB0C57X?@R\/?jQhnmubbk!PmCqblV^k$mb3=3J&7I;25J`mqA;916N%@_cn<"CAF=X4gVp2k9e]W0n5!O)'deZW6oef5a%'amTkG?m/F46J'Jb<7_e2iIdR7@Nnal:oi?:=2F5IAt!@e3OB&8HBS*Bg4nYrQcBW8j27)+&n2M2W3hKUX+p<OsfI.fPABCYQkO/%E:ZIkR<f5WG[Gi>9cq&fZI>iJ(sbo>TX+T@Eh98Vr+5:YQi:-;8se8)_Ct/cq=C4+VfrO5^Qdq:5(D]Uh0.$3J;5mTdqX>b&2$!A%Fsh:_-90EBemYZI:9Qj?4nLno&hRI0r@d'PG(oXU]NEag64&MW.MUV5F$!XITE%`N@g%],bbnXR(K7IeCaY)hg8Vd9)m._8>g(rH%>iuBf_om./\im6/,Ts-4?O=kEbL^h0"]VYPH#Ip,LVnqPEe(moV9.-7HZ""J:8$q[hl@`&(1og.\rUMPJpgbl'4a4fj[(10/bN4t%FKj>kehfZi_+Z7Sjdt+f=&al,oj6[\'h?A@VjeoK3Pq)D6LSc"=qY0.5KSe>$SN*W\W1F=>^lq/ooae#4'h7U"Ra9S(3nWrO/XX\%64APdpqCR*ajFrW]!1D)XluL>'#bT-29<-lq^PLgO@+p4A.-<i:um>M1F(*N'V^UJOZN.29iepUGmSC-Mm9.MEX?K8ZDa-b@C[Su%6`;F+Y%LHZZ9tu]pO^6dg*l.@DDpe`0cih'!s/O;m(V;*kH2g'Yj?u_lsV_&pE$.S`*0n:r^p"AeIr(-YXjNQ_;f83X_ZKKnL_%e%&Ju1>ojQ#1b^i+'oU_[ZreT06R83ALmt;DR.mbmOOQjAYL\Y6gJ+gaO60uCW$OOi]1V06bDgk*V8g,LmrfSG/&T"Qcc)SSo^nU;m%Rf%JbgN[T.F"bd5pU)TU5D9em?"G/&-CBFh.eFo'V$4V<c]R7(e_b-0.S?AD\174Mq);YI$8..'4qQuO&$bm-'IA(P.:@RrCf?6C%o82;g-(RF9En"9pFu6"+;WfYKKoj77P.RkYd%"e5f:8[,+AfYb9;Z]<4>;UmdY5Ac3OB>g33W9\56<@hkVVUQTkprtXLk0ke&Hn'%c-q"5[JntU'c`#j^:4-KgCT#lUf`OB0CN'oRJsP#ZuaPsRM_)o"a@Pc(BgT\Zp5imK:rIHE^H')0"mP&dbC1&ktR,D[+ar:Dn==?%Mfi]n*TZ4T2N>0+YNYO^;4OD-@j7^jHq5Mn^?5fM+U''a>qnX/+N[$%gA>Q*!5,d)&d*"m]`PkC(1@MSjP=X,.hS(6pH>_dj"Joa%"+PW>*)JRdPt863jbDu)c)VLah:lj4@;_4#GuCR@?N_u#;tV+Y1*ES'e:<dAf)efSBb)HL2.#oGWtCLRW6sR-[l,Y&D?>t[*sQMU%GqqoIIP6u,lf&YDp;2)hDpQkTFVJ)^F_OeSD(][24lrO<da@X6epCcCDi2"&@o[Yhr,BB4)f+`i7DDrR[<FfXVp@89j]C\Ye%)M1%D4DL4R0@_W,I<Q*4%j-@9:I$hR>'[*41"kAJ6TcqF.&lneaq#Ud<.IU+rr+1IcG%31p:Oa$U;"idQ<'+Ps;XXPM_jEd8DRVf(cm`%?hmuERm0p;`P!eh51WB+Cq%$enPiWY*:IeffY(!pGPu0Wg:l+?.c%^@WI.p`\YsB[2P0$LK%XV8W&)=#%4F[NfBm=@jf=0Mb_if;%AX8p/k;Xq!Y>m@$O"YfkU%-OS/G+i0*86!(1i<$s^D3FeG6Ka\9m_*HO#s"6Q40aZ\XtB&F.6*>?_L`=BC.*Oe%6.[F/LJ#bheT[%0FiHcmTT(ZHe5V7UqCkGM<`LqT$1NAgHXi`Tp:sIR8Dn]j]hJn[()Z*&$>;sc(3([b6ZOpeil06Kf/_R]mkDopGL+6@dS"0f"Vt^%;IH71`pIJBUV#""Vu1CNU[+=T^$2Se;eRIrX?SW*2HNPdp4F8h>'niO6Q.hZVlt!!F^Lor$>EPQ\Ws0`j!:kVWTkR@VPUGd"uRl1%?_;O0)kC!9RgRQcJ?`iJ0@J-@pEk-\eZVWBFRb#He_1*fSblZ'NLnG?O[_nmN2p^f.fW6^"d+24Ge*[OHXFKJ`C:XJ77k,CqROe7%i'of?ql-[#=gq8g=B_1(C\517@*.$:N?2.:Vn\2Z,Ic'"enqiSh'lCB)Vs4I>4QNLUY<T0dTZ8533^f0C/%K8IEdXS4nqk_C"/Nq%lB].!dcerN<,GuI\;e@-KP#F?2J*Kcn!ATbmej;l6:X)KP0#GM<pi/O*i59.87d-hgWM`rG&^ok]8rRh;pC?;dDNZXHe.E*b.MYg%VOkue\rD<#M.=4N8r'$'bhttbVS91MRqF7Ud?A0j2mgt3p)s+[=UlLRp1m5\5Q(?fDY-2B336/i14bEklo"Ll7Y*5LB$ZNsMr.s&%QDH+r_%(ATE+Sn*j`,8lW)9cQ<t?7`d'6p%f,m(_N?1YU=13u0NE2?oDHkp0Bf)+JO7d\liZY\V5>rAR`K3RX%-bM"HRYmjOKkeF%bJqS;p38TZ^^gt-O.hQAlW`t!@>u="^FP(NdO<8*?WSoBWU'PE]q@j,h;ac7f'&=/i)?'jHa0<n7Vbs$*Oem6([IL>m^HA_YhA,h%7Sbr)^E+lVgX,.RfC*ESgGd<Wd1:TOf4amNf@2<b1mM'u2tEQl5b(E2j'On#kfTPI4C7!<VUY@([o3$cUQ'09=-hZ3_'\>lqYT'k%'!k3qb\HCXCC9B#)qOO4Cc"B/W0*Y)\Co\l7e\^Q7Pd[,jIJ,bHs-E1o8WE=H_^-t)r8(f4S64*T^eZK2K<Z`mdJVfGZX-ZAsCis%POG[7Od5CgN;E+u$%?&^!2\AulX>"L+:Lc"OLkX$<7Xhpo_sAF^>4k\[oJ.;*Am8p>LMK`Q54YQ+<A09)!#Qa)fWP;*G'\'@8Bt#%PNTWcYe,tEH0M*m]B`pn?d$mneT</!l!HI8@f'h&m&hsHB"i<%GLnV`kf\1iAG6<\eZO":RG"6W]o%PgpSFq"Q*%:&LXOKd]>,jR%GlLnBBiI]5:S17ge)l)2h*9?dp$JLBY"Q#];nE##\fC;5SLm!0Y,PiR\"uUTd13_afS-Tk((^&!qmC_&riI/ogjPWWMmErEYe0)h%_2kSo:l7EFjl6lJ&b>S;Jpd1Q?oIe_rm85Y>OUI(;,$5FB''m&$)X/HREYT38#L]f9Q#'$PMYt:5,I/\XD@]_K(!F^G@4k1Q+%iD%p[=I"f07N6];:e31H+7qMmh<,J%8Z2[X6'EH>RPAZGP+mE`XnLC[%=Y&M)N$DTUT!I"/:u^">)YaQ0XS>?T:g25sb/k+55B@fBaA%*]rhpa*qZjfGg*a-aZ"<c4MnIs%0+MQ_!7lf5B`3XO\B8+g8Z&F9dcjlaelbS^'/PSeaQnV^aCR=ZuEplgBum[rK!r-T`\G*l!c\%nj`<H`U%oJ*SdT:Euj-$<:qR+CD=FKe#ZN^./jKd'S,^Fj/<aEkjO<sG?/O@hg_&bSTYt>p/[N+:8=he;/97FIQq)tNUAVdjIM_U%)qE5H;H^K^me:W[(YU:"[ZEse2@20p]AQ/dRpT]l,W=s3n>?oQ.%*/M2Ms;G(Um6YMl56SGb`j[O6c:)&W_U.2jHg"nea:9*s5c=%?<q0fPAa.?=/3s4Kjc:Z'%Nr:*@<;GE(\<I[31k:d-sM\4K;WaL3`XNY7d&ug0'Qr5AFF_AR1;QQBs8dA`r(iisWa=/4.hup$)3K%$`c6#6?/KmZYf%M@eoV4d4f##qg(.n5*2="]lPpZ^kpO41<pl?U_%H_Iu=K"FtQSLkA6H4e?6tIaS3[;T^].j>e0=jco;FQYgDLV%8sXlV+13P?.-B^TfGsu`@*(c$Om^3dHbGpQ8VTGPP$?@@FJkWQ+^J9S/CP,!:K[r3]!GI1o^;oN-Qd/PA541*^=/$&52n't7d,5i%M,U&IrW1#&MW<US2pRRgkNRrH(]'pojY1sZraDmhNc8iL87I8\_qME".OROq-18Ud^2qb[Q7Q+?W$I-kQLlY&h'AY@1u6RJ"6JR]%1pQ2E8O7H2I#05:fC\.X"/b6n\`7D>)*Lrkapu=K$4^Q9W5@f)a7Lq,&uc;gb+%LABRa,S^p]F;7QV6)%A7"gm`MGmU>ZU58ilJK%(tt:'E0t$HWN:#WStW8[7h:T.e5(.lS"59+:,%ZO:-V\10R)T<C6jl0=P+]F;SDhp1O;<c5]6C.L\M.Q%r/>=mi9RJYdu5m^o2:&%&qkN=pX1a]HN,bHAB0gC3kl!&m&:e)=_Lfe8+u5=g_nJN-flkpR"MckKDD3*<=D1\7I]m<HOd::dB[8G!gi#AE36.qIi$3NP=d(h%+Ul=#ep/1P*g@*NT@X9nW`h%#P:hucL![0&d%3h4V;/896([u[6=DKj.E/qNdCofenmQ[9I9a/D&\T$?lFIeoQi]";(GWMVh=4WJ%U6T'*PaK3=4*#1MDDqTBEm]R\['5G+Z86L=g3B'ImLmg`Ti4SRf%pr*P_8,8+J#u7dh0=BAR5H$!VH;WM$+UC0pl>/?jrhMJq%IS%C6+^FWD'>lWF#g/7JJW[AR:-)h_2fL%TN-_pN8VRMT+Mb@0ZP=3e'4GMYSgWYS:T0/KT]3DgqL/Y"J6\+k-endBSUhWO;Blp2/FI%kbA,pY_1fOeX>5a4!k$q5caqfqO!_5<pnrcb/#bFjb47@^?qf'lHItuiE4TdTD#,@WUlKM*(C2U9;ku1Jk_;WZPL"pW?bc+ZN@BP%_:?$\7qHM*KW73"81H\\2dH:gG#A4_?A,cqRMh879f>Wg6#Il3m$SU:.6!b+rV<c)<hNJbhLHuPiP@5B]iJ_^o+@iBJ+e8o_`Qn:%m?FMArTU*^^q8oE5iq\d@fV>Hs0J'I!(;mO^GH``4rDJi7#s\BI[Sa?Nog"-mFHZq0/"+@<$sB6hRhcVb@Im'O?#>FG]rMh6A6SJ%*KF6a.NUu/;@CL.#Dk=6ML10@<U_""@NH9ah"Rgna<W>q\tmWQ:/*$kO@7)$55-;aH%R8C@?9E@TZK#e&/PV.&':P9?Bs]n%$Q),%X'8XA8"i:C,meOh1\R.l:3_EVr][]0eK0'&I\/+.@&'K=*]ED8HS'R'\<#i\O>-NM0p%KAc+Yi;'/%DU_3"pTPhoS,mJEQ`\ojFc%pk[8j-q8gQ5ot+XL5MBZ(<.k(>F0AP&C?Jk_qa/NEJ)J:7Kk^a+Q:Usf+!b;03ab^$ff;gOlXf=hu+j[7Z2<$qBP%nHbt;2fk<tO%b)SBS!>&f.@)1ZZ?iY^.5"CB6@QT?4>[7W$7I#+<?&TlB<]HNWE-66Ko(8HV'FWejE,GS1Ia!DpKglf[cUV64&4a-LqC/Kl-1Q0k%nLCWaM75t>97hC=<#2T`M/4psNBD)0*kA^5n#IaZNA&#;`M%Sk\0au9=dmF1":R(e4Y$hbP=jd/87f=dS7osTg\1BY_Vg[LqI8e+%#1p^WA\NHAaR090j]V4I[`0+Ub*Q6WaZ<DD"$iV4)GFH/"eS59CT@bLgbc0m`#sp&bHWW;nc`F_:^B8-U-Vc[(6.a<(j6&h.N?O)%"X>=P9<2Rg4tac,:-eOYG<^c'=DU,lCe/Y"A:O/R'(Z^mRsaFq*bXL"V%#%G"-K\cL+PhG$*g<or5cJe`=okV%Z[Rsc?U3(S%@N]%&k4/"F&dfrH_G6$$'Ep6Q"sp@Y8hg2(Fk>%ZDjX3p+#=pLEJD5kl/k%-[I\A!(mp-GrIU7>+!rg6D8g@/RDfKe2-M.#[3-BToNB'%O0'eo`hQM+"7oSP>--HNKgMSZ%NOr_P2@50V@F9`Bjt])AB&ilEt\9I/pu9&K>nRO6`;OKhZrtoO;KNL2BojOGq)VSPON%hWM>;p%0rS`4mmAiQNlKpA7!]LfW"\pB`Rc>iHGaE'(gpe5WKlGU@>$:=S]AFpIW)_W5NF@>A.r>W3qB>tkPI!'Vqc,+Tgi^<5(#C`8=9f]%aKX2RQn42PF9gk(Up?]%41&?_[j.XT;7>%K0dE-NWMEs&jQ0ASPSpiS.a7[j,=C)AgZcSd,Y3S9DAfWa6'F.%G^ZpXF%a6<'1q3*%Tp)jQ.(:Ji>Q[&'Y]n>Vro3U_57fuBEd?XuYGGLJgaMEA.BH.&i6+rt2cs4A&1<O#.)h[TfjQ"XIh/7raYtKjQF*q/AUitKD8(-s%&S3/0@jL;:GZ`V%>`:>M(m([3n+aJ]l=6JH1EMWo\]p?4S`Wr>Yrr!U?)cO6gCMhmc-m$ATM&iDP=)enR6`32%#pN>-Z5Xsbb,X,%&hm&j?$$:ARk6U+%\:s[5R*d`F*Oc+]''P`0jAUe*4k>B\qk1=TlT@k1[)bn_/XMZU,2#Gfn-!^cp_To;(jhV%UF/\*D5lJEp05R%kic-'bG"NF8<-5fF5d7Kodp[*KkFeA-0S6Y82#'7DWCFf3uXX<>m+_g,_+n"YeS=eoW*o_krkRVC+jl-)W.a(2oINSSTnJ/5KdYX%VjV2?'pXFg\K<J<NA%$3\:%I&j7DGm,flKK4?e8UC(-h$7]2*k/g\YfN/Lq0FK+<>ahoIM%:O#n.[^/kB(QWqJ'sD7$:8A@#r[E8%``\cEOV/Pef^UF.g>0,SBS!d5@[#W&h$OcKhoB9:Td.R0""NJsc'%(Lh3)[[$+6'aR"3F(,>CO%P*9Kk-/!mXq4tBG&;#Rm@ko-i%frQR_4"`j_36ANcof*]4Lqj_RJ3:QE'ZQgJB,H8#+sO^l0M+gnbSrN0Uq>t&PO'Dp.c/u%A#,uUHT!#t/Q!RVeW5=r6fdc#Hk2K^%&s:5t6!f+fI#DI\.QfSj*h!5lLXIo(i-1ph^n7,WOl[GZYrob14n-Sbp]>YqM`L5njRN$iQuTu.G!q!b(6`-iZsR@(HkjA-54ft-%h\%V:A`9[+,>]p<rFS$HWT-t?%K+Z+96rKWOmK!5m$U7DG1Ri-*R#@@Ps&9a>_KKjW;u`,2q]G0/]V&X\)!_!?GJbW"I$Ou<_WLJ%Mk/Z2]GX*8XkD[6n5QXFP6,'MigmbDS.;;c>bYI/LBIal40UIQ0b"N8[0or8YO9Go,B8)S/2eQ9,rac=6BDQb8Fm:(@.1%<H53iQ%J%j_2B>ra%hYKM`(NQUi3&3mb_0$5&[TF);?VH&VN7A6\M":!W)B"V7faH>T=4L6+1`kkF=C$RQ+h9B%B5b<L:.463G81?N^d#"r%-j&q,ELndCDZgO9e5-aFLb@YHLrm_:<(+`OB32B6%2Y/sc'#a0hi5?7,(h=9j$[E_)>i224!LHFXNo,pc/V2"PAo6[5C>jGFM@dc%5B]F!L8N4Nn*W`<L6aM;'D4O8P(kl46jAk%<*r,[#SEL'";.&$ZM_B)LeOQ(*0+Hh3^]b,7.-5ZqnOu5Z&6Xj9a$am68qFDPEWNQ%,DM&KF+]$,=6eA5R36W/_0a'0gmtc[H[6>7D'>m+@XK_/64X]H?&2,q_lX:QZ3=b0lJde>.R@BHP5N]u`?gq5&Ri-o)ajhoKS;\)%OrU@6^9)]h,No!jW,O=n(keGcnV[o&kJMT.@QYlQdeRkB^4.\:5$XV:9dUsB^.HYC&N>)#dJ7b'GGpOc%k$:G+X:mQq/ETW"J&(I%>f:M.%Q,Vq%k!rZ'VL0ob(la=i;FO5PKnpkal8h05$[_b/8SI%kGg[rb^+AM0mh"Umtl^tjCHmu_4F2r9UUG!"23"oXB5YC!+@89%jWraeWF]IMnF.s@U`T!c3OUk4E>VU"fK&Z$(8cb:Y7qadL>)/;q@;GV4n+;O49H/P>kG(*jfT:l5e=-PJK!C(ohnm5[sXa)HYZ7E%XiYWkIa*_YA"d+jkIqS,PD5k&;UF!LT`sgu12d7Aou+OJ-Gf&6e2*m=#(!PTM5]B5W%SR/Ro\`2l`5S<!lqt`D(5$mNA/(t>t'!T%kQuB&7VZf*/G'+c8I>05Or:5`-^g+nF#"W4G@)$)8<p)R-BaJuoh6VU($c`%,8G!^6q/Y<YJn6\g:+7=1k,lI,iYZ"M)H5s:WrhA%0rThfh6H!DeA;L5E+AA##tfmb]i^F<4l/IOS[QSR$[NGbE3<6IA@R+7'lN)Xj\VpqiU7nXA1AST&J:3J3HcklH&(ZPZnG!15C;[L%)CC&D"_3WFn]AC/,6!Skc<4i^r:Rg.GiT[@;2Tc*/cZ>$5fS9G"7b1Q)!8j<P2Z2TL!XXX9O^Z!KG4$%?8UbhipstW?K76=I9lEW%l.[^#_Ck'94fBu@09S8@"LKNtM`uVK@qM%as.&,Ck_H,g*[(HL=ZffM1X"mdT6Pn]3?B;lO]f=F)#3J499q=`#EQH\^]#pT1YQMl%LgB-T-gu%p1`&fP=*g%c:@jW>AP_/cDf2F(*hMXkG+3uM3Vs**YgXBUU6==R<^I`OLMDT$C.shuW:15-LT"amN#ph(*ieTaWXbW@%(S5iZT"0nA7.&%gRF%o$\2ZTc3]+`LIp_"1\_%3]!P=1\G'fF#NI&q2]AF(DYfhLVYF`TLX[P(X,HXG,a7m#,*SP2hDVDT/,O]YP%L>>gODq;s/<7_l54ScuQn\/?CPrkD:Hh[/eQ(0nga<[^hqu-:5^5*`KliL$35/pS=SmJ#_3Rk"[EVu-W!<da1qruudmuOE-PhJLN%Z0HuHSq<^aiTF<[#JR2uFO*s3C/=16/VAsg6*\/o:6P3ll.`\rISqQ8"gK[g'^g'\C7K*22q%T(*.Qt(B4##a;.fePjPlqR6Q@9d%3kkB1hr5+b8M\#QGH$RlJstbjOebC+3Jeoi^.>G_g0Gm`M)!?G"6c6mho)hbJu0>O`aKKjdfmtu!i'^EA^^hEd`&sCB%Uq2TU9+:%46^RmTNjP-QcWjg"\DI(in8FI;<s'NdfjS6)<MAOag10jp*`Z_RkABF-@"p#S8:5>:MDFepr^[VflY&GYER8/$dT]YA2[`1pKW]G%9dabiGB2pL=%10PV@.E6.8Q%E'%q@m>nU2=-^7=APY2g3@a:@oF@#hGh?c3ICq?:>fF%'MZg!'^klPlp`lt;!Q"%XBe&>."6J6HH%\TC2:/3u1":bH$ENn#!"F@"!sT3FI-2I2E\nXc4(M/9breIjX@S7jgO[t<;Cg$=IIF?t9a>o=M?Rni#U?Wr<U0-b)X"j\\daY@6_%SNmSg8qpu!NLEQX1a(`t6t)`&4#Q.'OK@oSp'-\(k0("@,:Z!<pYjF>R/hQiei7F(;lmCrU5MU5<u6KA-?NSMB#&,'60KL1SRPC'%'nhf>'Z87NMbSq%-3EtfiOG(b(R),l4l"]pm^/$9>qYONg;#<Mm-_Ya,uNhn?/dZaKGGnd:.B73'07@9BC(\lG=Jt.T+MP#54Srp%6;G_p*cs>McC,\*%bhMX&<\D'jt;oE@Qa?=G9h>DGL0X47(N];4aX8?m_g[%d"CbLV^[<>F#RVtEPuAT![EU%KC4K<<>n!^DW"7I%5mQ5*Yh9-VJoDM&W:.8XQscLSk?p&`lUJUirYR_`k9,((L9hOK2N]V*n)9@TXc_dV+-CUU](agk;^M-f]'rE68[HjdflSt'gQHCt%6e[oa,WYLM/^FL>_Yi=[))LeFN_Z+&%CP&FU%uW`>nO]tTqbe57!sgH:^$AcAiCFGr?#7`JDNjU67'^#SA8#.WPnsA"1Xu-Smbl1%kftf^B-[p+W!0'&nX76#%S\=9KtghG_$TK-`7dHKq16K<5P<[:Uu[A>J*MlNr!gGcK0-Z<ZGf5O9^l>]Uc`Q-;@[p-CXgcFTXDTV%e5u:=\'_*a-40X9#'Q#cQC2bRaV,(9-[11$V([s>7,>Um%u&oY1EVt'JJ2oQOh3Z0WFu.<"OMHa40@3mJ&-FT[L<VS<tuDp+H^)k%'je[^K5(\D!YQA?Lqo'j_HgPujji!u-r`(7F0"=r\4_Rra$&BVaF"CYj)2r^Rue<O7QMu:k^9+dPOc^n6f/2oOmhI/O<9YPKY(3.%AcBX%O\WDZqH!3Y]<AIQ]C7Dsnl3gP/WqL4b#<l_7e,;eaV/IOWSpTD&']L'-ciuWc$\U*mGkkBMU[h<RMEO!MUXFg@P+R5pr`+?%CO\gf(N(1?jY6Mt".O'=*LA-_(k3IQi8ts%hn"bi@"E="i,dd"e8WJSVJEKc'^EYhe!Qkme=OO0GO0a+8LNq&fmA><K)TJ2YZ=)%%*so;05n_X(RCc7,?MW65T"t6dPp&>*FZpVHQSB6mqP">DWQ6on@=dAN?#TDD!`pc>mP`9bHP'SGmQW.=fGrL@/ps:^CC5IXJWIkX%)s>aN!u.6WEK<mYG6'TW[lOPE.HSbV?8LP3H.S,!:B:o/9-Pb3:$fA[kYfpB3tg_d]%Xcq+121)@iRJpFh:7q-C&.6HMdCFB(oTh%a*)(Z3Ob&`I3k'2QW"F^)2E@@5)QU`T%(,b:X4.>7T#>^kHIZ0X*/GGh"oN:BKf\qqfaYT#nL3B=5Njfc7QTiYQ^Q"k@BG*7V2St%OhL?&?gch;nTefCZh"+UF',1jTrDb*CsP-pSdT'$VPa$`hs4_HE7XI>f?C-K;I;WCJrkZKS<YE4GXDdS<3"[#ECckEoZZ!dnds;a%.Z7er83!->p9a<YGF!_cKf1tnT/YZ`aH\t!0,N1&iEU&kh;77*-E,<kQKJ0`hlg:0\6?@eoAgj#`'W_^jYKK=L[WQTBOO5")Ui%(%Q0XXd)YJ;$GK`cjMTfAB#<LZ]&bDUs;3gEj2r$h^N\8/V8NILq=:b7.T#`&XAXmO9]dm-'>D==3T^uRJTMs'tFt2`Gbe\ucdIICs%WmU:q8W%W5^2Ru*aXi8n8\`EQLS2.=+f"9Ybgre]XL,snl.'`UBjj([IIHDp,YpeqdL+gbKB%mGPFaVs%WHWf^*M%9MqQ@@)PU0h%0>&0#?e-DrV5M!Eg`,RM=pM\KPFVP.M5`lhqK9.OA$@o8rGdEn*f<tcY+iDB,[Im^9OsFOAn?;dpfM)?mqou_5d%eq^XnpEW0]32%8Y`&S=b&4[lqE]IQoJG(DUq^Bgng8a53CZX+qLjD4=OXb@npcIC=UGNOe:.&,`G9U#@Er]&rbAVY+$SAFp5gAGSNCQd*U#5A5SU&%X5cEF`ZJRs_'AS(1pP_NJD<JMI\K4cG9ucj-Q9N)O[s)4qu"Jo3EAp1ml>@)A].c,B=ET0k9'dD(Qm-2^iS.-5_4F!ji!hirPY\*%Z"Mo%n1STrc\L&1:"2`c%,D&!V'W;r1gecn?Yl+PL6hT?MT+`K$q%9k]lO<+$XL:_KjkW#B`mV:Se^)oZN-2`6gn/l_e&pq[5'iL%0]9&O6Y$4Dq[f>$kW9l3a=P-&3Io?ELJEE;WYk.l]mt71+gM)89\hrD@,r3)YuuVIXsIV^_GFBc+nQbq!K>1+$73a>-gCl]OcsAX%-HuQ"SKjb3#*3Mp6hs26O_r0,q*Hl8-[I1J9N5FeL[q:))iZQ^jn%01J*9]m)BBjk"MCOco'n-`5C4e#ar#<eT08EWq"$"+3Ku0N%WdpY?#9Km:YVYZ@gq08u;uOX5bU2jtW8LVQL<eie3S/2&G=.@/Y$^D>-Lbn$pKYIQp*h:Pf.T2ND?B9],3Sf^s)+b\kP?LIY8mFE%5F4DsTo8tC*pHqEc,`i^;V;27h4[U=\UMG-EfGCJT3ieTVu$45Wf28,?hD\hc`\>J>efK$rPh#%KUqEF4eU;XcLm+MTfST_rLsh>%8nEe1Eu&bu?aTNI2"".()YRFNBLh7'@j@W3kLlRdE2qe4DkQZklPI6W.Q*o@rSk.D-?61qoVm;WS];OqY2=3]nVqjtT=5U9WI?"/%C*!.U^[UW$[$Ab'lPI7-6LEG#kP@WEViZ>ePKFLG5Ln)PpH%TMIaRI<kk?HEY$^gUld1U?+j]fhb5r>X'?87CJBD>[7k/f@6Ts^>%^Z;sjcFJCaTEUqP2r]+16b^MaoK9kXo,`Q`rPm"B\."pSqj*$OmC#`.Y$^h@<[WCS;8^f,oo"9kLO1Z"Gj"o`.9D(Wd:1*lo(8]n%F8b+cfHec8Ma#[01?\2HD:1t$*oG$ldrB$('0+U)f+L34*q&D)KBN*M*lSq5@7E6.0.PZ7mYf@@a$80/:qW;srPm)S9*THjouaPb%oo"Pb6>$0ukPDa=%a)X/jZL99ZZ&:Wiu9qGjZD"2]^to]B&Q5G\I(=JDq&<BQBO<%\UGSW*&uK0Znd2RrHL)%n>UldNfAOk?h?f8%Jm]sFY$^h.SPa343D[JhqB_2,H7@u@f5K_qj\Y.:L"S_;Wo&JQ&!iqcp%,k6IcPSKU/1GTAJ7<r2k=g(K\/PN4MnXXdAQi[i3D>L%Z&ts\#nb.]cLi+W_i/Q;?RR;D!`%bAg6cs[P3fXts'3<PkCCrW^O)pR#;I-%$[3*)0+@4BE!!W[_apttX*K2.(Tp1Dpum_3hR#_7%bot/,`tuVpk+%`B[J-c*0""([O>Htc"faK2.PZ69<Se`aO7cD[]6Vu[cM,rb$aTHs>aa?:.[)'D:URfVEE_[?Z?JsJ)%6XZjrS^'%1V&K0Kr)3%07.D]mHeHLU@HWs.[<5DWUa\5<N7,<."LE_[Mt"Mc4>7j3nufGPR]obhkZHJrEVHK;JkZ-YAkjop>0/Q/#hEjXr]L8%V4T8>o@!$sjaqUS1j(!*4C#WnO(W37qQ4)M8\^>KIrr<Y9"s&lCThlqjjmE]g\lT.k'M13/4+rp53@%6XYa@-:NhfdfBoX9gUGDd%D"d^I``d-nZ_utJqm5`5fr6D^IlosOI*V.op?]oMTBl(E,#8?cHnT]Nj55M9,kW^RbnR/o(KkILrW6.sgOV89nV-%jp3N*$HC.ha%hIsb<OR*t'eY8+,KN(4ASKFmNOQ642qRum4d-VmX/@f72(oar_]sOrfD+iF=5uFYr54;-+-c_jmkm-5T1KQB6^!3b'dY;oB9?L<X%1GgKLLK(f>+3?6e;Z<K+liUHup$j$TpNungNOK6^F1mXppM$MlCh@,S=Ndf,kH6N![[`a7>PZM6_Y,logWqGLQo`6ogLIn$Q!#Q7%0:CpsleTeEf//Gnp15tHVT3=!95$7sjMd:pQHGL3[ChIYHJDggb]F/4WYOX:JoBfmH26iE'>@b#O_MLns-UrkVpu[^ZS+oA\NK\E%7WG#JqbpjT-[$;>H`qKt913-1Qe7#Bq%`h<_L<P@X9u05rQ=`PQS%=l4fRr(53s!oIf?tb/'tb.2`JtbpBDK9^TdgA#e+P)V%%mS%[,Tq=MRSpVr5N("]`HdOXh\kFaNfbM?s'idj``TuaYd`8YDR2cPa:.b@`pi[3M?-;,.Oqj-)bI&6+QI_q1]i$1ARne?"W$Xl1UiM%_'=MeaSjTQ1)=$rP[,pTCP&G1!c**qJO)<tet/Jo0s\Gc*&%6&,h4MFk2]<fWVN=\%i(\L!9-eX:ZL7WBH[$uj_kW1"H*0?Xo&CC%)n.?ZHu4:TorU)q=^A4EIfts,%I273%rpUOB<U+b*noC[rjIpcPGjUJ<RSd=IHuZ*m8URXl5/QqQ]2EC=2MJMAM1_6b#3LFqd#cM%h:kjDRZGok]P_JQ1[ph]?;Dq!8>9Z<WnDurQ['qO:Y1d-FL\f1I!PQ7;q.:dH;HNe4f&VFC+B8WU6-oBCHp*8N@Vqq_p@X2HhQKd%`4nIFde3hCo5N1+b)[?=\Fkq\+01G1^CHLc7pfCWQB+gofG1f-WRb8O@H"WdDH'Dh9l&Gq68b7_mj<%dF?oKcVXuqZrpb6(Pj_uB%S49-=Yk0"_Gt6__LMo&<IsY&JEo<V:@!qo;R]eY(Q?U#l<F&k^>ViQaVN.[kO0Z2"A;Da+R-,C'c&I_k8r?72AuXd9hZ;WHA^7-X%X0ZY3X8FMt?%F)(/2,\f[SAsUG.uS]Jf@5WjmUpf$/F1cWnK7A0;\REBp.n5kk])UeJt&jl2.*36U5a&U<"m"It;8F0*IRQ<'5s+%!)-A+lf$[t;W[1i(C>-f5>BL(?(NEZ5k)&+JY2'KBaX,ef9lA<Sc9lr72aR`=%L%cR`AVt='&\Q2fkN6-*W]M!b[n(&)2:b`o2C)%%=*6e*B1;E/.eXKAVjU3bBA@AY:_h@#3._Of-,;Nq`#*Elfk1sS8)'cjTi-;h8FlOZtWk6Q@=;t?IZ*X:6?L/eHKL/&aHGhB&]+M%*R;sl4F3a2'6s@uR@&JLk=s.YcQ)no40tJ2n#s2HW96RC2Gu6Q4-p:AE#sC^0j$*GA$GQD6em(J%:53]WL(e@$9D&RT==FHRAHc]%`T*ljn`Kt%ZNY?Mb=]/F(hR3]\;Z2E5@bNJc-=I)lc1%&Qd@=&d8sV06;65&*.9aGHOmnh$ftcMp-r5QYp?;m<StMOf\!5gp+O4A%<IPl7n(#J?h<Deug\P@;U9)V(?[q^nLq*17pN'p1-/0nn],S6.IL)4C;;dA^/%:B`Vq^srZEF3[>cdml0CSipp'^'@o2FE0>Lf6r%@(uu4$'riNB3S[2($AbPQAOK@*3f#3\@B4qp\n:?Sc.uB?8l%`M2.#^.HT`V/cYYTIC0>/aMsC-hmd*--<KW8?Ok"X;n"CUgSIA^%[_$rFGQ"r*hX0/FD4-AP/T`d[mgLa]b<O.QZ^p>\[8_UTe:'VH#*GG#/4,/AB91.%0k:\>cKmt:!eNj+Un,j'=(:6'Yk]8!C>&:.%`:$Lr.SGcUpVOo"cgFummXDrR1[jJXmb)$F<h%94DI99tM(V+Fei2.%`OB/3LsnZ>:5q^2+DPh$4t]m_ki^d#M>P#F6pi&9i*]u`%U&T1cQHI2X>lgQJmlA,X7U0CrAk$2[glP-rjfcs*C.Md9ZA'.e,W"&_SA?-lBKTqS_Off;AQ+u2_#/%0Z^ghSLZ>uRU''][5G7@,%i=gBX,rRPEq9$a$lRVuSRQnDU+FN8K0LXUKbG-dUa`,?`Lk5joL<01G$T!^>!J@%Nc'7%'6VcAfc4/YdmXuR3a_8mnK?R$]^ggnk%<&<PjlJ=>_':\Y<ICLe;ah;p#LZ3A&aSgSg[.o@p,@_DXT88_@#Fn3/,$T6JE]+\s"8&V_3Mq`ENRe[4LY3E4La^7.>2L-lpIsc,%bglU>,J10q(u+Pb?7c(>Sj"Jcm>CS=m-*?t3FJ5H`UcHaib]\MG4eNFVK:kj@R\th6I3i?m_e>-g?i<aF/O;+I0W2i8N7H4-ZL`a%Hi[l-3sSDh`lHp:<de3sjd=pQdog1,p$cdE[8LoW5N_-Y<-D%Vo(H-.?RYAk2L<no;_GA;SQ9WI*qYJ4=tm@k[C/*])me:>.N?mG%fQ*lh.XoULm`IP2Y*TtqA_ZsUJR&E+!u>M;#;bJRo$5P##;B<Z)?RfaZT\pTC%MP`Ns(K,EFjZb')HJ^4bYXOPhP'7`h<'Z]\%n-%W'BVD++[(s0]/K.IY`1)i*V5IYlF>hI!9Y>oP:'pbr3k1$@DP!BfO94S+hp\/^-H;<A;:6lDb_@++n`CU3B-VcJ=TAgET',//<5h%!aapL\?ObN[L:DGNiV9D-%3P4gqK#qhmN3Ni+.9YDnfV#!*`L8pJ3/P>On%ZSppL<Pd_DYC@u&Z]_R?\bGYVqRp0=4l8,o>q\,R(%qHEU\lq2*ZB4erWIbg\%K(>0Jm\1^PffeQ1eklJ^U\gAaGW'QOLgZt_N(^FX'rs>i0S]B$+diaN]e^<B(DpJuIOaGaDZ(p_k^.T%%D?&X4GR-12]Aju!1GDH?7_M9U[T%Ed`D.OmJ7410Y7[$-GH+?ZRZ&P&_cW*6jVlO,%B3TK#>nCl)H"%qq]j<]aSpnIQP?hlUMjZY%Nc/cnl>>RN^n5[:N8]nY#hujcU1@<m.d%W`4N%N_!T(oVSrRmi=iEN5X-r(M#:XBNDn%e,W*pS!V)Ee04V#j;;fR7>X@d&f0<S.9%O.3-J,BMp6.%9LVRinF6T#AELClFcldQ&$0+;u[C3L%H0O,jJ&kn2obUF[c>D)j(02TA_5fDIiRK;I$E-U&;"Iq/#RO/W`O@tqS!%Ot5AW>:75b?/tU"Jo_YmbI>b4mg9ktIi\S;-W+mSXnnF$*Ht9n=HMbch5_DDk@jZ[8M=$b5FRM\6F6A5JScXhTUqup0=,ZQB"M;_%?TFaNAZ'%YHJ5q*;BtdK+XsRf<Y`BO86a[`.Utmp#Wecga`I-(l.s"U7r+KB0#!Y(/kl683n)C7d0#0)/B_s6'^[Y>+hAMSnV$9d%QffH$Hr=c@*odR]_2J8uN#,N?r^"O;[\pG20]RjE^4277Uf"F9r1@L^@J`UpAJiG!\f\q:#47\\GK=8EA</hh,rS>+%k`]A2MCu1%=`FA2M5$'caSuk(/#E*,Sp-YJf<X+Mq$18@l7Ro6,uq$bS\'ngg:LS7Gq4,PZRuej`+)F.dW:?Xh1RsD@'nTkARF@;3FJ_iISt/4%;Ek@9pn%2\N6L_8mYZA+[<$XN%,'jQ[(1Rc@"p]J_t*4.I`jb'o$0*!^7F:bbP<dH!\2IXDI&M?/H>TVG!5G$31Pb^`V]S^bh4!j%9\Y+;Z<&X!JM)%cr4T<>IXUVTbgGVn&g=NXq0)\Z@o9HrI2H=K$O9?&=IJ"BgshrhU6Y@%-JW<1HF#<?orBMI&kUMa'N<8?%sB4Z%nh%JB[C#XTEeGD#VgRY?+V>In')_$p:RhQgZ:b6]?KZm$!&GaFB1)XK^)S=ZLdY(rIQ0a*'hJD=&P:@,r:5u#8[:m?gA8'I"SGhp%[Tk$7VTYL^-p*"E5+2Vk:6h>"rFc?aPR-+)c*(YuYl2fMq`Ei$+J\UYiQbk,K^/n(^f0JX(%9"-.D,_F?[:KHV[@nJH:.o^Rj5KO%Ec?,j7RU7lEo+hS`a^qn"d)t[O#\1m(aLPh>0BcunK';^^']Df_,W<J8ZN-%:04Sh4]%"FX50[4m@h`+N+JZ>]?YX:k4I&>U,^+)%F5unl)r(\'Jm2Rc?4:mYn&9<WECQm9X7Xs9<:J`T&o9[k0C^_[^.2-Trna6kdrm(0&lH5[g7@4<gjH[J8@qANcX)Lbgc;Z],P5$:%hX>bg0Q/!G#fsDT`dF>gH28H*lJ0nf!oh:';DGk1Nu*n/556Q"&L\hj%&<J96qVXbA$TNb8$tC<N88kWNMl<Ue'mh.=m=bQ<Fk6p%hEAnP5!=m:Fi[e4l<eOqM!;g(Lt1I4T`-6p&l0U_nKd+neT]W-7l+CG?V.=oTL[!NfBtaB.BnJ(1LjfVgu#OGAot?dh)mU+2Y22a%ZbY]]DKM22K^Z)lfn(_*lc2Rb@VJHH:0&%:N)Qm*mt9\80![T5Gm_lpfNi)R90!-:]/f&Z4E03"C(_2/2RRfR=n?3RI[/em>nf%L%.hA]Hr5SH9OHGA;Du9gBN!Qo\^E9o[X[=6Xe<b)AVGC[E453Cp7]+Q':3B"LiZq#,_::oEQ+(fYiV\%ZAPgg&UZk3%7hB:Q,j1?P%#bLIdn6+rK,+I/S*p-!*Z=\(cZ?ggD+eY1\irsp=dq[F8M\]$b<>K1e$S9p!ArgnO8PCkP3QZteq0Cg!:SS8g4?mfuIWLfNPV"js%9?NGCG]P;?_4f&3ePb@HG3sM<h)sm8/de_Q1h3leC[ltulGE.8K4g3MW/`#!(-224\1DU6`_m>>c>k`hZZ9,RT\jK_=#<\daEtWl%^D1\;?';2f6F4Br^+gru^$.?WPD4HK/or;!Dat!Q=``X>e6SH>hh:XXO.%8'?ODY-+)`&n0tl,.Yro!iQdsn<-\XID9pY@-mqSR=%rfl#W;==:qo%6<oXMQ1[<k6sl,4FfMmm=edD^r<;o-VG@?K:a#[on1)p+Ef*\$!-U_6l,EGZoOF4cu`A/4ok_c:rg\,L_g>qBD2.%L]#)dJ98Q0T\rJ=$?bZIV+.tUg#4r'H8%;YVJ"RtHLa[RjVQUFW,F5.g1#s7ne&Y`]p-G/=Bmp*N=5)q.XEror!k<,:Dt?/\H0^-%=Nd2(cVfn1JuO"j7Ck$'+"guXiddo*bKFfC4>@G,PaF@HIl(k[jN>^'3u@GI"Z@$lYE.<rSB?s+'%>p=7fiq)gVbShlu8C]MrmQ[%3l%;%`tHRR1_/?QH%)hUoAb=;VC]j;dZu@Sl294YZedk02Vo@SoQ"[uPqVLGnn%-`?1$5/(\Rh%bO+K]c[)Xa?;9SjkG>jT9/"nh%gFr6l1>O6e3\n:jUk78&nRWf6!$7!?(X'#UcH#AFfg`+A.c"q;o7Ih.h$r-GE(8.^?`.*5QJWX#lh>0IZh1qWNpH]+b_gM<?n=;,%D/+[E\MZQhf2mE&gZD:3HL\,"+bJA%GUb7gNq^!nm,"VI]DaTfD;T)0Q1!J1<5,Kk>Z<Wh)pcHY&&,4-d#Q3e?+d@i@trJ0T536"%:k?pl]["a)e>@24qtRFN],=@Pe?cl*;&^[p?q+"Le)u"f!H*C=:7q"1$ul(WFS['9mWJC?FSbnE%0:?rJkk4F#TRs`'6O)BrLlfH%qu-!VN-50"m-$;R#6H$i_a&bbJH/mJ+eZW,5eqe86R!p4+qS^;4!oO\,6@n/%k9nskdT2@mc.cJqi7PHh:A&b[e(#p[XLrZ:BST(%GL!?mmn_[/jD>=EKkC($45Vu?M\R[b+`:(01/I?7UU*iWa'MufGdY=]e7kE:nb'p8IE0tKH$('S=\WDkFOk_?9om%r-:ctg7c(NS%5IC[kEX(fhp!k@6GNR3uSIR[B&"^:oLiHsD0uO`)EeJ#pc9q#c>0GijNUKL#SS$0:7q_W,Htbuuo1NDU>/-Ue.o>PjkFe-H*S+dU%TCct/'I.G^3>g]t-d3'e4!faD']3,2J2pSAG;^64pl:]R39>^mb8`=bZdW'r2b"eMSMr^]R5*GV'C$pJ3q58YP.75Vp/\]H?DOQO%2`c$5_7+.&$ZAlbmWPJuTLUT?oiB-h)iII&AtQ1-hb%0$e":h.;8(G0.^[/8Z3cLD.(0os(DKr2`&1+thS)iM98^`2-<m![nf497%#HB37O5*_Q\U(q6]5K]<<Xtf6h2.G9CgL.uI-2HlX.)L%ppI.UIdO#%Dk+2MGHJ(K-MA1ukja3oF2hD^+H?F,`)[H6@c%"Ap<U\r%?d+^TiJVu[=.Cog/`nW1?,n.q\tG<>H-B)H3Qd_P?s@3QHG]M.,D)5*M1GR#&/OlYgEiUdYdO>TiZqXMP.6W>KU"8.FZ9._d4R\g%8XE/[<_rT;0'`#?6[G[=V'B-"%2,LnF^][(fR.?9_#5NYoKF&1kl].+?g#-=a3b.qh+Q.Di%*77<NOJ!O$u[Vq($h7ii'aSe8bll%ONL$l6/Dc*qG%'=f9&HN5W^mXAqT3UpN]iPUNN&0I_U'$mp8Og7;rERIrRRYK1KE"YRb.TOie/1ic&Tl[L08M!u5(`/*$#C^_]Zj%&Lq-0`:KNjUh1V&+:p#Y%]O8RVmeFf-e"W";`hT[?A1+n]2?:qE]_7D"]hf&7s6=n9]PQ<hdX^FWPqsWM]1-kjh+uD4>N4e0RsXc%"XHc4;d$l&m_!7_&K+>L!L!9_KP>#W@Gj5eL0%H;N:!cIV6Pc[CE1J?16to"GIPk^Qp,UNo<M<2Y1Cp)Y)=?(IX9)T$WU.JT&,d!%6MnP]E`ats'chQZU%7jW>'Z\o=2r\`kEV$31b$fs7iJOCUGS.a+d6_JSgTA%9IkN1<99qeEt0Q%%t&tRe8en4lGcVc2G]f&(6,6N%^`3!u^jLVQNR_O2T=fgj?oD_R[`Obl7CIjc'B2(RoaN\B`7a^b/d]Jfa/XD49J;7ocae8r,$?Z:p9$^E9nP<9MRt.j3*^cQDQJXQ%`7GI\]sHKQTbU_?"XXs/SB$QI[EJ@n-[NKXhK[LUS/XIDfg53Pd7=@Q3==iPbbCl2Ed6Pu=?!/Yde3omT-;;8.[r=I+1:@7)T3"0%i^]TAI`Ti>HUtRe14/$$-)m.(IHMWQ]8p55b#hcn:i%ab`-7VeD6Gt9pTn<bpU40`I===1+7*Ra"6S#X2^4@s!u&t%>Zo^]Y)c[p%:jo=EZLHmn_d+D3qkl7CSblXWX`48&e#;'9S74&26?_Hl%/esEW6S%@2.>G)/^k;sT.>jR9)1s`%E-RT(]9n%pX;:N*.Q*n9_=O]%@C_BT<9K`?/#]Ot)Y!?a`]]R,B>XGu]Y!l[/+Iq'"_gna.h>B+o2ZTEPWrdT)d<:*:5I7.o9Pj.fugV6!,=)kc$8+p:3YZgTD;jT%a^=Z(]^ku,#l^d/$R\KpHhb,HM.)'ag%hM$WsS(Xd@5kl[=J8SW;aNB.@$7$Kke#9FCi!fFl,Ubs1]rSs-EDTpAWZUC+Y^iQ,(F4%lU>%^9P(PLjh0IMmU-(oYulKkZjpl$f=NIl:&gF85Q!A*[&dAD7G$LRN`Qa`;Y-]#>$a`A[Skf!I%f:J2kKo+G,s3m42$N<Y)a&G%pWDaN1bJS1A_5B%cl;3]9#Ib7>^CdN*^6HsF92BUr_MeurgZ4ihGP!P!aP^DIdFt=5B,jOBj"%MV17;oknea./@D3f3BaLc3Q\^h%oOl<eIl-\NCo]S>[Vbe.M[j!2McWhaWC?0k=\?h>Q>.6jkaZA>ZGCm?rOOVW'^1[<4bDks"8/TQ<L;e=$NC%#^K"3*bGq/?ABQ06%.66)2/94HD9\MZe/Lr0YVTF^Sf/,R%@9n-&e5V-,ZZ:e3lK"D.OQnYYV^n31/n#K>aiLH9U;A3.LL%qn:gT;!HHA'FEXeo7WbIQ1%P%<"pPT6eI0'O"^,j.j(_(hlK$!Y8^;GPh[*.sE\AXW0l[<&?ZR\ZH'l_L%c5rWqS5&4B0*),i1"l#-4/P:L<&$c8?)$XdjH=3bM%8hX>KR$uJu*Ch85Uk9]g`=-e3@QfipUj`WiXO/Or:9orlMOfq?Q!@7hS?3nUi0n-'E@E5R)>O7k'mdj?)%prjDNQ+&2.2T)<5RWQ%m=q@_8n8*\@ZX5t:6q"OE6klts$4M=*SCFZ1mJPC!QhX/%8^@g/5f6OF+cq`Kg_:S><0qn/gs7JM``GXcq3;M!aO)_HHjOQ.WPQm%8J^E>XQ=73\H#@'+GSqq#eu<m5Z=OscuMb(d#\WS:"S#T3N$$$#.Q!OX?NRP5rLt5/=i(o\fqr$(d=3bkSH'lfp(1p>fL[A2:Kpo%2*GR`7=`)h"sjK;+nQbc$@T/gNCj9&.D3Sh"=cf-8!\[%)WcKCV%YLR-L$*bUk%D*d3N+a.\S31N+A*61NgQ0"UU)MP<_!9%B6I-%l:W7F$5"]r=TmVm$"QX32De>njeN>pTc.%Q6uG@nC`NdMC::'3=?p:f`d2Kd)k1(5&n!:V8g7T-M18B=JDd:*h7#YB%%D?ATn7"[%+XA785XQ)qW(.%j6MM%$LE;p=.-q9HJHgFa2AQ!]'H9##1rf`BWYVSa6N+4<VOCFoSWpCY&fU6rYRO/KUT3<@P$qaB6)]T'6cG@o%@l5[AQDpYh\3h,EU.l?@!:se8i<>JH$N_&QP@W==<G6![liOf?"Uf,YfEWF]dPOP72RQXp)D+ZR]*:k9B$J1CVF3&XeF[H_>RV"@%!FoMfQ.=4q,,)e[&/ttbPXm?1dF$AlC$<$?'8*A)e/lN[A:l9G==CE-FrIrb9#RNW*RiJ6\Re@.!:UN$#kl=`Af(rNKaj]#"]<)d%T^&2KBs_noN8Y*l1TD6&86$r[<q&h<LX8#\U`-HgW2\,Xa=N>WCq65@I=ZsH:+W/p7YbZ*c;[@'^an%AckfkpI*t=QM>_t5<GWUf%VH?)jO;#k]&d*#B6NMq(8O.=/!b.3CIRV,ZP(a#A%[k8:6%q(V@9nZFK?b,Hf1_a5F:^K\MRknje,TXj7]+ft7c:5@BgVX796@2,%NZ'rY78qR4Jm3pMK:$H<>G4]q9jB9[=EL:KA>k,U'aP->_"K`fO>TBa'ou8s1TdUAl?0,RSjgnclVrEG\tXG_.Pu$>ZgYJ*OEHOG%lhFJmW@M;i$Bc]4oB>sLY`h-@"g24?_3B3#.c,flHe^)M96<sOWu>/]g4J?cTq!9'#iW9n'JraO4an-W`!5P;<OcQVVT5`($fE$>%_6(QhPPRbhX('[/=E'c[>gda^nMjO5DH<+a<e8UQKd_s_"ZkCqjRoOg,G!d*a/srT/&Y,lDA=cYMs\)U1a("6EOQ8fjS1Lu=4%d$%oMNZ4lAW?L?NkG)7qI`g7A2XtY@!!!.O0i2=*<H8bb!pFeNf^Q]W)!S#,)UA.U98r@bT53)D34Sgo@(11ekAG[gJID-M?/pJk_P*%h;_MoP-$0>Y6l>$1QQl_\7D(lf;ff:oSNW"mSs^<@ts2H_<)]B.QCGG7]tF=;h[!"SsJ\AYoX+1\5su1."Z&K<<ag=DRk32/%6fK%3o$uL.GLTrNHnR+b*'j8\8*C5;$b$e/(S9_F`O!&;@5qP\l[PfQ4YXlh(*a1*;.\&]9;-QJoa@I1'>M..i&.mWX/#-H`1)#GMKsm%,tT78b8m[#!/NIgQ/E]!qkt?"X-nl7.3RYjI4WO%8Qij"XGlRO--F0>/.kp_khOJc9ZUA6i+MQ]E<`SD7@bUIaE=nhDPfiNaaGc+%Z`OcgE+]Q]OTQ3TD:(*=Yd+CUMbaB07=U4R`DAsP/&NrN41W6tF/g/^iA6N&WgqP:k]3"_VHt&2Yh\E9Tr21:S1^1)=XInNG[6hP%cr,nY"iVUJ*QRQA>LG@Em?5!^S^h_pMpPdoLjaC#/m'it$lI*ddP?>=8DVM=arkI.AHP""pCW*P"q_X/U.-CJjB<^LUVS)T%Td21%-jpB8:&q_7&@cE3ZjnN;=bp_3A"XW+`$LTd8ea0-j:WpVO^O8gQ&)sR"-s3Z"C4K$,"nS<3me,LJLKY=C+B>?W,!gCJ=T\ofK$m?%7*$\@/eKfO\H)g<aDKBt,%+LE(cHUoR6Y<s<!,SE#48=oCP$/kKNi,"aC##o>:AD0\X@o9(,^,/#0]1&`rt'#q$*?![Lq2)8^q!K%^]p9q6,;?gN&Vi]@(hjmmB3:,ZiP^56IE4YcUf+n`46VnCXB%/ZjrfrYn:Fe)cRJn/'UF'%L05?!"9"cd&=Et0bABHoKjZ>-.;KR%+R#,#qr.suANFCG&J3"bogWCq_21]B!!oB&V-_m[5cPKIi:mOe*i^%U=GYfc0E+6b6fT+<rW1-=Z6A-J"egY0`BPIl*'61U#HerO%_er][.lP$?84=t9ZVDmN?r?AE";X\?"V-*f98;C7/>-]%aP)>5E66H8%g#WLa6#]2\0ft;*tAEOD$Lh9&-sj4NVPOF#VRokiBSN5%<)l'm89G*QJNuJCK2LHU5faQRoPkubRTb]e*=dYI`*+]C_''@rPA/CaJO&:!(?FBb#e2*V-9;u7_[2DJ66IuE0P0C/"V_.ZAT87m%c2r,lJ0Q0N%peo6(>tYK76h,l/K/2?&.i)&F:+p*!^^fL&\I3M+O(4.E<Lrk%&3%t"N(#'A'8iuV*Mm`5T8?l+f^''[jC#U*<:au%ZA<C=!2MUU,6n5-KKuq-!!l.bji[Zi:eIM!'aF_I-]'Eon.2gT@VLRH:l0uR3;<_YK6G?;5WHTB`:sCk]L<fk"+a;BW;LT?KK`Tf%T#ZCIW),7S-Op8W&L\7=Fs)n3Qp1fWU!cjMaWV36*APW#".lfSJ'cX`'V]RE"(,l0E72QeW7_k/Duc[Vji'amQD$#C#QA,lcrS(]%!t#!!\gkQ=(q?OPn:q,U<>#1[3pTbt*;$"6Gabk]JNlDDK6hYFrW'\=!F>IFCHNZt^`SLM&=i0]+1T2Bj6-_r^TD5pq>oJ,l,5,o%oE28RdPOmU58"/0'G:<E)Gn7AM"!otR0[j*"8G.3BGc>p*rlBs3))Y&!!ZPMLk?cgUm"L)3V7k1$AfR=j9$2l(\ZK(98(P0oDkCh%(6i;M^]BC"*:f1AKZtM,J3-g=r>=CrQp5WM%_r(K\0B_5E11\OBEo(NLm'HA*@PBaWW739S&m;'3YmHc#VS3h!JFt08/B6,-?C^j%ehPRB'&#+BK@NQ37rYO3]elZfi`HF,P&6)3(tcY2QYZq0#;/QY_:Dj"S&Zm:fE't[)PQkMgsQN^pA?\o7[gFKcm9U#)Ol8P70E_p%c\(+-!g8ocEY/is@p8(?+S;cmW9,9He1t2##(]TVAae%SL=04<gOVUFdT6$-+EZ.uIgu[Gh8k*KJl$5_eI-u5-Zo@U?m+.^+V+eZ%@73o"]HJC1j^ZI^*!3r6(>X-WOGkd<i0FIrA-15n&4jZ'..&aA5j1-XecLUl:eGBD8.Gcccslk&<\X0kJIDcL?s$M:^]d#e`Qa\V%K$]Tm^?$*OnJ!S_6:2n06fFa^0KD25[N#EA#Tnn;E'Oug'@mbUJ\VZp4OHS'"JmqJejKXORs^?Riu]s2P,*D)<brHb`=i6W0k+sg%,5SS#BH9H)\5Z&%jU/7UVIXpP<P[8>\g]ldbG$O'OH5)OAPE.g:_-o_j1#?:aAh7]m'1*8(uV&.9B&o\TEbpqXbpO/$Y+&W^JW()%Eu^I"`>R_k9tou4+:jhf@XVP#@j5IiIV+,NFOl:.h>o.+f`X?V\:Xf!C7%$80dUHEKRk-G9`Yi=%X-3Te*%[g3k0?!XWtkI:dUjK%I2qP9kafdOMaJMDa2jj;'PA?,J.?l`8VB+86(PWGEo;gAV[+:'^dGP!!=Zk*3hd-?iH5r7FIfpHB-B\J-Bg;!Nc?c$C(VQG/>OE0%Up2qoOoefpP)B'-$BRk'7`\_)_7?0h/u;qu=X,uQnI<?ER2AU-D[;`+M^sU$E2GoeTsKsb1o+I%=\:tY92sPH8cci'&]*YWL+KB(%-r#g5$t%Hhqo,BGC0<R$6(1Yd`c2Hj$<,Al=JK9j<"`":OBu![s#?s.,*EejJSLUsE($Jb4Nu"]%=/I:U4HaBWX*8LX>qdY1n$d*%\0`=:\AB"7h-^_+&MYgFe;uA<RMJ7N!1dqE,R6k8:mlrNJ>t(.g,O'l*f+@2`W0&dW!S5:+F5RY_dO"o\d0^'JiIFgM:^pp#,bN:%*ALY@Tbu-6-Osrn5WgVk+UF<")n`'<YRO&?ART.aaCQY5nFq];0_VMDe&h+_$k-s<B;^JUC(ntt>`i"S2@Tc?;^;m>5g.#Q#f@8Z%"s3"I!/D0kcpo9*FH?WG`1YtK!=8kk4tO@`E!42*2&9P-0Z%,cF^P=hE(e_L'EREWBpJiFChHJ_JIiGHfBTpQ+Y;AN>&t5X.#+Hm%BI%K@J8'hLN.g.j[KFBP8&DZ?gD`Q.1`jjRf9,isOgC"BnmJ&nNeE_@)ai"DUsO`8<5T"OM(o^k9(20VS0?V#(lI9g*-#I:)Bo;Q%`"1KM?Q4*ROX)!d'UFjqDO?)g,f`1Vb=EseWHMc"3Y=@a7:6*;E/So\akZq`f9%mWnuX,;G8/.47DT]A<VA!iWI.^b>tECgoNG?f%dTG/V>t4rb2GA$'"\"o`@LDEl0Ji2d;/kZj&6I0oOq@6335;tbV!8#[^pOoEZ$7(JJ9uCGS]=USP#9ef$V>0YmQqO=2q%I+O/&'T%T4g6)'V#a!A<k^PUgPXnFE_HW"h+0@M56euTj;W(P+Xs1.4:>]QRn+%QP3$.,q.IEIqa8!SOmiB9CN8I*Fd^8\-XtiRG"ls69!9'%Sm#(oL"VCq$GD7/T\k5TG0"_qR_.J"]U0St,"):P-&Rl\F$rU=`;o"G+=YrM\nl3dP*.BXAs1E$#EiQ.C"HiNku?/rRn;8[2K@kk%dY^F2JLT0bq:JBX&'[EI93D6XpW$kYFq9!1#FY]04Js@L'[30sR">c@;hL+,5Z<!d!_c`^,k_J1JnfZh/&7D?Q,&W28ok5E?j\<O%c%5pomb_mL/HhMO.c"kVR^-Ds51#PK@dG^.TdfIS*KA,[%bQqEP;odZ^@h$K9cAhQpYpSUMYK*(2E0`GfZ^W]*I,_DT:-Xm^f.,N%h!'9X#3*tgIbYXi.!Zm>Z?XTKQ1k=VI3',%\a:"M.X<*lJcp?@2cFpb<AotU:N/M1O%U(M]FW2$fOo1g0^+:1(t&;4FdWD4JU)97%.d$p2CqE,&E]oLpGFA)VWpH+W=5?/om[`ds33!$CmP08h'u\`$=a,rY/&E9d5ZQ$22Q2tH$M#4XYXs9RhqLf5kO3:,@B,@6`#0hF%okV9g33M&b_eFVU`r;nhc92Nh+M]-:B>/:$U%[N7LjFPm2HgZ;3;6Z_lfmB8aOcZ3"7pMmLPKqDCD*5$LBE)&(tHO7V(WoC>b'"1%C3=M+JU#/S3T(Aee].\uZZ.'3@?O?V7/AmT&DTgAfh=aq>TE+.]PS><Z<ppdmLs$8a5)C?EAjVf4ae;lGgU#YNM8e>)TBmfIlRF/%S=G_d7LJE07@>U'"$g^M3&rpe*\O:MF4W>+JIE>"I(UbuhWt`L$\sK>>&R1Ia*+@#kfR2*/^f]$Rg;$h]m;[44E6AN2jZ)oUtd9M%,69<<M0:fXe\AY/CL]9-[Y^Z+IK)%2M&PmQk;L^_YI!R.h//bNYtK1cKO]@>T,M4?,g'Nhm(+7kVl8AC\$h,eh:>;pHdV9QYt;=G%;[_amPK#DQl6[+Pa)dI.ma:!?>Hpa&W;1a!2u'BpFdM;5P3\5VK6_gNa"@rp=*s^#7e5pnq)6k/p>c>O2V;;U8_/<a2/4J<IH6Wu%9B;k4Rmboo\+L]06r8bRok`P\q"@m/'*1.-cY]C<#^Bt'aAkgXVGFb&iRq=JrqT*KksHk7GW&*hGBFM#btYbZ>A<N[@!d@H8"'iC%P5B+TgXoh^Hh]K>MuJ,!2E+37.8OPShHfn7J6:S:L2YO9M'\?aO]U6X^5_N=<D3Q+altNspbqj\=o7aA.RNR&qh;R\FC=ui(?`]S%eQ.'eldd#hd4Eo3go6@qg"_=Wq&Z"f)^N<YCJ(2CrVu![NOq(^308%gdC#Bu.F$_k[5%$m!#rI,pTbe!WX1H-^:s8*f*63GAd2,8%N?<0X`O38<jk2m"XC1YEi:-5P2MTEICs:]hS4]@^2"l<m`aCaV\gYT'H)p?9b-AL,H[+EEJK1mo]am>go5A30k5UoL3</Tj^\mk6%5Q8]alfWcocThI&?fFK!ci<\@7rC4+\Tp*Snl-q8r8*Gtg!<;#>>F`pqu62Zm+g!#kDlWJ2pKV`FmJZ0TCnd8mRn!?6]jXd:ReMa%s5@++P4n8IcCZb2[1:Ld]Ce82#T8L]Y[6e/5?]3=h_t'J3U,tYgqDEoM;4CrTQZW*O4TG'AGHX/<gR%GkRG]gP=Rdt<B_:\IqC!/%BC4(VN4Qojj9/$_:f5'0#c0a07A!RQ8;.Kf_2/t"<m2?,f?nmBpojG]rDO^oj-_.,qktCSpbClWCQ$r62o6SASd),[I5oR(6);QW%CY$3[@D1"o^k,.&FOWlAMD0Kk,rZi6,o_G&=B!*,)#)TJh0\GR@b]_kAWKsed;EID:YHm3'W[7KqB*s=pYqC%h=Ki_=-ZF&7#EUt%Oq7uT.<6X\+^2,h_LITllXRk^rV1Rhc-M+4L]6)V0$Bl?])LrQ(Bm(HRg/Z%oM&1Y'96eMh\Id0Q]L7Eo^Eu3MdfVZR>h3t'Qt0V%!#UHQ!=FhWm=o'1[bL%:pQ:e_(ktBap$T%UN%X*#Cb_7o?q9]eq4q.cb0F)ujipU[n&NV_J+VPtq]2K-B\D8>Eat8cM8\J-5B.>0%U:+dn>]BHiXn4ZV)4+:r?!uj^gs,l1Xl"*K1lK@#!`tPqLb=<^J=H#cU9/<g_ELOj)btE2pP":j^'&%,"DQabla1M&LtOOl_'m2Y%*"IN:&Wfd)la[Ig8B?4%(X^0UK+#Jq_*O?7ff/>Nchrn2+mL?+9!VXGDSlWbc5O8RHrt]ZZtG_HS"uqoE.s=/dp&kF+.hP:eo+#Q%@ajNX$eHCuX>YhmRnS7c0qPM-2U"qK&Zh&To(lTW[]80;+pdlhe$@]$b,X<\58D>U`L4cN%nLp#/;8s.j<iO!HPi.nUd>HPN)e@O%Eu$@(a`C3f&qa''005:PL)YNBp@q*%`EKEK<UJ+E/ka_i:4R)LXmdf,l&SB_B3#X3;*.3ci^L-fZQ].Rd0\!"rZK[Ib.8+QlRm/+%Me-`A?(&&25Xi7;=Z7Oj9"u/u'85^dOD(bj&t-(>-r$:XO\lO!V)4r7WE1h,CQqU)\h6hdQUu%,;0`<uMsHJK7_+JJ8Et7q,,mst%.Cih5Ue>SmqJRVNqAck,\#sAOXQS'4Se$a*raYs"jh&%RkO.ph83l->0r)LS:.JZEH(I7uV&9T(%nXF^lb<lT1;d<qI3C26K8LS^%OD_2SGl4"e-Jq@9C]&r.48#$u`21J^^65d+#ikX=4"4Bm++>@ZpI,^%8<Un=l/0[_rG?#$=JAm\A^fXO]%K#Nbfa9U;]eQ-]Bna,%BGa"b3"?m2#c@u[nV<P?6<W4j8_lfe;M`^ulHEX*H8X?7O@EM*@1SlsIF`=Ss5Y`=/<*!)"=oG[-G^.-+d0Znh]QI%Ju!ic/X"?#%nW(CTgaMY(]+OhNND`50q1f6(_Q(2!5X*YG'b.J,SSk3;)=ph:ioK-i,I]O8<s9bZ)C2>qW'i[$)G7[\bXBtOk4_?#;Ek]`KR8/h%:Qosl4Y,c!!67GmhgT/Vbc*=/!.A]JG]$5TY4IdO0M8>jba'/>d02<=Dm12.ceB;M5)8N$27-krWMEZLHCCdKWbN1G!Gr;/r2S\q%9fS4c0+,L&MZn<#G<np<5k!u"*7TC]9Yqek\B(OR4a5"@h3k^4]tBHMURrah!:j+F_tB=Dm]@"?,OPtKr@.0JoE+Vgrin0jdVkU4%%=hm'KAW0#>O*FFg<]kQ;f>`ef&D^,.f8)ono65$erB\L@.cOnH=gsg495Q%;'RiSBp4^.MI,Tf3l7%S4M:H+mJ=g(8"eNA9(&o?%qWPiqI;@BeLW6'`XFSkY(rDlN36*Z4[3Z<j&&t<\"83=_!Fqa-!AW3R0"@['&5^Lfp).b/"d#\AoY.hb2],7E9_2CE4YAS[XqOFe%l@JFA8TKAJ&mGtk7QNr7+*OG%q%(\BG[WBrB&DTHI(=Tcl[aAJD0FVdS0HAK'NF@)pM#_q&9DZVKs<=<6URuaoC,R+5."n2K"`)!%T<*G8>kW'mjW4fP1JqE.+itsZ+<TABbBs%eLr'j<bcLM5nQM9_7#V>fe7!4(*0r6fj'j,0]heHqpkWhkE`%O=`jBiK0]oVb>L#h3%@*BUf>^FjdD(UlAk+4*cotH*Nma$@%b`U%0hc/H$!P)pYMp[J&n!i<XPP-"ul55%<#9_/tB7cj(VAb+-Wf:sdJdH`R_5%3W#/hpH%*^7I2`BepW@YQjMO_nJj]\q$hbJ[u;3qYiSoi*e>&o&Y&,q^T>0e$8?NCITto=;SbUE\<3>2Y1lOsM'+?69oV7(6A$1&"+b9hQSi%m$oJ&;cBaOg^1A"%Ym#GZ"BOmXkbeb.TcB/k[8dX;$3ePM`N>V^lH`@OCdJi+,T,L1&;Fqp+e+Z'Wt8bP*;8p+N:/;I"#b_2p.b=%1:EU=Nf4d4+6/i]l,IuD+7Nb96/1.!62XJM8#"i9M)t`mRj;2H39G"d@/"X+KjV?8*^9C^OP\1Amu#mff%Bfk>7('.0sITb7M)OW%-C9_%QjF9?QY@5;+8-(>/:0Hn^_tk\/VuB/S"00SB4CV!kJ8D[=EGc'>]`qP*9!f?%7`[^CdPEA%k2qinSL+iVE7M6)6qS;PfDi@%2&E/4XsAa+2f.m9<:"AqUk;5<&]^p_DUt3Q<)368V/Q?eg]DO!li=(*s*5JOgPJIY+^',\l:$#(%"/>/j'PL+Z&KYklsI#HGus!U%3sB(IMWt3KlJ`rQ/J/8a%2im/9gY@,eroP3(YV?p\tGHSg)YJ5gtK*J\Xj9R9b!3D8OEOQ%=K.TYJOEm7='#@=mf".5:ZgNHV;Ue%Ci5\X"4VTO?$uF]7=P[`@j"+Kp@WNum!sO82&q1KX,SpDjID,aE-5ga%"(k,8;d*3bY:qJ_snnKK7]77O"`UIlF/'jV#i6(mt_<T%e%_*PU+M"J/\TlhT]P+40.mdi79Lu&]-uUeGRFP,s):olA(2<Y]@!\[B+4O@[W(Q(Fqu-rUO0hOask*$+Nj[$2,%pLg)*9Y3>7d"%c,MmJ6L:ZcXirqok\,G(E_m4.<46cPP'86Np<MaR=M-ge-Oo"dI2akfbL%M]2@>Vb\d(9>R&VlCVRJArZdPI4Y%40hDac[F:f-A^%71Ia>Ca"2?@";Ql0Z[*m%q8]b2/\Y8KA-c[g#Ts=r_^@$9AM.g/U(@3Y&gO^p-BDcEXN!/;IC.e-Lj>MmX[s>OIr9jqibR%PfRdD%g)]Qu8,AIk;)9":S>C[SA!$,ChpISS<g;')&B-f@W.5@`1_D?I0L:+&9N&'n(SUVCFi.'U,A+`R:?@9s9+<:\6nEG+kg!TNF*L)]%-_g_M5qRbS`.>kZ,,`>tr#CLDqnW-/5O$j)ktnZj4A&q+PV+6gIjHTFQbY?TkAEY\&9XTM2r$SGb>Anu<C<ttHg@"AOK]^UZJYF\%N;Wi(`KqR+,\/taGLaH*M"\UXi#<uNBib[lKK9L_DlpO*X+s>Xl/\Cd67bVHJ(T2HdFRUrY/0cNjd8q3Th^C^W&(0-cmlj7eP7ei%[1qF&`O4D%@9>UB&QQ&V@:g1"=<hI1d$&]b0fouoPkS'?QPB,n$72T5:bEDle%0NR^C>kG<hWH1XZ^j=MulJm*c]#uSZ#_n8/sH@%UW=anUh%!2UR[n0&ue65rYE%ZVDP$(:b0?bohI3_\K'E2`H;]j,'j3_dofQXK:4IJTJ%iC*)%]7KCH$)+Jd[P(iHbUItZsNK[dMB%fL,DFN8I+`oeA'pQtaO2X]Esko!(qV5+E%Z+_s)>:@b15F@HUtcSh&p_e5cSpj>6B8b_K9/`_"<"*=#:nV/-b#J$LHd].NnCXLs<%"j:oRCgdnb&dO=I\N!PKqlhiKZX0fMP?\Gfd([FD*[jI^-m:fF+dUW!6iAsDOim:C?<k[B%B2QL?RFecc)@%\K2"=jZYqYt+s(pt%$8e1$7*bK@rjAqb[g6V0P8J+(+,LJp!EWQ'=87)Vipo5<nSg3%P:W`$I1Si\jR4CJ/%f/E8M!DoDg;\.,Op(%RQpHKcM*:YiWYh_%(Z>4LpA_X-<J:0D!\NiN`K%br-*0>VLaeD3c$rR,rh!DfVDS&1r`"`.P&3'cYhpk9mVdOK6MPbp201/pOrnZdD0UdCPIZ8XWK64u%5h"6[)/3Uce_EU&'9W'7;d?FYmh&VLetc=d337D00=t#Yjh*dDVknB#j">Xu@cTYC[i;`#TR&,uo8'LUMu07h=a35@^*@N:3_'/q%G67loH*SYCboL38FZ_I\a&3pTk1XIF,K+OTX2hOb:Sj_4;Bi%/jP9bX`2I*,[aDff(lL_R#<2KA^Cf(":?#rC("&XKIuG!U%*'C&%S)SQE8B)Jp7aRO,/>4E0QN"E=nJ#1dVm,j8CG_`%H_`Nj1TZF9(Nb:L&FBu\Yj$L4DB[']KR#R&#FEU4jRt>B)UI3IZ@'[d"n;@j%'#dSZ[K+Ted''pWo@hIJE'na7g^"9\FhM@o?J>7OWOm1$Pfbm41m_&Ac"XNs#+$mf*a`iJHZUDVH;d;0>[*/D+8rm_@2UZTI\Mr?%h&e^LT-MM+M4h)BWdn!'(/doeJV"SoP4I?eaJ9V5D>M4!6:A)ZPqoj66R1#YSJQ]@)RK$qX'411MK8Db'K;@U!Ni>)#\tq#BT@^2%._=h1BYmD&cMCut[]:=86WD_Am^G:#L=+Nml2OV^PO+G0*u.TZd6u&)R%PS*9Z/hL^Q6>!@r,i.G94gD\;7UuWl*g>/'O9LV@n(s%ffL20Z,aI*T7,MV]=C(Cb%[cu?mY/s,TNWO"FRgp>%QHr4%K8/o[C>!/fCo7akM]g-p\9MgLXGY9U!e_^KV8)'=KmEQK?rjfX"q0%QtHYomCFe&$[dE$m(=f`QPKBaM-lhQr5^5h>>BW?=Al"Zg9LPN88LZO?<cboi\HC<_&g&s\O28gK").q\tQS(Emrm[nB$IGZ7<K5%ED9D[Z2EPejP!sX`N[2Lj8>bP![`*C2+;C.E'sB(2`Q,JEEOeNZUlT/]a]q2:L>Ln0r-6`fmKL3YHXeqXI0bBHhI!]8X]9Q%a';L%#*.tO53%?qAD3M1QKL"#MOKpB_pA(3KQqsXaKY\ah;XJ+QlltbKWDB'.`-O`+qH89Ls'JX'VQ>$"J&B#fkh(DV1c@/=e+)F9)K#V%/]Tfm`$o'-F+aA350N-]41!#`(W+b7Gj@Q4E+,(.@M%_0B2OaMdnQ?f?1$e6>cn=uBd!bpk8GFkWCG8:6e>K2$]]Jq&aW1.6cXB&%hCZPBA]nW<U!_[<6c,Dlk+BC;Ze'tYUGMH7o!(F)3c9u\PQ1Orl0OJGrS8,^Vd6$/hnjY.2YZ>DUI`-,Bo<5=oXdmkq:RhUO+&((%7g5gZ:>a;;$kPf._)JAi1Q!S*>Z8'Ob-([[Ee7]]Z>K$\,[ko3d!t,PjuIie9;>Y]B'edc5F*TRE%)cSpg=es#T^u*Am\Md=mp/_%1-[et'QR5pg6PWRL]'t;:A;#V<=qiI7#EV'Q5#38<96SU6EWAk&qYUn:#m$:h0Ap9<Oi3(P4><K*FtRgi#ppVoY\Ea(P@XhZN3=q%3J:@r_t&[R-lj&Eca-%dXgs3%%H/K2:TY":DN^X.'>&*8$WeQ3+pf'\NQpqiA9e5T<oP6MD.d#`QE3dKI.4.Vl&J<^AZm=i_QA>4%2DUGi-*&KmkP2\R7Z;68h[UsmSIRpbIZQO!8'I,0S:KPC/(8uE^!;`0F:ef!ELei=5]DOk9L#A?Q>_/+[aa<Hj.doUm=LhQfJrY#%K!iZAO^rX6em`,j>@Kd9Ec_)da_uu<I4B8<^WSPgRA_F.(G2J:a\@cr'CObtl1I&Y<N"R<@mu%L2Ne<u>2/A#*o#[]as,%1_?2ga%/1P0bZS7V;&9:)B8]jZ5KK<%)7HKAod#)9koVT3!FmEX*;l\EnEJ7AoRqM(eh7@t*RC[Nb0rAh'Tr_+R6FZBFRn;GYQKmf`2kaKI%gFE6D(klu^IgGGQnO-^-Wh!@MT`TDW^-tc_eE3Gr(lbAl&`M,;-V7gQP#Q.3W+nINPDYLhL?a`69D&WO\5i45(a2C$fRu53`75JC%iE#S$p*"b0Y>Hq$;'^:QFbE`D9TbiI$0d?#OT51p]fq3G.X$)"A$P':fMW-8q=1t\882%qUt5R=l\s`SoYV=Cbmu3-.1_@hAp$bN%:,5)r$`USe_lS5/)=tU,](:oEH>$VI$_;TWb3!I[i2OcbaeZ@?m]o2[\WgupDhi#:c'+>f$ShuJn3PL><\:TKeP]6T@O>'1fF9.%%/epOVGk*\6e`N@oWQhm@5@V3?SpZ`*ET?s-]dZ:9bT_c?AM'mT[n'1'/P^1Md;S!DE<P,f.?BPO+/Fb[*h6AL+?2?<S%!QJ?=bu#%oSF<l43j0c;M<IsOgMDs8M5F0V^_r7,kVCF%1Nt<QWe&8LWaU2LQ\EuaiC&H6V+T:gql')2o-%t0cT40)b!Ys<Co_M%2I!AR1QOR%%I(Wgd-Gc"rqq#EKp)VlF16Z7:9)NW1B2`G\GkmA_TBVgXV+Bhf]T7[^?AUHpIU46]i.,3a[(lkKTdTK*/ET#A6+#LLT?&/37nuQ%%UEhC=E/;4.LB%AJOr1g1l`,:/VbRRD!(5HPnHlQe+7^Ge$o*f`57HE/O*YPQ^)f_=52]CaTuCqA6"<2*Kd)>W[3>8L5Od)9*eSR%L?P8)o,^^X6a6cY,"2o!GZ$*P][>1UVR@NXZS>Q%6d^JkV5GLhIp=.43AO"sQHm"7-+Gru[lX?H]i[::Snf?4>("+6/o0rAY;YC6%@.M-90f]uBoL>Y?0e3QmYaH[mE>"ELX!.B'n@UphlogrYP>p1)qu%XW`f?E4$^Xa\7&1'n8j#+Y4(Q90RV`X`e`k-LXF=Xk>cku^%N+Yd!QR+SL'pIN#=J&2JM0Z`g1fQ%bGhH!dNT1XI6>#X4Mr,)PqGcOWI[=tX1/Wt*='A3&PFENo59p+j:9W!;q\DsCXf;@QQF9,i%=SrNtap9F1$lu'M0sjUcE^g:*g+$j"5)Y_)k63eBMo"k/r)K#_LM3Yk)8`4fAXHPa.mq-PXpc(E\Va3!WCW^f<D+`A[8a$4\-_Op%G0:.R7d2.lXQl&o>0\W&EN''XkZ('f?nc^0UW$1j,!>_eUek6p-.JAe.[j/gKQ7dAe=L7DW*^:7`>8sBU'_'MV&@:)_23c_i&(dO%3f9^sX-++:H93Rci'kKlAgRHN+aSQsg=t-tMg6Oi:%CcdS.R`A>ZTpT&q*o9-Ss'`.A[_/;M64qO^^bZQ<98aWN8YR-.\i9NV07L%jEa3&Hp#u]N*FfK"I@ceZnNV*;=8`a.miLI%)'SSZ]^E-g*r0u0-OV@)q'3TTj3ZT6a"JKUK9H!ki0U@=_XcjX16->1N.OC>u"*+%8lnH=.BZi`&ZDP3:<6*[-#ounQ=HiCaP.Qk$\lN$"n*A.XY`-WfEs!R2^N_aU%CjNkd,"1WMlX;3H5_\'tYXg[ip'GNnXA13N)%:%NKKQ[-HWH16U59RBQF*t1j;mn"8/Qf<o=MS9Req:]./Dl%l!5e7)#%s;2[3:eI4cU4)Z?-!%_5aJiG=bh>()B)>`eS=?Cbmc1JNb%/m.Ye;LTt!EJ(&J'WWK@*T'C=W[6_l/VS#[9p%VljgPi%3/@D!/%.Vhmm%hU(EMM@i9<#:!F:rGmE-CFmZ?;R%*-koV?d(1)#kjP%W^5Xp&HN<5CUhdGJ,rDG?:SJ[Ku7QO\SA&W+t]"&H_(Rc[%o[[!`VcB_H_\VjbIc+<L(`I#n!RBYIt4(fZT9G+Z>i$BKeF^ZoUG`%Z3Tt:OE#Z\5MjB@#E(mPN46W=.',X(%N?qcamPRN6Pg]9L\0bc\Kuf^/1W02-]<=IqU0'Qn5,458f2b;Y6GS.lbPJ73fFXXKo%g7%'F/8k>:6G\#nA=n1\:)<gVJb1PX2W+A4d!tViZ^m*[*OMi-ToD%ZOD-0&=V_"!R^=25K93p>s"9$bmdZBG&VPi$!!&'l_1s\!Q.6%j7K5i5`cG$_O/;nQu>1&NPiJs>3mQ2ZdkA7`TU5[2bT1?fI_cD,tTl"OL6VEla*Ef26(`(luZ(0bM,^r96%X:G.W.^Jl*hW?+)!J%MNoB8BD-b4?D#,9@DmZlO.jMH=!,J3"I,i?Tu?m#\Ng)epRt"9B/b1SdIonW,r1ZPUgH^1/a:_+:"'WfOQm?@8.R]-7_lZc].O.1%dmbN!CtEr?_=t4&!l'Pb3Q>ML#=;GGpBH3Q4a;\gak/mEUiR%[J)hlTTW$scg';.]2aQ_.g`2;W>5TEFKX3i_BlSi5jYs)U)ItE&%]P:*;Da#F*%!.S=&PAZdb'p[_Pft#CSjIba-7)?7Et$pFW?R8sKCS?UU=gZON.o/5E<CmS(X67d$uk9J;n)te0i]+)E7B\sg/F,W%:R-u5E(Bq;/SO<"><klE*]>eAkD3,#dsTF#0m:2T![M!hq9<q=/8JZhG&:p(Q]\pShk3MX74:;C.=9<C<aqMH<2W9IbbT4"DG'qG%KO1:'p'raYe'ml;5=h<T"Ma:8\<cn,_K'J"'Qe>7V?P,>.2PN[SV%>slSjR]eQU0V5$P<p.[VAuR+s%)H;q[K9]\a6cmp9.Sdc][%\T0BF#VZk&+_GkrLfrOdhmd'gQ4\`a/P3[mNCMk$6g6mt6$ds>gG`rRBNS\cZ+>YO`VLD1=2mb/@-A3]L7r<L-o3nTdTELqFIHA_%H;E=LDA9k+3tbUPXFkYp@-KA@JgKDX'eE4u<3X:M;o+>f(+DhS?s-,P=LM0V2n;K`lg317G`:&U[TN2QZ+?H+7.X:]&FlfIJuE(U%'#KC&CIi\neOcI@=@m6b2H2OUR7Zd:G!gbFd?BS*?C0QjZ:/#FL2p?g"9sJr+c!mO&B]YO.D!br<hc$<7$='B$0d?#OT51p]fq5=%'3rIZY%s2=:umQPIaTh",jm^AXN2H[Sh%,D3S%Gt,ZFf#'J#?SjGL<fl?X^'\K8lY;33bZV^t=]=S[ft>u]gN=)DS1FHN(Ef@7pC%#c0a2AY3*u9#VaLJs2`7d?<66r&R"V=X7:2EQuk,S.+tFA%M/#?_((W0H%3W(ZXSX,iRER-cPFa,ru"Y:gG8c]jhr):o.E10m'Z9%RC\WT&Fmk7\fKq6mJ*^kaU0+^87k:=*?lpom?Oc+1sno1)];5pP1:9GF*q:9,PDTs?FG,`f&>];i0Xj:Is,>>?gU+_a#!X43J\G.%pKZLR!smonCLU$_>QI2q)/iY.5dW"K(-MG*.l&*_/hp7n(aGqT\;Ln!3hnIjF)",C";,W8Z];Es,KnD8=eq%mo\aus6aF/Lhq_UA%7UO.YY_\OGSHP='?@1%dT4N/qZ.q[Z"o#_8NpL*nRp:T86YnH_E$]r\3aei[@_W\9<'CGpDM$^2<^9sS(4.9;?>m!h<&d0q%tUT8%^H$]glji:u['R;AJ,.J*6S5??"G5CGNSq;P0fr?HVNOr!'ZW-D,R?&%p_X2HfKL=fMPU>n?I(;*@[VB3D"QrPH33-]SJ,4?K^/W!%/Z"(5P$Af%WEIeG:=(aAN@J1]&E);WE:e)ZL3"<2DfD+INg2F6!,U`Z's/d0/AL/k57h)fBDNd7R@Oop+_>u`'cd:"2V@tZm9Le1%>??9!,n/ibl#9GIAu3`bqCX-VB&M">%W6_jdCD-km&%SPSUg7l+VbjO(IBe(*</:;DYe_u1f$*UQ$W3O^:BJQU\Mm`H@7ET^R4J5%iKEl/"\>IF6)skS\Ng)eV]aO/4i@D"M=g+"lMd5eq;!DEIeH)(KW)'98ut9W+pBB:nOE'LNins>)Sr8nVOOff]1&;q&0WY.YG=G#%]S_tNKK!uIF=I"7`VY.K=kpT%#nuS8#mHsDD`Fl*(.R8j,pH"(%6`h62[RkZOeUa5`PnQ`MVQ-BaB$N>o\W.%".[g0r;o`N,Y7-6%apbi?Gd\\)%:&/_3^,mkl0\Z"d>1Wq.2"<)c<?OK18/lOfFJTBLCuVclDZTbFf-L*&FISXL^.KC`/JFuKU%-(qSUFU#c0a07A!RO%84<t&abcDsY1O3J^Q$V+F3k7RAH;bLg\lUd8=[+5jpEompl<2PYI>7J">e74Ufb:)#mZF/O6cOt(g5'^^O[HP.PQ'>'AX]!jJ)PF%:@aeU3DkLkB!TqGc@oHTO%\u*EM9-Qi\G'!j5PWOXnO]eO=X@"8h1fOM3<d]3>8^T`oZkR<8[2DU/$F2`.Aa+'MDa\;&L&k8ZjuT%1kf*>6;HK+UA(]<<[&469IdS\7>`ddQ)]cQ'm8g*:23`(Vl<As&QN[?(b)jAJYpqo8Vg@q;J9"Zin@AVPdr>G6CX.i,5]FUHlu9d%R1e5q#t=>2(H__mWY>^_V;`WAPc@0*7n9*a.S@*>LT-uAk/9rl6Er%P)-n^`1A%pD)]:3W,)E2)6kDr&#\49SK2<ni8F!SIOAqsB%P[(F:km"JWs8*YH5)8Me&li!Xd@Hd>`.)eb4u?k;U::u8Lghrn:qE8EY!l?q&t!o)2Shka6noT1OaY?*-t"DeOVs'L*$)'H&3ri_%#VdX/8VmA%'Ra"6/eYTj6mbAiW+*/j]oL;u#$$t_5b4DLEbAmVXL(Ne9SAII_@^1u)(EFtRnej/X]dRSePKBg@O;kPfSq2s*gK_r%?me/^oTPP"3`OjRpaA*F]TfLT:q@lLFI@9)9\;rLRhuIZNp!69n)O$9(pQjFb%AFHiY5LVN][KTL]>>'7issS8,A<eZFTe=B[RJ*%F@_X'PsSk0lha$6nHA=?%<p]#_c3"P\#!R,W7Yu/qF2r_3Z&<R+_?;r__7h&I#?kj8TOSOrMB:4\*#j,)$+UdFPUASJ.nOIYQ*"<%0#-^hkM)GSWlm&e,O*g4A1Quto9\?Jn^C:f,LYZWLPHr]o@$uoQ)SF4PqFSV^M:enr:\W-fD1'=G;E#rg3,$emp&$!oaXa-/FN$N%_b#go?<L.cK2:0*gB0,R9?h?,qjBRU&g?fpWmIW9q2,(HQ!_<A'qHu$7p@@u*Xd]t]fm3*Mc+j:Ubf3qY^026C95QT*2U$]FcON>%W7CC(J"],Vk5i&b`P!S-YKPVg)o.MVkMmSOLb^VhF6U27+_6p.]&dD053lp0U'fK(9o'0*aA1cd^<(A1g(?!5);C2A`__&jpl\(s%1j,KqBoYss'V6Xi]h?(.H-B6N,QQAY1/_mfP2]'M(=tPbmpl(f16)qZlgbEHrq-(Zj0\57M)$0jT@m\Tc"M-;'mHNMb`T6Z!n?gh%S"K6%I/1p'dOs'dD_8r)k.sjR72X-fTifY=G<rQ*,dS].orc<#gND]+q,n2/'UD,IdBOm9G.r@adOE^CKTEPike^+(`nPnf[:A[4%[s4=Eg8%VQ9N"P1@!aOq9e9Rt<sD=P0r]3EWTeWhV%BH@<"Dmj\#:]s?o1q!-!?B`%A$d\1qdO%.;ulJ2O3j1478r02dLE1Pk&Fe%YUJUm,#+mb8m0(u3qHqmX!a1<)QT'.*2QOKf6'3IUK59GrhV#ShHc;n:%t2L:[GYXZfmQXQ68$0Y32RUP_,!F(+HY\l:DG`euG;U%8#]5)F=>p*T!:"tq;i@e&\$`**c*J%2m&#Z?G"E2GZ'8qnf<rM<J*[?6p5l'kP9d38htXc[)I+qa2aR\^5V)b?u7jZen$r8(dLcY%Y'3HIiBFZP7i^JKE7osQMe*ilP_DZ=CfO=b>ApSq=tp`7<]mi(Qhhr5\S?+38q4#20VYSfhe@DD2>%l(n2$nCJnIqQa(D>+p0JK1%K\0HC@p&(/[CFN@GT3t-F8I&"c0@8lR3gfrEuN;4k;:_T*ajg2\b*J5k%kU7b9H'/=$=)Ze66-Ii[>V4\BY8G_ca9*pp<eDe9M.(%<n)@7:Mm91p#*qjPO8pp74Fc8Op&R8;FG9#$;qj8fQ$_1%*.+i]fq3+mL\+I-nJ__qsA$!Ag.+&,ei$o,cN`G#.<8bM9`=pMmIU[%TTWeNQ,cVf31>pQT9nC@aaqh_QLYbL[B9/]>K^:Frnd%#]@Ks;#&d^:]i4$5Mn2aEns5qcGqT`r*&$b^;@3\aJ%[s?Kn8IO]Muk"%_H`FcQ[A*^Flib!gOUaP4IkT84s'p1E=^n(.[I7p5"EG?]@M2SiTO"P3ber&7"a<uO^U.E"K`RCL*rI9RP'.fA!&-JMKUMf2P.bq%$84lkaQQS<@=SNF:#.8MKLR+Z^b-i=9oNuCZO^&CDi1Q!-MbU8hKaQ%U>p8WP5Dn/0?4o@Vr8_IXJFJ2iqb0lYO9<r9J5Od#XVV`%"2!$kr:Ni,.(,GrhU8934Xg"SPXMj>bMEuLUMPiMqY'c+do-AR1\cTIc*;Xmpu%]]bn\+:>7cBE4\qkQ['Yn2`g658(sj.(bR-t>%$PMA\46j5MDC>"M;_Ntq7DA6gB^O<mQ,1kEQRILPTTm.o9`g-.6:P^l#VoKh@0bOu5TZ\$5n<k0\G&.8=1P%C?hV4pi'mU;n?p-!%EL:"B&K&AReVQ)N*i]G+d;.1-DaK_X(5%odDWTCs_:4Tkb*);4s&"R$#X/o,-fmjVDm^X3*Ns1dg/u#=.$!r@6S][Hd^>a%!2?1h%[!6@TP2[n.*DFM8]T(\3F"#5W5G.N$4e_FjV);!6OgE-7Rh!,r5/J"K@i?V)p^]NgcM?Z/0N`D?d&tDTj"!:5Ou:@(0$SN?ikZ5q%E@=KcA_5E)&"4NHc['c+ONb/C/O8sE3SG4A"kOpikZa0q8>(?!.7HrSb0jV;41Hd#`*6$o8+-%]1`m:9*m$%gH-t-=19aHoe/$]3%^YY4H\oJKjnLRu6-Jao>SF9%5R`gRhDR-RY<1)`;.Q(?=[2U,:b$!>Vf!!<$.`tmQO]Ll9-_uZ@eq7n?S:a_jEmUVP<DVi@BWOo+%?n%=]YT:m^IFM.VQbS3"hXki'9K9`K([>IrNGK@/j/X`)GT,J#:ZW:Tdd<]]U5PJ9$_t8,0Z?s=eR1K2DAcAekN,jiq9]P5Ga(jL%AK94R3n$9;]WCjeKBo=tko)BM+=ept93='n17=<DKC9Y@pQ9fN)9mBL@hP`CX*<cM]NDkbG&)-o^8kY&eAu#Khb[og^-O1<#[/e:%W+b;l/=S05QRp,P%Aj4GLp#k9eOK8m/"4Y[M7_Z+f)-\g_NLL$9"'@M3YsVE5kTehU9Poa?n(.WCr_@EO';Z-jY'fPCSj;h\H57'%\peW,NXVPWS6d5WM0X&m-mrq09!<j_$R'95>#B'H4c,q9F>Gd0(M4Q4=M9"m5//#kZ,rFqpN:4l4;sD7FeVUPF\j..Q*cW<<)fM,%2HOE,9SL97nJIJaOaDKoc1gl]*4r<0)6RdDU)*j"Qr+-Qg\..](A8h_R@T/)%AD5J9u<hf@?@@_O;2K?A95;YOt!NGA3<n*FRQ._%D7JBkQ1&;F)W'SSQSlG!Wl-+<M+H_P%a'%OOg7+cEE!XQ31;@u31,S']Od2B<W#%,ouKi)-!'Q%HC6R$V`KZ+[6"q$BAQCR.d&0b%feS>8;S!mU=:\8mQAeutb=W`pjZ_i&>fC8J[>H[TcGqEcBpbt.pkn#uV7F]X0#<^2o-DpZGt_Ah,_<%qi,icfAXQ4`i5p5&ans/m%^5V2]9j*&-](>otXV(c:j9PCC<;Gie!*-[]\F'dGD9=;aTZ,Re:q0fDoPiYq-duCI:')[G-Zoo.LNB40(J)+-"Lr,gY_nhu?IQ/n%?VScgEV>9F8=ZYh=%]P25778Fh)f([jc_7keYu'WpH5J63to"b*dB)<ks#%+>a3sWTUg@TL"DQP;L:j&@ObqA`cGDA8+5I@"o_sO%-q>\;(7:,q&c>Qt)c2KdO/F)8(nG<Q7^u1ta$D,%((Hk5-TJ.ND;I`tLEA$n`Bai-ibi>j(pQ>uB,sfH??qj2I)Y[bV5C(j@C%g4%KI@g74XM+QMc0Ef1^QD^XTIj6CK6PW8\u7p3?%?rpA-P)+"u,OH>Md)Kc5<c\Ht1HI)["nQ`mKl,L<)4NBo1$^=L0cQnQ%8q5IG&%au:BXe8"b@p7j@VJ/p3*&Xm7B:s_0#9I)bp'D33ZT8bF03;tG6ZkNoQf-0hN>*4.'^O/Hf785#I0A7rIG,EEDR.(#/DQhB[r;'ks%dEh>n:$@.QZR0c_]NUL$(9c;Bf$V<ke4`HUq&ZoiE`#bK_J$+9b?ug,C+t)N5fgQ=oeX'6Ne11(M_V3&Q./X\Zeh9Fouoc=76QQ,%QZLM?4fbGZcYBXWIkd5RR=*U`H&g_D;`7W;$_>C"-WESS6Z:XWXeNjP;YS*3Vc$;VG]_YRWTdAZC-sj[<2MWI]dg0PpZ@R7L5pIe%nuFI8Her^9!tifB8Xa$YLG+hXT[X8e1eL%+KT)Y-,0Ac!dLMjY4?c7%ojoD`+4GHc?QO\F'87eZb4;r-'QrqhE>OP"-S`d'%8)b:%BXrA73\@VqroRAf6b.<XoMNsXlWIB$3XS_J$B#f;q2'u!CHQW739$or_R1f"Da=a;W2>dlRk'X1o,Y[`gN>b&U\9.kUTW?:ATF@J%c-]55gYd4_.FgHA,`cX"X:<%Ab>-4aTSdcPW4B3q`)3ZqELeUXj&q\M*^e)2G`&4pj<lNo@t#2g0Z;EYKkXD!f7Kn!Z_!BmS#Tp3%58(@`cG=`EZ.J.]7Q/@@+*$mc_p_2UhamWEBt)AM[n[i!gs4Zr(/M=+7iX3[&?Le14=6lTMd$pLeV;G5@q*eW)&ce)=hZp'F!#^F%kG5.'e]s8c;h7`Zi`,'l*1'!c@Xn?$cue<J)*6n2fSq6Gm[fR('3NR))b+fpj]#'*3S4R'AiS-<@<AEJ)ZC5'leE.EC_Q@YC"6I]%n>F%K9NcZC$(WAKOnu,o'>!E4r,5KC)CgJT%a2K*=VH"K/b?onb@A`#$VEt'd,Hr%:YOb+O0p<U>VHlLj>mW-iVS$n!<T5hMXK>W%D]K"Ib%X&->='E?ceEtn"^g&]MO1J^:*%!,jKYjo?e3q<atC69l\GO-6kBom+5!p/jfa.k]B""cf&RI,16plHE&61r4g'%^4]=[d%bkcSFQJ`>5k\h.SLK@&"\HYu_US=`I*B#h9\9dYNnrO/\/dR#PC].+J)YKaa5>iOm<l@PA1o>qfj@=Po_/^)Z^C#t6O,@,TJEr10%0a:,klJO]nUCPpH?HM<n9/Wi)UeK^VIqo\@1ln-#W(\o;'rZ`47;ubPnOP-Tp6`4\jRfBb.Xm6:<kbUR9Q;Nr^6^A.3grN_Q)p/H%LcHGX&+_nu@nHqsQF,J4C^6eY/ncD[W2Y;#hHYq9*/1nTBoU2Tcs@g3plSHpf/9#S,#r?Icm,HL-.-9J`0J=rdNre"CZ\0ecrA6-%M`Nl+=d`VGKd1A2U.9']fc\D$&k8&S6F#slIQV:m=a[3)n'.*J/.R/pZk>oK4jlqhlI!/Egp03Pj>RcN<)Z1&N>7#.V(sI-E'K-G%ojp+tk*2Z:Nr0<"!RKX//J0EQA[ior,SX!!MhG!.'[?<H;86[2;M!M+kXdNT7@FX?ZAi0*Pq5j<^N+6P<O-*&U6CuMOt'V&,,(0P%:tBTZ;'i97QETGVXYT3pUJT(K[8c_OJ:2$n'W%n4N0n;&gINWajGos*PQ6lh7S+f'OFgBA*4/O[;,\mYBWe:*nJ%u[\.3@[L/U-9%3>q?aUhrLgOk`f;M\M92.FLV9n"c2))DoPYCFXQ:gC%F:;j)CpXW_s/[b'\5rk1^_Z=K5`&PL\r2KI'V/)=8u,KVe^at)%ZTnFhG%VDT;-`L;eKEm9cBPm:"(EW?0gY?\FH6J&DS*MXqbhPDqRIj@BR%geh[:c_Wjm(V`k#t8&eNknR`41Nj\]FEP,$:ul(8B0!b;7]4l%TbXFrdnEmd3>[quP4LOZV8kl[\K<]JqG:s=&W*8bBeqV#=(<,l=L-)eaKLi/OYnS_UGf$_O5rmC+j"q)*YXgGO?qAq^_XAF_@3;.%i5)pXjDEOUT-O/WOThA`D_Bu*Q*qYMn2NG!^M?!mjJ;#q$U2mHDLud'jO:h4q=UNlJ%7Wkr'G/dAc1QH,PpDl1u?R"heGa:\2qlb%V/N0XZQnLpD`"k*Iel@Q/eh`A+iRFu:We$-5l:B7Ij-T's+A,^r/?NfmMD1<rm?5opq$mjrqt@"a-@MArT>u6mJuS^p]Hbifu0nt%G"6sME4?N`(g)&(pP3'M3=fIM*N()I+u0VEmQ8X74[IbKc^pIhib,dUc&drWNSJN_Rpd.t&FiKR^AdbcrHD@`]A>"A_7]pRl@s%Q%$IlNaMPT9=bP^$J83'\tl+%!.F-9+I:sV3UJFAH2R9-KRfn<no/-8=Cm2^DL=Ol&>\"DL!iT/>/OPGNRps9a,hF_Lbo#\!P*2(%e%e`hbT+Oao5'u.:*2-@&[Q/<8`cG\#c\utqGVEQ,/r(IoU+Q?c%N>\a%kmsH^nOU<dI.B4L6ZHZi!i_4#Trki0+f:!Ui]m!t;PO+F%)E07k0*tnlI]O7"B+GmkPC_kZ5(/"s0(:&(DR;mrI*Q&Li'Ab(s5ff>S:'Kh[.gG*>+]"ATGS9nZkFh>Q]Ij[YZ$<3Dosb!=;2iZ%hmCV2Yk@#ZRft^,9\_Qq44]d6Vgmc?2LEouTI*'*RREQj9j&<(L$HAj\3Hd%5]-q<&+P>&Y2s=7G$#60KsI@2C98F#.V3Z,[0'>l%]fD-+D[Nc:b;6m/B&M=`BB8S-J<cpua7IJg#=V4\Yur`<OSF'-:qS8BN[pQ"2%?^f^\#(;"s4OhfBZ&_no$(I%-?o1q4&"@p20De%2S5fb@r&mc`/^7-*,t"#Z>fnVR<ron0"QfP&*_H\^]CtpY'QR<s3q-e?,q>d0PujN'`Xs<<b#RUX`o%I\2Wg-%j"As,$_RZ3kZ`]%.gn_,P/.PeW,U);l)FI5:U3V]L+>co'l$YH*E<J]`Q[hSO\]KZqI6+*F!5KP1S"C9-Y+;U?b(l2\2\Dap=,%A\'Q6fZuGSAf3_9/%J**X(^*P29<^;5J!X]bBn.G3%%dWpbF.EMm`O2B*r8"Zc(fC3TD?fB-dm-"E%c)LGL:PkX$r:pID3.IVU^B^=S$kae#r\"BZ_2GJ%/FE#-"3F5C+pQbor,D,Z?)AKW<;eb044U.>lrVt8/72Pe@heOi6+OM'2Rce3Yo@>%rAgT6([uM$?XMrIc&d+p6+7I_%\C-^;a2S2%iKFT_E]2/)!TCOn>!iL4nY2G@ilX`7$l-nspPr=DY:rdXSd,]0l8I0jPQ5Bf7bG#Tg0h@KSRXPf4b`HcXeE`rh86[sYF!bB+/6@r%FDEM83\M/fnr6>%#=O#>AtuME[\IqC>hMJW2ZB_1g,9ZGb!SV,mKTMfB[CEMo-4A'C->d7EB]]qg<`n:++n%m'K#;FY*7jLgm-ri%?D)D?oe))G8e`]N<-&n#e(j'p6F;rZM_4Ne3KhQPo?=cm=QA>eGT-Wi(b6R;2!7MhD]lLVReug&E8?BXah9o:n0=mY<^1=k'j/DH%mF8]\"s%P#DBJ9e>;AC&^[J;q[jr*pq>00Ucl+gj6/eEqi<ngf3`s/_3\gZ*qh2E(h$>%i\uY4:FtX.b:V@d$;s]K=h!#1nP*o):%^]2kCBbDfO=.@E7IUd,#='"dB@X>tB(,XKW)oDt.WjG;#39*Co;_WSQJ&s)Cj.Ypss,<?Gp(/*k7:g\Qs+"u=$B0mZB<!6La(uB:%9H]+am#H_=\7=C(kM4^S3j"H^SUt)+jl%13>]B^_\Ycoe[U2X@i8"5LY)o$PaLj?+R,K''hl[?g,+RATH,/jC9PoL,+T8Et?$BR>%_ng0pKt:X;SQ<nLXT##$mXuEGrjt1YW-U2ZiYsYp_<#IKGT7'`/5k8!s-$]&G3sAfmY(PpH#!Of4NhjrKUn=,OR+5Z<$G\s)No_+%h#V\Bl;R9_X;;+)gr"XhFL5Ts^Z%VkjdUnV*;.)l1WiI@3Ym41qVB^YmY.^h"j7-J)?1-p_ic!9a)]:<rWB8B^$Z9b-A)Rk]Z<8P%JF1?b9K#TkVB+h:#cu!uEuVjK`O'?*&.#M*kYmhjDt7e9[T+!UKe(AO1L_6@-]nWjl"f[T1/g1WWPYMo&Ol(]?:gK`OeJZPme!TU%`Astl7][qDrJc.)BTCNVV)*1r4Q30/p2F?p?(BL_\&Y#4*W-npS7joMQ"E37-uGR3?1^G*hHQmnjmL6NIOqDAh.G"s(7hVgBJpO_%cAj+upt\@*BDlR1M,$*_q_ZH1-XF:I50=?GS1_G2%sV$]@sD+]2*:rE,@]=fqrbPbHS>Ma)fedE6IHp9hgi"n,l#^R.CYlj*NL82%4/9$^[FEj6%KBG72hGqi3^$)Mg[Q]\B@DonFLsd:c*b2r:A7YiCs\2!p[o@LGkTtb!nZg_)9#[f3S`5^*7&\Ifs2]U%NBHoGE/0Y%$W2<,mba$#eRJ7!9n4<p;lNJ$pU4@t-8u=$-Kh\<f'+9Y'<`A5Wi1j?E49O@q6Ol*m.!7Lqo\Yk0Hs>j&'AY-d-mKZSH%h\h3PSj%jn@H?1GDD2Q+Y`hUCUQ^HY^ph^6WOJi0bnlRp.]*$eq@h2ZM<af77bUFqK_hp3,("E9Kj_+h3g;H@C!4?uPEN>SQV8U2""nNHs6H%ZZ'`?';OrMCQ(0lPL?UNC0HM'GO-T+_WYUd`oTk/g)oO7IRP@Em_ZN#o<bA&Q_rp-HTugS\59YM4hp:FjB$-kWCk*Cpn:@\h;!3m%mlWLHDt`9M>m$4:;JsMO\b%u2mO<7'mFQ="XfK.Km_CCaNfG!)E^5E9XFpb!;:j+J^3G_%Z'++]gDE$kl'IO"":a;N)D7D:KS+DG%IGJDbU*e0<S$njWH(6-b_s9>VFsY+?h);]E^RA<9?g7m@]<:bY@EbP'C"mo>5Dp$78gp/-k'&CkHJ/J>P!:$(A*rILo@'kT^=X@d%MdTk.A!H*S]@$[09qRN]I?k3?E9ArS\Y9]"Y[caApuO=S<QDaq^E1dWfq=^!R(!6.4X(oY\Z<58Ar\?N!2BEP&@d7.n'@%7[ENX2%[`7Qr0r[&BDfTgN52;Cha6"o<p)LaFXWP8Deep"/?K;#"LD`00qfGH&h'd]@/Lg\2Tj]k50;m(fp<.HrTMAXurX.a&bGDe%L=P[6%ookusjrPK8J@HqC)L7s!T<tXN8c:bV/Y0rHi`j-B&rNqKN%!EO*iiuj4[-_72lg$I\]aMrde:Y7.s-fX%LnNO<`\dDdW^2XY0u$9%p'MV@3SW;"JJ:"j3I&bk#N+^Pda7m0]LD#Wq7<Xj4+0jChQAe0GZoej:TG)r9-4M-b)N#(8*fk%YBeWYDE7*NIs"E2]>C3Y'DFW>%iTA="gP:"!?5O,I#F$t!'q0Ojr70%)C%d,l-r%=-kB'>2[QQ)=]A(dbZsQQia?og1Gn?"6#+(DH>rc\5C)^ig\O2/j@YDEVkI70+%Dj9WeLC;A=(\QQ\kj_,&LH+bWEn\fa0a9e:o@Q'qRQIrnhpg;hTDh\0]+<^U]8mUG/*s>'qp1&peTB$GI-!<WVZ-f^aI=.'V7Asi%)+.`[n$2QakGLX9?:gPK#=crrPq1*6\7?Y#^=a3*3m^"[^K8BRV\KH.>N:kac$ss;Bbjj6i'4jNr:\NGqkqL10r=@DkghUF/j=6Y%HY^*Y+Q1u9HrB+ZeQgI=P(2Sm4HRBk/l575_b]]ac#GbNZ1$N3h4"7V4*IMALBYks:b(f0X)");].)?PrO6Y"J%%($\j3ktc?X*Q%OteT?L!S.nI2PnZ/`8aQK?ol/4MQ@g?SLC=i0$&3Yn:P$pr:V7).@`Nme$Zp/PK>\1LSlWlSZVhH`CoqVB.fndddg8XQ528\(T,"%81&Vmr&;IZ[J>&9O)BOiqg&.=,f?("Tp*3mFk:,-S@E^sTW[nW4^UjU1\ggr"1:*WfO2)3_kXS0)at;(`Rl;D08%dQV;nMM3P(@_%`He4hB'3Br_(O&W7$dmXgCE/^8H/HTMR;2,=^#J4I>Hd71^lgd/!tcu80n9/'>_<bha=\pJ=PYZRn?(jmF:c/[]KCd4K(REMq<:-%[j:`!^V\GSVs_r&m;NX)iq0FbiQ=hF0K2mg7r4Kf>UPT&`]$QF(sN[p%!Gf\Vh(;?*s[k=)]/:X8oD+NOl&U,gq87u/7UU-9uSA8%h2H^E0[_o.Y#A6Oa;7b7gT0j"bLml[!kNaT3jhKA&_D>Sq'eBe.Bnb?*J`!Xb6S5e@NE&-=p,MODr\hr3idQ^3>\!%^Bu(WO#kT]%S:#i!L2s3Um/UT.E^BnC(un-Q!tDt8h3lT.9A'/XKIMXkT@92b(Y@Tkl+TLXE6<Gs6'Cm+6+Zu%=d&+_A'U"OQ]V0g""4D(2>YZG%i[:ot5@R.9cr;un?Gk`I2=MbpD#X/pi:rrXn0`BVjt?(qrM>]j/^aNf9UUN@De>*HmB%VAmR[1S8;B*P&`4JKHLdmEZt3"R8RNA$%>\)ad@1X4,k.n)S%Hk*+o5G^bpu2mtc6Toa:?m*(ApKs_g9IQJO)0T^6uW1^:uHMSHVAH_/UpLkA*LZj=!LE^bhUUG"Vc[%obRn"%i>1\pHJ(3-UnFt,HmD&3@+"Y5HN)u.>T&,ELTO)[m7GenK9OQ5;+al&\<:!`2K_O@n+EGPGV]!JGn*ec'WegEUnKr:?kTpCe59VA%lVkoS1?_<N/d@/m6.Y%e6adZR7IibM,e0+tnihf3O&<l(n!<tJ8CI/&bhEA=/$^\7-t)+cg)1%2HLB*#L&C:7pqM:1[GC//$a;:0%5s]AcDu]X:s5f"`L>H\PH14'?J,d#+]F)a3r4C(>"5Bk@OcXolU1TXnrK]s>&;sWsn(Qemcn1E#]!#iX=c*h?-RckkR)eGQ]h#lP%C2#MOY-q.:q\mf8%tA_Mi2j-^mIX-!EI+bW`;r0lgV-CHCg!G)e$)I64.Vk\020K??d&d\2n#6+M]Z^Pn$-(7mGUc1'F+Os/lS#`%>?05k9!r%KWGE[N_eV$M0;H`X6+O=L\`EY5[QV"9<G7_aqn9kP1iF7BaYTHgp<+jBY2H6s/]Yi_"c@!mCijbea4G?/RaQt)G7+=G%!uCqc]MDu&BP:ud]VQOHm$$OYIc6L4S?-^UjgI0/Yj]`snXSUKXES,KV<6(u?$9p,&I*`m*3;TX0p%(Jjn#i^4->35AoX8a"A<fW%"-H:'h8-Mo!apWY(,=:n*JMDM!^8'q*qS(9cbpE1j5oq%cfopb;?+TRD@aN1^LatO5Af!K/@11lcT<Ki((_tV,h[oH&hm^f@j^'f%Xb4k7^t^q%N%Oq\>/SShh&/%,Lg(<L]?Bb/SJb9_B,kJa+1H$U!b'cr^DD(h].H/C)?QDQ*HU!T\1G4`bll65GW$)RE<<t*&'t^W%hnNAR<Mh()Tmo0'C.fk!gSg]G[]b*cPOcmFB;+*lnD!j]:R&GU4:qYVBrrKTlh(%uD6N'h]e>W)+8VD?\&f>\SHDUZ[(AX,s#(RH%s0Ne1<&XL;EuT55?G^=.n^GeOF!/%)KU$BsHqii5%`(KS$9GNhId?"nD4NXJ)D($r@P[Eh.Pp+h:o:@s`PFF*7t(,>DH_n*7TXXW%&j-/M2\*G1NS,"QN>tc!bNRFEl#5#OPL28Oe7s)nFUFB/6$?GUQ]IK<<MSe1MWsH*@H7LCI(aRT%QqgaJV,XOP;e#hq1<ilThM=n%gJ9QY2g0s[f2S5t@(6K^'aDpo307n7J*6ZZ18I7ip^<K%;m)ftDf<:D&`79OG<=V8:+Fc*#L.D'Ab>acK4^`^>*mI=$gFNrQGXKf%WA[N7,psoc>G2I;5",p9F,R?-F0e-%m!H;iVH0<Abj3NM+[e&qA"pO-)\c@+RXLA8RHk4ASRp*]C!'#*GuAo[*Fr=<VGL$+_11pr%2='_VGi<%togfQuh.Ihn5FJO-nh2L8;-l!gXDc5[7#R_B"nt3([p.k%QG$(J@_FBOQrHZsPZm%_=0Hj*WCIK#o_KCPS1=scf52Be%XlLAVPj9g@G*I:rqa&E-OVt<LCRKo'.;f)&^NSY-[<$sUg)n&)K0SU_)9Xc]O++DT,KFiGN:j=F*8"`AI=qq$EA;o8M>aCfoXOhU%,Z7g=`)\o8DCM)C8t>gco_KE"?XG3Bf=#pu!1+g6G"*#mO"*Q3SD4NO6)^P?%s5R[^m\J_SNaaeZ<9lJ_ZQgg(DM*tf0Q#NT%rHD%@1C^Eh8cnk@@S-HBt%7TVZC_UlZ1ig5GXn<kj%:/@InMpU6#;ZI/a8WBB7riEs>f4bVNN76fRZ1Id:j_,Rtnn>Z!E3`pVVAUjO#?%e!8gR@mApE*-=rR4H<G>I/#dLO)Zo?,0D@SV!&3,WLN55Fi`H^kBn`Jf]2GZ@1MbW7FebjR"OgJE\)BUV]4UtpbmDJN<4S^FC*s\%(\S@=V7RVg`/@l(oQ:=Mh;&ZYfi=DB2S0`^WbuI;l?p/N[[>#@s4aEmU'&:U/]pH[H(k$&Xc.iiQD^(Gil/lY+#pc8SrsZ`=:5&[%cUD2F;E,Xk.$JXlCOB'.9_?;s2-(0=4Cnm_HPnpS9tK;u+)G).+M\r0jDgNJ6C&pq&HStFW6,m^7ZCZ&^4'75//oc9@5dCAO2p4o%BrDu_fKJS@G%+@(M!RY;oFY03>6%C"\&nC@R#][FRpAGTIfRj+?.&a=Vi>;Eo2!"hG@>E;_\H;.IMpB$YQ*_=q;5f0T;?<?et^)h%^j="@>Q27!QO!I?@6t=e)(RrRU-7O7$BEIS31Ye4&C#c13ZZ%6f`4s9kN4\CnK,X/(?H4u;*"0<pqlMAr;(LF%I^iCkBSc?4l[_n%`-]9S*CY%bms;0SX,,(]koNc1U.g5S>!EkL3p;3:p\JMS3,ipSG0H>3P+YVHNHJA5#kTipjNBT'B)4GYK!/8pl:e*@"F$8GLuC(3%09>i?oRZqmGK"880dX1+OFA"'j[&q/q']g%2#cqACk6pFoI4,qe/=an5,`oYg9J0(#1sf/=0e`eiYKBpLlo>"f9?!;`=uC,Xd/tF%s&[)Jr.lp*5KUEcTD69R+-_Sn$je+s%S^eE9FgtCU?`l!RWAY(UAg&_S=0'7_48CE2I`/k+,GX'PPIHj_gm1ISF(kjSK<5s]<a2>%#+lAGq;aL:DBS^qYAcqZAd67qo2j(&+:H.^VLq+N4:d9Zcjt-S-iW6AG.G*cqk0c4)!;\'TJI_C#8;Iqcj)_u69^.-54dkBqa=3d%ql$$hO!k>3Pi$^fl*JoJ+-^BS37J+`FR5uaCHflEnW>_cTDC*r&tNVY53$UIAr+dkRg29-n;'Zbk@Pe*gr8\+FF3(Yr_X4K0.#Jm%^CnF%Ml<O6+fOQ:1uXC,KS\\slpiW^!MWCC/gmuKkQm:jF\M<>m3%YCkq+k*LYE004jl'Ap&JEdJb;:'#`3Oi\Z*=rXc&o!Ook];%:o;AkTMeX?%]P1b%iZ7@`rs8*YcNiI1eg;`dWc)c.:5V+3a,(]8*W"[*rMYA60?BP.C@,0Kn+4&5l/7MO3;[G2!VRXd"=4?HZT=8%0FnZ&^]sFEIL5;E=lUig:_..QNEqr`!dZ[."nV5e"F9"9"F8!b`$pcQPTt]!E7=d[`HumDGr'@mO/?&H"YoNaWacbNAD(,J`3Wi9%<\T()0)ngA:l#gl9^un"U07@*TTIklbYf^9a7Ze.Ip<!fGY'"YnLYUYetW4/>>g81?3C:bdo)b<eH@0AK%SAk(+?0!K)d7]cQjOD%GAb(+ND5+MZqSYf>mZ_BG.MFW0upWWAt)0iaVn7*=O6P3-qG&'5t@C$XBuNWEaZ.jiQr<0p)t`CT!KEs`c=V0or[irfO@CC4N4gl%j&uqs7[1.b/17E]2CPuMKh(.^;*^fKTQ`\cO)b$hKjk'Xg%dLA_m#\K'oH?[O-0`eJ%1O%*eGOum_t,"\5.Y)V*'It"Qd5i$idon%Q)L<_FgUR(Oh;!&O3Pf297fYL7JULdHTUPthah%Rc7<u]g[tBL`R/,GH&1?/H%3,Yrl-V3WqAtbfs8dV3HIb>n%tXP7d&A>b.f1G%n"MIJVWi<$fL#W2_fEESSUb0^dYbM9b$5XT9LduALJ>q5*MGj12`JM^:1BJ?-daA;pN@NM>ScGZ,uW4cOE<dgq0-G:%rR&V@Ym[B%0-\QT)<F%*9%-EOc0g+>]LkE0Js)+2Ph\ZR=]5$[AXCi<.ZkDmNgltXflUQ/EVT2]1>aM[cBK$QI(."5!a5<_#pXp99<]A1Co$rc%_I((kqX16@GF#Xf_pX]&]>$].:h4KN=<G[K'UF9-W]F34k%,oN<6F!R/eh6(N[EO-pIpDjW17NfHsp\T:SVH9V,(t%$;J#j](h!L%$D-LCR"O"I^aGQN$@Q3<YYc`rELTrY"dXZO;_2N4R)N&cYlmo:9.7RF%U8Tm')F$Ed_-c^fq8*/1K$ejCb5o_kTaIL$S>h$N7I_o%+t,'Dp"<@Lj@YNNb`#,!eXJ\ujE@7e7H89'ZHA"IPV7DB9tA;Fq'@-:*)\UX*#3-g1<3:D%sg8="s;cY#p/"3Zs=8AS'e+N#NA;D%61QT%+MKQ)!5H5l;FY@RciMj8^5IDA9/CMh>g=*"96eZHYkdP"-2pKBjTRpd(Pe&K$V.#)j-[o=Y#BB%!&oKa`P\T@Mm/Jf6#V_+%$l/![2cY,>LfGirqt.$QC)2fO_@F`G%6`oE'm>+3XdF0>fE$5"*fld[m4HZc6P"L$r#\9:d(AF3*2\Rf[mUa+:@pf96k@FY%VsIB%3(FMG#!u`;(sg2mR/d9_OW@>F.1ION6qdIP5*N;5Z6b0Sd1QC:'USjL_DR/;.KBOQ;.B[GmIT9TZ,V@Y4qNBp"X:l$KG!_NXT/ZU%O._qm56m*#!<u2qgZa?c%%3nJ/h@);H4-**h37S.+JC_<CsG=j1EdU/GO=Z$7d/ZpZ@IVb1X%d@.A28H5j'JG?im9T_I>!%!PCF(%#5$h29J)=M=):+N65Up,3GjpeKX=p7&]tp<O,cF:7Zb>Y(]b'Y2XpN!]o.ISH=X,a5(J7J04[0lTi@Wg6[kj/;lo2#Y(Em2^(W4[%,XE)<8-6pd1a*0r)hC<g1t@7*jCAsn&75uEL`2'sTR7*KGA6L;&Ai'/rsYZ%b&:[>:ULU*3V=4)g(ef?jEE6bPFBup-NdFa9j\=*%SA9bS'U/7i9LV6-:^:pO7l#t.eu@`LHC)8)&Y7(%8QB)2'HUs.fqKZ_nYCuIB/l>CWKaMq)b:`AIE3lTBE;`c#:3*q)j;$ZUJaA\%/^Z=O,@MEM91Oa3AhJ.p"p()LjbGl:&ESQaj;//B378/7mMVssg7I`+#B*KV1]2e<2>YL:$l-r/.FtuV8RRH"D=SC96&nV6$nreP%%0'>F;'lD,'c`Stak[5a$+pd;9CHB^lO-.sJL+$4VA&s3'Uo^NXI`B95"T?7&PmUI3KoLl3F$E)*UXCdO^_.,&VFF!mo4IdJWql'%1`rgL.+f#!#h]MrgZrqUql)(nQU.8os0?\E*U+[cbD56iGgF^!2rIa'N(a<U0)?H2"("0ee:Z1Y)MoYP/\4E7VIG9cNa\UicOG7D%V/I'=Mnh?/_:r)`1?jOG'UA;@8`biopuOG<rq*u)ptp'ip4%HZiYhON/T0$;Ima%@QZ6*DDKkcFV_n]j3/qI(A3_%q>\*QZNoJf'%j/<<lA(\=P]L]bUH5AEn[g3U!F2KR@G5(Q9,ht#-"4\.l:HS<em7S[07lM@7UN(AnQi5n\'PPa0Otk\GS>I*4TVL6qL8V0,h;$E6%O."q;CL"GYpME_+$AX@Ud0"iCSc0Y435\H22ICh3-9!8qF60N$jD`gUlcpm[ZlO?&UD$j&cB<?j9XSe^MZQFCpAg&jBQl"0];)1\%d`Lo6g`Sb>e.1p_nr,WLTq-uc5WO+A]cHO"Jp-[qSd+fSI,Ktt>]-n.nl7niK/`R#CLGd@?6FB7.X#*f#oX9r?l3j0jZ<?%h#Dn5%Y^7a7ZuD&/@h`lTf5^X_nHIp)h2CV=B\Vc=J?r[-h^.^J473#HS63)Od<8d(G:iiT5SIgPOG5ip0F%F92kGPCla[+-@/$Pg4)Ca$%%.&-hlbIdbl/=+ibN4_i@($hi@Eb08]DP(qc@h^WA;@iP#.PIW%HI6CZ3!``]=OVFh`"m?$CY7Y4,gTgc3dmtY]8M0Tk3r;L+S0t%$%Lbam!)nX[X3kdMpuG79![Q_+e#k(FaMq,/@]PG`sZPd?%619hg5b50ZUf[(NCd`E%T!k&pE&Imm]Wmcohr<]l3<r9m:GnP&@Vt%mqorWL3N;<e$23UFfY6bS;]s'!X*u`_R]QOF#RgjI*1HYX`7qHMZCM.Ia89j#T+!a*W<@VEH_uF!.`UJqF<rWT\Ak^1_L9PhU9HW%?cuQ\qtb3h)u_n3XqUPC:!_V$iFqsjEaN[0,^klLGHh48h;iHr2<4eqJtKQ\k].:gGD.PiqK3Am%AF`MDujNTHds.ih40)p7V"U=%C7!E83W'<NJA*kf5po>rF_n28Ui*YAcC]:!Wi>@i98&]Des<GQAf$fk12j[QeT>^3r,FI8`YE).n\-!mGrDjAR0eC!5#2.6i>)Ds%EA\D&5MZ=t:0l`aC&N)NDu-hF<F^+KO5P4DXG8Jj2WFfq0)qqMs5WUCEseCHoDSBJ3J)nXLga1hE'[Z,rW'0M=rDqfdmCI[CH>bo%rse]ZSss#*e1;OHMT;lilm/]N2b*`(.:it06*knVc!7"0#s@rI>h7pANB,."OR;b&A@]MZ+.$90q.>d/h7d?]0nJK7*[^]S04qF0%-M_QIF:FN_\bgNJ&"D?;b^LC?*9$YLVH(WNZC+dq17h*X"e/O11Y#2k>%MO%<25B^j%>GKP_WQ$[Qf`AJ9ki11<K\:N:)1K;'(io%SlU-phLYASb+mXT6e*LobL(2<UHEMCg\%em@*W$eRH0jS9D6g[6hmZT7bJD?k//MjGGK(ORr%t0hEi&j+Knjr(hLoe=7U'i%4cQE%Ki+F)b[FUb.&t8DifbfV4g":^]p/J(Q07+PY$0qDqe;VUYf_2(GNWmUQ'\2`eL%KU079`W))9e*-\9/`YOng2-mOq(oWoHI48@JN%2Ao*Ca*cTO"<F7#D).9#3IkP%Ona9>:Rd<`eLu-o_BpN'gFQ^#A6csVpSUTkfCH#LBp';$]ag7=>Gh1<<L[f3\M#!ng#b^bY%j6L%_R6oaQW^coLJG=9ZHMrlmq/+"_eeut[S+e[F0pp-:%N8kLX0_*nV1n)78Dn0cXU&2lq[acdgYJ=FbO\@B7m*$1`9qU5l'cs3eMT/%PcL6c/D+s0(('kS.sA=$%J4Q,C:iD7ThQnRBZrm5G0n8M#MEd[d]Nnn8ja,[a2:O<p,;NRWgu&U[f!$Ye6%rjhb"NIg2q4RRE/@r%fW:cN,?kU7Er0]d2:hOSh]%ZbL'CiK@BD,'FBojJ)Z"Z\EE.A!,Gb'Z*X:A.]p%T(0?/RuKurb+[cVtiCkO_C/rV\V[Qf^/KKVdC%D2VLYQ40gRJASJKW^[s%J:$JB:=IR+45GlOc1HJ2+F<c9e8?1Dp#GVb"G:6c!EW"$Kh:$,(KpUoJjluaJ32eWqk^Mf[MnQKAXCVl%G5WRST";?r#MOd^YQfNUA+nT=fT7ZQNp*3-ZZ!@Ac^0YX%/3"lQf$?odWFeoiNc)MR29o\iU5%@-_e9tIh0GN]j;dHBIKqe]\Bj+%PE+abj`'00XO#J0aqH8Iqe\CRQCco*iDUQ$#V4lpdki0V?a(naVXSQBY0]Ru^mm?FQ<OM;H0pAk"l*hNr_%km_BLtMX&C\b4>c+S%J/uK63:)69jo0bep35\7s5I8=6SsU/aLB$b*Db8oM9?sPVJBb@%,]DA^WuK1=lGXHlfhN2^e)tZ_LY\\#1BdAJVo+f"Xp64h5V,#%_ccpfUg6(GP("-`/3;Yc.U^Nh*2R"r_qt%-_QUi5U@Xjf#AhA*3`[7W`dNM.4&/"Cp4,5bBHpc_q`DD"Z1qA8/<AiM=oi"Nleu">%Y`\0RFZd@uN.busYAcM=[=ZtN,V!%L;hWcO[DG^dJ%AZDB1071"(?i**Nmr.9kr\pGRV3KmX2NF:rB3k,iMpX[Q=s6Y1;J-QIWA]%LeHI>[i1(+f#+m6\Bn_JnIA4uLO[1IJg-ibN1Lc]aIH&9@pkedkuki(p70k/XDZa\m\bbOKdF1<o,4.M8B<AFX21:@Wb[;HG.&pQ%$Eh$'-/hu9^JQR'X+<?MgpVrI"l<"`EoC,[5df%F6KHP?VdhT-!Mns^h;8Z3JC:\@SR>Xt<>ZX+1Z;DDEOcMg^C"b2grZff4LI=K%&$1JKi.YDd9M1p_kuto\:I6IMXg$H$=7+sMFgtgs28cieTcDOh!^9<D)Qjg^dKB>bUioPKb0gsYEeIeR\')?5p[G4%*`d>L'ophH%I/WHRoW-^A#P"."WrRKQm/__SGe))uE3!0k<P.Kr)=H0"?<+njI!8KL<T.)Ddml7MWnigXYD6<cd@YOCjAsrneSb&tXg/m8qnoJ?%99ABVafC",EV8kkW]",Lj^p`iWXZuZa74,L[`OHojAt(eTPsc0L&`tkSmKs$S62L1nuB,mgK!34>t4luEiSOBm+?Bh<7eG!qMRjd%/^NPhGNr3>2"G[aXsP_O?g>:5.-4&=a_-/e.GRtd,*a6mEetPjlEj4R*cBKl0?k7clGO?MCK;eiQgl*piC)@g.=:`]lj44Fkelfn%>_M%r6QO['`J:`lpKZMETjW6F.G+'_(@i5GZcS!>A[rU?/NQap"1tQDL%hb5HL*Gi/"fs(;)js0k;<4l2O+4$bp9)PrnH8]ci8(`%q1"aEWdA_go^M@S]"a2&4ffg-Po`taI>76q)L8A)(*<.:oYfg"!T@C'Zbsi;2)=E*iQ7AXk$m^FqkE=bi?ii=p2I>,Lr8H]M,"h(%)=PTZ]Y]Q7$(4!.*pP\4XF9\%FfUS2?#o;K`OZlbkqHqb=PF^&P)En0FWM&(CBGdsT;ICOi<m63We\"@4C<GQ-uF\`NJES&i@=A=%4FF4>iUhH3=5`.Y?TMGnD=[uZMN;nN!_pSO!m+:Q3ES4o.jt7qbEW"%HNh*'q#6r!/%dZdf\SkQ=4fWX+&]6Vh@74/<qWPs4YSQM%<`clKEiei7gMj65JYM$U(Ojmpr6a$R=(-l;==DuT]7&0&RcIK%4,Mf7Gu^b*8U=@6l5VkP'0[.K:iqC)/sSR(kI@$E.O_#LX$;<m%)r(0RWpgTtI^rC#/c.TWSMF<(HV*k,mboPS(XCO8qjSMCQWe%5@<A=]ZCp%JOXGk,!kd>d*%AL`ico8[/Ntmqr$]/Zl)8J6p43'@%>^92VqS7#<%ke:3.)RtK@ddukOBPBnTUiM4nC1_[hqAPVC1=@=l9NT+gJII5k4%PVMYi&/W4l&r>=[o-9O)>:_W!aF,J&;\XWsXF%\H<CI8'@OO.)+/d-U5LmlDHs`Gu!M6]<R^_KP-;%i$^R1[oTV['2eh=a3G:bpi_$-G)f>OIsF_9p]CQ9@7$T6biLH7bXB$$FI1\o%p*43![m7f3_D\kRTQ$/mQ#FL:VZ];RDP<t]\+Bm0/3->s+$>,`8#^?GhSW.+VOtaU!C"=^EFXiCP.`WoYNR@Mrd""'ckG>aGD63F%ZMSq!_cO^pUFug6^tsccpqG:T>MFS`9"kt?N=[K6:+Mhp>\4$Ko`*HBenY-kg-SI.6sI$:Oj3s4f0)`$B)m\o`cEN.Xb:*C$t'`h%[HC:#_?HeNKK"G"M.=4"0$U"&Iip?gUA0CHlisd'\TC"Z;S@XARn(I3El"7$gf;MpP!IPiIL3MGh@`KlIspqi\KI_V<d+O.Sa.lB%jOC>Ufur)YHV8]g]-e;YSLc0@&']/C$]bG'm:>TjB8'OoSm3./\-5a8,P?o&%-Wf5M74U\hto4EAE8tG]OaYd45P"%r1IC/GRL+D%oM6*<6.T2B4oo8G#!R7:p->b^DOGlGYi75J&'9&K:]N*]&!\-b0>KtYlRfk^!iI-Z0u2A04fh]S(2VCo,S.P!`Z@b3/JI;>I-3>1%ZB/R9^?oI=(t@?_g?iI=$FesQQHeSimUY97M"\9@ebmk_"C1;2RYQ[&gF9a;4Tt\#15*o#/7:EM\d6rr3P!&!gK9:&*pFu_?!ubp%/U+I=T?mBeeqa;fi"fQ.GL[ZHs2pUVDIe`WcuU^QqF12pDo(Orgf;Ft/A<!$nJ9n#F<45j"g[2A7Goa22guamXXn"K>hnl_iW@q#%\`MpW=dqOJ5[<[Hbk4A/m'7N?s)T[uQYmkjXXka6+12'b>R]WGX5e^f\MGK@a9?O!o-k<694-Z:"Qn-nn>V)O+<R)B.Y5._$cDRm%\KGO+l]9O/6[E!m-K]pCK$X5q?(,'VHrWC?[hiBX`!CJ$4&!j-$IAs[2%<'H_NhoX=,qM2FMW)&6u)jG6#c#$Fs`l(J&UON]@btE%YPuIo[4rd&"HXJ^Ta5j&[,_:4)1MLf\.^5"<0%:VEn[j?a3TEFD@P'`;Z_9uORW.#?>co.Q43-A)#b:[_-RW.j\W/tHg&Qr$@sjA%:KlZa?9m/u,8L!*/E>tsLX6ibc(*M*d\5bX$@T`?i>**C(YmFrI/XM$=]a[O$%/.$2$L]ZO1O]fn7@2S+*sV6YQTW,Kt\[HJf'Ko%Q\cL`j/V[b^P-50H%('>GQR2nZ$W\LrG$7G(#B>g5V\fZm,$"dFK/puNT;G;(,de9._`gkk#BGpLJqbdm<hP;_F#.*/SWg3dhS3a%Vg&11W.\5OO"*'"_P=u%*kq</*Yj\jSo:*#339>K*NJYMRl`L_L->I6&`(Y?XJ$VufY<m/3%c.P8EDn($+jJ_A(eZ7A#8MM:j$+>%=</kQjY`V><U]YN9(f*.&'lBmYAc,@4dkf;CqjsXC(U12Sa,jFm/63S_Cc=m1ce'GW/sfp9^QetX9[q;Teb>Lpf"l(h^*aZ.;Sh[%gq`3;E?+rl>4oPZE2_]^S(^D_WnWf2cODFa9:J_4$8gluLI9U;4(EE3/<ARlh/K=hnqVRl8(EliOU`,731FjWLI9T&M-(7Q-/Djf%FC!8'T+E%YAj*W__kZM0d]'fW#e0!rFK*&/'2ZQD_Wkh5\Ut'*C26F*Pojd[&"i,f(lP@9Z%^a,\[(L"@DFJs/$XpgPU2kq<C^Nf%rcG.YDRjNnT?9o#5-oHMl[HD%&jB:t''s3QHn$Dn:Z'_2T*fp;I2&<RnS->7<$=>eqhDY@Kh&2)Vc/;8/i"WKC8]mf:6iLNb,cS.%<L/8(k=]-HT`aqQjAkU%+*7V%WS1DF5u,rn'+R&YiD^u`gljn=WOe1*n^th_V-f;ETR.D%Q!=gL2>i<Ll;)8$mXNWV_D]aq+2A:?%7pL=n2e>b-<mu>TYh*om:7-"p+QQ2OUn.:8>U_eqZEM:QecDCuBfu$`5iQAm*N:9&hsdH2o%cn4L7T)7e[oHJacjSBbT^BSSeTW.%L<hT";MUf]mF@CU%+I!QGuAU,grP0s[;aUOH?`<n-R\Z0FHP5g#rM4KAu=b4P<srEA1Mq'G(YQ##sU.(]0f]Z8aXaPQQq3:akW,G%,DFW(*Z'n_A[`PI%nCAna@)19KbOX#\8nC,&OG*lOb-Un?),K'ZElS-C;>t;q`93*gN/SDs0&2"s7=:Gr:jV`rl:)ckC<?S5QCC`%i`OdXs7QQXXu;l`qVWPh;cWefQT!$B0Q,t3T6[:*DYL0rY**g$M1IIuc2@O\7`Wo"Jjf1R'%9@#*)*E;oBH7;02BB8A8c$:^T7It%d3j%=5=C`hiHpL^)^jU?k3hnG-.=Y1Z5m,Of8jH2d8Vg3Pk(OYOmk-BSG!#-Ht+&7=i]YQIr,GR`pjmJn?S1u?rhs/+d&MJW[5TX%QAXan(Pu1o(>1pl7rR5658_j5!S2uq8P-5]nM]+H_hZ#0rP:PW$Jk+DbMS)](NZKaL::1RTn?3:6M<6,e"<It9(_+H1k`KQQTFEU%+L/V,?_-#j+4A:aOl58Jg7.$sV"l'@<W_a<a$1L-I!A?/!,S/0Z8oBk/jh"L3ZXJV/C@:O/sqcG`GN]rD2_en_j8ogIqf'M,H@uB%W.Z9nPn;nE;$fO8;[M?(_:!j-[ktjL3(a<s8buFX934%kn7O7sq8SntK=5UgL7_aZNgJ<,([K7R.UOJ,V.J$+..[HEWOoi3*:j2=%SA3dXD]1"?i@c8S9Pa@u/)OsWNt=bT/e5_5'1jf<mt=<M7%3qfT/_[?`#YU?_aA&I)MQ.,`gO.UJ1RF.V2ZeE#mMYsfF:?_4WUkF%/mJlm=>TYSknattLm))h?V%hWL',uGGKT=0/dAa3^]o.[h"Trnj)+qbPeKGgdps%GpSBSAZ"ia=f/"CgZ#MM7bq`*@KTMC.9?M!0%Cb7ST_"QRJng2B9\%d9'XB.;HYqJ;R=d2/-7$qh@HkZ,'kNKoe!1-Zdc!RG'[g^@6S3CSO.C$@io(lTTjn76]hBdE8=aPO(bZ+9$%n2kMu$ZMPC50`FT>r&]52utd_XF)T'+]Va.A@YZr9O"lfjtBhnrD,-e;ER:'+mE4(X4PbWH;bio8c<nB,B3o@fG*)$_Q4$>6R"ss%<D/-:/JZAf0+tBh/[Bkb:RKi+#FS_b$*lMDV<7//!mBAm*Pc)#JDnIJi!onVie9OH=)Pa'/5?`t4d?gmlS^5TAW);kq?8[\OMPh5%9Qd>5eUro0a#>(&A0klu=jbSfm1miM>`I`DjjG<7U=6+f`,^V()58?/+^HfAnp_URfB9C:\X=1O<6T0?WgO<HWL2A3r?Ip.aX[uH%Ms`AO81W-6:-J!fYC:p!n<`8e*icWWGH(+^)f4YW9d<J*Mau^"`\4.M2m>AAk6([:e787Oj@r:99#Tt1<dc-VDW0FG@soYg(A5Qu%Ur%OPiX71\nNm$G12??.CXLg:HJ#AZY)T@t(!F#*q.+1\UlSeMB4&8(Tho)^aE8+@WBjN.4W3X_/e(jWDhD3Wj60>)CeWK`l>1;4%A/4:H!Q\mBm-RhRp._bJTAVR4fq0CdcV]Ur&hTs<S.uAh(bLo#N)"'QncrlFe3m7$)?]o=)AqFqh>O=XEPQ;=^^+S@c5IN'Tla6Z%lG0>DSt\Ed1R93oAu'6q?"r?_;JPQ6Hht`?AU;bV(S/4ed+.p8\X9r&OJB=FEg_b.WRF_$`"ENUkerCT)pCqRmpl"d*4A)^fRY^m%`$S#D@j_n[)EV[5JAqfc4nlLE63'Sp[ugZEbOF0/I"mX8$ip49_i"]?*U;cm#/NJmIQuCh'"X[eW?b,*b?DJ%aOsJH\=21]YpY!U%\^oF[0>FSY%_Ck^K-#G?_2DXI%,ur,m1X_\_i-ek4>Q?m2HPKU2#\^I236%gQA.JP-<mKcd[6_d/G@mcg9Z9i+d,mA00S_EhT0Wu%g;A(CeKL="Q(^&o>[#`K%aOQG/YE9@n&;sE6",9U3"5G<pru5\B3;s%Z:@4n;.53*]j-I<gg)dmdDCf6cm/oqo:WJX_CN03XX.G%%[V@fCms#<fXBLjtbKZc`7.eQ9NR_d,Ys9hR3QNg)=5+LcWnh;-IY9lFAfB2h*X&0iL'gn3c"[2TTS+q:-E=r`_%!bW.`O+Wk\rl"%4))_UEn%$>D&ka4"mbmG=8Cu&-?O20[Yo/cF?_-DfIPbQ2HYj'E!-A1+f^C:#>$3.d%Hh9&ab4XSK8/GS2.J6_]'6L@d:aS;1)r?%AWN/>o,1sg*<=j>X)P$k0luN+1$#?:m[)J#b7ok>>uTOm/[s?p$@I/(%F_o]LN:A`De3qWHo[0M!Qr\jp^Bki=+1;Y`&Gp1LiQV-%TP/13'm+E#R;db@'08b%Wh^KF8P'$ZZ/Da3@lG$4,q[K%BSaecR;);CJmAs\O$nk#X-Sj)=t5[K2\N:G%I(V::oMt9#<H*jfpN2B%afrl3!5U!\dHsgGE\)%9GY:Rcb,(l/\GMFHd(d\'_?W\.kU-P7>4p:4e-n;?A-beT'.B1sRGh:=6c?NuRE7<=DH/=f&Lk:R_c*4%%Ap?lj2_buO'tYXf[fLf'NnL%O>M;IthH#`<[hYCW`S1aR5N6P5jerSHdD+Rme6UN\]-+MN&*-@h>PsgL7=9Njfj2^C]Tt(fY(&&c%2qUV:SuIjV>B>kcnVnKUW+DaV91p3U;fK&T&14kmA:OL^:,#\>^Mb/5AK/@ei-[O(]3f<7N,"bMB4@9@LZ9>1,\iIoZ6;dtGfene%[r::?q>dpmjr!NIqS5,J7eF>rFq2>@Qr4KKA;Z!\!4t>*Qpn\gH&>EDRNr7g61>UWh#N$31:qauIAL":mTTDP^4M5=[=UH'Ab-kt%eXa*aU#XX#]-:L!DNH/WiLort"SF37l8NH4k9VC[\IM9cD'"4]F>r34+oe*;@GXl]M&(YZ2h9i`%XcONqSVMn2@U*Gp,D^Ykqk:I%r+'e!bM<TTEo5\&@JjoT]5d9gg7FHrmc\:Xl]<;^WT4ni<85J2e-;+ddl9@^Q7eC^)sX]E87jpWMTMq9ZTCIWrcW/080BhHhLsG^%+/*)3$l^Mm[Xe")YC1'jhVS+tUb"BYCqAaE&+4].!N^Ts-l9pIdAgo9LR/jP9]*g,['s>Br5Jgl<O*4#0?qF@>@M0m[Z-XhTh$t2%-A&=1d\2\e7P=O#OE9`8Z9*I(<t3L#VsJSS6a9$*Z1FFo8\2`3$jaCl%aaNOaO8?Xh<M6Mn_;Ko*kMt+jK8YYJdLMGF[bKalu3:;%kBk)?$UQRc,0>V!>3'6a9Bh:r(&=m.D>tuq;eF:K)D0hp;I_;`GED2c&,LpDalkRK'qo_?V!'Wc$)u.!Y![4[/?'#$L!HU_ho7&2%>Q-qfY,0DYO3;T)Mnb0sNXtm+jL<fbj43%pH[gpfX)dIfct"mB12;o/)6K\R)P"lK's"#BeXN9m&#.D?c,&5lW$J.XB]u6"&^6bo%kt>urEp8WUd:H;j1-$Rb,31(_6FL>^V#N><YKns#F+78ZHc=kO;Y>7ok[j:.KD&Bp/s(X_r<mMt<"epYOH_0.jb(Jl50mgT`,#=R%Uudem$')'&a+3+&E*l/44i2R'8_cZ.kg!7-m#4;4%g;R7B1SUOoUKR(<jl&,k"RI@]1mLq/."E)CAsWC64e2:"\H9OC6A4HQ;U$I%5F$ZEXt2SRg_\aq3%kZ@!,L(aA<Bmcdk2mH&d6jKA6<ce\2Cm%i7o>]G%<sin&ik1aK4YJbub?^DT?1JaWrZ6#*Yj9TbEX"FE=H[%\j?e3FR#g#+UNg,"p0?K8OHu0Up7Caf>9BP.!6`0H8?@OL*[T%;&Up/MXa%Agfd:pYl''tE1>Gj-^VVE6c!0>+bQUggRY'&)Un2b%/U%ud2$bU1,m4aR9^%(-:qA*u6;Jq:l0D<BoS4AWAYn@/Q?"uBd]"A7g*I/6ig-tLIHcfK_.TTc2#t%Kh#sbGO9n7eaalhZ[l/QH%2VX4M;cHa8jganJ*`Z4!EaU%q]%*Ht@+V`;SkCq5!N?2fm,Z<CAtY=8<$VmsC#%B"<@NpU!h7bUP_5H2b%4R,Kh>g1Oec-aWfXjr%8tD8Q\jj@L&TH)*9.JYj1fWtE\.c6bXd*F]jUX2jZ-&t6V_F7mN[f,i$^>[$3P1SGmDUDhoKJ1tH;pXR:oaB=MU/mpo:Qu"Qo#P7%6?=(>Q!9+9UJVLRm$4G`0o'#F(+h#8K)h5p*IL#HjmPil$qQXq-;k3Z.[m+ddVeUed/U5-T!-E4o95DcKR+)2YEP3;Yk=1KQVCB?%/Wf&Z"laX>DQc+PoduDl'RSCE>@sD$#g,`],T3%lP)6rfK1^uanNsDbB-d6:]S1gt`s]9-'Hs^c"U1q\^P!:6CCo+R_=Ys1M"Z+Z%l(@iI#`2jcbZkI22;f)kD*X)9I`Bci]nCSI&0#QCK%a;j((meU0sYhE!li7c0-WZdRL(,[epn$I-)It%aaQ]EX?eR@6:e0[>qrV`%o5TVDFfi#D9WXTAqnd7o"i)%pjjXZ;)EG:ih`t;<Rh3;8T2Dj?C+'ZkYqGoNU1+QSa2pL"*IId]&58hNAD-`T!_(Rkgm`O@MkXZ^%>Xk&WYqF0(K4=3a#I,,rXNt::c&qIJBTu,a*pfZUNXLe$.+Wb7;1`953"UN%"Q#'E4C8Pr:Asp,&$RhQ&n#99%Bs%1Gn7,_pN[(L%ZJUuKWs$kM$f[i(9K9&QS/h>N$>0SV<a$L;!3:8"XoVQ-PV'Xu]*DH?IQ";2=;c&aYY(S<B=e@MAM2ERFq:g/-rfPV%Bt.m*R-4Z%+#pmb[qgMZb>SME<kC<K)IR.'-,@ZR97U"DV5!o$@$R.!6ruZ7l:Vu>$m`!'k-tXu)0C]Hn1IW@XR,[5^hV^"COhZN28C\kQO<-3%!3==3C74er/'0"&Nba0q9,g$$Rgl\3gGN:(R%-llXC>NWlHLq4Yg2=!bY&p0N74:K[T]RT0O:m7=S6IdljVsBZ2*+6;sP4$4ac_H%NX_M,PX'%Pg'\L\`"":ncc!#A=Ll'+Qb7/sp,a@#ZYWYqd.cC6nJX>bX;+k8QH]+P(:\fl+n'Y;m(2u$d";"fI-]QWau;k?f&C,#%2iu.-`3i_SD159:=5I9>lMfXF!/o[?G';J9$/1[=7o8T'H&IZ'^X$ii2gAd^hlj.-J>TP0QSOQ&2HJ"GD9"]C4m`sQ4u_i)q\X2=%WZA6g]Cb:YDVa1QC'iO(cAZH;<,6pm?Tukc#>'a_4+Fs1n"K[+p.&s2HA/q;0=b>]c!UD>-n&SFH5suu:b'r3k&5,l\nWsh;@e8q%lSDG,L"eFGqjM9-p_l5VS7rPI0"(Q;rF8g7=u;W&.j;<(KUOLbUfIOcXb9<[X`1o+nL]td1hu2en"KYu`j8fdTM9WkfQZ.5j"%ER%&)9DM6/P"i'doUOl%?s?CWFb,:$+m7[C86m4Q<H38^Gs,6fpM9^I$PIJc,%@q$QF@Vl.)8P=OE(PPt\j,Ft!7-[CUFLtB#9&,ViY%G/qa.]_?K^2V/uVM>2psLO?fs9h]>Ol>XSOA%hhi6Fa,Gb'M>K3;7MZH%PL9-u)CkofgQ%Yd,JF=eLNkC".oVT`"9oaqINnrLn/7%m4l#UU3?`+F&BG'g,`iMFtl@;`%rgk+6&)YFY^Zm,5B5.iqF(ZqsfLf.qp\JE<8+QZZ?p2Lo'kNHO"3`n9p`GRhXc(l*i4:2?]UX%6#?+')P<s@-6l'P>0oNRX+\<:3lNCAC.(UX7P:YTPZ0LFBr#!iS(bV7O94Rf+'e09OkJTF/9r?\?Kkc5$u!eEaB3pKd4%LR-8';k%kPC"FNdd=P!a-*e[P97`_5/PkD2dhG,cf3PL8\lX5_*%@/$s]?$+N[8@m-\_Y^in\+hTji6&_\:jmQ(h6E2eN[&"Ek"\!>@-?[K6%Hd_nqJY'&^L<5tA/:t27d:9msT]ij8f"V.INUIl@.aZ5BVgfDY-5d3(E[cM-8389Fm"-aJ5F3Y#KqqCC/?2<./%10XbSmAm-*;WC%L#NagLipuoU)KjF"N%&b3u7^XPr_rg;TGeX8J=]FR8@n"+=\2EV##]T\i8%.[FM9a[ED=9>YMoDEiDOW?AC#s[_E=#IG$L\C$@t8%&c@?QN.C9@K'9;'Mqf1C.P?e!a=U:p3DNVS37jGCh+H-^B.0+,OS2RMB@%?hku^;E?36ruKN)mNP+"[.<I9fs$AQ(D!k23nF"Mm7%F1'4]1`uQo8)Q9gJ6b/P*e@)'eDMiX3YM$`5.RMj&Q#K"#TenlaJGT#iq4^W4<oQFmo8>DIpEr=UGNt+PRCX@;UU5:QS:CZ+_gba%</?VcND*5%]Rc`S%`5#b+`?TFeje!;As7^-oW>=N^Kr$IlZ1:7)D;/;L$Z@&Quh$,GC/sgGNB"M'9J1e_TkT^57m2jj==3Q>;W@m%JR%opfBU#&dMLU0h7#Bc_b"MIG#MM6j0eD4a(s]na(s]ra5cW)GTsM1Ag,?10uZ4N&pY%E.Mp"V'K=OMgDmD6[lL&;"F$Esfo9O/%3F;$\3M(b!UOJ]m0pgB^J!o=o)C]mBc1132,WA^%5W<5AeN'5Y:fun*G+%6)Nn<!%Nb@mjFcON"V5!?4a(#T7H^7Q7"!s*,J>i#l%C:Wt&D;=8uejV344F^Du3leSmmk/[o2Qq0ar@[c2[lGKc8Y+(l3?ElGh2^50n(p=Uf/EO%1[J@YG.YS-/9R@Pkd&FVFBW;-F?dC]%m+B*(bKR+P]aE^%b51'9L`a>tYKP-"\hobA?%Lg6gi_GLJd%f1f/7TsNQ]<1^3cq*Hfq@cr8&:g.:ch\W%8X3`aWP)j0Hts4%=J;%H=)nZ)6=Tk22tggAqJQ?/I3lF'F(==MG'VlLla+2>bi+#<&@*ZUg;+nrSO(-AYIf/O?48I7'sVUc%'%#p86LuQ\f"k\QD>T!uDOd%Lu5&+5R-sBR)R:GHPEgPINjWS8!L\th/UP82I/`,CZ2-)=P76q=T-cJYX2#TY_GhS$'a]d;N7*&<5OfUg*hq[96$g+>PgNiS*[l7%Zrcd60C\92_OMH9+d4(0I:Bb*Vu"OsZh)1<0"T]qZnO"9&8SbD`#!Wc#o8'!+=n.(QrleS[/0/)b&sS(@s@)^$X=.\@W7B*=_F2;%@ce&$WFJpUFf['Z1ng.s$!XDD7--b&<'N"V\2D\*[FO-91Q,c)_G-?@V4DFpbJ2aj=<bnCE"ONP,9T(T+F5R"6@YkqdcX1?qF/MQ%?^2Apb*?2._9srW_=FdqKI()"K10=n9;'dkOQt(qU`#ItZq"i+@EPW/\@'f/9!`bD0&EmH@<n1UfuFH(\-Xc#j\!%?Pd:rul:Qk-%9=`EOZ(U`:P(haid_^Eueq8V:b"X<EJ11jWs(X8j,,QVf7&I$g8ppuEcHN+9EMK>(3D(OX;I$4$ejRj9<kI0R@u%;beLDN@LfBG>%j"IN<V4@p/=0$.qL3d*c]u7KY]i.125nJCRE`%Jn91iEN1peXPX$mB]PZHHK$^Fc7&PcAP7.XEZ4Mm#Q<?C,'AX)sqg(fE;P$,jO%=\LPAMB_^k=>dmrO`K!k589="4Z:t@38%<8g#I0Lm9-qs,(&2gZ=Nt\;!LYDrLCF>&m/&:(.og03oj4`ZmH_&7`g:E9!Q<C*+`P;%orhGlCq*tOU,5)s+Aq[8FN"5^?%&p,*m7*N8IiEu:I1uVHh0@,>O66f,F3GblUn)W`?g6JQ09.r+NM*R93(a_R+2IkSFtFTY:9N*%dFC&pXI$I?a@sSFLqH>?\cpufSG^K%%g@b"M!nPSN6_eUDfCpPN4,%>ZAn7c(s(tl%2GUBW3K7Kcs-_%Uu!9`X_lJn#8S^TS"`"T%FQt4@?*WF+5.TP^>&K+Q[TL17KF.P/&=mW:JC!>QdKHAqWTe1<\fb;*aljXKJ4UXHe+(T7JRm(#(*65oY.MA@eZCF+h7IH/M-RXC%;C\Y[(kXZ418hbf8t?S]]b(sHRd&]pRo3SeLo&U>&$d`j+@;mV8F]:$E?LLJFa5fKf%YhPlm#"5*#@bNh:#]>n89sP`[-/a[1s<'%jUl!G6[;p8f?m$2hIkj-4l!*scA!ouOo4-\?Q\!s%!sY!&d)-G0nUaSV;SA=P[q@jc=F$9Vs6SK[@P_`oJ']q2Pi4nF`=l"`SW5&%#Eh5Yhc9U+MP.Hk7qPO>2W,M5<`pU0j`%Wc'o?q"%2;f7k1eDBe_d.DoG3.Qjf/LWE#pG:VqVhC!@]k!f^hrm"8nZ]apV`+c%nVJ%M9C<g<Cs[bA@7[,H=7lE>UbE]PpfNpAA'nJo;0PYWVDfE9.Wh+<Y])+d"PTGF<VK9\t:8a-gn5h`$1mA/D=S:n\UJRHioWE?_LP1%EQj6l:1B?AfY!n^a2%K'9=9,P/H5Rr_<Z2p2RMYX,D\.)gVXLZ4%Wn$Ed*pSfM`-^s,UXO.X+K^r4Uq"M--9l&oQjA9;8SdE>^PG%d!`;E:kC,)H=)P&T[X6D<Z8NE<_u]E*2H0n6Jg5lXbgA?`IY9OM+&UtoB^(!++VH-g%EFZ8&u#Inoqng=tQ7"_XCZ*+:CtW+bs!#%U2%@UHiN+;<U5fA*N0?Cm@!^YK-cuspP+L(b;:@51(t4J[31Q_.1B64.5$0L,=#CGj<CFnTW0pVPIcIXWVp$'4^Zr;bTcJ!(q?m=%lNI=pZDahBWtS-JcEYD*9VK&!K/Klq^/S[)F-b'?Nm\)4/9kqK5;H/YnX8(<,[Wu3)!q*qZjCu:Jm&Rro$@_"iSDL'B^1%d#rB+M%UUX:0Wg%7![7crb9Z\TFG:>!5.r!W;1BJ6XNV%U8[s-V:nZCm;ADC_eAH$-;CAVDa+u_jF:l^8ql-Y+HYaC>R)G;PtO4)*,;Vl]^%iJN76=-mVTFi[h'pskPC$DoZ<%9$R7V+uQHhHf.`1kUskp)m(E)"M8XgtM"H>:^8MCgD38n9OR+T_s\B+=fui6J>8]L-Vjj+Z_2e%,.E;IMW^`_nr=Dbrj/sQI4X'_9Z)EU\I<b-Pr.U[+UjaU'UM(a&tl?"e6#+FP66qHa!"I:Kt+,^>8o_4S*_TE`F>,YldR4OkGcq;%Ria6CU,jBQ6Zl0+71"Ruc'aIuJL)%@TenMQauf&s>VSnBF_R-]p10IsrMj"P),.@Fl7f=Q^Itm;OuA.JdO%gb[7Lk;;D3^J#.QP=%$b9AVnrQd=TA[(Y]k5U,MEM?STK40>_sEooC/kS>QQq^$!u+^OKsP^Ndik?@9Dc$bBU'k11(@n[j[/79PXKgodKFtHC%8NO7L)n&%IQs"DoHK1D.#'QO6)FI*q`J5Tlu%lW9<(-m-s>A7B_iIq(\q!m]lEl\/%c]57DKBnITR&16]>Q7;ib0AEZ!>i4T+:c/r%6Ch.N6=%/.5VJ9i=2na8-@_]%G;:AK"CVR7ikt,>NVHOl`A#K+B'rprDH(@0-NH(*=-GM\TEUL_4;(!iIqkNt\+T_mm4"O=/S.CSJ2U*o,&Z%@G@t/JTj.3'X!jq%/.*/n"DDD$`M+t!kc=mpf*m\b=c`haq?s,/4]B/,<V'Q'JK9$U%a?Y!jAuMZ5QeWbqP1"a*J&jPOS=l9-C*$%!X(]Hi:9Qi$MAIu)De@1&,]!LfoYO$<2$?Hdr[/h@QJ8rS53C/o1i,,c@cVGNS@0T`g.#S`$`>a*?PG1FZ3uO:#:s&5e\RVrQ)-C%0aAC?_V&UC;4G1WlG^bcM:X`ICt(Xd8!nap@+$n*3u'jQZkQ(oP9G4dJC^[BBB3Kf(YtbP^(QdSj"g#D.kjOM9fsMTr<i>e\/@JG%P8q?F9-&)i"D8WXTg!bHYfpO8GsF+;M#`%Ye3[kf7eV5;]3cU)G8O[Kf?.Y:\o:f?:0^gopTn,UJ^)3OAJ+dO5k-[JrU(EZB<TZ4%PBEt#c=F5:Ld!kE0f1>VUWHN"L,usTJttHN_ds/LX\8'i,.9&:+3@YR))JpKTs5)6rD,^,0!S;[!#-?PVXZ:(R=JPB"bD1r@5+<K%E>)0.#cZ7r,uh`jMU!W-oL`Pgq-2mlE*.Kp,<7<g\3]8uhW/'hT!'(C`30pdlem3&TW!mr4+Qk5<"fQ*T$Js4D&5j5g,>*>P<ipp%Fm#U2XA+On""BIK5T=8]TU'=Y@%S\Pk0#2)JPmRVW\QAm:0:??)hhEN+>h$%p2:E4Hu62OLNT[Q*Vk#4U=YQ<0c:i(jsuE)33\$r%RDQcJ@nGgea,0:7?'(jY:#eTBc,G,0V')D3V_$c(;VD75_($!;&C"Hhg//4J8RLG\%Nb26[!G`,2+fI$eg4&S,r;7W8ibBRA4c_E%=QJ%&cducU7q!.18kMX_:!uS`:L^:]cVTN7r^n5$5^);lM(+?67M6G59_pi-U,Q(#/A7o1Pb+.f:o;'64EJ=Y\s<K].A[&(Q1?8p%3Y>9'R7mFSOB5G#'LfU0YgWNQKjMj$i`XA.AX<I.,kD8?<'1;/-[?:Z;t;^G8js'6?RZdN1mX=X:SQ2f8m",L<N*k'J.9XX*4qFC%32KdkBICn'?7LXT:b"k(Q"D@@$O\GaUG-K'KSI"bs/h9PYKcbSjAdp*P!S@GUl3`:g<G0ang\r,=XeJe!NCYPM'Ip07WK2?9U^f+%Td`Q8)Oi4@#"^Qu%?a)J$k`s)C65*ZdNF1/8pf'+2(B/?,I7YkA/W?).>JU18Yu8fo=WFNeJ\rY;Y11=DUi+f*2(r^^c5o?""0?s%P<c)q+n]g:65*`m`C_P;/;`B7el8IYi!)(fdss)L0'&6h8Yhn*9X%EX'gG>]%"S$$kB]aO7ASK[`gUn?+XhJ_DkH3.PJ,CF^:6CR%4^/]Ke@@mR)T&QaVjUjTe3fN;Zsl_KJHt+c9^steU!F)L2D&ut"#[c"D3%I0X7HgYGC8nNbDR-p`NucGha+)>'8qN&:aqJJ^4D12%WJEKp'_)8'dP\8RK[83??5LGpXuAj_8hGZK.K?_sYYMWsmUO("(`UB.5-NUK>Ij=T\*l#"qZa[6LN0s5msW3-)#*7Z%F?+@K.YdQ%N];uB(1cu]Ll__\fC]^pms1l809aa+S2kl;#D'LJDoT5i6F^-k/_a-[iuC'[-+NL&Df,AB\_"-[6nGZ,X^Mgd=&VP$QSP#=j[$!5%FJ&gn%3EQVgdFcr"A&^>.(."QW\,`!C0XPDX&\S)=4bVV[,r+uRackl]I:`%Ld0g\c`(XY_TVha0]dZB6"*_8.ns]bG>ga:/6LP]%L<tnj]^A,WXEL"M.h$tPGh0C3W+%c/0tpPN9/Vg[!Ht]5G@Wf:UuG=*.6*G_Ig&4L0V;;W9<4N2bCS%6Snnegj5+Os2_A/BR3BN4%lmZFOE6:ikk5Bc+V+JK/%>E2gVOK]2:25S-6)_remH=q\IP3j+<R?q-l.n,V[)QA>;VoR^?6n'iLH-N$6+h75NnAqp2_l;!-X4QL%\@"7ZK2<=/NP;3%/_j@-lD<K=#pg<#V4<if6C#$-EtPB.amGge>.6S:>@$:>mrZr-Df_7$=@]AP*/6$rY"iO[a)f/kXL]?j0=Oe8%fFU*V+?;Jo,\MqMMSkZDoW"("/ZVd^l':]4`,PC*;Xoc]AV?C6C13[R2C),^?F5A4;JOcU=<Xm?d%sf?&PB*MUdV1t8tG?hDmd1;%`a@.Slcta]D7jNcm\8Rs,Yk5!*7W->-"lVZ.=nQW+ZVRE,=e-1Q))$V6uo;j>)p)#W4'-[$[&<bH%-EHRMm8Igrp?36Ks=K#u7;G%:(T:uHr<NaXD2d?Hclun'K9[*4moHGI++7^bA`,ZVWB^@q6#`elf#A-MOga:DPbeCm#`X?,GJPR,nEno*=e!Z&>9IU1'-J\1Jq;o%Qm<7QN\[eL!K/Xl1gIYPAVYbhiG(3Gi>t"N8;B]i'>ec#So^+W&h2'V8=%GXdW/Jq2-g[JdPg44(:cA.?(WWZQ_qsVIH`5ME2,30%I,UoD\/eY*B<U+\TJQHsIqP='AG9^`Bd-%gE0_YE**Jb!Q:9@/<M0V9p!-N0;W,W1c.fs7T"UK#>R]6AE4ZsiOO@885lo+u.T0tL%Ocg$nQIKZ0QUZ>9Bh2""Cn$^]6sn!RneuBUfOr/Wk6ObAY4"=ZJQO.D6P9XEct$pHE,:ui5[n'(Pa^KSMcXVbOTpS?I)sDbmh+<)%8]PSQ#I_Ls<Ru6AnVC+!nCcMf/r8qW&]U^gS"?q%)[X5C*n/uP)a:,WaMY^]_<%P^b)m8nEQa_dP>7ZKd_uS5(@m:2IK<jGJ`/3'%GF2Ymj)6sQTdEO8?a1K+/HeXN@p>>?_HB(JQ/Gu2,9$]"b_J,/@MWFqoZ0Q;`19'^1E]?(]186kC;RSAG%VP1d`<u&NBG-/2JY"r%:2ZRT_%eW;iP,)M-9M'U!#*Qlf#s%I#9p*hJl9Lq(\2$<cSsGK$a5FF5%\$n.lB]\9$LnhUh4AaT6Y/&f-Gg/@Y_C%.32n.1#JGo%/$uok'h4n\pO2.e&&.+_fD4!9NeZjNnb/nG='C0HQei#&nG[$3`9Z-_3*TK8J,hppoOecKE!WD6`]ENhQUHJ0djZNuH!6+FHqS_F%Sp\0h.CfbLaq:?LP`'XZZAKtTOn;AAeKjmDX6bZAikg0Sm\-CI*F&<%K->49d:`treFcfl[tRbr0(*/#K=,3a^:m=;<*S#NO-g2$%VZ@Q*`=:YQP![F+rYC*XDK-Q;[7MB)=,<cMP\N]NBBHS=s4-ZMN2@61!oAg]n[$^q!**=^YK;p"PbLRf,#q9B293DXSo5OQ`#.Et%W?n9"^K,14'((gPaCD5N4<W*1>-<0JFldWV=&#_S`bdNtV0gp$2BLBsM./5=1Q'BU8neYq]*.,@4_5C\Rc-&3V`O<QA@1E"J^X#u%:_b/&_I]+qVV5%\e9YjpM52G/6qruqUi"4Q>"Jk7[G@Emg@E7C`/LpFkEQQ[a;*A,^,m-VMj4gCej^Tna)F-kn"HLp8g$3C@WZY5%LMedR94sY:dA<_mKgJ&ddPpK@e4etdZm?f#Qs*/#OmO>kA!9K#+f04rVu^HT-)nDK8VeX/9BaeJf644]M#Ka(]].J7dc3@iQfTr\%eX3_7Tr8+,'eSRAnMOj'W'i8g#"ChD3Pc5<ETo#QW0u9#6?'Nlg88u;.mcWs.Lq=lmiU-=T]/G$%j;T.W_B[OPfa;r$:^%k,%rg5%8XYf7)OK)kQ$_7KhmDPs7hRb:'ano,fh;:_*k$N&/@aO7E3'417!?j&Itmrl5Un$6RY(+([:E][;^i>20?#P;!\.8&(d$ftJn*#h%!Fnq(@_`4d)b:(nbEckX6:t_qUB)ki)6euK"rn8tIO0#KO)(drMF;rVr>t3cd8LPO&bW$7N."'%%'cLm*HUD=8*[`R9!*fh&<miF%7E$!oP#*pG,COT7Ao1E!YAP3&<(e3T<CRGdVq'cFUC&DJj-u>I4-@rsKi&#A;'B[N>UiZ-;<')`>NM^KSo<?S28CB8=RB0g=nS,@%:IiQV#6O%grSfSf[,6Ed*nd`IU(Cb=?fiU1<FNjq-'IUr@`s4#\QP91RW'L:h[NQUl("Q9dQ3-tai%77;f!WUEb.mOe:9<;P#P]6%,Xdg(HS06d,1h"=f-0H5ZsYtW5`^l<dcj<PT,Qpog?J*q@Hj6JRruDHE$D.4_IO"rM:SE\MFgC<=`07s:PN_P2O+GaR'%pd5au:R%]LAV32u.2HA`Bk@MCkW':7,"RN%1+%hCVhr8`cG=fk?XtgHFH$kPn$XbW&@1'B_0iZOjb>/=A8=QC@@\n17Gq0nS..Dr_JP7regk%mH1s9AXl@uag)$o4N^]$4;,1\"G4FO(OuMV,@6:QprsE;ca0^`kgg_FAERpAoB&Bc6:=5dVCX;$)euB\k;"9:6e(,jfM)^l)uNWR%,.2U2p5B'0S5N!2YGdUNV7nC'[`Q5A?Jj$gs5FbAO67'HG%^SsX#a'c^UXKslT%?!`J/S#pK24qGH!?j;_Qc[?nV&5/68!HBAArY%I<KVmP&.?qC^7/t[b(3Uo$$\E,o'diac-#-9du&ti1rmK+81uP6u(P2Z2Vrq25Fl/M]O;\F\SjA2==34I++&KP8rF@*d^&l@F-X@%KO)[0I@Wn_=V[[UF.Zt5oa6?YZT%1=6g:1)+ApVG*T</UXL#*aGoUT3M2r7EfEJOk4hk5E^0[R^\6X^'Yf6/1;FDFn<(cG<RrtZ5%C-ClIDKck'Ee5Vkj[n@bY>LL"gK6[Hg?n^iP]%Ys.@s\Gm)TY"R2rgF4g\-+Ch+Jo/"_CFE_M=#IhsFZVjufR<EsO1&kYo!K$QbP%7.lFa<a\:liZgCM'>ku.H$h4lV8?Z$+utch5@JnFb(7$?V(%^3e4H?3k7g&5jkb<eYO<2"/>ab@*Vg`N$pMF)gkstGOn7PR%f*"*%8u7BdeL;`R6^F#j;tA#58nRnUCsqt&HIsQCC#iOinnj<s=WAO28Wb>iI#1Rn<_aJh^l1`+Gqc65<GJ%Y[OH@-a1^#pDd)]ZNe::=%jq3O<.6N<H]rBh8n2!jnAA;r$B7!rG!@7=]9Qm)!A1K.4=HnK%h+@*=aG?d$Z!`8FU]kOEPm&rtU096GG8(FFo,kr%!S#[I[--fs%O\M8t$S1A?;-XI+eCc8EVL(<RE\ZGrh(lPLfc>77]o7C+F??,[<nG8eOR0X^8u7B@+Y]ZJ()Bt&M@uc=;/2M2[V-R5%qCi'33SH)%nPD_)NX%dHVDoHV;WDugX?]U-AMFP,'BKo[8fDAHnu=9J>3u'^'buPABE[XWek<_<(3D=:c\a<Z^OkJk^5AGFdqAk6:\7".@_BW,%QHqjIe12T5:aph1T5)hk0+H"TPf^st#46o>!A&6Pb4M'($W\.4+"n-mQiMD"pe361L#J1!N*$=tLClVN3P.n>;*l4oVr&A\_[RGM%3Z_29qIe,nLn6D5B3TV%`4l-P#(&jfMGM^X@O"6snES\&@3.-<Ypa]L54o4Q^6eTZC15;?M"R&iRF""Nf7&N-4(;KkO+^'m"k,n#%>!4lODIoqdcbcc.prY.X`E&>G]LM&C]fXj&9%?Qnh[kO:-+'g)idKF%D9S$pQXasO44O`@l=sGI2obPaj%taOThgpq+a2s;11g#$%2<?LL8##/dU$YrTLUdKW_ZESIScF@tG7:)Kic;8(20RJEHh0t^+AhG:@rF<eBWJ;2#d!(="7t3U7BaQd*hH/a7NQ&jd"O_Mbr!@M%<(!O?!;"EiOV"@n!GXG;)IQ>eZ[brYJglir)6N_101ma@KLF7rABs>I1g)+on:ueB*q:U4F96J#giC`%QQ>$4dIU-:bI3*<^I,BG%#3+,b0URY[!E,pKXRfDSEnX&KWOS(O"\Yd+8'-YD"!`52:.M#t`8e=!["HNFN-;E6[C?=6<XNu"3_dGEPj/R=&sQ>RB2DoL;aO(;%PadYQCUiPC>J>c`S=0%-0"n8%<bDhu3:(V+;BdKK*%/-R5I#1\$Gg+o<1HGBT*j_ZM'ClQAqUsK96#p:8=:<&P&_AWC\RaI_%;u;%Emeq/Q06PmcOttA)B>(t'^Au3H^%_pTRk/Vf%#pVC/RJ8FmI8FRcLi3j5[Q+So5P=_N/YrPb*0^gQQ^_G#Ek`7R.Li`nFl(%$UV7%b#hU<VM_Um-O)Mr)/ZoAO5f4Q;l5\T=<P')"4\uOZ[s*1Wn<KYS/;T1MJIUF;_g4F[Hk%(J5Wk.5m,8#>#K''Q]aoYQeZDA>JhaC%U-H^`YII1Tq]"GHOL)1CCL_mZ7ld7J`Y!/".i'<!9Snup$_s%e7Wa;d=LuZiM,#q)VW4cf9(0E1I&']?1aFQK_=:s`Vi<DtCjDod%LARR_aadX-.kiD<3>HQ=jeX^YPVb#/fdO=aHbQrMN>f(n+RUi0Gg@[=XGke-)X_alY%/Nj^dO)$cIR=c*kQ!YP>Tr6#dod3X<9=Q%EaKm,adQ,)Ologh[`hWl/&obgL7/I%V2Ua\&B/m<**Q+tj^!Hn?3-n!$O5Wk7P\;8<fC*8a`o*jNVD"CBtX:0)Xfu,`dY5BKr?Nl%"o?[)Y`Y9#Eag$5IOh5D=dX#U)9GQO=>;.Z,a1=<)oF4"K@5#!"4XhYH*G`9GY]SUL/M?qJ=f^WWSp@B,^:N"mL"nFaIESlKCYh^%'T*f)_:^6GL3pYCj_O3SC]]tTa'e6?YRrDf30Hu-q<#S@]1+LE2J_5FV/S2MHsVpVO-=42DkJrtb^;IVU`T/ciE"(q[S3ZQ?O.#(%/QO>Z_5[G;VF&J8Y?9ALB]BPdSAk`C7i/6KJ,<Y)kiG$96,0Rf0.U_]pjO]dZ@%jtcqgHaQ0.2VNkbP&0#u!mOnC+p]<fs#q"9NH%djQ!WJ*j,]T^`g4F<^SjM],7dF."$R(PhOK^9rVqWm8`B=c-/.\C8m?43c#/\2X3M'50\LD&=6$M(KM7j=$$9H`!@F_KR`$R'rB'%Nk-@qh!nN4('251SB&$AHN:-2]:M<Y``J''U7KYMg<f+#)g;NrP>!@/07GrEgg#/7h=l>XDoROX*Y"b;E&/PYL8P?^O3Z=:N?G(f%Ins90D!-;#XZHArgmNUQimf'%,&I3G@PLAM%#Mgq7%AJ.ms#_l['L/_p)?($4758aE)L`qgPAY@X;["+g><T<E[!^#gN]ZP8:1Z&%*S@9"Lc$Sf3YO;@AJTea>_R-Ybq`Wm-LVpCJl<2t>10DdrUg^8\FJ#2'0Dp@#<L^UDa=l*aD`VBIu$`\Z,9)F'-"2nrP/]Jo3CL9%6oQ8%I3BpCREF*99B<JUW%r>5liag1DB5i&&W$2sZjutdojC"T;L@7-k1-iu9_!sI=+`/u%%Q-1A2tE/UL+ZgmAt;gbi9e/[oubl%&S174#Dq%\/S9P]!i#UKR'P,UWgRlT$8_,A&Sgl"rQi9lnTQ&$1rMIqWi9K/9dK:eN@A>!f6BRBqD()c9=uBBWCL9ONC`(QP4lKg%n6TJuKaHka!GeWoin^MY]D-rC;_'YIIJ:6B`/sEYOD3%ZT^AQ"8Pcp,WA+W@n4GpLn`dU#PK2fE+)n^:IAb'0+X9D?F<4O*fLP3d%(MUQ3,(:FhG&9S,nh`eq=XWjJ:,[(<s2Br>n!WV&m,2:<\O(FO3#Q+8\66?]FWZj>D[%[1T9lh1X]\_c[rX3)q!*ITd-#"(G>#kH%32!%[#DM^dfG5%8`=>Qo%,%jf%cb%]"68B`_n=uULMO48b5EE:E0J!44I8Td(P>"J[CO[hmRQW"N"tIKLo3)NK7rri!K1n]?(3)@%I+jJ(KJaUj3FRj0]f!qA%)\"6'\=?0itZ(>^gUFK:]DhVMjc%\R1+qS>FZM=Z>^9KfQ)Jfh>=T;QY$2AD=cq[Ic.oWG$S;("4+d;%L<:JB);mZ"K2?a3GfNcnqKg@.%!q!4Cd0@lg]p=(7&KBOY?70X0&f*X_48BK'_D'#&WR\Z4WM[hF(.J?a.Cb4nK#6MR]IPBl>r3W%7sa)QWb38U0sN_DNnCtQ%Hc:[4ZK':i$rTl\RG4ir4VpM'jpA!gB4,Sqpe46T'`$a+)MjM:8D>Q>39oNo&Fs@e1fLD@1fS_,/3=t%#OKXC$PIgK'oHibDW;WH.Tpbgc&a6-A*Y?OY^0\hBmYOgOkmpp$SkZ'Jt]6/!gu$>mnF@:0f0L49thKIb\\-,D0p^VS7V\UMQP0c%PlqLU.Qc2e]=!'78D#mE%<fA'-jE9,MbL/Q0"M[G^8$\aF$:.>OtD#<anOJ/=r:\G%C]*#$@S@-)s:c-</qDJcBqh^%[/%`C@df.%itR^sJ:5s.@V)"rCXG^3U*B"pi\P"+<[h-J0`5K3\7!q!M:joBRQ.fbl^]_ol!p`O(pO8DrYiLS0VWb^Ln6?sEFXgHN%5h+/+oO-%X/tsdg@BEH_(;.r^>#<&-/($q))<p8kXa-+N';;mO9GEW41t&/K5JSC0QQS?(">3A2Ya>O^NZh7Ro<s\Gft]!d_/neRs96eo"EY4%9Um.pbc]cP\S38V;p@l@aUC/cb=N##YQbna@aZ6s75Kf19<5VnZ^>X`;@F>ol+nD^6W9,$4f_t>l6.tCK[EH1<*p,g>.0\"omV!V%FJj1X<nRQbCEdZ8qTuKR'89MsN;=c@)ic^d[..#iq694RM]Ja`LfJpl0.C"aYSY%4@P(Io$8\;6T"O,picRQ;_bu7)Son>k[1M>f%9gY:M519/5]k4pQd3c_kcMe>maQj/0br(S&"+MtFA)-+,el>U6'jJns1b"G?kj-*nflaV!iXpJ16$gdSrWT.+Z]Hb"*dTU+jiL54%^.IA(;(69].V,j^K_CJMUujH&H+qRX@Y/^5a2\OaLGP`X4Z4/75*cJ>g,kC+T7NMqKN+l>/M42D_(9*8HuIiFp0P5"8:78H,F+\E%l-LWHa0J.#4dHr5`YS.]lfpuuguB$bh'R/]UlX'Iq@bmPAdu.hk@"q8D%,fd345rfIWg(<Bq'stGHEI?/QK"k:n8gm]#Zo:bNhf3%*\/W@)AZDTeZo8"^?R4WkH$(0KkkSip*F@39NIF43q7CImD5n:e+n!dn?3M/;d12_#sIg9*G^psak42/m2l.r8@2ZO[t$t6GIIkc%BH"9WIltT#fSuTjNh3P?9gZYPfJ3A8#dun7+J4%SJ2&WKO83b!%G!)bhQP"&B?,53m'<ZD;Q\[Zo02>Yi2R!Ce+Zeddq-pPXI*@2%4o@ZSHg%:h7X,M/Rc\/<!KV=j#C`aE33UB.@ZJ$Y"JQVtJ<FM/i5Eq@7LtFQm+c^9[l+":iA)HioSdis*UY?BXWm*$f[usUSXh)9%W,^qjGk<4s,K=_M^hr+UR"!]rkuMkhC.#!<I]V9ees8j+DdT"T.&gg"QY:s=96=8);779bn@P?4%%@d/*<7'"*8?4:4PE!g'qqr=%`F<;XE;'0$WX]KiB&=jY53j2Y@hE4^4R4#q*UB"^kiA7!/;\cZjpN+U@uaZ4*6StoU0j`1Z\RP&(V@Ki%Bb;W0?p7^2Z5?<&g(Og%cVufV@FfGoTNUbRSfJPh&%r3k=uTKCiPf41`RijT(aG,3KQGS!FXY:hZ0_)BF_#d3)/U4=ZJ4qf/&qRr@^_h<0&)HiCR-[Sh2'F#%UjIOdGPd8Kc?mHA@/GW^gK0K:f$_CX']`6gL:i2a`VCLK[^JhM(gf=jCNJ.9Jk*GM$;r\7hKD&JaJj+:337l5^d,X+YkXt81!;do%jC+88aq+*1>rE"g3Z?b7^;i9E[&jM;oIZ4#DT72-/G^rqT&n/C#JM1=ECEX9*69WbZgYtN[R\sWf'g%;'F*]JafE)An=T$>g=M?3%gufaDlZ:s`F'Q8o-m&"sY-D8;W""b`4'ZIZ4S6jE$&c,'fpJk7D2dVI`PsQ%>N5=iMOieU(9+_XIGo15N>`Efh\BO;U5)c'i^XN5%p2%Lm9=,9Me#@aYD?qUq'oPZ8%K`_*W,.3qc&XpQg22l"HVN&C+73L4(:CuYq@n2Br2q,G%)J"$7h)a"_lUn?0cK2ekD4`Y`dE;B%LeWs8p<etM$Uf;\,ei"nmrIbNYSa:\QU*V.]R*&an%6_hYatLj<5dp7Wmc5V.)J%A%=&qpEl"K!b3-.VGsh9Xahuu\<^u6`c+VF,%SLTk<XnZ:<m=G(9lUs(Y3PiLng]\-JpLF#tF"q_rqdmcZ2A=7_cGe#1G.?6)37rf?6IkGA):(fWXpF0!IpK\5\a2O<jA*<p=Dg`W%UB57b0q00!%@fRj6`%1M4@b4k<Gb4";rXqE$:oPf\rPg>$=.T(8A<\NFV\UoJajcQB-Jm(gc6h!&pW6@/$dhr)birkKHaF7"dojJ%)OMOn`ag'0:+WVZE4+DY#FE"p+;c5O5V:`29sdTV!9iT=OFq_H,hOeLH&NrUH\DBtAr4Xh9B/1m1ajOj:93Lklj/("l\U`go#8N2%Dbg1$^=PB:Fc]u%Z,_.+F#jVfe2m-1"u,!50/RRO]ER!`nnZ'29G'oe1ZlQN\/k39Om1e:Pl#\.%@OUc&6/Q)El"98qK+8(l2)'7%\E/FX);J8/8FuEoV[.OXf.c^I1H_7%jVtcUaI*0'KaG`7d?;Zk9M?m.#G6lA98%g3WGsq6f$,%Mh`-"#i6Sm":Y+)/_#j$u]"aU>%jOBGJZg?]Y^&J4i"((<cS^KI<4qK)Q5_LoZ'/;2)HN5GQ5&ZuS9"@_TU$[;fJ55'(5?p"=F#^5*3qMg0"$l2t)f,<s<F_qq_<i(k%5'<<aqtbGUQZ!t^jfK1,hcc4I?S"H<&V]26>KI.*<2DFa^hDW5@TUQt'Y0R_8h7;R\@GX^TN"n=&f\hZP7%]KU2L/mQ8V%)S=4;S%D1uU\jME]_f`Br=/+4t%G;'D=ZR@iqfRs/!R`MHl$f&&F&Z+OZ^(HOJhPIcPn-OOdp';1>pJn('E%ABue+[O37*c.--r[5bcZ_d-%)C")$bn4e-K[Ys2Gj@L8[[VFAV/$@k4NaS_'A(j$_?M5YMF]PIY)#5Nj/Q'rEkAp:$5,p#1U`4","Hmmcm7+(@XCfYZ:4`8Df"Ik%)tEM/o"0][qb'.]L)>O_G_En]I6-HVT0COi_hd3C+1*2\lTBJd)sh(lS3D)diAS*'J99%md=5duFR`L=%Kn3pLPlk:6],X!J`ljj%K#p_^Cg1WkRrEd9e2bY4NMuAd1;Z\:VDED]=pEPG8sP*MONs@MNb<&dfV_E5&kHn7)d_7nq52u=XS2G.9-e,f@'0m4,DQ=Ia`8'k%9ZU!>4%H%Vha$;@=6P-`nI>85:?ub0riggD#QD2[r6oSu7"jd8@*#Xa8oNMgCWdHu!6q-pc9,1EV]DD\1$f1-#A7*$=NiNN?m.iH%R!U^+L\KXLWL)k38IcX&?pRr(/`M9amgKRI\btfp^U@@?)'A5-p!00Nj(#ka9F_'m8]N2Nj7-HALX!sNnEk0FB6Rh5`A`oQ&uP2g%?qbrPd&_D#S-_&h*Ts%/^f!4$8I^J_k"IAVl>WW>TTC3-3\ZXb5X4p3+?jhF$%3#b>WrK8THjaH"GufI6X-A>g8Tu<@((%Ui&89=%W1eD<#EI5['H[?u:s'C["JqW7Cf(+`4_LDo-d&^UVq$*O[+U+:FqjtF!.'CmX%_!i")ZKO59#8sV;!@5XCl.lUL"-mSL&+S.gEuL%d3O/ii7]oc=<?;a@faO<GGk?)PKd.Z?'=.@HqK8*nlhLp?,!0RX/X33/D#`lRhb$)lq^!g!NWT(?AS&&d"'YX*@thieUGWEs+HQj%O&c837%hNWlrcdo?<r6uc&)+#I,b1535FK^%4GV\E=I"@4-#>i\:e@#pDhQg/QfDH*sCBh`('hk_QA&8FBmZ!1j'!&_O3SD%73`>%QNKiB<ASG-in3`l1rU*`a+.*)M_elR]?+a&M$#nX7[Tn"G_m+j;Et6rc4PSTZGTK=I0KgCij0ZBitbPuG,0AU;s`]MGd?+UQ/[&m%$dbQ3!j1nX8hSL5$a;nr4'^i5^H1<an-"nic:Y;`j9]l_(*ghU)4u/)(6F!<a_(N?/%ZEdMD.!mX;S5^B_Eco$IRA%\?FDn:OJB,%iZK`S9+TG+QY)OVoI6#6,2)bnp=bU=NU[EY'j17s%bhi!4uNYYH=f8I$ZXV7b\NE)LCP924JL]X7A0V\oI(_%!G[hdUqqu2^pX6I%KBTU\X:8=n5[tcSTt<A:DAWJ@AqQkuI1?HtErPStkbNu/%,f4]_hrfjbBspSYflc(ihNXgDNCAYfA<6n0gLE>4^ps>$-8.0j,o!Y%XrPj"Adh`!QQ@lU7P:CE7lUMODZ(/a<VpS?[F[5cb#'e*-Y*4*7Y?"/SEb'J"^c_JQ9ASfC1KuG#P<_1q:-Y[=mW,W(G`5f@m<>Q%CFJuB+,&7@95jkp_G-s/FCH!=;%@XR5@-rsW.ec%b=G37J15X"Ui;goH4G?a[%JCd`c4T'`_]cp[2?CtfSo6aU)/@19*d"T*`*Hl%O:kJ!-p$HX6Y'IBGeUVXE=iMolEa(H#,&s?O!dBjRW1/Ra.,K@e\e@n!-HBcXij5Z,A%@\*,N/`OrgMm-mr;_C=6lrKG":8#1[?b%o1!96\W)K+`fOSE/-qh3<ODlsopGp3_\/c\SErM_PZ!LVRK.TH[bU%-Lo:7'=?hd89]a#MYd=J&Q.*)fSCls9:H";C?F]AGSjn)h%F4I$UR5`R?VCAPgRhpB>G"l-^%p.p+s'W(FI<8jl0\Dd(XL.m<YEe:<#%$8G:LXWdG8.-)*ksNcc_LX3ds0ju=K,!!`)Li'CTVJY%p&iE<aUmaBdC08je$f@pb&3/An;/M5)qI$%Wu)egr"iEZR/2cIWptq5!>nR[I[rah\3NaZiMW+eV<5kS%uAceOsr46p3EP^*AJda%@%$1j+#U"LcOJ?rkW@DQod%X.(jDgYS9>Q$+I4jF)">3N>e#O1O;ApYH655^?$;/C$NNpW\#CjsRLT+8i2Gs@!F>#L!i\Jnnp:r;%OuA:;P%MV5?1O!mM-6UIjfds.&CJu7U.DVo4tuI:S0"^[@c1</%u?P5Qqd3$-R:\QogbA!NaM2TBFMiPLXeR98<(tg!N8"E%3;5E%NP6[DV6u&SXdPbJ'1U4k\i5[YTfVNG/#jRQ&N<\#;V5tfEINj`i3J*&I5lT3V2mh/S[L5^cI\VQg`G:MZF-kW1AtXM5A[On@FpX4%PBeP&rolB1N`_3.lZVo8fd_nLka/Pf[Ks,%_q-Cq5`Q,+feQYdRsU>r!KUih@[E$9>!L(.JL0VP/:]6)3Os6>H]V"<bkVCGPQ[1>%TJ1(;NJk2-3"H7XG*[cUG%/nr_$N;m1onD%lH+HF`t21Z[(^TF%hIH>/hGp&qjpH+ctN]0^EObB!A#sV6DkD.SQ7sq7Be&bBeGpC%0it_JHY(O):8A7$FB*?J=]it]K?mSopd^9=KhaH&:95Di;-F?D=BYE``7h/HbB0Yp@;)e1W;bfB0`m&(b;>m@%!Y`<bt<QoEn.Q@%&lAL/b+!q4AK]Jtk]f2sV.R9VC'g,nQ*aOX/S+sZQI:@_X#0sT<n"QG118)<H)IChVhXO@-43@^___dd>!M*:8?)97Mb6ZBXNnYQ%,gb6''3^c8oe&.`,h;`4MjHc1O`V27B!6**SUjb8`._6uMMc9'",K7S!2>>aMJ3E3[6B2dK%;u\:ScM8G7\NMBgAUoqh7kQ.Zh,%%<sYL&d:lXd-ITtPe"@!^].%@R6)YADKGpONW9%Y7e/SJ5jds_I/\/+iMXJTXq.h@uFp0@^B%9)d[ikiq_ua>/^h2ttSeYM![;(JW%gk+1\$^YJDN6e`LV?M)G/hMMd-8#8_m:.\J:[X,?/M()6,T&;_l11$Ba9@`H>8]471=fB/.9JD_$$OaYA9'NEn7[fOXB8GMpGIK-%B]m-og[\D$.odD>4/cL?AGo&NRD@Bb$&"If6S<(K>Bl57(.Dc]b[F=oq9=V@jUB2*OVU&_VV1%(6/($jKO2F_B`0(L]kQ9X_ed/a%\Jrs$a:;8tXt>AdS3iQ4n!l7gR>iob6D:XsU<p1ZJjf3ZV)^j*D'L(UY$DVR>'<mWB_hD$D#)rLm6bZ1dUrc(L;V+J4SN\^<X:NK%G63bP;J_7PBlG'!5d;F9TSns^OWP^0!_6.<<mE9>f2p3Ar,jH$-Kc/-9HUJak<(qC4XMTgqR:`LSqS8*jAC(Tgm-lHeXZbm6V3CR%fTHCO,aKb,_@iZSPX3e>AVBW\(6&I:Xi2og)3$bJnOP]]]$5n\PBr:YEAYLoK]IZWol1)Bb-V1AVCchF3C,*Nr4?KrND`=d^8KJW%1e">D:i/sU7V+&Rc<jOe1ku3D@nH:o,S*ACPP0kr7(u,.;IW6!7AlZM?Wi`H`!]pUn+.P6_4hn2d!ZF3q_]Lt+G)L,EXL!DfU^`8%kBYsm"gh^#A^DR+B&a5bf_>b#SA9+uH$gV7="/^t#t51X:s'XpXJINZ4?^P:Q<A`%"7desB,6p2Lp]ug4>;[GKc>]^6U2k1Yc<R1%;ui2bd"<VfQTd%`:lRo0:j%m9*+%3P4Q!g]5MncAoB8>42gmCXH@aj]+NEj^SirU"^Fg+4:lPTk:kUa2)9Bk0pkEWM"5F;CmWr'q%Q6ChBQ\8Dr)Inl4%LB1cF1t?V@]s`YTt=`qBXo,ZAJlIB`?=5,O$[ZtaF;D_5g>;1c:7ZM!,L_6Ac!8DEs+g/bNB%\lAkXpPWKtU%96.jH+E+.'f9Uakr=8?u[WC4$R$boQ4as!&Z'tn/M++G!cnD//lk,+<!r`P&%6FSXE@g9;g6/LZ:c5@*e<Eplh9"QiL3V<bjR!;I%^kRNH:^(!32]M1@L[dh\:ro)o`]J7r38"C:@o"7e2\oq`]i;g)hTHh_WJd0YfN'G3NBnTT7a=o=cIj_h)@%`lA&&2=G^$n&em/Oq%WeQV6Refm[+guVde?ke\4S3_3s5W[6>a0a`)58FWLIIrd1tdHpI:J'AX1qLR+DFO@$Tl[Bqe8[h0!]?LH"QBATD3Y*TMRJ5"r*'[%!MD_8D+.r$DmFK33)S]fVu-NE46,d@@"7#RQ=Wn&R0H9\YVR^4fU3EflqFMiQE`<,>FOYo,g0R[):CgGJ45(QnEW8(bFJTM/7;)d%=K$ajZ+dps>_N._g&cDo=hX4-QGYi)hMB;;+Et`*1$Ad6?b;bk@7ek?em.WqR'F\O[U`eb[tt8>8NA,nJ<W@'FbpYS:oKdU"*2Da%SR"e2fWDLh.0DHVf&XTkrn5jh]X3c"d;C(>)VfqcR8a1-)$5M^+]QONr!_X[>8^oXEi-\2$9?R9ndSu6g.DRT!/t)1;",Bk$T_c$%TRSXPer$P/pjn^;-'gfFV/PI.lpfmK?ocj,K'ek3B_\oQ1c7_SgHt0=lpt>1:D'=p;8L(NZ\jD"+fPOW&sAYe.;NrXXK>#Qn2+tk%O$u&I#;WM?X_CRmdt-)e6Ng36>%(4>JU8\q6ALF&!XE3;&fF=D#J!\u>9S2/SQN0S%27@1d[9X!oQ$Kapn.eYC5<$dPA)p8BlJXc%Ms0jB9@Ge>WF0Ga.h*'N5/1n[X:m-ZlcJ4,>XLI_SU/oSR8cnu/RF.2Bo$C(;3S[*7#_5*joate@/S`l5D#o7I26?f9s^Q>jl0cE%>I5S"?"8S0Nh]1uoiI0@([0/p7).4a+5Jaheb4X^8>pPD29;W)]E&i;ngP<PjGlN;D;X&!R`^.kG"dj\YuK0]+bg_3TkP"Xoe<)F%[a39?1og(9[9-e&VdNW9\$E*=Pq(/@+f6S$'A42P;1LOWU'8,u>;#4$kO[P2(QO4SSdj>9o86,s/A-fMg6^sfA@r+Y[(?Cb#ZOD$%ZehL",*/*0W0C#h/u7.(mfjZoEE%jul96[.W4&?_S!k0<>>A[-Cc$\G@hVH+"SO*F"=^]pPCfM3WK.ZW]p,`K^DF<A8R^CXm.25C%?H*Gg+j0NE"nFkKkr\\k*)Uf&g\cgG69l$3%':1"A'0RSNfSo5H#,g.'[Sa?,6FNJ!-Of0@DEVOFl6M.j*h,`Ltf'GAcoc.cmN:9%m'E65rWR``o,7j='mms/^_aJN!AVrk!O;>F0K!5D>1M()8V7BtDUL6U98f[Q"mUo2]f4kRk]^D5kEfQSo3_FXLEHQe&'l?tnGOHD%rS]t)rp'mhqJcjZs7^.JJ+4%6rpY\-rr1s0^]!P<T$ModqY/nIpoPk@Z]G-,-<uo-nJ?]Th7'!u^])L8*$9\%p#!L`iQ%#:IfJkd%r0KWrr8[PO(9.;gXt0:hA:O@0ms^4;Ft(U1-N![)r;L&cmd\c*If'))5CWViP5Vl]s1]Nq^](R#J,3MZrpI7&IeB2Fg&CfNrqJ-r%p[*HXpVWX'q3PIel@43YqsXOSLN!4^q:uQgIfH<as3Gm2hu</,<l+8(mJP/Jmsk-#:Hs=._fm2PqUb39Y9E'V9`D)"rRHDtlS&8K2:HUC~>%AI9_PrivateDataEnd